<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.6.8 on linux)" generated="20240910 18:34:33.733" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:11:50.191" endtime="20240910 18:11:50.191"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:11:50.194" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:11:50.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:11:50.198" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:11:50.192" endtime="20240910 18:11:50.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:11:50.198" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:11:50.198" endtime="20240910 18:11:50.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:11:50.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:11:50.199" endtime="20240910 18:11:50.199"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.192" endtime="20240910 18:11:50.199"/>
</kw>
<msg timestamp="20240910 18:11:50.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:11:50.192" endtime="20240910 18:11:50.199"/>
</kw>
<msg timestamp="20240910 18:11:50.199" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:11:50.191" endtime="20240910 18:11:50.199"/>
</kw>
<msg timestamp="20240910 18:11:50.200" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:11:50.191" endtime="20240910 18:11:50.200"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:11:50.200" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:11:50.200" endtime="20240910 18:11:50.200"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:11:50.203" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:11:50.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:11:50.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:11:50.201" endtime="20240910 18:11:50.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:11:50.261" level="INFO"/>
<status status="PASS" starttime="20240910 18:11:50.261" endtime="20240910 18:11:50.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:11:50.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:11:50.262" endtime="20240910 18:11:50.262"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.201" endtime="20240910 18:11:50.263"/>
</kw>
<msg timestamp="20240910 18:11:50.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:11:50.201" endtime="20240910 18:11:50.263"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.200" endtime="20240910 18:11:50.263"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.200" endtime="20240910 18:11:50.263"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.190" endtime="20240910 18:11:50.263"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20240910 18:11:50.190" endtime="20240910 18:11:50.263"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20240910 18:11:50.151" endtime="20240910 18:11:50.264"/>
</suite>
<suite id="s1-s2" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s2-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s2-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:11:50.884" endtime="20240910 18:11:50.884"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:11:50.887" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:11:50.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:11:50.891" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:11:50.885" endtime="20240910 18:11:50.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:11:50.892" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:11:50.891" endtime="20240910 18:11:50.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:11:50.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:11:50.892" endtime="20240910 18:11:50.892"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.885" endtime="20240910 18:11:50.892"/>
</kw>
<msg timestamp="20240910 18:11:50.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:11:50.885" endtime="20240910 18:11:50.892"/>
</kw>
<msg timestamp="20240910 18:11:50.893" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:11:50.884" endtime="20240910 18:11:50.893"/>
</kw>
<msg timestamp="20240910 18:11:50.893" level="INFO">${principal} = HTTP/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:11:50.884" endtime="20240910 18:11:50.893"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:11:50.896" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:11:50.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:11:50.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:11:50.894" endtime="20240910 18:11:50.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:11:50.933" level="INFO"/>
<status status="PASS" starttime="20240910 18:11:50.933" endtime="20240910 18:11:50.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:11:50.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:11:50.933" endtime="20240910 18:11:50.934"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.894" endtime="20240910 18:11:50.934"/>
</kw>
<msg timestamp="20240910 18:11:50.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:11:50.894" endtime="20240910 18:11:50.934"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.893" endtime="20240910 18:11:50.934"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.893" endtime="20240910 18:11:50.934"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.883" endtime="20240910 18:11:50.934"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.883" endtime="20240910 18:11:50.934"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:11:50.937" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:11:51.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:11:51.023" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20240910 18:11:50.935" endtime="20240910 18:11:51.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:11:51.024" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 489

HTTP/1.1 200 OK
Date: Tue, 10 Sep 2024 18:11:51 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate oYGEMIGBoAMKAQChCwYJKoZIhvcSAQICom0Ea2BpBgkqhkiG9xIBAgICAG9aMFigAwIBBaEDAgEPokwwSqADAgESokMEQTZyxeL1LOpRZOzSfZaRgLyFEL/6MMV7kS3Z+SkUEx85+aepALsTRMiW6Was5YC2bFXuFvs8J966+tA7qkrnyCG+
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1726027911016&amp;s=izHWH1Gjb+q0EAaySSoBQK5C0vIQQVmj1EQv0KEeS8w="; Path=/; HttpOnly
Last-Modified: Tue, 10 Sep 2024 17:48:26 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20240910 18:11:51.023" endtime="20240910 18:11:51.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:11:51.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:11:51.024" endtime="20240910 18:11:51.025"/>
</kw>
<status status="PASS" starttime="20240910 18:11:50.935" endtime="20240910 18:11:51.025"/>
</kw>
<msg timestamp="20240910 18:11:51.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:11:50.935" endtime="20240910 18:11:51.025"/>
</kw>
<msg timestamp="20240910 18:11:51.025" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20240910 18:11:50.934" endtime="20240910 18:11:51.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:11:51.025" endtime="20240910 18:11:51.025"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:11:50.882" endtime="20240910 18:11:51.026"/>
</test>
<test id="s1-s2-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:11:51.027" endtime="20240910 18:11:51.028"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:11:51.031" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:11:51.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:11:51.035" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:11:51.029" endtime="20240910 18:11:51.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:11:51.036" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:11:51.036" endtime="20240910 18:11:51.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:11:51.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:11:51.037" endtime="20240910 18:11:51.037"/>
</kw>
<status status="PASS" starttime="20240910 18:11:51.029" endtime="20240910 18:11:51.037"/>
</kw>
<msg timestamp="20240910 18:11:51.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:11:51.028" endtime="20240910 18:11:51.037"/>
</kw>
<msg timestamp="20240910 18:11:51.038" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:11:51.028" endtime="20240910 18:11:51.038"/>
</kw>
<msg timestamp="20240910 18:11:51.038" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:11:51.028" endtime="20240910 18:11:51.038"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:11:51.038" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:11:51.038" endtime="20240910 18:11:51.038"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:11:51.042" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:11:51.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:11:51.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:11:51.040" endtime="20240910 18:11:51.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:11:51.079" level="INFO"/>
<status status="PASS" starttime="20240910 18:11:51.078" endtime="20240910 18:11:51.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:11:51.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:11:51.079" endtime="20240910 18:11:51.079"/>
</kw>
<status status="PASS" starttime="20240910 18:11:51.040" endtime="20240910 18:11:51.079"/>
</kw>
<msg timestamp="20240910 18:11:51.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:11:51.040" endtime="20240910 18:11:51.080"/>
</kw>
<status status="PASS" starttime="20240910 18:11:51.039" endtime="20240910 18:11:51.080"/>
</kw>
<status status="PASS" starttime="20240910 18:11:51.039" endtime="20240910 18:11:51.080"/>
</kw>
<status status="PASS" starttime="20240910 18:11:51.027" endtime="20240910 18:11:51.080"/>
</kw>
<status status="PASS" starttime="20240910 18:11:51.027" endtime="20240910 18:11:51.080"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:11:51.080" level="INFO">${random} = 3KENK3PMrk</msg>
<status status="PASS" starttime="20240910 18:11:51.080" endtime="20240910 18:11:51.080"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:11:51.084" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 3KENK3PMrk  2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:11:57.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:11:57.481" level="INFO">${output} = 2024-09-10 18:11:52,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:11:52,965 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240910 18:11:51.083" endtime="20240910 18:11:57.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:11:57.481" level="INFO">2024-09-10 18:11:52,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:11:52,965 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-09-10 18:11:52,965 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-09-10 18:11:53,018 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 3KENK3PMrk and number-of-tests 1
2024-09-10 18:11:53,064 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:11:54,064 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:11:54,693 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2024-09-10 18:11:54,768 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2024-09-10 18:11:55,002 [pool-2-thread-1] WARN helpers.OzoneFSUtils: Ignoring ozone.fs.hsync.enabled = false because HBase enhancements are disallowed. To enable it, set ozone.client.hbase.enhancements.allowed = true as well.
2024-09-10 18:11:55,008 [pool-2-thread-1] WARN helpers.OzoneFSUtils: Ignoring ozone.fs.hsync.enabled = false because HBase enhancements are disallowed. To enable it, set ozone.client.hbase.enhancements.allowed = true as well.
2024-09-10 18:11:55,063 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-09-10 18:11:55,065 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:11:55,147 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-09-10 18:11:55,357 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-09-10 18:11:56,065 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:11:57,066 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-09-10 18:11:57,091 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1886.705664, max=1886.705664, mean=1886.705664, stddev=0.0, median=1886.705664, p75=1886.705664, p95=1886.705664, p98=1886.705664, p99=1886.705664, p999=1886.705664, mean_rate=0.4353976081958354, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-09-10 18:11:57,092 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-09-10 18:11:57,092 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-09-10 18:11:57,092 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20240910 18:11:57.481" endtime="20240910 18:11:57.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:11:57.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:11:57.482" endtime="20240910 18:11:57.482"/>
</kw>
<status status="PASS" starttime="20240910 18:11:51.082" endtime="20240910 18:11:57.482"/>
</kw>
<msg timestamp="20240910 18:11:57.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:11:51.082" endtime="20240910 18:11:57.482"/>
</kw>
<msg timestamp="20240910 18:11:57.483" level="INFO">${result} = 2024-09-10 18:11:52,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:11:52,965 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240910 18:11:51.081" endtime="20240910 18:11:57.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:11:57.483" endtime="20240910 18:11:57.483"/>
</kw>
<status status="PASS" starttime="20240910 18:11:51.080" endtime="20240910 18:11:57.483"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:11:57.490" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 3KENK3PMrk  2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:03.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:03.815" level="INFO">${output} = 2024-09-10 18:11:59,335 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:11:59,423 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240910 18:11:57.486" endtime="20240910 18:12:03.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:03.816" level="INFO">2024-09-10 18:11:59,335 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:11:59,423 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-09-10 18:11:59,423 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-09-10 18:11:59,486 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 3KENK3PMrk and number-of-tests 1
2024-09-10 18:11:59,532 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:12:00,532 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:12:01,325 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-09-10 18:12:01,533 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:12:02,534 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-09-10 18:12:03,435 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=46.120002, max=46.120002, mean=46.120002, stddev=0.0, median=46.120002, p75=46.120002, p95=46.120002, p98=46.120002, p99=46.120002, p999=46.120002, mean_rate=0.9683647233245155, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-09-10 18:12:03,436 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-09-10 18:12:03,436 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-09-10 18:12:03,436 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20240910 18:12:03.816" endtime="20240910 18:12:03.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:03.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:03.816" endtime="20240910 18:12:03.817"/>
</kw>
<status status="PASS" starttime="20240910 18:11:57.485" endtime="20240910 18:12:03.817"/>
</kw>
<msg timestamp="20240910 18:12:03.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:11:57.485" endtime="20240910 18:12:03.817"/>
</kw>
<msg timestamp="20240910 18:12:03.817" level="INFO">${result} = 2024-09-10 18:11:59,335 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:11:59,423 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240910 18:11:57.484" endtime="20240910 18:12:03.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:03.817" endtime="20240910 18:12:03.818"/>
</kw>
<status status="PASS" starttime="20240910 18:11:57.483" endtime="20240910 18:12:03.818"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:11:51.026" endtime="20240910 18:12:03.818"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20240910 18:11:50.856" endtime="20240910 18:12:03.819"/>
</suite>
<suite id="s1-s2-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s2-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:03.827" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:05.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:05.044" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20240910 18:12:03.825" endtime="20240910 18:12:05.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:05.045" level="INFO">om</msg>
<status status="PASS" starttime="20240910 18:12:05.044" endtime="20240910 18:12:05.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:05.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:05.045" endtime="20240910 18:12:05.046"/>
</kw>
<status status="PASS" starttime="20240910 18:12:03.824" endtime="20240910 18:12:05.046"/>
</kw>
<msg timestamp="20240910 18:12:05.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:03.824" endtime="20240910 18:12:05.046"/>
</kw>
<msg timestamp="20240910 18:12:05.046" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20240910 18:12:03.824" endtime="20240910 18:12:05.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:05.046" endtime="20240910 18:12:05.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:05.049" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:06.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:06.221" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20240910 18:12:05.047" endtime="20240910 18:12:06.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:06.222" level="INFO">om</msg>
<status status="PASS" starttime="20240910 18:12:06.221" endtime="20240910 18:12:06.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:06.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:06.222" endtime="20240910 18:12:06.222"/>
</kw>
<status status="PASS" starttime="20240910 18:12:05.047" endtime="20240910 18:12:06.222"/>
</kw>
<msg timestamp="20240910 18:12:06.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:05.047" endtime="20240910 18:12:06.222"/>
</kw>
<msg timestamp="20240910 18:12:06.223" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20240910 18:12:05.047" endtime="20240910 18:12:06.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:06.223" endtime="20240910 18:12:06.223"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:12:03.823" endtime="20240910 18:12:06.223"/>
</test>
<test id="s1-s2-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:06.227" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:07.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:07.325" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:12:06.225" endtime="20240910 18:12:07.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:07.326" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:12:07.325" endtime="20240910 18:12:07.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:07.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:07.326" endtime="20240910 18:12:07.326"/>
</kw>
<status status="PASS" starttime="20240910 18:12:06.225" endtime="20240910 18:12:07.327"/>
</kw>
<msg timestamp="20240910 18:12:07.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:06.224" endtime="20240910 18:12:07.327"/>
</kw>
<msg timestamp="20240910 18:12:07.327" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20240910 18:12:06.224" endtime="20240910 18:12:07.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:07.327" endtime="20240910 18:12:07.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:07.330" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:08.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:08.447" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:12:07.328" endtime="20240910 18:12:08.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:08.448" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:12:08.447" endtime="20240910 18:12:08.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:08.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:08.448" endtime="20240910 18:12:08.448"/>
</kw>
<status status="PASS" starttime="20240910 18:12:07.328" endtime="20240910 18:12:08.448"/>
</kw>
<msg timestamp="20240910 18:12:08.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:07.328" endtime="20240910 18:12:08.448"/>
</kw>
<msg timestamp="20240910 18:12:08.449" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20240910 18:12:07.327" endtime="20240910 18:12:08.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:08.449" endtime="20240910 18:12:08.449"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:12:06.224" endtime="20240910 18:12:08.449"/>
</test>
<test id="s1-s2-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:08.453" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:09.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:09.467" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20240910 18:12:08.451" endtime="20240910 18:12:09.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:09.468" level="INFO">om</msg>
<status status="PASS" starttime="20240910 18:12:09.467" endtime="20240910 18:12:09.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:09.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:09.468" endtime="20240910 18:12:09.468"/>
</kw>
<status status="PASS" starttime="20240910 18:12:08.451" endtime="20240910 18:12:09.469"/>
</kw>
<msg timestamp="20240910 18:12:09.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:08.451" endtime="20240910 18:12:09.469"/>
</kw>
<msg timestamp="20240910 18:12:09.469" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20240910 18:12:08.450" endtime="20240910 18:12:09.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:09.469" endtime="20240910 18:12:09.469"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:09.469" endtime="20240910 18:12:09.470"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:09.473" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:10.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:10.443" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20240910 18:12:09.471" endtime="20240910 18:12:10.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:10.444" level="INFO">om</msg>
<status status="PASS" starttime="20240910 18:12:10.444" endtime="20240910 18:12:10.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:10.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:10.445" endtime="20240910 18:12:10.445"/>
</kw>
<status status="PASS" starttime="20240910 18:12:09.470" endtime="20240910 18:12:10.445"/>
</kw>
<msg timestamp="20240910 18:12:10.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:09.470" endtime="20240910 18:12:10.445"/>
</kw>
<msg timestamp="20240910 18:12:10.445" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20240910 18:12:09.470" endtime="20240910 18:12:10.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:10.445" endtime="20240910 18:12:10.446"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:10.446" endtime="20240910 18:12:10.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:12:08.450" endtime="20240910 18:12:10.446"/>
</test>
<test id="s1-s2-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:10.450" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:11.543" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:12:11.543" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20240910 18:12:10.448" endtime="20240910 18:12:11.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:11.544" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20240910 18:12:11.543" endtime="20240910 18:12:11.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:11.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:11.544" endtime="20240910 18:12:11.545"/>
</kw>
<msg timestamp="20240910 18:12:11.545" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20240910 18:12:10.447" endtime="20240910 18:12:11.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:11.545" endtime="20240910 18:12:11.545"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:11.548" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:12.676" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:12:12.677" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20240910 18:12:11.546" endtime="20240910 18:12:12.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:12.677" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20240910 18:12:12.677" endtime="20240910 18:12:12.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:12.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:12.678" endtime="20240910 18:12:12.678"/>
</kw>
<msg timestamp="20240910 18:12:12.678" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20240910 18:12:11.545" endtime="20240910 18:12:12.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:12:12.678" endtime="20240910 18:12:12.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:12:10.447" endtime="20240910 18:12:12.679"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20240910 18:12:03.820" endtime="20240910 18:12:12.680"/>
</suite>
<suite id="s1-s2-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:12:12.694" level="INFO">${random} = 23424</msg>
<status status="PASS" starttime="20240910 18:12:12.693" endtime="20240910 18:12:12.694"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:12:12.695" level="INFO">${source} = 23424-source</msg>
<status status="PASS" starttime="20240910 18:12:12.694" endtime="20240910 18:12:12.695"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:12:12.696" level="INFO">${target} = 23424-target</msg>
<status status="PASS" starttime="20240910 18:12:12.695" endtime="20240910 18:12:12.696"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:12.698" level="INFO">Running command 'ozone sh volume create 23424-source 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:16.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:16.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:12:12.696" endtime="20240910 18:12:16.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:16.255" level="INFO"/>
<status status="PASS" starttime="20240910 18:12:16.255" endtime="20240910 18:12:16.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:16.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:16.256" endtime="20240910 18:12:16.256"/>
</kw>
<status status="PASS" starttime="20240910 18:12:12.696" endtime="20240910 18:12:16.256"/>
</kw>
<msg timestamp="20240910 18:12:16.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:12.696" endtime="20240910 18:12:16.256"/>
</kw>
<status status="PASS" starttime="20240910 18:12:12.696" endtime="20240910 18:12:16.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:16.259" level="INFO">Running command 'ozone sh volume create 23424-target 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:19.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:19.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:12:16.257" endtime="20240910 18:12:19.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:19.819" level="INFO"/>
<status status="PASS" starttime="20240910 18:12:19.819" endtime="20240910 18:12:19.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:19.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:19.819" endtime="20240910 18:12:19.820"/>
</kw>
<status status="PASS" starttime="20240910 18:12:16.257" endtime="20240910 18:12:19.820"/>
</kw>
<msg timestamp="20240910 18:12:19.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:16.257" endtime="20240910 18:12:19.820"/>
</kw>
<status status="PASS" starttime="20240910 18:12:16.256" endtime="20240910 18:12:19.820"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:19.824" level="INFO">Running command 'ozone sh bucket create 23424-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:23.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:23.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:12:19.822" endtime="20240910 18:12:23.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:23.194" level="INFO"/>
<status status="PASS" starttime="20240910 18:12:23.193" endtime="20240910 18:12:23.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:23.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:23.194" endtime="20240910 18:12:23.194"/>
</kw>
<status status="PASS" starttime="20240910 18:12:19.822" endtime="20240910 18:12:23.194"/>
</kw>
<msg timestamp="20240910 18:12:23.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:19.821" endtime="20240910 18:12:23.195"/>
</kw>
<status status="PASS" starttime="20240910 18:12:19.821" endtime="20240910 18:12:23.195"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:23.198" level="INFO">Running command 'ozone sh key put 23424-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:28.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:28.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:12:23.196" endtime="20240910 18:12:28.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:28.638" level="INFO"/>
<status status="PASS" starttime="20240910 18:12:28.637" endtime="20240910 18:12:28.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:28.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:28.638" endtime="20240910 18:12:28.638"/>
</kw>
<status status="PASS" starttime="20240910 18:12:23.195" endtime="20240910 18:12:28.638"/>
</kw>
<msg timestamp="20240910 18:12:28.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:23.195" endtime="20240910 18:12:28.639"/>
</kw>
<status status="PASS" starttime="20240910 18:12:23.195" endtime="20240910 18:12:28.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:28.642" level="INFO">Running command 'ozone sh bucket create 23424-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:32.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:32.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:12:28.640" endtime="20240910 18:12:32.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:32.210" level="INFO"/>
<status status="PASS" starttime="20240910 18:12:32.209" endtime="20240910 18:12:32.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:32.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:32.210" endtime="20240910 18:12:32.210"/>
</kw>
<status status="PASS" starttime="20240910 18:12:28.639" endtime="20240910 18:12:32.210"/>
</kw>
<msg timestamp="20240910 18:12:32.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:28.639" endtime="20240910 18:12:32.210"/>
</kw>
<status status="PASS" starttime="20240910 18:12:28.639" endtime="20240910 18:12:32.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:32.214" level="INFO">Running command 'ozone sh bucket link 23424-source/unreadable-bucket 23424-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:35.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:35.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:12:32.212" endtime="20240910 18:12:35.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:35.849" level="INFO"/>
<status status="PASS" starttime="20240910 18:12:35.849" endtime="20240910 18:12:35.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:35.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:35.849" endtime="20240910 18:12:35.850"/>
</kw>
<status status="PASS" starttime="20240910 18:12:32.211" endtime="20240910 18:12:35.850"/>
</kw>
<msg timestamp="20240910 18:12:35.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:32.211" endtime="20240910 18:12:35.850"/>
</kw>
<status status="PASS" starttime="20240910 18:12:32.211" endtime="20240910 18:12:35.850"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2:r[DEFAULT] ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:35.854" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2:r[DEFAULT] 23424-target 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:39.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:39.400" level="INFO">${output} = ACL user:testuser2:r[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20240910 18:12:35.851" endtime="20240910 18:12:39.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:39.400" level="INFO">ACL user:testuser2:r[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20240910 18:12:39.400" endtime="20240910 18:12:39.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:39.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:39.401" endtime="20240910 18:12:39.401"/>
</kw>
<status status="PASS" starttime="20240910 18:12:35.851" endtime="20240910 18:12:39.401"/>
</kw>
<msg timestamp="20240910 18:12:39.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:35.850" endtime="20240910 18:12:39.401"/>
</kw>
<status status="PASS" starttime="20240910 18:12:35.850" endtime="20240910 18:12:39.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:39.404" level="INFO">Running command 'ozone sh bucket link 23424-source/readable-bucket 23424-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:42.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:42.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:12:39.402" endtime="20240910 18:12:42.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:42.893" level="INFO"/>
<status status="PASS" starttime="20240910 18:12:42.893" endtime="20240910 18:12:42.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:42.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:42.893" endtime="20240910 18:12:42.893"/>
</kw>
<status status="PASS" starttime="20240910 18:12:39.402" endtime="20240910 18:12:42.894"/>
</kw>
<msg timestamp="20240910 18:12:42.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:39.402" endtime="20240910 18:12:42.894"/>
</kw>
<status status="PASS" starttime="20240910 18:12:39.401" endtime="20240910 18:12:42.894"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:42.897" level="INFO">Running command 'ozone sh bucket link 23424-source/readable-bucket 23424-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:46.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:46.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:12:42.895" endtime="20240910 18:12:46.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:46.542" level="INFO"/>
<status status="PASS" starttime="20240910 18:12:46.541" endtime="20240910 18:12:46.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:46.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:46.542" endtime="20240910 18:12:46.542"/>
</kw>
<status status="PASS" starttime="20240910 18:12:42.895" endtime="20240910 18:12:46.543"/>
</kw>
<msg timestamp="20240910 18:12:46.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:42.894" endtime="20240910 18:12:46.543"/>
</kw>
<status status="PASS" starttime="20240910 18:12:42.894" endtime="20240910 18:12:46.543"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:46.546" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2:rl 23424-source 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:50.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:50.091" level="INFO">${output} = ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:12:46.544" endtime="20240910 18:12:50.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:50.092" level="INFO">ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:12:50.091" endtime="20240910 18:12:50.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:50.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:50.092" endtime="20240910 18:12:50.092"/>
</kw>
<status status="PASS" starttime="20240910 18:12:46.544" endtime="20240910 18:12:50.092"/>
</kw>
<msg timestamp="20240910 18:12:50.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:46.543" endtime="20240910 18:12:50.093"/>
</kw>
<status status="PASS" starttime="20240910 18:12:46.543" endtime="20240910 18:12:50.093"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:50.096" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2:rl 23424-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:53.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:53.403" level="INFO">${output} = ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:12:50.094" endtime="20240910 18:12:53.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:53.404" level="INFO">ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:12:53.403" endtime="20240910 18:12:53.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:53.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:53.404" endtime="20240910 18:12:53.404"/>
</kw>
<status status="PASS" starttime="20240910 18:12:50.093" endtime="20240910 18:12:53.405"/>
</kw>
<msg timestamp="20240910 18:12:53.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:50.093" endtime="20240910 18:12:53.405"/>
</kw>
<status status="PASS" starttime="20240910 18:12:50.093" endtime="20240910 18:12:53.405"/>
</kw>
<status status="PASS" starttime="20240910 18:12:19.821" endtime="20240910 18:12:53.405"/>
</kw>
<status status="PASS" starttime="20240910 18:12:19.820" endtime="20240910 18:12:53.405"/>
</kw>
<status status="PASS" starttime="20240910 18:12:12.693" endtime="20240910 18:12:53.405"/>
</kw>
<test id="s1-s2-s3-t1" name="Link to non-existent bucket" line="94">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:12:53.407" endtime="20240910 18:12:53.407"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:53.419" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:53.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:53.423" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:12:53.417" endtime="20240910 18:12:53.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:53.424" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:12:53.423" endtime="20240910 18:12:53.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:53.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:53.424" endtime="20240910 18:12:53.424"/>
</kw>
<status status="PASS" starttime="20240910 18:12:53.417" endtime="20240910 18:12:53.424"/>
</kw>
<msg timestamp="20240910 18:12:53.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:53.417" endtime="20240910 18:12:53.424"/>
</kw>
<msg timestamp="20240910 18:12:53.425" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:12:53.416" endtime="20240910 18:12:53.425"/>
</kw>
<msg timestamp="20240910 18:12:53.425" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:12:53.407" endtime="20240910 18:12:53.425"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:12:53.425" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:12:53.425" endtime="20240910 18:12:53.425"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:53.428" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:53.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:53.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:12:53.427" endtime="20240910 18:12:53.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:53.487" level="INFO"/>
<status status="PASS" starttime="20240910 18:12:53.486" endtime="20240910 18:12:53.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:53.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:53.487" endtime="20240910 18:12:53.487"/>
</kw>
<status status="PASS" starttime="20240910 18:12:53.426" endtime="20240910 18:12:53.487"/>
</kw>
<msg timestamp="20240910 18:12:53.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:53.426" endtime="20240910 18:12:53.488"/>
</kw>
<status status="PASS" starttime="20240910 18:12:53.426" endtime="20240910 18:12:53.488"/>
</kw>
<status status="PASS" starttime="20240910 18:12:53.425" endtime="20240910 18:12:53.488"/>
</kw>
<status status="PASS" starttime="20240910 18:12:53.406" endtime="20240910 18:12:53.488"/>
</kw>
<status status="PASS" starttime="20240910 18:12:53.406" endtime="20240910 18:12:53.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:53.491" level="INFO">Running command 'ozone sh bucket link 23424-source/no-such-bucket 23424-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:12:57.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:12:57.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:12:53.489" endtime="20240910 18:12:57.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:12:57.257" level="INFO"/>
<status status="PASS" starttime="20240910 18:12:57.256" endtime="20240910 18:12:57.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:12:57.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:12:57.257" endtime="20240910 18:12:57.257"/>
</kw>
<status status="PASS" starttime="20240910 18:12:53.489" endtime="20240910 18:12:57.258"/>
</kw>
<msg timestamp="20240910 18:12:57.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:12:53.488" endtime="20240910 18:12:57.258"/>
</kw>
<status status="PASS" starttime="20240910 18:12:53.488" endtime="20240910 18:12:57.258"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:12:57.260" level="INFO">Running command 'ozone sh key list 23424-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:01.005" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:13:01.005" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: 23424-source/no-such-bucket</msg>
<status status="PASS" starttime="20240910 18:12:57.258" endtime="20240910 18:13:01.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:01.006" level="INFO">BUCKET_NOT_FOUND Bucket not found: 23424-source/no-such-bucket</msg>
<status status="PASS" starttime="20240910 18:13:01.006" endtime="20240910 18:13:01.007"/>
</kw>
<msg timestamp="20240910 18:13:01.007" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found: 23424-source/no-such-bucket</msg>
<status status="PASS" starttime="20240910 18:12:57.258" endtime="20240910 18:13:01.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:01.007" endtime="20240910 18:13:01.007"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:12:53.405" endtime="20240910 18:13:01.007"/>
</test>
<test id="s1-s2-s3-t2" name="Key create passthrough" line="99">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:13:01.009" endtime="20240910 18:13:01.009"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:01.012" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:01.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:01.016" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:13:01.010" endtime="20240910 18:13:01.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:01.017" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:13:01.016" endtime="20240910 18:13:01.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:01.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:01.017" endtime="20240910 18:13:01.017"/>
</kw>
<status status="PASS" starttime="20240910 18:13:01.010" endtime="20240910 18:13:01.017"/>
</kw>
<msg timestamp="20240910 18:13:01.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:01.010" endtime="20240910 18:13:01.018"/>
</kw>
<msg timestamp="20240910 18:13:01.018" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:13:01.010" endtime="20240910 18:13:01.018"/>
</kw>
<msg timestamp="20240910 18:13:01.018" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:01.009" endtime="20240910 18:13:01.018"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:13:01.018" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:01.018" endtime="20240910 18:13:01.018"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:01.021" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:01.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:01.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:01.020" endtime="20240910 18:13:01.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:01.047" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:01.047" endtime="20240910 18:13:01.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:01.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:01.047" endtime="20240910 18:13:01.048"/>
</kw>
<status status="PASS" starttime="20240910 18:13:01.019" endtime="20240910 18:13:01.048"/>
</kw>
<msg timestamp="20240910 18:13:01.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:01.019" endtime="20240910 18:13:01.048"/>
</kw>
<status status="PASS" starttime="20240910 18:13:01.019" endtime="20240910 18:13:01.048"/>
</kw>
<status status="PASS" starttime="20240910 18:13:01.018" endtime="20240910 18:13:01.048"/>
</kw>
<status status="PASS" starttime="20240910 18:13:01.009" endtime="20240910 18:13:01.048"/>
</kw>
<status status="PASS" starttime="20240910 18:13:01.008" endtime="20240910 18:13:01.048"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:01.051" level="INFO">Running command 'ozone sh bucket link 23424-source/bucket1 23424-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:04.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:04.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:01.049" endtime="20240910 18:13:04.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:04.529" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:04.529" endtime="20240910 18:13:04.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:04.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:04.529" endtime="20240910 18:13:04.530"/>
</kw>
<status status="PASS" starttime="20240910 18:13:01.049" endtime="20240910 18:13:04.530"/>
</kw>
<msg timestamp="20240910 18:13:04.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:01.049" endtime="20240910 18:13:04.530"/>
</kw>
<status status="PASS" starttime="20240910 18:13:01.048" endtime="20240910 18:13:04.530"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:04.533" level="INFO">Running command 'ozone sh bucket create 23424-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:08.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:08.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:04.531" endtime="20240910 18:13:08.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:08.034" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:08.033" endtime="20240910 18:13:08.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:08.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:08.034" endtime="20240910 18:13:08.035"/>
</kw>
<status status="PASS" starttime="20240910 18:13:04.531" endtime="20240910 18:13:08.035"/>
</kw>
<msg timestamp="20240910 18:13:08.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:04.530" endtime="20240910 18:13:08.035"/>
</kw>
<status status="PASS" starttime="20240910 18:13:04.530" endtime="20240910 18:13:08.035"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:08.038" level="INFO">Running command 'ozone sh key put 23424-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:13.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:13.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:08.036" endtime="20240910 18:13:13.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:13.486" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:13.485" endtime="20240910 18:13:13.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:13.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:13.486" endtime="20240910 18:13:13.486"/>
</kw>
<status status="PASS" starttime="20240910 18:13:08.036" endtime="20240910 18:13:13.487"/>
</kw>
<msg timestamp="20240910 18:13:13.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:08.036" endtime="20240910 18:13:13.487"/>
</kw>
<status status="PASS" starttime="20240910 18:13:08.035" endtime="20240910 18:13:13.487"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:13:13.488" level="INFO">${postfix} = 86003</msg>
<status status="PASS" starttime="20240910 18:13:13.488" endtime="20240910 18:13:13.488"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:13:13.488" level="INFO">${tmpfile} = /tmp/tempkey-86003</msg>
<status status="PASS" starttime="20240910 18:13:13.488" endtime="20240910 18:13:13.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:13.491" level="INFO">Running command 'ozone sh key get 23424-target/link1/key1 /tmp/tempkey-86003 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:18.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:18.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:13.490" endtime="20240910 18:13:18.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:18.903" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:18.902" endtime="20240910 18:13:18.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:18.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:18.903" endtime="20240910 18:13:18.904"/>
</kw>
<status status="PASS" starttime="20240910 18:13:13.489" endtime="20240910 18:13:18.904"/>
</kw>
<msg timestamp="20240910 18:13:18.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:13.489" endtime="20240910 18:13:18.904"/>
</kw>
<status status="PASS" starttime="20240910 18:13:13.489" endtime="20240910 18:13:18.904"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240910 18:13:18.906" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-86003 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:18.909" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240910 18:13:18.904" endtime="20240910 18:13:18.909"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:18.912" level="INFO">Running command 'rm -f /tmp/tempkey-86003 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:18.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:18.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:18.911" endtime="20240910 18:13:18.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:18.916" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:18.916" endtime="20240910 18:13:18.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:18.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:18.917" endtime="20240910 18:13:18.917"/>
</kw>
<status status="PASS" starttime="20240910 18:13:18.910" endtime="20240910 18:13:18.917"/>
</kw>
<msg timestamp="20240910 18:13:18.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:18.910" endtime="20240910 18:13:18.917"/>
</kw>
<status status="PASS" starttime="20240910 18:13:18.909" endtime="20240910 18:13:18.917"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240910 18:13:18.918" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240910 18:13:18.917" endtime="20240910 18:13:18.918"/>
</kw>
<msg timestamp="20240910 18:13:18.918" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240910 18:13:13.487" endtime="20240910 18:13:18.918"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240910 18:13:18.918" endtime="20240910 18:13:18.918"/>
</kw>
<status status="PASS" starttime="20240910 18:13:13.487" endtime="20240910 18:13:18.918"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:13:01.008" endtime="20240910 18:13:18.918"/>
</test>
<test id="s1-s2-s3-t3" name="Key read passthrough" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:13:18.920" endtime="20240910 18:13:18.920"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:18.923" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:18.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:18.926" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:13:18.921" endtime="20240910 18:13:18.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:18.927" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:13:18.926" endtime="20240910 18:13:18.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:18.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:18.927" endtime="20240910 18:13:18.927"/>
</kw>
<status status="PASS" starttime="20240910 18:13:18.921" endtime="20240910 18:13:18.928"/>
</kw>
<msg timestamp="20240910 18:13:18.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:18.921" endtime="20240910 18:13:18.928"/>
</kw>
<msg timestamp="20240910 18:13:18.928" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:13:18.921" endtime="20240910 18:13:18.928"/>
</kw>
<msg timestamp="20240910 18:13:18.928" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:18.920" endtime="20240910 18:13:18.928"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:13:18.928" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:18.928" endtime="20240910 18:13:18.928"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:18.932" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:18.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:18.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:18.930" endtime="20240910 18:13:18.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:18.963" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:18.962" endtime="20240910 18:13:18.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:18.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:18.963" endtime="20240910 18:13:18.963"/>
</kw>
<status status="PASS" starttime="20240910 18:13:18.929" endtime="20240910 18:13:18.963"/>
</kw>
<msg timestamp="20240910 18:13:18.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:18.929" endtime="20240910 18:13:18.964"/>
</kw>
<status status="PASS" starttime="20240910 18:13:18.929" endtime="20240910 18:13:18.964"/>
</kw>
<status status="PASS" starttime="20240910 18:13:18.929" endtime="20240910 18:13:18.964"/>
</kw>
<status status="PASS" starttime="20240910 18:13:18.920" endtime="20240910 18:13:18.964"/>
</kw>
<status status="PASS" starttime="20240910 18:13:18.919" endtime="20240910 18:13:18.964"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:18.967" level="INFO">Running command 'ozone sh key put 23424-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:23.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:23.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:18.965" endtime="20240910 18:13:23.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:23.917" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:23.917" endtime="20240910 18:13:23.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:23.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:23.918" endtime="20240910 18:13:23.918"/>
</kw>
<status status="PASS" starttime="20240910 18:13:18.965" endtime="20240910 18:13:23.918"/>
</kw>
<msg timestamp="20240910 18:13:23.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:18.964" endtime="20240910 18:13:23.918"/>
</kw>
<status status="PASS" starttime="20240910 18:13:18.964" endtime="20240910 18:13:23.918"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:13:23.920" level="INFO">${postfix} = 32660</msg>
<status status="PASS" starttime="20240910 18:13:23.920" endtime="20240910 18:13:23.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:13:23.920" level="INFO">${tmpfile} = /tmp/tempkey-32660</msg>
<status status="PASS" starttime="20240910 18:13:23.920" endtime="20240910 18:13:23.920"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:23.923" level="INFO">Running command 'ozone sh key get 23424-source/bucket1/key2 /tmp/tempkey-32660 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:29.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:29.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:23.921" endtime="20240910 18:13:29.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:29.022" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:29.022" endtime="20240910 18:13:29.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:29.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:29.023" endtime="20240910 18:13:29.023"/>
</kw>
<status status="PASS" starttime="20240910 18:13:23.921" endtime="20240910 18:13:29.023"/>
</kw>
<msg timestamp="20240910 18:13:29.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:23.921" endtime="20240910 18:13:29.023"/>
</kw>
<status status="PASS" starttime="20240910 18:13:23.920" endtime="20240910 18:13:29.023"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240910 18:13:29.026" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-32660 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:29.028" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240910 18:13:29.024" endtime="20240910 18:13:29.028"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:29.032" level="INFO">Running command 'rm -f /tmp/tempkey-32660 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:29.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:29.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:29.030" endtime="20240910 18:13:29.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:29.036" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:29.035" endtime="20240910 18:13:29.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:29.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:29.036" endtime="20240910 18:13:29.036"/>
</kw>
<status status="PASS" starttime="20240910 18:13:29.029" endtime="20240910 18:13:29.036"/>
</kw>
<msg timestamp="20240910 18:13:29.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:29.029" endtime="20240910 18:13:29.037"/>
</kw>
<status status="PASS" starttime="20240910 18:13:29.029" endtime="20240910 18:13:29.037"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240910 18:13:29.037" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240910 18:13:29.037" endtime="20240910 18:13:29.037"/>
</kw>
<msg timestamp="20240910 18:13:29.037" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240910 18:13:23.919" endtime="20240910 18:13:29.037"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240910 18:13:29.037" endtime="20240910 18:13:29.038"/>
</kw>
<status status="PASS" starttime="20240910 18:13:23.919" endtime="20240910 18:13:29.038"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:13:18.919" endtime="20240910 18:13:29.038"/>
</test>
<test id="s1-s2-s3-t4" name="Key list passthrough" line="109">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:13:29.039" endtime="20240910 18:13:29.040"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:29.043" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:29.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:29.046" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:13:29.041" endtime="20240910 18:13:29.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:29.047" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:13:29.046" endtime="20240910 18:13:29.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:29.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:29.047" endtime="20240910 18:13:29.047"/>
</kw>
<status status="PASS" starttime="20240910 18:13:29.040" endtime="20240910 18:13:29.047"/>
</kw>
<msg timestamp="20240910 18:13:29.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:29.040" endtime="20240910 18:13:29.048"/>
</kw>
<msg timestamp="20240910 18:13:29.048" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:13:29.040" endtime="20240910 18:13:29.048"/>
</kw>
<msg timestamp="20240910 18:13:29.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:29.040" endtime="20240910 18:13:29.048"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:13:29.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:29.048" endtime="20240910 18:13:29.048"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:29.051" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:29.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:29.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:29.050" endtime="20240910 18:13:29.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:29.086" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:29.086" endtime="20240910 18:13:29.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:29.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:29.087" endtime="20240910 18:13:29.087"/>
</kw>
<status status="PASS" starttime="20240910 18:13:29.049" endtime="20240910 18:13:29.087"/>
</kw>
<msg timestamp="20240910 18:13:29.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:29.049" endtime="20240910 18:13:29.087"/>
</kw>
<status status="PASS" starttime="20240910 18:13:29.049" endtime="20240910 18:13:29.087"/>
</kw>
<status status="PASS" starttime="20240910 18:13:29.049" endtime="20240910 18:13:29.087"/>
</kw>
<status status="PASS" starttime="20240910 18:13:29.039" endtime="20240910 18:13:29.087"/>
</kw>
<status status="PASS" starttime="20240910 18:13:29.039" endtime="20240910 18:13:29.088"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:29.090" level="INFO">Running command 'ozone sh key list 23424-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:32.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:32.793" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20240910 18:13:29.089" endtime="20240910 18:13:32.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:32.794" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20240910 18:13:32.793" endtime="20240910 18:13:32.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:32.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:32.794" endtime="20240910 18:13:32.794"/>
</kw>
<status status="PASS" starttime="20240910 18:13:29.088" endtime="20240910 18:13:32.794"/>
</kw>
<msg timestamp="20240910 18:13:32.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:29.088" endtime="20240910 18:13:32.794"/>
</kw>
<msg timestamp="20240910 18:13:32.795" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20240910 18:13:29.088" endtime="20240910 18:13:32.795"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:32.798" level="INFO">Running command 'ozone sh key list 23424-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:36.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:36.710" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20240910 18:13:32.796" endtime="20240910 18:13:36.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:36.711" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20240910 18:13:36.711" endtime="20240910 18:13:36.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:36.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:36.712" endtime="20240910 18:13:36.712"/>
</kw>
<status status="PASS" starttime="20240910 18:13:32.795" endtime="20240910 18:13:36.712"/>
</kw>
<msg timestamp="20240910 18:13:36.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:32.795" endtime="20240910 18:13:36.712"/>
</kw>
<msg timestamp="20240910 18:13:36.713" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20240910 18:13:32.795" endtime="20240910 18:13:36.713"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:13:36.713" endtime="20240910 18:13:36.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:36.713" endtime="20240910 18:13:36.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:36.713" endtime="20240910 18:13:36.714"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:13:29.038" endtime="20240910 18:13:36.714"/>
</test>
<test id="s1-s2-s3-t5" name="Key delete passthrough" line="116">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:13:36.716" endtime="20240910 18:13:36.716"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:36.720" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:36.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:36.723" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:13:36.717" endtime="20240910 18:13:36.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:36.724" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:13:36.724" endtime="20240910 18:13:36.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:36.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:36.724" endtime="20240910 18:13:36.725"/>
</kw>
<status status="PASS" starttime="20240910 18:13:36.717" endtime="20240910 18:13:36.725"/>
</kw>
<msg timestamp="20240910 18:13:36.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:36.717" endtime="20240910 18:13:36.725"/>
</kw>
<msg timestamp="20240910 18:13:36.725" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:13:36.717" endtime="20240910 18:13:36.725"/>
</kw>
<msg timestamp="20240910 18:13:36.725" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:36.716" endtime="20240910 18:13:36.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:13:36.726" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:36.725" endtime="20240910 18:13:36.726"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:36.729" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:36.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:36.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:36.727" endtime="20240910 18:13:36.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:36.751" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:36.751" endtime="20240910 18:13:36.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:36.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:36.751" endtime="20240910 18:13:36.752"/>
</kw>
<status status="PASS" starttime="20240910 18:13:36.727" endtime="20240910 18:13:36.752"/>
</kw>
<msg timestamp="20240910 18:13:36.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:36.726" endtime="20240910 18:13:36.752"/>
</kw>
<status status="PASS" starttime="20240910 18:13:36.726" endtime="20240910 18:13:36.752"/>
</kw>
<status status="PASS" starttime="20240910 18:13:36.726" endtime="20240910 18:13:36.752"/>
</kw>
<status status="PASS" starttime="20240910 18:13:36.715" endtime="20240910 18:13:36.752"/>
</kw>
<status status="PASS" starttime="20240910 18:13:36.715" endtime="20240910 18:13:36.752"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:36.755" level="INFO">Running command 'ozone sh key delete 23424-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:40.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:40.497" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20240910 18:13:36.753" endtime="20240910 18:13:40.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:40.498" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20240910 18:13:40.497" endtime="20240910 18:13:40.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:40.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:40.498" endtime="20240910 18:13:40.499"/>
</kw>
<status status="PASS" starttime="20240910 18:13:36.753" endtime="20240910 18:13:40.499"/>
</kw>
<msg timestamp="20240910 18:13:40.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:36.753" endtime="20240910 18:13:40.499"/>
</kw>
<status status="PASS" starttime="20240910 18:13:36.753" endtime="20240910 18:13:40.499"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket1keys}</var>
<arg>ozone sh key list ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:40.502" level="INFO">Running command 'ozone sh key list 23424-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:44.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:44.669" level="INFO">${output} = [ {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "...</msg>
<status status="PASS" starttime="20240910 18:13:40.500" endtime="20240910 18:13:44.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:44.670" level="INFO">[ {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "2024-09-10T18:13:40.398Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "2024-09-10T18:13:40.398Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "2024-09-10T18:13:40.409Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:13:22.159Z",
  "modificationTime" : "2024-09-10T18:13:23.464Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-09-10T18:13:11.617Z",
  "modificationTime" : "2024-09-10T18:13:13.049Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20240910 18:13:44.669" endtime="20240910 18:13:44.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:44.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:44.670" endtime="20240910 18:13:44.671"/>
</kw>
<status status="PASS" starttime="20240910 18:13:40.500" endtime="20240910 18:13:44.671"/>
</kw>
<msg timestamp="20240910 18:13:44.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:40.500" endtime="20240910 18:13:44.671"/>
</kw>
<msg timestamp="20240910 18:13:44.671" level="INFO">${bucket1keys} = [ {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "...</msg>
<status status="PASS" starttime="20240910 18:13:40.499" endtime="20240910 18:13:44.671"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:44.674" level="INFO">Running command 'echo '[ {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "2024-09-10T18:13:40.398Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "2024-09-10T18:13:40.398Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "2024-09-10T18:13:40.409Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:13:22.159Z",
  "modificationTime" : "2024-09-10T18:13:23.464Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-09-10T18:13:11.617Z",
  "modificationTime" : "2024-09-10T18:13:13.049Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:44.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:44.680" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20240910 18:13:44.672" endtime="20240910 18:13:44.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:44.681" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20240910 18:13:44.680" endtime="20240910 18:13:44.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:44.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:44.681" endtime="20240910 18:13:44.681"/>
</kw>
<status status="PASS" starttime="20240910 18:13:44.672" endtime="20240910 18:13:44.681"/>
</kw>
<msg timestamp="20240910 18:13:44.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:44.672" endtime="20240910 18:13:44.681"/>
</kw>
<msg timestamp="20240910 18:13:44.681" level="INFO">${source_list} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20240910 18:13:44.671" endtime="20240910 18:13:44.682"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${source_list}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20240910 18:13:44.682" endtime="20240910 18:13:44.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:44.682" endtime="20240910 18:13:44.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:44.685" level="INFO">Running command 'echo '[ {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "2024-09-10T18:13:40.398Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "2024-09-10T18:13:40.398Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:13:40.398Z",
  "modificationTime" : "2024-09-10T18:13:40.409Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:13:22.159Z",
  "modificationTime" : "2024-09-10T18:13:23.464Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "23424-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-09-10T18:13:11.617Z",
  "modificationTime" : "2024-09-10T18:13:13.049Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:44.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:44.690" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20240910 18:13:44.683" endtime="20240910 18:13:44.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:44.691" level="INFO">key1</msg>
<status status="PASS" starttime="20240910 18:13:44.690" endtime="20240910 18:13:44.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:44.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:44.691" endtime="20240910 18:13:44.691"/>
</kw>
<status status="PASS" starttime="20240910 18:13:44.683" endtime="20240910 18:13:44.692"/>
</kw>
<msg timestamp="20240910 18:13:44.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:44.683" endtime="20240910 18:13:44.692"/>
</kw>
<msg timestamp="20240910 18:13:44.692" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20240910 18:13:44.682" endtime="20240910 18:13:44.692"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:44.692" endtime="20240910 18:13:44.692"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:13:36.714" endtime="20240910 18:13:44.692"/>
</test>
<test id="s1-s2-s3-t6" name="Bucket list contains links" line="125">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:13:44.694" endtime="20240910 18:13:44.694"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:44.697" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:44.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:44.701" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:13:44.696" endtime="20240910 18:13:44.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:44.702" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:13:44.701" endtime="20240910 18:13:44.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:44.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:44.702" endtime="20240910 18:13:44.702"/>
</kw>
<status status="PASS" starttime="20240910 18:13:44.695" endtime="20240910 18:13:44.702"/>
</kw>
<msg timestamp="20240910 18:13:44.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:44.695" endtime="20240910 18:13:44.702"/>
</kw>
<msg timestamp="20240910 18:13:44.703" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:13:44.695" endtime="20240910 18:13:44.703"/>
</kw>
<msg timestamp="20240910 18:13:44.703" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:44.694" endtime="20240910 18:13:44.703"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:13:44.703" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:44.703" endtime="20240910 18:13:44.703"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:44.706" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:44.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:44.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:44.705" endtime="20240910 18:13:44.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:44.724" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:44.723" endtime="20240910 18:13:44.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:44.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:44.724" endtime="20240910 18:13:44.724"/>
</kw>
<status status="PASS" starttime="20240910 18:13:44.704" endtime="20240910 18:13:44.724"/>
</kw>
<msg timestamp="20240910 18:13:44.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:44.704" endtime="20240910 18:13:44.725"/>
</kw>
<status status="PASS" starttime="20240910 18:13:44.704" endtime="20240910 18:13:44.725"/>
</kw>
<status status="PASS" starttime="20240910 18:13:44.703" endtime="20240910 18:13:44.725"/>
</kw>
<status status="PASS" starttime="20240910 18:13:44.694" endtime="20240910 18:13:44.725"/>
</kw>
<status status="PASS" starttime="20240910 18:13:44.693" endtime="20240910 18:13:44.725"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:44.728" level="INFO">Running command 'ozone sh bucket list 23424-target 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:48.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:48.378" level="INFO">${output} = [ {
  "volumeName" : "23424-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2024-09-10T18:12:57.160Z",
  "modific...</msg>
<status status="PASS" starttime="20240910 18:13:44.726" endtime="20240910 18:13:48.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:48.379" level="INFO">[ {
  "volumeName" : "23424-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2024-09-10T18:12:57.160Z",
  "modificationTime" : "2024-09-10T18:12:57.160Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "23424-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2024-09-10T18:12:35.749Z",
  "modificationTime" : "2024-09-10T18:12:35.749Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "23424-target",
  "bucketName" : "link1",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-09-10T18:13:04.394Z",
  "modificationTime" : "2024-09-10T18:13:04.394Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "23424-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2024-09-10T18:12:42.803Z",
  "modificationTime" : "2024-09-10T18:12:42.803Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "23424-target",
  "bucketName" : "readable-link2",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2024-09-10T18:12:46.455Z",
  "modificationTime" : "2024-09-10T18:12:46.455Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20240910 18:13:48.378" endtime="20240910 18:13:48.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:48.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:48.379" endtime="20240910 18:13:48.380"/>
</kw>
<status status="PASS" starttime="20240910 18:13:44.726" endtime="20240910 18:13:48.380"/>
</kw>
<msg timestamp="20240910 18:13:48.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:44.725" endtime="20240910 18:13:48.380"/>
</kw>
<msg timestamp="20240910 18:13:48.380" level="INFO">${result} = [ {
  "volumeName" : "23424-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2024-09-10T18:12:57.160Z",
  "modific...</msg>
<status status="PASS" starttime="20240910 18:13:44.725" endtime="20240910 18:13:48.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:48.380" endtime="20240910 18:13:48.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:48.381" endtime="20240910 18:13:48.381"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:13:44.693" endtime="20240910 18:13:48.381"/>
</test>
<test id="s1-s2-s3-t7" name="Bucket info shows source" line="130">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:13:48.383" endtime="20240910 18:13:48.383"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:48.387" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:48.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:48.390" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:13:48.384" endtime="20240910 18:13:48.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:48.391" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:13:48.391" endtime="20240910 18:13:48.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:48.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:48.391" endtime="20240910 18:13:48.391"/>
</kw>
<status status="PASS" starttime="20240910 18:13:48.384" endtime="20240910 18:13:48.392"/>
</kw>
<msg timestamp="20240910 18:13:48.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:48.384" endtime="20240910 18:13:48.392"/>
</kw>
<msg timestamp="20240910 18:13:48.392" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:13:48.384" endtime="20240910 18:13:48.392"/>
</kw>
<msg timestamp="20240910 18:13:48.392" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:48.383" endtime="20240910 18:13:48.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:13:48.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:48.392" endtime="20240910 18:13:48.393"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:48.396" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:48.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:48.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:48.394" endtime="20240910 18:13:48.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:48.413" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:48.412" endtime="20240910 18:13:48.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:48.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:48.413" endtime="20240910 18:13:48.413"/>
</kw>
<status status="PASS" starttime="20240910 18:13:48.394" endtime="20240910 18:13:48.413"/>
</kw>
<msg timestamp="20240910 18:13:48.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:48.394" endtime="20240910 18:13:48.413"/>
</kw>
<status status="PASS" starttime="20240910 18:13:48.393" endtime="20240910 18:13:48.414"/>
</kw>
<status status="PASS" starttime="20240910 18:13:48.393" endtime="20240910 18:13:48.414"/>
</kw>
<status status="PASS" starttime="20240910 18:13:48.382" endtime="20240910 18:13:48.414"/>
</kw>
<status status="PASS" starttime="20240910 18:13:48.382" endtime="20240910 18:13:48.414"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:48.417" level="INFO">Running command 'ozone sh bucket info 23424-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:52.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:52.270" level="INFO">${output} = {
  "volumeName" : "23424-target",
  "bucketName" : "link1",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-09-10T18:13:04.394Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20240910 18:13:48.415" endtime="20240910 18:13:52.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:52.271" level="INFO">{
  "volumeName" : "23424-target",
  "bucketName" : "link1",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-09-10T18:13:04.394Z",
  "modificationTime" : "2024-09-10T18:13:04.394Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20240910 18:13:52.271" endtime="20240910 18:13:52.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:52.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:52.271" endtime="20240910 18:13:52.272"/>
</kw>
<status status="PASS" starttime="20240910 18:13:48.414" endtime="20240910 18:13:52.272"/>
</kw>
<msg timestamp="20240910 18:13:52.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:48.414" endtime="20240910 18:13:52.272"/>
</kw>
<msg timestamp="20240910 18:13:52.272" level="INFO">${result} = {
  "volumeName" : "23424-target",
  "bucketName" : "link1",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-09-10T18:13:04.394Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20240910 18:13:48.414" endtime="20240910 18:13:52.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:52.272" endtime="20240910 18:13:52.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:52.273" endtime="20240910 18:13:52.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:52.273" endtime="20240910 18:13:52.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:52.273" endtime="20240910 18:13:52.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:52.274" endtime="20240910 18:13:52.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:52.274" endtime="20240910 18:13:52.274"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:13:52.274" endtime="20240910 18:13:52.275"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:13:48.382" endtime="20240910 18:13:52.275"/>
</test>
<test id="s1-s2-s3-t8" name="Source and target bucket have different ACLs" line="140">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:13:52.277" endtime="20240910 18:13:52.277"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:52.281" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:52.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:52.285" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:13:52.279" endtime="20240910 18:13:52.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:52.285" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:13:52.285" endtime="20240910 18:13:52.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:52.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:52.286" endtime="20240910 18:13:52.286"/>
</kw>
<status status="PASS" starttime="20240910 18:13:52.278" endtime="20240910 18:13:52.286"/>
</kw>
<msg timestamp="20240910 18:13:52.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:52.278" endtime="20240910 18:13:52.286"/>
</kw>
<msg timestamp="20240910 18:13:52.286" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:13:52.277" endtime="20240910 18:13:52.286"/>
</kw>
<msg timestamp="20240910 18:13:52.286" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:52.277" endtime="20240910 18:13:52.287"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:13:52.287" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:13:52.287" endtime="20240910 18:13:52.287"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:52.290" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:52.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:52.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:52.288" endtime="20240910 18:13:52.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:52.308" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:52.307" endtime="20240910 18:13:52.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:52.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:52.308" endtime="20240910 18:13:52.308"/>
</kw>
<status status="PASS" starttime="20240910 18:13:52.288" endtime="20240910 18:13:52.308"/>
</kw>
<msg timestamp="20240910 18:13:52.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:52.288" endtime="20240910 18:13:52.308"/>
</kw>
<status status="PASS" starttime="20240910 18:13:52.287" endtime="20240910 18:13:52.309"/>
</kw>
<status status="PASS" starttime="20240910 18:13:52.287" endtime="20240910 18:13:52.309"/>
</kw>
<status status="PASS" starttime="20240910 18:13:52.276" endtime="20240910 18:13:52.309"/>
</kw>
<status status="PASS" starttime="20240910 18:13:52.276" endtime="20240910 18:13:52.309"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:52.312" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 23424-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:55.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:55.747" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:13:52.310" endtime="20240910 18:13:55.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:55.748" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:13:55.748" endtime="20240910 18:13:55.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:55.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:55.748" endtime="20240910 18:13:55.749"/>
</kw>
<status status="PASS" starttime="20240910 18:13:52.309" endtime="20240910 18:13:55.749"/>
</kw>
<msg timestamp="20240910 18:13:55.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:52.309" endtime="20240910 18:13:55.749"/>
</kw>
<status status="PASS" starttime="20240910 18:13:52.309" endtime="20240910 18:13:55.749"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:55.754" level="INFO">Running command 'ozone sh bucket getacl 23424-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:13:59.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:13:59.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:55.751" endtime="20240910 18:13:59.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:59.345" level="INFO"/>
<status status="PASS" starttime="20240910 18:13:59.344" endtime="20240910 18:13:59.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:13:59.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:13:59.345" endtime="20240910 18:13:59.345"/>
</kw>
<status status="PASS" starttime="20240910 18:13:55.751" endtime="20240910 18:13:59.345"/>
</kw>
<msg timestamp="20240910 18:13:59.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:55.751" endtime="20240910 18:13:59.345"/>
</kw>
<msg timestamp="20240910 18:13:59.346" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20240910 18:13:55.750" endtime="20240910 18:13:59.346"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:13:59.346" endtime="20240910 18:13:59.346"/>
</kw>
<status status="PASS" starttime="20240910 18:13:55.749" endtime="20240910 18:13:59.346"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source=false</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:13:59.351" level="INFO">Running command 'ozone sh bucket getacl --source=false 23424-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:03.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:03.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:13:59.349" endtime="20240910 18:14:03.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:03.189" level="INFO"/>
<status status="PASS" starttime="20240910 18:14:03.188" endtime="20240910 18:14:03.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:03.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:03.189" endtime="20240910 18:14:03.189"/>
</kw>
<status status="PASS" starttime="20240910 18:13:59.348" endtime="20240910 18:14:03.190"/>
</kw>
<msg timestamp="20240910 18:14:03.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:59.348" endtime="20240910 18:14:03.190"/>
</kw>
<msg timestamp="20240910 18:14:03.190" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20240910 18:13:59.347" endtime="20240910 18:14:03.190"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:03.190" endtime="20240910 18:14:03.190"/>
</kw>
<status status="PASS" starttime="20240910 18:13:59.346" endtime="20240910 18:14:03.190"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:03.194" level="INFO">Running command 'ozone sh bucket getacl --source 23424-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:06.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:06.788" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:03.192" endtime="20240910 18:14:06.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:06.789" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:06.788" endtime="20240910 18:14:06.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:06.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:06.789" endtime="20240910 18:14:06.789"/>
</kw>
<status status="PASS" starttime="20240910 18:14:03.192" endtime="20240910 18:14:06.790"/>
</kw>
<msg timestamp="20240910 18:14:06.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:03.191" endtime="20240910 18:14:06.790"/>
</kw>
<msg timestamp="20240910 18:14:06.790" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:03.191" endtime="20240910 18:14:06.790"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:06.790" endtime="20240910 18:14:06.790"/>
</kw>
<status status="PASS" starttime="20240910 18:14:03.190" endtime="20240910 18:14:06.790"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:06.795" level="INFO">Running command 'ozone sh bucket getacl 23424-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:10.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:10.376" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:06.792" endtime="20240910 18:14:10.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:10.377" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:10.376" endtime="20240910 18:14:10.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:10.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:10.377" endtime="20240910 18:14:10.377"/>
</kw>
<status status="PASS" starttime="20240910 18:14:06.792" endtime="20240910 18:14:10.378"/>
</kw>
<msg timestamp="20240910 18:14:10.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:06.792" endtime="20240910 18:14:10.378"/>
</kw>
<msg timestamp="20240910 18:14:10.378" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:06.791" endtime="20240910 18:14:10.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:10.378" endtime="20240910 18:14:10.378"/>
</kw>
<status status="PASS" starttime="20240910 18:14:06.791" endtime="20240910 18:14:10.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket removeacl --acl user:user1:y ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:10.381" level="INFO">Running command 'ozone sh bucket removeacl --acl user:user1:y 23424-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:14.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:14.034" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:14:10.379" endtime="20240910 18:14:14.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:14.035" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:14:14.034" endtime="20240910 18:14:14.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:14.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:14.035" endtime="20240910 18:14:14.035"/>
</kw>
<status status="PASS" starttime="20240910 18:14:10.379" endtime="20240910 18:14:14.036"/>
</kw>
<msg timestamp="20240910 18:14:14.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:10.379" endtime="20240910 18:14:14.036"/>
</kw>
<status status="PASS" starttime="20240910 18:14:10.378" endtime="20240910 18:14:14.036"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:14.041" level="INFO">Running command 'ozone sh bucket getacl 23424-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:17.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:17.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:14:14.039" endtime="20240910 18:14:17.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:17.436" level="INFO"/>
<status status="PASS" starttime="20240910 18:14:17.436" endtime="20240910 18:14:17.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:17.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:17.436" endtime="20240910 18:14:17.437"/>
</kw>
<status status="PASS" starttime="20240910 18:14:14.039" endtime="20240910 18:14:17.437"/>
</kw>
<msg timestamp="20240910 18:14:17.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:14.039" endtime="20240910 18:14:17.437"/>
</kw>
<msg timestamp="20240910 18:14:17.437" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20240910 18:14:14.037" endtime="20240910 18:14:17.437"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:17.437" endtime="20240910 18:14:17.438"/>
</kw>
<status status="PASS" starttime="20240910 18:14:14.036" endtime="20240910 18:14:17.438"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:17.441" level="INFO">Running command 'ozone sh bucket getacl --source 23424-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:21.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:21.041" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:14:17.440" endtime="20240910 18:14:21.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:21.042" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:14:21.041" endtime="20240910 18:14:21.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:21.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:21.042" endtime="20240910 18:14:21.043"/>
</kw>
<status status="PASS" starttime="20240910 18:14:17.439" endtime="20240910 18:14:21.043"/>
</kw>
<msg timestamp="20240910 18:14:21.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:17.439" endtime="20240910 18:14:21.043"/>
</kw>
<msg timestamp="20240910 18:14:21.043" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:14:17.438" endtime="20240910 18:14:21.043"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:21.043" endtime="20240910 18:14:21.044"/>
</kw>
<status status="PASS" starttime="20240910 18:14:17.438" endtime="20240910 18:14:21.044"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setacl --acl user:user1:rw ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:21.047" level="INFO">Running command 'ozone sh bucket setacl --acl user:user1:rw 23424-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:24.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:24.520" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:14:21.045" endtime="20240910 18:14:24.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:24.521" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:14:24.520" endtime="20240910 18:14:24.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:24.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:24.521" endtime="20240910 18:14:24.521"/>
</kw>
<status status="PASS" starttime="20240910 18:14:21.045" endtime="20240910 18:14:24.521"/>
</kw>
<msg timestamp="20240910 18:14:24.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:21.044" endtime="20240910 18:14:24.522"/>
</kw>
<status status="PASS" starttime="20240910 18:14:21.044" endtime="20240910 18:14:24.522"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:24.526" level="INFO">Running command 'ozone sh bucket getacl 23424-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:28.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:28.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:14:24.524" endtime="20240910 18:14:28.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:28.255" level="INFO"/>
<status status="PASS" starttime="20240910 18:14:28.254" endtime="20240910 18:14:28.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:28.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:28.255" endtime="20240910 18:14:28.255"/>
</kw>
<status status="PASS" starttime="20240910 18:14:24.524" endtime="20240910 18:14:28.256"/>
</kw>
<msg timestamp="20240910 18:14:28.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:24.523" endtime="20240910 18:14:28.256"/>
</kw>
<msg timestamp="20240910 18:14:28.256" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20240910 18:14:24.523" endtime="20240910 18:14:28.256"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:28.256" endtime="20240910 18:14:28.256"/>
</kw>
<status status="PASS" starttime="20240910 18:14:24.522" endtime="20240910 18:14:28.256"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:28.260" level="INFO">Running command 'ozone sh bucket getacl --source 23424-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:32.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:32.090" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20240910 18:14:28.258" endtime="20240910 18:14:32.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:32.091" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20240910 18:14:32.090" endtime="20240910 18:14:32.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:32.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:32.091" endtime="20240910 18:14:32.091"/>
</kw>
<status status="PASS" starttime="20240910 18:14:28.258" endtime="20240910 18:14:32.091"/>
</kw>
<msg timestamp="20240910 18:14:32.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:28.258" endtime="20240910 18:14:32.092"/>
</kw>
<msg timestamp="20240910 18:14:32.092" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20240910 18:14:28.257" endtime="20240910 18:14:32.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:32.092" endtime="20240910 18:14:32.092"/>
</kw>
<status status="PASS" starttime="20240910 18:14:28.257" endtime="20240910 18:14:32.092"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:32.095" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 23424-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:35.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:35.389" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:14:32.093" endtime="20240910 18:14:35.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:35.390" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:14:35.389" endtime="20240910 18:14:35.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:35.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:35.390" endtime="20240910 18:14:35.390"/>
</kw>
<status status="PASS" starttime="20240910 18:14:32.093" endtime="20240910 18:14:35.390"/>
</kw>
<msg timestamp="20240910 18:14:35.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:32.093" endtime="20240910 18:14:35.390"/>
</kw>
<status status="PASS" starttime="20240910 18:14:32.092" endtime="20240910 18:14:35.391"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:35.395" level="INFO">Running command 'ozone sh bucket getacl 23424-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:39.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:39.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:14:35.393" endtime="20240910 18:14:39.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:39.116" level="INFO"/>
<status status="PASS" starttime="20240910 18:14:39.116" endtime="20240910 18:14:39.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:39.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:39.117" endtime="20240910 18:14:39.117"/>
</kw>
<status status="PASS" starttime="20240910 18:14:35.392" endtime="20240910 18:14:39.117"/>
</kw>
<msg timestamp="20240910 18:14:39.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:35.392" endtime="20240910 18:14:39.117"/>
</kw>
<msg timestamp="20240910 18:14:39.117" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20240910 18:14:35.392" endtime="20240910 18:14:39.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:39.118" endtime="20240910 18:14:39.118"/>
</kw>
<status status="PASS" starttime="20240910 18:14:35.391" endtime="20240910 18:14:39.118"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:39.122" level="INFO">Running command 'ozone sh bucket getacl --source 23424-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:42.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:42.686" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20240910 18:14:39.120" endtime="20240910 18:14:42.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:42.687" level="INFO">READ</msg>
<status status="PASS" starttime="20240910 18:14:42.687" endtime="20240910 18:14:42.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:42.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:42.688" endtime="20240910 18:14:42.688"/>
</kw>
<status status="PASS" starttime="20240910 18:14:39.119" endtime="20240910 18:14:42.688"/>
</kw>
<msg timestamp="20240910 18:14:42.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:39.119" endtime="20240910 18:14:42.688"/>
</kw>
<msg timestamp="20240910 18:14:42.689" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20240910 18:14:39.119" endtime="20240910 18:14:42.689"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:42.689" endtime="20240910 18:14:42.689"/>
</kw>
<status status="PASS" starttime="20240910 18:14:39.118" endtime="20240910 18:14:42.689"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:13:52.275" endtime="20240910 18:14:42.689"/>
</test>
<test id="s1-s2-s3-t9" name="Source and target key have same ACLs" line="159">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:14:42.691" endtime="20240910 18:14:42.691"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:42.694" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:42.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:42.698" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:14:42.692" endtime="20240910 18:14:42.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:42.698" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:14:42.698" endtime="20240910 18:14:42.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:42.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:42.699" endtime="20240910 18:14:42.699"/>
</kw>
<status status="PASS" starttime="20240910 18:14:42.692" endtime="20240910 18:14:42.699"/>
</kw>
<msg timestamp="20240910 18:14:42.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:42.692" endtime="20240910 18:14:42.699"/>
</kw>
<msg timestamp="20240910 18:14:42.699" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:14:42.692" endtime="20240910 18:14:42.699"/>
</kw>
<msg timestamp="20240910 18:14:42.700" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:14:42.691" endtime="20240910 18:14:42.700"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:14:42.700" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:14:42.700" endtime="20240910 18:14:42.700"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:42.703" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:42.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:42.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:14:42.701" endtime="20240910 18:14:42.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:42.740" level="INFO"/>
<status status="PASS" starttime="20240910 18:14:42.740" endtime="20240910 18:14:42.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:42.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:42.740" endtime="20240910 18:14:42.741"/>
</kw>
<status status="PASS" starttime="20240910 18:14:42.701" endtime="20240910 18:14:42.741"/>
</kw>
<msg timestamp="20240910 18:14:42.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:42.701" endtime="20240910 18:14:42.741"/>
</kw>
<status status="PASS" starttime="20240910 18:14:42.700" endtime="20240910 18:14:42.741"/>
</kw>
<status status="PASS" starttime="20240910 18:14:42.700" endtime="20240910 18:14:42.741"/>
</kw>
<status status="PASS" starttime="20240910 18:14:42.691" endtime="20240910 18:14:42.741"/>
</kw>
<status status="PASS" starttime="20240910 18:14:42.690" endtime="20240910 18:14:42.741"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl user:user1:rwxy ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:42.744" level="INFO">Running command 'ozone sh key addacl --acl user:user1:rwxy 23424-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:46.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:46.264" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:14:42.743" endtime="20240910 18:14:46.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:46.265" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:14:46.264" endtime="20240910 18:14:46.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:46.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:46.265" endtime="20240910 18:14:46.265"/>
</kw>
<status status="PASS" starttime="20240910 18:14:42.742" endtime="20240910 18:14:46.265"/>
</kw>
<msg timestamp="20240910 18:14:46.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:42.742" endtime="20240910 18:14:46.265"/>
</kw>
<status status="PASS" starttime="20240910 18:14:42.742" endtime="20240910 18:14:46.266"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:46.270" level="INFO">Running command 'ozone sh key getacl 23424-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:49.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:49.819" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:46.268" endtime="20240910 18:14:49.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:49.820" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:49.819" endtime="20240910 18:14:49.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:49.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:49.820" endtime="20240910 18:14:49.820"/>
</kw>
<status status="PASS" starttime="20240910 18:14:46.267" endtime="20240910 18:14:49.820"/>
</kw>
<msg timestamp="20240910 18:14:49.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:46.267" endtime="20240910 18:14:49.821"/>
</kw>
<msg timestamp="20240910 18:14:49.821" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:46.266" endtime="20240910 18:14:49.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:49.821" endtime="20240910 18:14:49.821"/>
</kw>
<status status="PASS" starttime="20240910 18:14:46.266" endtime="20240910 18:14:49.821"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:49.825" level="INFO">Running command 'ozone sh key getacl 23424-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:53.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:53.391" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:49.823" endtime="20240910 18:14:53.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:53.392" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:53.392" endtime="20240910 18:14:53.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:53.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:53.393" endtime="20240910 18:14:53.393"/>
</kw>
<status status="PASS" starttime="20240910 18:14:49.823" endtime="20240910 18:14:53.393"/>
</kw>
<msg timestamp="20240910 18:14:53.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:49.823" endtime="20240910 18:14:53.393"/>
</kw>
<msg timestamp="20240910 18:14:53.393" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:14:49.822" endtime="20240910 18:14:53.394"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:14:53.394" endtime="20240910 18:14:53.394"/>
</kw>
<status status="PASS" starttime="20240910 18:14:49.821" endtime="20240910 18:14:53.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key removeacl --acl user:user1:y ${target}/link1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:53.397" level="INFO">Running command 'ozone sh key removeacl --acl user:user1:y 23424-target/link1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:14:57.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:14:57.184" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:14:53.395" endtime="20240910 18:14:57.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:14:57.185" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:14:57.184" endtime="20240910 18:14:57.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:14:57.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:14:57.185" endtime="20240910 18:14:57.185"/>
</kw>
<status status="PASS" starttime="20240910 18:14:53.395" endtime="20240910 18:14:57.185"/>
</kw>
<msg timestamp="20240910 18:14:57.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:53.395" endtime="20240910 18:14:57.186"/>
</kw>
<status status="PASS" starttime="20240910 18:14:53.394" endtime="20240910 18:14:57.186"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:14:57.190" level="INFO">Running command 'ozone sh key getacl 23424-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:00.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:00.831" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:14:57.187" endtime="20240910 18:15:00.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:00.832" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:15:00.831" endtime="20240910 18:15:00.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:00.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:00.832" endtime="20240910 18:15:00.832"/>
</kw>
<status status="PASS" starttime="20240910 18:14:57.187" endtime="20240910 18:15:00.832"/>
</kw>
<msg timestamp="20240910 18:15:00.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:14:57.187" endtime="20240910 18:15:00.833"/>
</kw>
<msg timestamp="20240910 18:15:00.833" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:14:57.186" endtime="20240910 18:15:00.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:00.833" endtime="20240910 18:15:00.833"/>
</kw>
<status status="PASS" starttime="20240910 18:14:57.186" endtime="20240910 18:15:00.833"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:00.838" level="INFO">Running command 'ozone sh key getacl 23424-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:04.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:04.461" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:15:00.835" endtime="20240910 18:15:04.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:04.462" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:15:04.461" endtime="20240910 18:15:04.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:04.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:04.462" endtime="20240910 18:15:04.462"/>
</kw>
<status status="PASS" starttime="20240910 18:15:00.835" endtime="20240910 18:15:04.462"/>
</kw>
<msg timestamp="20240910 18:15:04.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:00.835" endtime="20240910 18:15:04.463"/>
</kw>
<msg timestamp="20240910 18:15:04.463" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:15:00.834" endtime="20240910 18:15:04.463"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:04.463" endtime="20240910 18:15:04.463"/>
</kw>
<status status="PASS" starttime="20240910 18:15:00.833" endtime="20240910 18:15:04.463"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key setacl --acl user:user1:rw ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:04.466" level="INFO">Running command 'ozone sh key setacl --acl user:user1:rw 23424-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:07.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:07.810" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:15:04.464" endtime="20240910 18:15:07.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:07.811" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:15:07.811" endtime="20240910 18:15:07.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:07.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:07.811" endtime="20240910 18:15:07.812"/>
</kw>
<status status="PASS" starttime="20240910 18:15:04.464" endtime="20240910 18:15:07.812"/>
</kw>
<msg timestamp="20240910 18:15:07.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:04.464" endtime="20240910 18:15:07.812"/>
</kw>
<status status="PASS" starttime="20240910 18:15:04.463" endtime="20240910 18:15:07.812"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:07.816" level="INFO">Running command 'ozone sh key getacl 23424-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:11.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:11.413" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:07.814" endtime="20240910 18:15:11.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:11.414" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:11.414" endtime="20240910 18:15:11.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:11.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:11.414" endtime="20240910 18:15:11.415"/>
</kw>
<status status="PASS" starttime="20240910 18:15:07.813" endtime="20240910 18:15:11.415"/>
</kw>
<msg timestamp="20240910 18:15:11.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:07.813" endtime="20240910 18:15:11.415"/>
</kw>
<msg timestamp="20240910 18:15:11.415" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:07.813" endtime="20240910 18:15:11.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:11.415" endtime="20240910 18:15:11.416"/>
</kw>
<status status="PASS" starttime="20240910 18:15:07.812" endtime="20240910 18:15:11.416"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:11.419" level="INFO">Running command 'ozone sh key getacl 23424-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:14.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:14.840" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:11.418" endtime="20240910 18:15:14.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:14.842" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:14.841" endtime="20240910 18:15:14.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:14.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:14.842" endtime="20240910 18:15:14.842"/>
</kw>
<status status="PASS" starttime="20240910 18:15:11.417" endtime="20240910 18:15:14.842"/>
</kw>
<msg timestamp="20240910 18:15:14.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:11.417" endtime="20240910 18:15:14.842"/>
</kw>
<msg timestamp="20240910 18:15:14.842" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:11.416" endtime="20240910 18:15:14.842"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:14.843" endtime="20240910 18:15:14.843"/>
</kw>
<status status="PASS" starttime="20240910 18:15:11.416" endtime="20240910 18:15:14.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl group:group2:r ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:14.846" level="INFO">Running command 'ozone sh key addacl --acl group:group2:r 23424-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:18.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:18.275" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:15:14.844" endtime="20240910 18:15:18.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:18.276" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:15:18.275" endtime="20240910 18:15:18.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:18.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:18.276" endtime="20240910 18:15:18.276"/>
</kw>
<status status="PASS" starttime="20240910 18:15:14.844" endtime="20240910 18:15:18.276"/>
</kw>
<msg timestamp="20240910 18:15:18.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:14.843" endtime="20240910 18:15:18.277"/>
</kw>
<status status="PASS" starttime="20240910 18:15:14.843" endtime="20240910 18:15:18.277"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:18.281" level="INFO">Running command 'ozone sh key getacl 23424-target/link1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:21.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:21.974" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20240910 18:15:18.279" endtime="20240910 18:15:21.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:21.975" level="INFO">READ</msg>
<status status="PASS" starttime="20240910 18:15:21.974" endtime="20240910 18:15:21.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:21.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:21.975" endtime="20240910 18:15:21.975"/>
</kw>
<status status="PASS" starttime="20240910 18:15:18.278" endtime="20240910 18:15:21.975"/>
</kw>
<msg timestamp="20240910 18:15:21.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:18.278" endtime="20240910 18:15:21.975"/>
</kw>
<msg timestamp="20240910 18:15:21.976" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20240910 18:15:18.277" endtime="20240910 18:15:21.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:21.976" endtime="20240910 18:15:21.976"/>
</kw>
<status status="PASS" starttime="20240910 18:15:18.277" endtime="20240910 18:15:21.976"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:21.980" level="INFO">Running command 'ozone sh key getacl 23424-source/bucket1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:25.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:25.744" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20240910 18:15:21.978" endtime="20240910 18:15:25.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:25.745" level="INFO">READ</msg>
<status status="PASS" starttime="20240910 18:15:25.744" endtime="20240910 18:15:25.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:25.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:25.745" endtime="20240910 18:15:25.746"/>
</kw>
<status status="PASS" starttime="20240910 18:15:21.977" endtime="20240910 18:15:25.746"/>
</kw>
<msg timestamp="20240910 18:15:25.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:21.977" endtime="20240910 18:15:25.746"/>
</kw>
<msg timestamp="20240910 18:15:25.746" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20240910 18:15:21.977" endtime="20240910 18:15:25.746"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:25.746" endtime="20240910 18:15:25.747"/>
</kw>
<status status="PASS" starttime="20240910 18:15:21.976" endtime="20240910 18:15:25.747"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:14:42.690" endtime="20240910 18:15:25.747"/>
</test>
<test id="s1-s2-s3-t10" name="Source and target prefix have same ACLs" line="174">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:15:25.749" endtime="20240910 18:15:25.749"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:25.752" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:25.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:25.756" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:15:25.750" endtime="20240910 18:15:25.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:25.757" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:15:25.756" endtime="20240910 18:15:25.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:25.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:25.757" endtime="20240910 18:15:25.757"/>
</kw>
<status status="PASS" starttime="20240910 18:15:25.750" endtime="20240910 18:15:25.757"/>
</kw>
<msg timestamp="20240910 18:15:25.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:25.750" endtime="20240910 18:15:25.757"/>
</kw>
<msg timestamp="20240910 18:15:25.757" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:15:25.749" endtime="20240910 18:15:25.758"/>
</kw>
<msg timestamp="20240910 18:15:25.758" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:15:25.749" endtime="20240910 18:15:25.758"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:15:25.758" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:15:25.758" endtime="20240910 18:15:25.758"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:25.761" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:25.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:25.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:15:25.759" endtime="20240910 18:15:25.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:25.827" level="INFO"/>
<status status="PASS" starttime="20240910 18:15:25.826" endtime="20240910 18:15:25.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:25.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:25.827" endtime="20240910 18:15:25.827"/>
</kw>
<status status="PASS" starttime="20240910 18:15:25.759" endtime="20240910 18:15:25.827"/>
</kw>
<msg timestamp="20240910 18:15:25.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:25.759" endtime="20240910 18:15:25.828"/>
</kw>
<status status="PASS" starttime="20240910 18:15:25.759" endtime="20240910 18:15:25.828"/>
</kw>
<status status="PASS" starttime="20240910 18:15:25.758" endtime="20240910 18:15:25.828"/>
</kw>
<status status="PASS" starttime="20240910 18:15:25.748" endtime="20240910 18:15:25.828"/>
</kw>
<status status="PASS" starttime="20240910 18:15:25.748" endtime="20240910 18:15:25.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl user:user1:rwxy ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:25.831" level="INFO">Running command 'ozone sh prefix addacl --acl user:user1:rwxy 23424-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:29.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:29.282" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:15:25.829" endtime="20240910 18:15:29.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:29.283" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:15:29.283" endtime="20240910 18:15:29.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:29.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:29.284" endtime="20240910 18:15:29.284"/>
</kw>
<status status="PASS" starttime="20240910 18:15:25.829" endtime="20240910 18:15:29.284"/>
</kw>
<msg timestamp="20240910 18:15:29.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:25.828" endtime="20240910 18:15:29.284"/>
</kw>
<status status="PASS" starttime="20240910 18:15:25.828" endtime="20240910 18:15:29.284"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:29.288" level="INFO">Running command 'ozone sh prefix getacl 23424-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:32.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:32.907" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:15:29.286" endtime="20240910 18:15:32.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:32.908" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:15:32.908" endtime="20240910 18:15:32.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:32.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:32.908" endtime="20240910 18:15:32.909"/>
</kw>
<status status="PASS" starttime="20240910 18:15:29.286" endtime="20240910 18:15:32.909"/>
</kw>
<msg timestamp="20240910 18:15:32.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:29.286" endtime="20240910 18:15:32.909"/>
</kw>
<msg timestamp="20240910 18:15:32.909" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:15:29.285" endtime="20240910 18:15:32.909"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:32.909" endtime="20240910 18:15:32.910"/>
</kw>
<status status="PASS" starttime="20240910 18:15:29.285" endtime="20240910 18:15:32.910"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:32.914" level="INFO">Running command 'ozone sh prefix getacl 23424-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:36.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:36.408" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:15:32.912" endtime="20240910 18:15:36.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:36.409" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:15:36.409" endtime="20240910 18:15:36.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:36.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:36.409" endtime="20240910 18:15:36.410"/>
</kw>
<status status="PASS" starttime="20240910 18:15:32.911" endtime="20240910 18:15:36.410"/>
</kw>
<msg timestamp="20240910 18:15:36.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:32.911" endtime="20240910 18:15:36.410"/>
</kw>
<msg timestamp="20240910 18:15:36.410" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20240910 18:15:32.910" endtime="20240910 18:15:36.410"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:36.410" endtime="20240910 18:15:36.411"/>
</kw>
<status status="PASS" starttime="20240910 18:15:32.910" endtime="20240910 18:15:36.411"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix removeacl --acl user:user1:y ${target}/link1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:36.414" level="INFO">Running command 'ozone sh prefix removeacl --acl user:user1:y 23424-target/link1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:39.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:39.845" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:15:36.412" endtime="20240910 18:15:39.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:39.846" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:15:39.846" endtime="20240910 18:15:39.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:39.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:39.847" endtime="20240910 18:15:39.847"/>
</kw>
<status status="PASS" starttime="20240910 18:15:36.412" endtime="20240910 18:15:39.847"/>
</kw>
<msg timestamp="20240910 18:15:39.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:36.411" endtime="20240910 18:15:39.847"/>
</kw>
<status status="PASS" starttime="20240910 18:15:36.411" endtime="20240910 18:15:39.847"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:39.851" level="INFO">Running command 'ozone sh prefix getacl 23424-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:43.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:43.478" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:15:39.849" endtime="20240910 18:15:43.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:43.479" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:15:43.478" endtime="20240910 18:15:43.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:43.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:43.479" endtime="20240910 18:15:43.480"/>
</kw>
<status status="PASS" starttime="20240910 18:15:39.849" endtime="20240910 18:15:43.480"/>
</kw>
<msg timestamp="20240910 18:15:43.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:39.849" endtime="20240910 18:15:43.480"/>
</kw>
<msg timestamp="20240910 18:15:43.480" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:15:39.848" endtime="20240910 18:15:43.480"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:43.480" endtime="20240910 18:15:43.481"/>
</kw>
<status status="PASS" starttime="20240910 18:15:39.848" endtime="20240910 18:15:43.481"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:43.484" level="INFO">Running command 'ozone sh prefix getacl 23424-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:47.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:47.263" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:15:43.482" endtime="20240910 18:15:47.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:47.264" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:15:47.264" endtime="20240910 18:15:47.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:47.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:47.265" endtime="20240910 18:15:47.265"/>
</kw>
<status status="PASS" starttime="20240910 18:15:43.482" endtime="20240910 18:15:47.265"/>
</kw>
<msg timestamp="20240910 18:15:47.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:43.482" endtime="20240910 18:15:47.265"/>
</kw>
<msg timestamp="20240910 18:15:47.265" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20240910 18:15:43.481" endtime="20240910 18:15:47.265"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:47.266" endtime="20240910 18:15:47.266"/>
</kw>
<status status="PASS" starttime="20240910 18:15:43.481" endtime="20240910 18:15:47.266"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix setacl --acl user:user1:rw ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:47.269" level="INFO">Running command 'ozone sh prefix setacl --acl user:user1:rw 23424-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:50.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:50.557" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:15:47.267" endtime="20240910 18:15:50.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:50.558" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:15:50.557" endtime="20240910 18:15:50.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:50.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:50.558" endtime="20240910 18:15:50.558"/>
</kw>
<status status="PASS" starttime="20240910 18:15:47.267" endtime="20240910 18:15:50.559"/>
</kw>
<msg timestamp="20240910 18:15:50.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:47.266" endtime="20240910 18:15:50.559"/>
</kw>
<status status="PASS" starttime="20240910 18:15:47.266" endtime="20240910 18:15:50.559"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:50.563" level="INFO">Running command 'ozone sh prefix getacl 23424-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:54.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:54.222" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:50.561" endtime="20240910 18:15:54.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:54.223" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:54.222" endtime="20240910 18:15:54.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:54.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:54.223" endtime="20240910 18:15:54.223"/>
</kw>
<status status="PASS" starttime="20240910 18:15:50.560" endtime="20240910 18:15:54.223"/>
</kw>
<msg timestamp="20240910 18:15:54.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:50.560" endtime="20240910 18:15:54.224"/>
</kw>
<msg timestamp="20240910 18:15:54.224" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:50.560" endtime="20240910 18:15:54.224"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:54.224" endtime="20240910 18:15:54.224"/>
</kw>
<status status="PASS" starttime="20240910 18:15:50.559" endtime="20240910 18:15:54.224"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:54.228" level="INFO">Running command 'ozone sh prefix getacl 23424-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:15:57.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:15:57.604" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:54.226" endtime="20240910 18:15:57.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:15:57.605" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:57.604" endtime="20240910 18:15:57.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:15:57.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:15:57.605" endtime="20240910 18:15:57.605"/>
</kw>
<status status="PASS" starttime="20240910 18:15:54.226" endtime="20240910 18:15:57.605"/>
</kw>
<msg timestamp="20240910 18:15:57.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:54.225" endtime="20240910 18:15:57.606"/>
</kw>
<msg timestamp="20240910 18:15:57.606" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20240910 18:15:54.225" endtime="20240910 18:15:57.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:15:57.606" endtime="20240910 18:15:57.606"/>
</kw>
<status status="PASS" starttime="20240910 18:15:54.224" endtime="20240910 18:15:57.606"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl group:group2:r ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:15:57.609" level="INFO">Running command 'ozone sh prefix addacl --acl group:group2:r 23424-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:00.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:00.997" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:15:57.607" endtime="20240910 18:16:00.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:00.998" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:16:00.997" endtime="20240910 18:16:00.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:00.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:00.998" endtime="20240910 18:16:00.998"/>
</kw>
<status status="PASS" starttime="20240910 18:15:57.607" endtime="20240910 18:16:00.999"/>
</kw>
<msg timestamp="20240910 18:16:00.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:15:57.607" endtime="20240910 18:16:00.999"/>
</kw>
<status status="PASS" starttime="20240910 18:15:57.606" endtime="20240910 18:16:00.999"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:01.003" level="INFO">Running command 'ozone sh prefix getacl 23424-target/link1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:04.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:04.671" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20240910 18:16:01.001" endtime="20240910 18:16:04.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:04.672" level="INFO">READ</msg>
<status status="PASS" starttime="20240910 18:16:04.671" endtime="20240910 18:16:04.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:04.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:04.672" endtime="20240910 18:16:04.673"/>
</kw>
<status status="PASS" starttime="20240910 18:16:01.001" endtime="20240910 18:16:04.673"/>
</kw>
<msg timestamp="20240910 18:16:04.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:01.000" endtime="20240910 18:16:04.673"/>
</kw>
<msg timestamp="20240910 18:16:04.673" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20240910 18:16:00.999" endtime="20240910 18:16:04.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:16:04.673" endtime="20240910 18:16:04.673"/>
</kw>
<status status="PASS" starttime="20240910 18:16:00.999" endtime="20240910 18:16:04.674"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:04.677" level="INFO">Running command 'ozone sh prefix getacl 23424-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:08.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:08.144" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20240910 18:16:04.675" endtime="20240910 18:16:08.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:08.145" level="INFO">READ</msg>
<status status="PASS" starttime="20240910 18:16:08.145" endtime="20240910 18:16:08.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:08.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:08.145" endtime="20240910 18:16:08.146"/>
</kw>
<status status="PASS" starttime="20240910 18:16:04.675" endtime="20240910 18:16:08.146"/>
</kw>
<msg timestamp="20240910 18:16:08.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:04.675" endtime="20240910 18:16:08.146"/>
</kw>
<msg timestamp="20240910 18:16:08.146" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20240910 18:16:04.674" endtime="20240910 18:16:08.146"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:16:08.147" endtime="20240910 18:16:08.147"/>
</kw>
<status status="PASS" starttime="20240910 18:16:04.674" endtime="20240910 18:16:08.147"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:15:25.747" endtime="20240910 18:16:08.147"/>
</test>
<test id="s1-s2-s3-t11" name="Buckets and links share namespace" line="189">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:16:08.149" endtime="20240910 18:16:08.149"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:08.152" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:08.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:08.156" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:16:08.150" endtime="20240910 18:16:08.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:08.157" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:16:08.156" endtime="20240910 18:16:08.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:08.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:08.157" endtime="20240910 18:16:08.157"/>
</kw>
<status status="PASS" starttime="20240910 18:16:08.150" endtime="20240910 18:16:08.157"/>
</kw>
<msg timestamp="20240910 18:16:08.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:08.150" endtime="20240910 18:16:08.158"/>
</kw>
<msg timestamp="20240910 18:16:08.158" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:16:08.150" endtime="20240910 18:16:08.158"/>
</kw>
<msg timestamp="20240910 18:16:08.158" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:08.149" endtime="20240910 18:16:08.158"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:16:08.158" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:08.158" endtime="20240910 18:16:08.158"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:08.162" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:08.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:08.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:08.160" endtime="20240910 18:16:08.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:08.202" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:08.202" endtime="20240910 18:16:08.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:08.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:08.203" endtime="20240910 18:16:08.203"/>
</kw>
<status status="PASS" starttime="20240910 18:16:08.160" endtime="20240910 18:16:08.203"/>
</kw>
<msg timestamp="20240910 18:16:08.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:08.159" endtime="20240910 18:16:08.203"/>
</kw>
<status status="PASS" starttime="20240910 18:16:08.159" endtime="20240910 18:16:08.203"/>
</kw>
<status status="PASS" starttime="20240910 18:16:08.158" endtime="20240910 18:16:08.203"/>
</kw>
<status status="PASS" starttime="20240910 18:16:08.149" endtime="20240910 18:16:08.204"/>
</kw>
<status status="PASS" starttime="20240910 18:16:08.148" endtime="20240910 18:16:08.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:08.207" level="INFO">Running command 'ozone sh bucket link 23424-source/bucket2 23424-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:11.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:11.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:08.205" endtime="20240910 18:16:11.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:11.710" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:11.710" endtime="20240910 18:16:11.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:11.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:11.710" endtime="20240910 18:16:11.711"/>
</kw>
<status status="PASS" starttime="20240910 18:16:08.204" endtime="20240910 18:16:11.711"/>
</kw>
<msg timestamp="20240910 18:16:11.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:08.204" endtime="20240910 18:16:11.711"/>
</kw>
<status status="PASS" starttime="20240910 18:16:08.204" endtime="20240910 18:16:11.711"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:11.714" level="INFO">Running command 'ozone sh bucket create 23424-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:15.289" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:16:15.289" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20240910 18:16:11.712" endtime="20240910 18:16:15.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:15.290" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20240910 18:16:15.290" endtime="20240910 18:16:15.290"/>
</kw>
<msg timestamp="20240910 18:16:15.290" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20240910 18:16:11.711" endtime="20240910 18:16:15.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:16:15.291" endtime="20240910 18:16:15.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:15.294" level="INFO">Running command 'ozone sh bucket create 23424-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:18.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:18.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:15.292" endtime="20240910 18:16:18.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:18.708" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:18.707" endtime="20240910 18:16:18.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:18.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:18.708" endtime="20240910 18:16:18.709"/>
</kw>
<status status="PASS" starttime="20240910 18:16:15.292" endtime="20240910 18:16:18.709"/>
</kw>
<msg timestamp="20240910 18:16:18.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:15.291" endtime="20240910 18:16:18.709"/>
</kw>
<status status="PASS" starttime="20240910 18:16:15.291" endtime="20240910 18:16:18.709"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:18.712" level="INFO">Running command 'ozone sh bucket link 23424-source/bucket1 23424-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:22.007" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:16:22.007" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20240910 18:16:18.710" endtime="20240910 18:16:22.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:22.008" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20240910 18:16:22.007" endtime="20240910 18:16:22.008"/>
</kw>
<msg timestamp="20240910 18:16:22.008" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20240910 18:16:18.709" endtime="20240910 18:16:22.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:16:22.008" endtime="20240910 18:16:22.008"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:16:08.148" endtime="20240910 18:16:22.009"/>
</test>
<test id="s1-s2-s3-t12" name="Can follow link with read access" line="198">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:16:22.010" endtime="20240910 18:16:22.011"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:22.014" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:22.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:22.018" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:16:22.012" endtime="20240910 18:16:22.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:22.019" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:16:22.018" endtime="20240910 18:16:22.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:22.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:22.019" endtime="20240910 18:16:22.019"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.012" endtime="20240910 18:16:22.019"/>
</kw>
<msg timestamp="20240910 18:16:22.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:22.012" endtime="20240910 18:16:22.019"/>
</kw>
<msg timestamp="20240910 18:16:22.020" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:16:22.011" endtime="20240910 18:16:22.020"/>
</kw>
<msg timestamp="20240910 18:16:22.020" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:22.011" endtime="20240910 18:16:22.020"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:16:22.020" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:22.020" endtime="20240910 18:16:22.020"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:22.023" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:22.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:22.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:22.022" endtime="20240910 18:16:22.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:22.058" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:22.057" endtime="20240910 18:16:22.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:22.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:22.058" endtime="20240910 18:16:22.058"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.021" endtime="20240910 18:16:22.058"/>
</kw>
<msg timestamp="20240910 18:16:22.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:22.021" endtime="20240910 18:16:22.059"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.021" endtime="20240910 18:16:22.059"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.020" endtime="20240910 18:16:22.059"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.010" endtime="20240910 18:16:22.059"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.010" endtime="20240910 18:16:22.059"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:22.062" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:22.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:22.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:22.061" endtime="20240910 18:16:22.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:22.067" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:22.066" endtime="20240910 18:16:22.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:22.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:22.067" endtime="20240910 18:16:22.067"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.060" endtime="20240910 18:16:22.068"/>
</kw>
<msg timestamp="20240910 18:16:22.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:22.060" endtime="20240910 18:16:22.068"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.060" endtime="20240910 18:16:22.068"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:16:22.068" endtime="20240910 18:16:22.069"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:22.072" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:22.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:22.076" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:16:22.071" endtime="20240910 18:16:22.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:22.076" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:16:22.076" endtime="20240910 18:16:22.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:22.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:22.076" endtime="20240910 18:16:22.077"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.070" endtime="20240910 18:16:22.077"/>
</kw>
<msg timestamp="20240910 18:16:22.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:22.070" endtime="20240910 18:16:22.077"/>
</kw>
<msg timestamp="20240910 18:16:22.077" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:16:22.069" endtime="20240910 18:16:22.077"/>
</kw>
<msg timestamp="20240910 18:16:22.077" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:22.069" endtime="20240910 18:16:22.077"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:16:22.078" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:22.078" endtime="20240910 18:16:22.078"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:22.081" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:22.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:22.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:22.079" endtime="20240910 18:16:22.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:22.141" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:22.141" endtime="20240910 18:16:22.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:22.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:22.141" endtime="20240910 18:16:22.142"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.079" endtime="20240910 18:16:22.142"/>
</kw>
<msg timestamp="20240910 18:16:22.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:22.079" endtime="20240910 18:16:22.142"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.078" endtime="20240910 18:16:22.142"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.078" endtime="20240910 18:16:22.142"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.068" endtime="20240910 18:16:22.142"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.068" endtime="20240910 18:16:22.142"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:22.144" level="INFO">Running command 'ozone sh key list 23424-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:25.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:25.910" level="INFO">${output} = [ {
  "volumeName" : "23424-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-09-10T18:12:26.790Z"...</msg>
<status status="PASS" starttime="20240910 18:16:22.143" endtime="20240910 18:16:25.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:25.911" level="INFO">[ {
  "volumeName" : "23424-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-09-10T18:12:26.790Z",
  "modificationTime" : "2024-09-10T18:12:28.171Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20240910 18:16:25.911" endtime="20240910 18:16:25.911"/>
</kw>
<msg timestamp="20240910 18:16:25.911" level="INFO">${result} = [ {
  "volumeName" : "23424-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-09-10T18:12:26.790Z"...</msg>
<status status="PASS" starttime="20240910 18:16:22.142" endtime="20240910 18:16:25.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:16:25.911" endtime="20240910 18:16:25.912"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:25.914" level="INFO">Running command 'ozone sh key list 23424-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:29.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:29.602" level="INFO">${output} = [ {
  "volumeName" : "23424-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-09-10T18:12:26.790Z"...</msg>
<status status="PASS" starttime="20240910 18:16:25.912" endtime="20240910 18:16:29.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:29.603" level="INFO">[ {
  "volumeName" : "23424-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-09-10T18:12:26.790Z",
  "modificationTime" : "2024-09-10T18:12:28.171Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20240910 18:16:29.603" endtime="20240910 18:16:29.603"/>
</kw>
<msg timestamp="20240910 18:16:29.604" level="INFO">${result} = [ {
  "volumeName" : "23424-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-09-10T18:12:26.790Z"...</msg>
<status status="PASS" starttime="20240910 18:16:25.912" endtime="20240910 18:16:29.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:16:29.604" endtime="20240910 18:16:29.604"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.059" endtime="20240910 18:16:29.604"/>
</kw>
<status status="PASS" starttime="20240910 18:16:22.059" endtime="20240910 18:16:29.604"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:16:22.009" endtime="20240910 18:16:29.604"/>
</test>
<test id="s1-s2-s3-t13" name="Cannot follow link without read access" line="201">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:16:29.606" endtime="20240910 18:16:29.606"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:29.610" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:29.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:29.613" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:16:29.607" endtime="20240910 18:16:29.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:29.614" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:16:29.613" endtime="20240910 18:16:29.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:29.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:29.614" endtime="20240910 18:16:29.614"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.607" endtime="20240910 18:16:29.615"/>
</kw>
<msg timestamp="20240910 18:16:29.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:29.607" endtime="20240910 18:16:29.615"/>
</kw>
<msg timestamp="20240910 18:16:29.615" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:16:29.607" endtime="20240910 18:16:29.615"/>
</kw>
<msg timestamp="20240910 18:16:29.615" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:29.606" endtime="20240910 18:16:29.615"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:16:29.615" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:29.615" endtime="20240910 18:16:29.616"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:29.619" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:29.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:29.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:29.617" endtime="20240910 18:16:29.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:29.636" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:29.635" endtime="20240910 18:16:29.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:29.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:29.636" endtime="20240910 18:16:29.636"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.617" endtime="20240910 18:16:29.636"/>
</kw>
<msg timestamp="20240910 18:16:29.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:29.616" endtime="20240910 18:16:29.636"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.616" endtime="20240910 18:16:29.637"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.616" endtime="20240910 18:16:29.637"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.606" endtime="20240910 18:16:29.637"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.605" endtime="20240910 18:16:29.637"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:29.640" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:29.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:29.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:29.638" endtime="20240910 18:16:29.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:29.645" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:29.644" endtime="20240910 18:16:29.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:29.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:29.645" endtime="20240910 18:16:29.645"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.638" endtime="20240910 18:16:29.646"/>
</kw>
<msg timestamp="20240910 18:16:29.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:29.638" endtime="20240910 18:16:29.646"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.637" endtime="20240910 18:16:29.646"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:16:29.646" endtime="20240910 18:16:29.647"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:29.650" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:29.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:29.653" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:16:29.648" endtime="20240910 18:16:29.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:29.654" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:16:29.653" endtime="20240910 18:16:29.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:29.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:29.654" endtime="20240910 18:16:29.654"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.648" endtime="20240910 18:16:29.655"/>
</kw>
<msg timestamp="20240910 18:16:29.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:29.647" endtime="20240910 18:16:29.655"/>
</kw>
<msg timestamp="20240910 18:16:29.655" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:16:29.647" endtime="20240910 18:16:29.655"/>
</kw>
<msg timestamp="20240910 18:16:29.655" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:29.647" endtime="20240910 18:16:29.655"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:16:29.655" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:29.655" endtime="20240910 18:16:29.655"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:29.659" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:29.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:29.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:29.657" endtime="20240910 18:16:29.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:29.683" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:29.682" endtime="20240910 18:16:29.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:29.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:29.683" endtime="20240910 18:16:29.683"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.657" endtime="20240910 18:16:29.683"/>
</kw>
<msg timestamp="20240910 18:16:29.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:29.656" endtime="20240910 18:16:29.683"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.656" endtime="20240910 18:16:29.683"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.656" endtime="20240910 18:16:29.683"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.646" endtime="20240910 18:16:29.684"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.646" endtime="20240910 18:16:29.684"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:29.686" level="INFO">Running command 'ozone sh key list 23424-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:33.239" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:16:33.239" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:23424-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20240910 18:16:29.684" endtime="20240910 18:16:33.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:33.240" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:23424-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20240910 18:16:33.239" endtime="20240910 18:16:33.240"/>
</kw>
<msg timestamp="20240910 18:16:33.240" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:23424-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20240910 18:16:29.684" endtime="20240910 18:16:33.240"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:16:33.240" endtime="20240910 18:16:33.240"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:33.243" level="INFO">Running command 'ozone sh key list 23424-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:36.641" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:16:36.641" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:23424-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20240910 18:16:33.241" endtime="20240910 18:16:36.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:36.642" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:23424-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20240910 18:16:36.641" endtime="20240910 18:16:36.642"/>
</kw>
<msg timestamp="20240910 18:16:36.642" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:23424-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20240910 18:16:33.240" endtime="20240910 18:16:36.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:16:36.642" endtime="20240910 18:16:36.642"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.637" endtime="20240910 18:16:36.642"/>
</kw>
<status status="PASS" starttime="20240910 18:16:29.637" endtime="20240910 18:16:36.642"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:16:29.605" endtime="20240910 18:16:36.643"/>
</test>
<test id="s1-s2-s3-t14" name="ACL verified on source and target bucket" line="204">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:16:36.644" endtime="20240910 18:16:36.645"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:36.648" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:36.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:36.652" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:16:36.646" endtime="20240910 18:16:36.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:36.653" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:16:36.652" endtime="20240910 18:16:36.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:36.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:36.653" endtime="20240910 18:16:36.653"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.646" endtime="20240910 18:16:36.653"/>
</kw>
<msg timestamp="20240910 18:16:36.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:36.645" endtime="20240910 18:16:36.654"/>
</kw>
<msg timestamp="20240910 18:16:36.654" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:16:36.645" endtime="20240910 18:16:36.654"/>
</kw>
<msg timestamp="20240910 18:16:36.654" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:36.645" endtime="20240910 18:16:36.654"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:16:36.654" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:36.654" endtime="20240910 18:16:36.654"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:36.658" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:36.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:36.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:36.656" endtime="20240910 18:16:36.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:36.705" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:36.705" endtime="20240910 18:16:36.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:36.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:36.705" endtime="20240910 18:16:36.706"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.655" endtime="20240910 18:16:36.706"/>
</kw>
<msg timestamp="20240910 18:16:36.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:36.655" endtime="20240910 18:16:36.706"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.655" endtime="20240910 18:16:36.706"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.654" endtime="20240910 18:16:36.706"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.644" endtime="20240910 18:16:36.706"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.644" endtime="20240910 18:16:36.706"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source and target bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source and target bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:36.710" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:36.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:36.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:36.708" endtime="20240910 18:16:36.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:36.714" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:36.714" endtime="20240910 18:16:36.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:36.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:36.715" endtime="20240910 18:16:36.715"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.708" endtime="20240910 18:16:36.715"/>
</kw>
<msg timestamp="20240910 18:16:36.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:36.707" endtime="20240910 18:16:36.715"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.707" endtime="20240910 18:16:36.715"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:16:36.716" endtime="20240910 18:16:36.716"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:36.719" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:36.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:36.723" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:16:36.717" endtime="20240910 18:16:36.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:36.723" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:16:36.723" endtime="20240910 18:16:36.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:36.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:36.724" endtime="20240910 18:16:36.724"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.717" endtime="20240910 18:16:36.724"/>
</kw>
<msg timestamp="20240910 18:16:36.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:36.717" endtime="20240910 18:16:36.724"/>
</kw>
<msg timestamp="20240910 18:16:36.724" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:16:36.717" endtime="20240910 18:16:36.724"/>
</kw>
<msg timestamp="20240910 18:16:36.725" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:36.716" endtime="20240910 18:16:36.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:16:36.725" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:36.725" endtime="20240910 18:16:36.725"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:36.728" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:36.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:36.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:36.727" endtime="20240910 18:16:36.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:36.755" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:36.754" endtime="20240910 18:16:36.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:36.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:36.755" endtime="20240910 18:16:36.755"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.726" endtime="20240910 18:16:36.755"/>
</kw>
<msg timestamp="20240910 18:16:36.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:36.726" endtime="20240910 18:16:36.755"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.725" endtime="20240910 18:16:36.756"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.725" endtime="20240910 18:16:36.756"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.716" endtime="20240910 18:16:36.756"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.715" endtime="20240910 18:16:36.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:36.759" level="INFO">Running command 'ozone sh bucket info 23424-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:40.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:40.514" level="INFO">${output} = {
  "volumeName" : "23424-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2024-09-10T18:12:35.749Z...</msg>
<status status="PASS" starttime="20240910 18:16:36.757" endtime="20240910 18:16:40.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:40.515" level="INFO">{
  "volumeName" : "23424-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2024-09-10T18:12:35.749Z",
  "modificationTime" : "2024-09-10T18:12:35.749Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20240910 18:16:40.514" endtime="20240910 18:16:40.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:40.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:40.515" endtime="20240910 18:16:40.515"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.756" endtime="20240910 18:16:40.515"/>
</kw>
<msg timestamp="20240910 18:16:40.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:36.756" endtime="20240910 18:16:40.516"/>
</kw>
<msg timestamp="20240910 18:16:40.516" level="INFO">${result} = {
  "volumeName" : "23424-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2024-09-10T18:12:35.749Z...</msg>
<status status="PASS" starttime="20240910 18:16:36.756" endtime="20240910 18:16:40.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:16:40.516" endtime="20240910 18:16:40.516"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:16:40.516" endtime="20240910 18:16:40.516"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:40.519" level="INFO">Running command 'ozone sh bucket info 23424-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:43.993" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:16:43.993" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:23424-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20240910 18:16:40.517" endtime="20240910 18:16:43.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:43.994" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:23424-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20240910 18:16:43.994" endtime="20240910 18:16:43.994"/>
</kw>
<msg timestamp="20240910 18:16:43.994" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:23424-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20240910 18:16:40.517" endtime="20240910 18:16:43.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:16:43.995" endtime="20240910 18:16:43.995"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.707" endtime="20240910 18:16:43.995"/>
</kw>
<status status="PASS" starttime="20240910 18:16:36.706" endtime="20240910 18:16:43.995"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:16:36.643" endtime="20240910 18:16:43.995"/>
</test>
<test id="s1-s2-s3-t15" name="Loop in link chain is detected" line="207">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:16:43.997" endtime="20240910 18:16:43.997"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:44.001" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:44.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:44.004" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:16:43.999" endtime="20240910 18:16:44.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:44.005" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:16:44.005" endtime="20240910 18:16:44.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:44.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:44.005" endtime="20240910 18:16:44.006"/>
</kw>
<status status="PASS" starttime="20240910 18:16:43.998" endtime="20240910 18:16:44.006"/>
</kw>
<msg timestamp="20240910 18:16:44.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:43.998" endtime="20240910 18:16:44.006"/>
</kw>
<msg timestamp="20240910 18:16:44.006" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:16:43.998" endtime="20240910 18:16:44.006"/>
</kw>
<msg timestamp="20240910 18:16:44.006" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:43.998" endtime="20240910 18:16:44.006"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:16:44.007" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:16:44.006" endtime="20240910 18:16:44.007"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:44.010" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:44.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:44.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:44.008" endtime="20240910 18:16:44.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:44.038" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:44.037" endtime="20240910 18:16:44.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:44.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:44.038" endtime="20240910 18:16:44.038"/>
</kw>
<status status="PASS" starttime="20240910 18:16:44.008" endtime="20240910 18:16:44.039"/>
</kw>
<msg timestamp="20240910 18:16:44.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:44.008" endtime="20240910 18:16:44.039"/>
</kw>
<status status="PASS" starttime="20240910 18:16:44.007" endtime="20240910 18:16:44.039"/>
</kw>
<status status="PASS" starttime="20240910 18:16:44.007" endtime="20240910 18:16:44.039"/>
</kw>
<status status="PASS" starttime="20240910 18:16:43.997" endtime="20240910 18:16:44.039"/>
</kw>
<status status="PASS" starttime="20240910 18:16:43.996" endtime="20240910 18:16:44.039"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:44.042" level="INFO">Running command 'ozone sh bucket link 23424-target/loop1 23424-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:47.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:47.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:44.040" endtime="20240910 18:16:47.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:47.417" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:47.416" endtime="20240910 18:16:47.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:47.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:47.417" endtime="20240910 18:16:47.417"/>
</kw>
<status status="PASS" starttime="20240910 18:16:44.040" endtime="20240910 18:16:47.417"/>
</kw>
<msg timestamp="20240910 18:16:47.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:44.039" endtime="20240910 18:16:47.418"/>
</kw>
<status status="PASS" starttime="20240910 18:16:44.039" endtime="20240910 18:16:47.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:47.421" level="INFO">Running command 'ozone sh bucket link 23424-target/loop2 23424-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:50.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:50.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:47.419" endtime="20240910 18:16:50.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:50.791" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:50.791" endtime="20240910 18:16:50.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:50.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:50.791" endtime="20240910 18:16:50.792"/>
</kw>
<status status="PASS" starttime="20240910 18:16:47.418" endtime="20240910 18:16:50.792"/>
</kw>
<msg timestamp="20240910 18:16:50.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:47.418" endtime="20240910 18:16:50.792"/>
</kw>
<status status="PASS" starttime="20240910 18:16:47.418" endtime="20240910 18:16:50.792"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:50.795" level="INFO">Running command 'ozone sh bucket link 23424-target/loop3 23424-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:54.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:16:54.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:16:50.793" endtime="20240910 18:16:54.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:54.243" level="INFO"/>
<status status="PASS" starttime="20240910 18:16:54.242" endtime="20240910 18:16:54.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:16:54.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:16:54.243" endtime="20240910 18:16:54.243"/>
</kw>
<status status="PASS" starttime="20240910 18:16:50.793" endtime="20240910 18:16:54.244"/>
</kw>
<msg timestamp="20240910 18:16:54.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:50.793" endtime="20240910 18:16:54.244"/>
</kw>
<status status="PASS" starttime="20240910 18:16:50.792" endtime="20240910 18:16:54.244"/>
</kw>
<status status="PASS" starttime="20240910 18:16:43.996" endtime="20240910 18:16:54.244"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:54.247" level="INFO">Running command 'ozone sh key list 23424-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:16:57.812" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:16:57.812" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20240910 18:16:54.245" endtime="20240910 18:16:57.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:16:57.813" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20240910 18:16:57.813" endtime="20240910 18:16:57.813"/>
</kw>
<msg timestamp="20240910 18:16:57.814" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20240910 18:16:54.244" endtime="20240910 18:16:57.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:16:57.814" endtime="20240910 18:16:57.814"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:16:57.818" level="INFO">Running command 'ozone sh bucket delete 23424-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:01.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:01.544" level="INFO">${output} = Bucket loop1 is deleted</msg>
<status status="PASS" starttime="20240910 18:16:57.816" endtime="20240910 18:17:01.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:01.545" level="INFO">Bucket loop1 is deleted</msg>
<status status="PASS" starttime="20240910 18:17:01.544" endtime="20240910 18:17:01.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:01.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:01.545" endtime="20240910 18:17:01.545"/>
</kw>
<status status="PASS" starttime="20240910 18:16:57.816" endtime="20240910 18:17:01.545"/>
</kw>
<msg timestamp="20240910 18:17:01.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:16:57.815" endtime="20240910 18:17:01.545"/>
</kw>
<status status="PASS" starttime="20240910 18:16:57.815" endtime="20240910 18:17:01.545"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:01.549" level="INFO">Running command 'ozone sh bucket delete 23424-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:04.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:04.971" level="INFO">${output} = Bucket loop2 is deleted</msg>
<status status="PASS" starttime="20240910 18:17:01.547" endtime="20240910 18:17:04.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:04.971" level="INFO">Bucket loop2 is deleted</msg>
<status status="PASS" starttime="20240910 18:17:04.971" endtime="20240910 18:17:04.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:04.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:04.972" endtime="20240910 18:17:04.972"/>
</kw>
<status status="PASS" starttime="20240910 18:17:01.546" endtime="20240910 18:17:04.972"/>
</kw>
<msg timestamp="20240910 18:17:04.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:01.546" endtime="20240910 18:17:04.972"/>
</kw>
<status status="PASS" starttime="20240910 18:17:01.546" endtime="20240910 18:17:04.972"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:04.976" level="INFO">Running command 'ozone sh bucket delete 23424-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:08.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:08.168" level="INFO">${output} = Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20240910 18:17:04.974" endtime="20240910 18:17:08.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:08.169" level="INFO">Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20240910 18:17:08.168" endtime="20240910 18:17:08.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:08.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:08.169" endtime="20240910 18:17:08.169"/>
</kw>
<status status="PASS" starttime="20240910 18:17:04.973" endtime="20240910 18:17:08.169"/>
</kw>
<msg timestamp="20240910 18:17:08.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:04.973" endtime="20240910 18:17:08.170"/>
</kw>
<status status="PASS" starttime="20240910 18:17:04.973" endtime="20240910 18:17:08.170"/>
</kw>
<status status="PASS" starttime="20240910 18:16:57.814" endtime="20240910 18:17:08.170"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:16:43.996" endtime="20240910 18:17:08.170"/>
</test>
<test id="s1-s2-s3-t16" name="Multiple links to same bucket are allowed" line="213">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:17:08.172" endtime="20240910 18:17:08.172"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:08.175" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:08.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:08.179" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:17:08.173" endtime="20240910 18:17:08.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:08.180" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:17:08.179" endtime="20240910 18:17:08.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:08.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:08.180" endtime="20240910 18:17:08.180"/>
</kw>
<status status="PASS" starttime="20240910 18:17:08.173" endtime="20240910 18:17:08.180"/>
</kw>
<msg timestamp="20240910 18:17:08.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:08.173" endtime="20240910 18:17:08.181"/>
</kw>
<msg timestamp="20240910 18:17:08.181" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:17:08.172" endtime="20240910 18:17:08.181"/>
</kw>
<msg timestamp="20240910 18:17:08.181" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:17:08.172" endtime="20240910 18:17:08.181"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:17:08.181" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:17:08.181" endtime="20240910 18:17:08.181"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:08.184" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:08.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:08.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:17:08.183" endtime="20240910 18:17:08.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:08.231" level="INFO"/>
<status status="PASS" starttime="20240910 18:17:08.231" endtime="20240910 18:17:08.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:08.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:08.232" endtime="20240910 18:17:08.232"/>
</kw>
<status status="PASS" starttime="20240910 18:17:08.182" endtime="20240910 18:17:08.232"/>
</kw>
<msg timestamp="20240910 18:17:08.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:08.182" endtime="20240910 18:17:08.232"/>
</kw>
<status status="PASS" starttime="20240910 18:17:08.182" endtime="20240910 18:17:08.232"/>
</kw>
<status status="PASS" starttime="20240910 18:17:08.181" endtime="20240910 18:17:08.232"/>
</kw>
<status status="PASS" starttime="20240910 18:17:08.171" endtime="20240910 18:17:08.232"/>
</kw>
<status status="PASS" starttime="20240910 18:17:08.171" endtime="20240910 18:17:08.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:08.235" level="INFO">Running command 'ozone sh bucket link 23424-source/bucket1 23424-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:11.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:11.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:17:08.234" endtime="20240910 18:17:11.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:11.734" level="INFO"/>
<status status="PASS" starttime="20240910 18:17:11.733" endtime="20240910 18:17:11.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:11.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:11.734" endtime="20240910 18:17:11.735"/>
</kw>
<status status="PASS" starttime="20240910 18:17:08.233" endtime="20240910 18:17:11.735"/>
</kw>
<msg timestamp="20240910 18:17:11.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:08.233" endtime="20240910 18:17:11.735"/>
</kw>
<status status="PASS" starttime="20240910 18:17:08.233" endtime="20240910 18:17:11.735"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:11.738" level="INFO">Running command 'ozone sh key put 23424-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:16.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:16.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:17:11.736" endtime="20240910 18:17:16.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:16.918" level="INFO"/>
<status status="PASS" starttime="20240910 18:17:16.917" endtime="20240910 18:17:16.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:16.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:16.918" endtime="20240910 18:17:16.918"/>
</kw>
<status status="PASS" starttime="20240910 18:17:11.736" endtime="20240910 18:17:16.919"/>
</kw>
<msg timestamp="20240910 18:17:16.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:11.736" endtime="20240910 18:17:16.919"/>
</kw>
<status status="PASS" starttime="20240910 18:17:11.735" endtime="20240910 18:17:16.919"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:17:16.920" level="INFO">${postfix} = 79199</msg>
<status status="PASS" starttime="20240910 18:17:16.920" endtime="20240910 18:17:16.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:17:16.921" level="INFO">${tmpfile} = /tmp/tempkey-79199</msg>
<status status="PASS" starttime="20240910 18:17:16.920" endtime="20240910 18:17:16.921"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:16.924" level="INFO">Running command 'ozone sh key get 23424-target/link1/key3 /tmp/tempkey-79199 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:21.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:21.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:17:16.922" endtime="20240910 18:17:21.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:21.835" level="INFO"/>
<status status="PASS" starttime="20240910 18:17:21.834" endtime="20240910 18:17:21.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:21.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:21.835" endtime="20240910 18:17:21.835"/>
</kw>
<status status="PASS" starttime="20240910 18:17:16.922" endtime="20240910 18:17:21.835"/>
</kw>
<msg timestamp="20240910 18:17:21.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:16.921" endtime="20240910 18:17:21.836"/>
</kw>
<status status="PASS" starttime="20240910 18:17:16.921" endtime="20240910 18:17:21.836"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240910 18:17:21.838" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-79199 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:21.841" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240910 18:17:21.836" endtime="20240910 18:17:21.841"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:21.844" level="INFO">Running command 'rm -f /tmp/tempkey-79199 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:21.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:21.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:17:21.842" endtime="20240910 18:17:21.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:21.848" level="INFO"/>
<status status="PASS" starttime="20240910 18:17:21.848" endtime="20240910 18:17:21.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:21.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:21.848" endtime="20240910 18:17:21.849"/>
</kw>
<status status="PASS" starttime="20240910 18:17:21.842" endtime="20240910 18:17:21.849"/>
</kw>
<msg timestamp="20240910 18:17:21.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:21.841" endtime="20240910 18:17:21.849"/>
</kw>
<status status="PASS" starttime="20240910 18:17:21.841" endtime="20240910 18:17:21.849"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240910 18:17:21.849" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240910 18:17:21.849" endtime="20240910 18:17:21.849"/>
</kw>
<msg timestamp="20240910 18:17:21.849" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240910 18:17:16.919" endtime="20240910 18:17:21.850"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240910 18:17:21.850" endtime="20240910 18:17:21.850"/>
</kw>
<status status="PASS" starttime="20240910 18:17:16.919" endtime="20240910 18:17:21.850"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:17:08.170" endtime="20240910 18:17:21.850"/>
</test>
<test id="s1-s2-s3-t17" name="Source bucket not affected by deleting link" line="218">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:17:21.852" endtime="20240910 18:17:21.852"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:21.855" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:21.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:21.858" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:17:21.853" endtime="20240910 18:17:21.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:21.859" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:17:21.859" endtime="20240910 18:17:21.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:21.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:21.859" endtime="20240910 18:17:21.859"/>
</kw>
<status status="PASS" starttime="20240910 18:17:21.853" endtime="20240910 18:17:21.860"/>
</kw>
<msg timestamp="20240910 18:17:21.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:21.853" endtime="20240910 18:17:21.860"/>
</kw>
<msg timestamp="20240910 18:17:21.860" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:17:21.852" endtime="20240910 18:17:21.860"/>
</kw>
<msg timestamp="20240910 18:17:21.860" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:17:21.852" endtime="20240910 18:17:21.860"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:17:21.861" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:17:21.860" endtime="20240910 18:17:21.861"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:21.864" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:21.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:21.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:17:21.862" endtime="20240910 18:17:21.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:21.890" level="INFO"/>
<status status="PASS" starttime="20240910 18:17:21.889" endtime="20240910 18:17:21.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:21.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:21.890" endtime="20240910 18:17:21.890"/>
</kw>
<status status="PASS" starttime="20240910 18:17:21.862" endtime="20240910 18:17:21.890"/>
</kw>
<msg timestamp="20240910 18:17:21.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:21.861" endtime="20240910 18:17:21.890"/>
</kw>
<status status="PASS" starttime="20240910 18:17:21.861" endtime="20240910 18:17:21.890"/>
</kw>
<status status="PASS" starttime="20240910 18:17:21.861" endtime="20240910 18:17:21.891"/>
</kw>
<status status="PASS" starttime="20240910 18:17:21.851" endtime="20240910 18:17:21.891"/>
</kw>
<status status="PASS" starttime="20240910 18:17:21.851" endtime="20240910 18:17:21.891"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:21.894" level="INFO">Running command 'ozone sh bucket delete 23424-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:25.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:25.393" level="INFO">${output} = Bucket link1 is deleted</msg>
<status status="PASS" starttime="20240910 18:17:21.892" endtime="20240910 18:17:25.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:25.394" level="INFO">Bucket link1 is deleted</msg>
<status status="PASS" starttime="20240910 18:17:25.393" endtime="20240910 18:17:25.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:25.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:25.394" endtime="20240910 18:17:25.394"/>
</kw>
<status status="PASS" starttime="20240910 18:17:21.891" endtime="20240910 18:17:25.394"/>
</kw>
<msg timestamp="20240910 18:17:25.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:21.891" endtime="20240910 18:17:25.394"/>
</kw>
<status status="PASS" starttime="20240910 18:17:21.891" endtime="20240910 18:17:25.395"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:25.398" level="INFO">Running command 'ozone sh bucket list 23424-target 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:29.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:29.234" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "23424-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20240910 18:17:25.396" endtime="20240910 18:17:29.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:29.235" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "23424-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2024-09-10T18:16:18.590Z",
  "modificationTime" : "2024-09-10T18:16:18.590Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "23424-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2024-09-10T18:12:57.160Z",
  "modificationTime" : "2024-09-10T18:12:57.160Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "23424-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2024-09-10T18:12:35.749Z",
  "modificationTime" : "2024-09-10T18:12:35.749Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "23424-target",
  "bucketName" : "link2",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2024-09-10T18:16:11.618Z",
  "modificationTime" : "2024-09-10T18:16:11.618Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "23424-target",
  "bucketName" : "link3",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-09-10T18:17:11.608Z",
  "modificationTime" : "2024-09-10T18:17:11.608Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "23424-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2024-09-10T18:12:42.803Z",
  "modificationTime" : "2024-09-10T18:12:42.803Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "23424-target",
  "bucketName" : "readable-link2",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2024-09-10T18:12:46.455Z",
  "modificationTime" : "2024-09-10T18:12:46.455Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20240910 18:17:29.235" endtime="20240910 18:17:29.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:29.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:29.236" endtime="20240910 18:17:29.236"/>
</kw>
<status status="PASS" starttime="20240910 18:17:25.395" endtime="20240910 18:17:29.236"/>
</kw>
<msg timestamp="20240910 18:17:29.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:25.395" endtime="20240910 18:17:29.236"/>
</kw>
<msg timestamp="20240910 18:17:29.237" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "23424-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20240910 18:17:25.395" endtime="20240910 18:17:29.237"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:17:29.237" endtime="20240910 18:17:29.237"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:29.240" level="INFO">Running command 'ozone sh key list 23424-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:32.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:32.946" level="INFO">${output} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20240910 18:17:29.238" endtime="20240910 18:17:32.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:32.947" level="INFO">.Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20240910 18:17:32.946" endtime="20240910 18:17:32.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:32.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:32.947" endtime="20240910 18:17:32.947"/>
</kw>
<status status="PASS" starttime="20240910 18:17:29.238" endtime="20240910 18:17:32.948"/>
</kw>
<msg timestamp="20240910 18:17:32.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:29.238" endtime="20240910 18:17:32.948"/>
</kw>
<msg timestamp="20240910 18:17:32.948" level="INFO">${source_list} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20240910 18:17:29.237" endtime="20240910 18:17:32.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:17:32.948" endtime="20240910 18:17:32.948"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:17:21.851" endtime="20240910 18:17:32.948"/>
</test>
<test id="s1-s2-s3-t18" name="Setting bucket property on link not allowed" line="225">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:17:32.950" endtime="20240910 18:17:32.950"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:32.954" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:32.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:32.958" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:17:32.952" endtime="20240910 18:17:32.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:32.958" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:17:32.958" endtime="20240910 18:17:32.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:32.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:32.959" endtime="20240910 18:17:32.959"/>
</kw>
<status status="PASS" starttime="20240910 18:17:32.952" endtime="20240910 18:17:32.959"/>
</kw>
<msg timestamp="20240910 18:17:32.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:32.951" endtime="20240910 18:17:32.959"/>
</kw>
<msg timestamp="20240910 18:17:32.959" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:17:32.951" endtime="20240910 18:17:32.959"/>
</kw>
<msg timestamp="20240910 18:17:32.960" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:17:32.951" endtime="20240910 18:17:32.960"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:17:32.960" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:17:32.960" endtime="20240910 18:17:32.960"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:32.963" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:32.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:32.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:17:32.962" endtime="20240910 18:17:32.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:32.989" level="INFO"/>
<status status="PASS" starttime="20240910 18:17:32.989" endtime="20240910 18:17:32.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:32.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:32.989" endtime="20240910 18:17:32.990"/>
</kw>
<status status="PASS" starttime="20240910 18:17:32.961" endtime="20240910 18:17:32.990"/>
</kw>
<msg timestamp="20240910 18:17:32.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:32.961" endtime="20240910 18:17:32.990"/>
</kw>
<status status="PASS" starttime="20240910 18:17:32.961" endtime="20240910 18:17:32.990"/>
</kw>
<status status="PASS" starttime="20240910 18:17:32.960" endtime="20240910 18:17:32.990"/>
</kw>
<status status="PASS" starttime="20240910 18:17:32.950" endtime="20240910 18:17:32.990"/>
</kw>
<status status="PASS" starttime="20240910 18:17:32.950" endtime="20240910 18:17:32.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:32.993" level="INFO">Running command 'ozone sh bucket link 23424-source/bucket1 23424-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:36.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:36.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:17:32.991" endtime="20240910 18:17:36.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:36.426" level="INFO"/>
<status status="PASS" starttime="20240910 18:17:36.426" endtime="20240910 18:17:36.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:36.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:36.427" endtime="20240910 18:17:36.427"/>
</kw>
<status status="PASS" starttime="20240910 18:17:32.991" endtime="20240910 18:17:36.427"/>
</kw>
<msg timestamp="20240910 18:17:36.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:32.991" endtime="20240910 18:17:36.427"/>
</kw>
<status status="PASS" starttime="20240910 18:17:32.990" endtime="20240910 18:17:36.427"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:36.430" level="INFO">Running command 'ozone sh bucket setquota 23424-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:39.992" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:17:39.993" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20240910 18:17:36.428" endtime="20240910 18:17:39.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:39.993" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20240910 18:17:39.993" endtime="20240910 18:17:39.994"/>
</kw>
<msg timestamp="20240910 18:17:39.994" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20240910 18:17:36.428" endtime="20240910 18:17:39.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:17:39.994" endtime="20240910 18:17:39.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:39.997" level="INFO">Running command 'ozone sh bucket info 23424-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:43.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:43.514" level="INFO">${output} = {
  "volumeName" : "23424-target",
  "bucketName" : "link4",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-09-10T18:17:36.326Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20240910 18:17:39.995" endtime="20240910 18:17:43.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:43.515" level="INFO">{
  "volumeName" : "23424-target",
  "bucketName" : "link4",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-09-10T18:17:36.326Z",
  "modificationTime" : "2024-09-10T18:17:36.326Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20240910 18:17:43.514" endtime="20240910 18:17:43.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:43.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:43.515" endtime="20240910 18:17:43.516"/>
</kw>
<status status="PASS" starttime="20240910 18:17:39.995" endtime="20240910 18:17:43.516"/>
</kw>
<msg timestamp="20240910 18:17:43.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:39.995" endtime="20240910 18:17:43.516"/>
</kw>
<msg timestamp="20240910 18:17:43.516" level="INFO">${result} = {
  "volumeName" : "23424-target",
  "bucketName" : "link4",
  "sourceVolume" : "23424-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-09-10T18:17:36.326Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20240910 18:17:39.994" endtime="20240910 18:17:43.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:17:43.516" endtime="20240910 18:17:43.517"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20240910 18:17:32.949" endtime="20240910 18:17:43.517"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20240910 18:12:12.681" endtime="20240910 18:17:43.518"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:17:43.542" level="INFO">${random} = 11813</msg>
<status status="PASS" starttime="20240910 18:17:43.542" endtime="20240910 18:17:43.542"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:17:43.543" level="INFO">${prefix} = 11813</msg>
<status status="PASS" starttime="20240910 18:17:43.542" endtime="20240910 18:17:43.543"/>
</kw>
<status status="PASS" starttime="20240910 18:17:43.542" endtime="20240910 18:17:43.543"/>
</kw>
<test id="s1-s2-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:43.547" level="INFO">Running command 'ozone sh volume info /11813-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:46.848" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:17:46.848" level="INFO">${output} = VOLUME_NOT_FOUND Volume 11813-without-scheme is not found</msg>
<status status="PASS" starttime="20240910 18:17:43.545" endtime="20240910 18:17:46.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:46.849" level="INFO">VOLUME_NOT_FOUND Volume 11813-without-scheme is not found</msg>
<status status="PASS" starttime="20240910 18:17:46.848" endtime="20240910 18:17:46.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:46.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:46.849" endtime="20240910 18:17:46.849"/>
</kw>
<msg timestamp="20240910 18:17:46.850" level="INFO">${result} = VOLUME_NOT_FOUND Volume 11813-without-scheme is not found</msg>
<status status="PASS" starttime="20240910 18:17:43.544" endtime="20240910 18:17:46.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:17:46.850" endtime="20240910 18:17:46.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:46.853" level="INFO">Running command 'ozone sh volume create /11813-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:50.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:50.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:17:46.851" endtime="20240910 18:17:50.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:50.032" level="INFO"/>
<status status="PASS" starttime="20240910 18:17:50.031" endtime="20240910 18:17:50.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:50.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:50.032" endtime="20240910 18:17:50.032"/>
</kw>
<status status="PASS" starttime="20240910 18:17:46.851" endtime="20240910 18:17:50.033"/>
</kw>
<msg timestamp="20240910 18:17:50.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:46.851" endtime="20240910 18:17:50.033"/>
</kw>
<msg timestamp="20240910 18:17:50.033" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:17:46.850" endtime="20240910 18:17:50.033"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20240910 18:17:50.033" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20240910 18:17:50.033" endtime="20240910 18:17:50.033"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:50.037" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="11813-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:53.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:53.772" level="INFO">${output} = {
  "metadata": {},
  "name": "11813-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20240910 18:17:50.035" endtime="20240910 18:17:53.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:53.773" level="INFO">{
  "metadata": {},
  "name": "11813-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2024-09-10T18:17:49.922Z",
  "modificationTime": "2024-09-10T18:17:49.922Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20240910 18:17:53.772" endtime="20240910 18:17:53.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:53.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:53.773" endtime="20240910 18:17:53.774"/>
</kw>
<status status="PASS" starttime="20240910 18:17:50.034" endtime="20240910 18:17:53.774"/>
</kw>
<msg timestamp="20240910 18:17:53.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:50.034" endtime="20240910 18:17:53.774"/>
</kw>
<msg timestamp="20240910 18:17:53.774" level="INFO">${result} = {
  "metadata": {},
  "name": "11813-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20240910 18:17:50.033" endtime="20240910 18:17:53.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:17:53.774" endtime="20240910 18:17:53.775"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:53.778" level="INFO">Running command 'ozone sh volume setquota /11813-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:17:57.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:17:57.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:17:53.776" endtime="20240910 18:17:57.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:17:57.395" level="INFO"/>
<status status="PASS" starttime="20240910 18:17:57.395" endtime="20240910 18:17:57.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:17:57.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:17:57.395" endtime="20240910 18:17:57.396"/>
</kw>
<status status="PASS" starttime="20240910 18:17:53.775" endtime="20240910 18:17:57.396"/>
</kw>
<msg timestamp="20240910 18:17:57.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:53.775" endtime="20240910 18:17:57.396"/>
</kw>
<status status="PASS" starttime="20240910 18:17:53.775" endtime="20240910 18:17:57.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:17:57.400" level="INFO">Running command 'ozone sh volume info /11813-without-scheme | jq -r '. | select(.name=="11813-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:00.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:00.905" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:17:57.398" endtime="20240910 18:18:00.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:00.906" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20240910 18:18:00.905" endtime="20240910 18:18:00.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:00.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:00.906" endtime="20240910 18:18:00.906"/>
</kw>
<status status="PASS" starttime="20240910 18:17:57.397" endtime="20240910 18:18:00.906"/>
</kw>
<msg timestamp="20240910 18:18:00.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:17:57.397" endtime="20240910 18:18:00.906"/>
</kw>
<msg timestamp="20240910 18:18:00.907" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:17:57.396" endtime="20240910 18:18:00.907"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:18:00.907" endtime="20240910 18:18:00.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:00.910" level="INFO">Running command 'ozone sh bucket create /11813-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:04.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:04.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:00.908" endtime="20240910 18:18:04.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:04.366" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:04.365" endtime="20240910 18:18:04.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:04.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:04.366" endtime="20240910 18:18:04.366"/>
</kw>
<status status="PASS" starttime="20240910 18:18:00.908" endtime="20240910 18:18:04.366"/>
</kw>
<msg timestamp="20240910 18:18:04.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:00.908" endtime="20240910 18:18:04.367"/>
</kw>
<msg timestamp="20240910 18:18:04.367" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:18:00.907" endtime="20240910 18:18:04.367"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20240910 18:18:04.367" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20240910 18:18:04.367" endtime="20240910 18:18:04.367"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:04.371" level="INFO">Running command 'ozone sh bucket info /11813-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:18:08.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:08.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:04.369" endtime="20240910 18:18:08.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:08.039" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:08.039" endtime="20240910 18:18:08.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:08.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:08.039" endtime="20240910 18:18:08.040"/>
</kw>
<status status="PASS" starttime="20240910 18:18:04.368" endtime="20240910 18:18:08.040"/>
</kw>
<msg timestamp="20240910 18:18:08.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:04.368" endtime="20240910 18:18:08.040"/>
</kw>
<status status="PASS" starttime="20240910 18:18:04.367" endtime="20240910 18:18:08.040"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:08.043" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:08.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:08.048" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20240910 18:18:08.041" endtime="20240910 18:18:08.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:08.049" level="INFO">DISK</msg>
<status status="PASS" starttime="20240910 18:18:08.049" endtime="20240910 18:18:08.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:08.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:08.049" endtime="20240910 18:18:08.050"/>
</kw>
<status status="PASS" starttime="20240910 18:18:08.041" endtime="20240910 18:18:08.050"/>
</kw>
<msg timestamp="20240910 18:18:08.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:08.041" endtime="20240910 18:18:08.050"/>
</kw>
<msg timestamp="20240910 18:18:08.050" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20240910 18:18:08.040" endtime="20240910 18:18:08.050"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:18:08.050" endtime="20240910 18:18:08.051"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:08.054" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:08.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:08.059" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:18:08.052" endtime="20240910 18:18:08.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:08.059" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20240910 18:18:08.059" endtime="20240910 18:18:08.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:08.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:08.060" endtime="20240910 18:18:08.060"/>
</kw>
<status status="PASS" starttime="20240910 18:18:08.051" endtime="20240910 18:18:08.060"/>
</kw>
<msg timestamp="20240910 18:18:08.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:08.051" endtime="20240910 18:18:08.060"/>
</kw>
<msg timestamp="20240910 18:18:08.060" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:18:08.051" endtime="20240910 18:18:08.060"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:18:08.060" endtime="20240910 18:18:08.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:08.064" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:08.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:08.068" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20240910 18:18:08.062" endtime="20240910 18:18:08.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:08.069" level="INFO">100</msg>
<status status="PASS" starttime="20240910 18:18:08.069" endtime="20240910 18:18:08.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:08.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:08.069" endtime="20240910 18:18:08.070"/>
</kw>
<status status="PASS" starttime="20240910 18:18:08.061" endtime="20240910 18:18:08.070"/>
</kw>
<msg timestamp="20240910 18:18:08.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:08.061" endtime="20240910 18:18:08.070"/>
</kw>
<msg timestamp="20240910 18:18:08.070" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20240910 18:18:08.061" endtime="20240910 18:18:08.070"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:18:08.070" endtime="20240910 18:18:08.070"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:08.073" level="INFO">Running command 'ozone sh bucket setquota /11813-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:11.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:11.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:08.072" endtime="20240910 18:18:11.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:11.383" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:11.382" endtime="20240910 18:18:11.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:11.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:11.383" endtime="20240910 18:18:11.383"/>
</kw>
<status status="PASS" starttime="20240910 18:18:08.071" endtime="20240910 18:18:11.383"/>
</kw>
<msg timestamp="20240910 18:18:11.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:08.071" endtime="20240910 18:18:11.384"/>
</kw>
<status status="PASS" starttime="20240910 18:18:08.071" endtime="20240910 18:18:11.384"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:11.387" level="INFO">Running command 'ozone sh bucket info /11813-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:18:15.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:15.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:11.385" endtime="20240910 18:18:15.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:15.090" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:15.090" endtime="20240910 18:18:15.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:15.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:15.091" endtime="20240910 18:18:15.091"/>
</kw>
<status status="PASS" starttime="20240910 18:18:11.385" endtime="20240910 18:18:15.091"/>
</kw>
<msg timestamp="20240910 18:18:15.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:11.384" endtime="20240910 18:18:15.091"/>
</kw>
<status status="PASS" starttime="20240910 18:18:11.384" endtime="20240910 18:18:15.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:15.094" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:15.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:15.099" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20240910 18:18:15.093" endtime="20240910 18:18:15.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:15.100" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20240910 18:18:15.100" endtime="20240910 18:18:15.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:15.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:15.100" endtime="20240910 18:18:15.101"/>
</kw>
<status status="PASS" starttime="20240910 18:18:15.092" endtime="20240910 18:18:15.101"/>
</kw>
<msg timestamp="20240910 18:18:15.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:15.092" endtime="20240910 18:18:15.101"/>
</kw>
<msg timestamp="20240910 18:18:15.101" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20240910 18:18:15.091" endtime="20240910 18:18:15.101"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:18:15.101" endtime="20240910 18:18:15.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:15.105" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:15.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:15.109" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20240910 18:18:15.103" endtime="20240910 18:18:15.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:15.110" level="INFO">1000</msg>
<status status="PASS" starttime="20240910 18:18:15.110" endtime="20240910 18:18:15.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:15.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:15.110" endtime="20240910 18:18:15.111"/>
</kw>
<status status="PASS" starttime="20240910 18:18:15.102" endtime="20240910 18:18:15.111"/>
</kw>
<msg timestamp="20240910 18:18:15.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:15.102" endtime="20240910 18:18:15.111"/>
</kw>
<msg timestamp="20240910 18:18:15.111" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20240910 18:18:15.102" endtime="20240910 18:18:15.111"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:18:15.111" endtime="20240910 18:18:15.112"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:15.115" level="INFO">Running command 'ozone sh bucket list /11813-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:18.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:18.864" level="INFO">${output} = 11813-without-scheme</msg>
<status status="PASS" starttime="20240910 18:18:15.113" endtime="20240910 18:18:18.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:18.865" level="INFO">11813-without-scheme</msg>
<status status="PASS" starttime="20240910 18:18:18.864" endtime="20240910 18:18:18.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:18.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:18.865" endtime="20240910 18:18:18.866"/>
</kw>
<status status="PASS" starttime="20240910 18:18:15.113" endtime="20240910 18:18:18.866"/>
</kw>
<msg timestamp="20240910 18:18:18.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:15.112" endtime="20240910 18:18:18.866"/>
</kw>
<msg timestamp="20240910 18:18:18.866" level="INFO">${result} = 11813-without-scheme</msg>
<status status="PASS" starttime="20240910 18:18:15.112" endtime="20240910 18:18:18.866"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:18:18.866" endtime="20240910 18:18:18.866"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:18.870" level="INFO">Running command 'ozone sh key put /11813-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:23.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:23.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:18.868" endtime="20240910 18:18:23.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:23.737" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:23.736" endtime="20240910 18:18:23.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:23.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:23.737" endtime="20240910 18:18:23.738"/>
</kw>
<status status="PASS" starttime="20240910 18:18:18.868" endtime="20240910 18:18:23.738"/>
</kw>
<msg timestamp="20240910 18:18:23.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:18.868" endtime="20240910 18:18:23.738"/>
</kw>
<status status="PASS" starttime="20240910 18:18:18.867" endtime="20240910 18:18:23.738"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:23.741" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:23.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:23.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:23.739" endtime="20240910 18:18:23.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:23.745" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:23.745" endtime="20240910 18:18:23.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:23.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:23.745" endtime="20240910 18:18:23.746"/>
</kw>
<status status="PASS" starttime="20240910 18:18:23.739" endtime="20240910 18:18:23.746"/>
</kw>
<msg timestamp="20240910 18:18:23.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:23.738" endtime="20240910 18:18:23.746"/>
</kw>
<status status="PASS" starttime="20240910 18:18:23.738" endtime="20240910 18:18:23.746"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:23.749" level="INFO">Running command 'ozone sh key get /11813-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:28.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:28.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:23.747" endtime="20240910 18:18:28.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:28.652" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:28.651" endtime="20240910 18:18:28.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:28.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:28.652" endtime="20240910 18:18:28.653"/>
</kw>
<status status="PASS" starttime="20240910 18:18:23.747" endtime="20240910 18:18:28.653"/>
</kw>
<msg timestamp="20240910 18:18:28.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:23.747" endtime="20240910 18:18:28.653"/>
</kw>
<status status="PASS" starttime="20240910 18:18:23.746" endtime="20240910 18:18:28.653"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:28.656" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:28.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:28.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:28.654" endtime="20240910 18:18:28.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:28.660" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:28.659" endtime="20240910 18:18:28.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:28.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:28.660" endtime="20240910 18:18:28.660"/>
</kw>
<status status="PASS" starttime="20240910 18:18:28.654" endtime="20240910 18:18:28.660"/>
</kw>
<msg timestamp="20240910 18:18:28.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:28.653" endtime="20240910 18:18:28.660"/>
</kw>
<status status="PASS" starttime="20240910 18:18:28.653" endtime="20240910 18:18:28.660"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:28.663" level="INFO">Running command 'ozone sh key put -t RATIS /11813-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:33.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:33.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:28.662" endtime="20240910 18:18:33.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:33.788" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:33.787" endtime="20240910 18:18:33.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:33.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:33.788" endtime="20240910 18:18:33.788"/>
</kw>
<status status="PASS" starttime="20240910 18:18:28.661" endtime="20240910 18:18:33.788"/>
</kw>
<msg timestamp="20240910 18:18:33.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:28.661" endtime="20240910 18:18:33.789"/>
</kw>
<status status="PASS" starttime="20240910 18:18:28.661" endtime="20240910 18:18:33.789"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:33.792" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:33.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:33.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:33.790" endtime="20240910 18:18:33.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:33.796" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:33.796" endtime="20240910 18:18:33.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:33.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:33.797" endtime="20240910 18:18:33.797"/>
</kw>
<status status="PASS" starttime="20240910 18:18:33.789" endtime="20240910 18:18:33.797"/>
</kw>
<msg timestamp="20240910 18:18:33.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:33.789" endtime="20240910 18:18:33.797"/>
</kw>
<status status="PASS" starttime="20240910 18:18:33.789" endtime="20240910 18:18:33.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:33.800" level="INFO">Running command 'ozone sh key get /11813-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:38.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:38.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:33.799" endtime="20240910 18:18:38.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:38.774" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:38.773" endtime="20240910 18:18:38.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:38.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:38.774" endtime="20240910 18:18:38.774"/>
</kw>
<status status="PASS" starttime="20240910 18:18:33.798" endtime="20240910 18:18:38.774"/>
</kw>
<msg timestamp="20240910 18:18:38.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:33.798" endtime="20240910 18:18:38.774"/>
</kw>
<status status="PASS" starttime="20240910 18:18:33.798" endtime="20240910 18:18:38.775"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:38.778" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:38.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:38.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:38.776" endtime="20240910 18:18:38.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:38.781" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:38.781" endtime="20240910 18:18:38.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:38.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:38.781" endtime="20240910 18:18:38.782"/>
</kw>
<status status="PASS" starttime="20240910 18:18:38.775" endtime="20240910 18:18:38.782"/>
</kw>
<msg timestamp="20240910 18:18:38.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:38.775" endtime="20240910 18:18:38.782"/>
</kw>
<status status="PASS" starttime="20240910 18:18:38.775" endtime="20240910 18:18:38.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:38.785" level="INFO">Running command 'ozone sh key info /11813-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:42.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:42.680" level="INFO">${output} = {
  "volumeName": "11813-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:18:31.998Z",
  "modificationTime":...</msg>
<status status="PASS" starttime="20240910 18:18:38.783" endtime="20240910 18:18:42.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:42.681" level="INFO">{
  "volumeName": "11813-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:18:31.998Z",
  "modificationTime": "2024-09-10T18:18:33.357Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 113750153625600007,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 127,
  "file": true
}</msg>
<status status="PASS" starttime="20240910 18:18:42.681" endtime="20240910 18:18:42.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:42.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:42.681" endtime="20240910 18:18:42.682"/>
</kw>
<status status="PASS" starttime="20240910 18:18:38.783" endtime="20240910 18:18:42.682"/>
</kw>
<msg timestamp="20240910 18:18:42.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:38.783" endtime="20240910 18:18:42.682"/>
</kw>
<msg timestamp="20240910 18:18:42.682" level="INFO">${result} = {
  "volumeName": "11813-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:18:31.998Z",
  "modificationTime":...</msg>
<status status="PASS" starttime="20240910 18:18:38.782" endtime="20240910 18:18:42.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:18:42.682" endtime="20240910 18:18:42.683"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:42.686" level="INFO">Running command 'ozone sh key delete /11813-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:46.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:46.224" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20240910 18:18:42.684" endtime="20240910 18:18:46.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:46.225" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20240910 18:18:46.224" endtime="20240910 18:18:46.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:46.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:46.225" endtime="20240910 18:18:46.225"/>
</kw>
<status status="PASS" starttime="20240910 18:18:42.683" endtime="20240910 18:18:46.226"/>
</kw>
<msg timestamp="20240910 18:18:46.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:42.683" endtime="20240910 18:18:46.226"/>
</kw>
<status status="PASS" starttime="20240910 18:18:42.683" endtime="20240910 18:18:46.226"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:46.230" level="INFO">Running command 'ozone sh key cp /11813-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:51.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:51.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:46.227" endtime="20240910 18:18:51.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:51.496" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:51.495" endtime="20240910 18:18:51.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:51.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:51.496" endtime="20240910 18:18:51.496"/>
</kw>
<status status="PASS" starttime="20240910 18:18:46.227" endtime="20240910 18:18:51.496"/>
</kw>
<msg timestamp="20240910 18:18:51.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:46.226" endtime="20240910 18:18:51.496"/>
</kw>
<status status="PASS" starttime="20240910 18:18:46.226" endtime="20240910 18:18:51.497"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:51.500" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:51.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:51.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:51.498" endtime="20240910 18:18:51.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:51.504" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:51.504" endtime="20240910 18:18:51.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:51.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:51.504" endtime="20240910 18:18:51.505"/>
</kw>
<status status="PASS" starttime="20240910 18:18:51.497" endtime="20240910 18:18:51.505"/>
</kw>
<msg timestamp="20240910 18:18:51.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:51.497" endtime="20240910 18:18:51.505"/>
</kw>
<status status="PASS" starttime="20240910 18:18:51.497" endtime="20240910 18:18:51.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:51.508" level="INFO">Running command 'ozone sh key get /11813-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:56.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:56.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:51.506" endtime="20240910 18:18:56.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:56.401" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:56.401" endtime="20240910 18:18:56.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:56.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:56.402" endtime="20240910 18:18:56.402"/>
</kw>
<status status="PASS" starttime="20240910 18:18:51.506" endtime="20240910 18:18:56.402"/>
</kw>
<msg timestamp="20240910 18:18:56.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:51.505" endtime="20240910 18:18:56.402"/>
</kw>
<status status="PASS" starttime="20240910 18:18:51.505" endtime="20240910 18:18:56.402"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:56.406" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:18:56.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:18:56.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:18:56.404" endtime="20240910 18:18:56.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:18:56.409" level="INFO"/>
<status status="PASS" starttime="20240910 18:18:56.409" endtime="20240910 18:18:56.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:18:56.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:18:56.409" endtime="20240910 18:18:56.410"/>
</kw>
<status status="PASS" starttime="20240910 18:18:56.403" endtime="20240910 18:18:56.410"/>
</kw>
<msg timestamp="20240910 18:18:56.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:56.403" endtime="20240910 18:18:56.410"/>
</kw>
<status status="PASS" starttime="20240910 18:18:56.403" endtime="20240910 18:18:56.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:18:56.413" level="INFO">Running command 'ozone sh key delete /11813-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:00.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:00.049" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20240910 18:18:56.411" endtime="20240910 18:19:00.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:00.050" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20240910 18:19:00.049" endtime="20240910 18:19:00.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:00.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:00.050" endtime="20240910 18:19:00.051"/>
</kw>
<status status="PASS" starttime="20240910 18:18:56.411" endtime="20240910 18:19:00.051"/>
</kw>
<msg timestamp="20240910 18:19:00.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:18:56.411" endtime="20240910 18:19:00.051"/>
</kw>
<status status="PASS" starttime="20240910 18:18:56.410" endtime="20240910 18:19:00.051"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:00.054" level="INFO">Running command 'ozone sh key get /11813-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:03.283" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:19:03.283" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20240910 18:19:00.052" endtime="20240910 18:19:03.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:03.284" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20240910 18:19:03.283" endtime="20240910 18:19:03.284"/>
</kw>
<msg timestamp="20240910 18:19:03.285" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20240910 18:19:00.051" endtime="20240910 18:19:03.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:19:03.285" endtime="20240910 18:19:03.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:03.288" level="INFO">Running command 'ozone sh key get --force /11813-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:08.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:08.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:19:03.286" endtime="20240910 18:19:08.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:08.406" level="INFO"/>
<status status="PASS" starttime="20240910 18:19:08.405" endtime="20240910 18:19:08.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:08.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:08.406" endtime="20240910 18:19:08.406"/>
</kw>
<status status="PASS" starttime="20240910 18:19:03.286" endtime="20240910 18:19:08.407"/>
</kw>
<msg timestamp="20240910 18:19:08.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:03.286" endtime="20240910 18:19:08.407"/>
</kw>
<msg timestamp="20240910 18:19:08.407" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:19:03.285" endtime="20240910 18:19:08.407"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:19:08.407" endtime="20240910 18:19:08.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:08.411" level="INFO">Running command 'ozone sh key info /11813-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:12.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:12.079" level="INFO">${output} = {
  "volumeName": "11813-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:18:21.987Z",
  "modificationTime": "2024...</msg>
<status status="PASS" starttime="20240910 18:19:08.409" endtime="20240910 18:19:12.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:12.080" level="INFO">{
  "volumeName": "11813-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:18:21.987Z",
  "modificationTime": "2024-09-10T18:18:23.308Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 113750153625600006,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 123,
  "file": true
}</msg>
<status status="PASS" starttime="20240910 18:19:12.080" endtime="20240910 18:19:12.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:12.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:12.080" endtime="20240910 18:19:12.081"/>
</kw>
<status status="PASS" starttime="20240910 18:19:08.408" endtime="20240910 18:19:12.081"/>
</kw>
<msg timestamp="20240910 18:19:12.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:08.408" endtime="20240910 18:19:12.081"/>
</kw>
<msg timestamp="20240910 18:19:12.081" level="INFO">${result} = {
  "volumeName": "11813-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:18:21.987Z",
  "modificationTime": "2024...</msg>
<status status="PASS" starttime="20240910 18:19:08.407" endtime="20240910 18:19:12.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:19:12.081" endtime="20240910 18:19:12.082"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:19:12.082" endtime="20240910 18:19:12.082"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:12.085" level="INFO">Running command 'ozone sh key list /11813-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:15.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:15.653" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20240910 18:19:12.083" endtime="20240910 18:19:15.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:15.654" level="INFO">key1</msg>
<status status="PASS" starttime="20240910 18:19:15.653" endtime="20240910 18:19:15.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:15.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:15.654" endtime="20240910 18:19:15.655"/>
</kw>
<status status="PASS" starttime="20240910 18:19:12.083" endtime="20240910 18:19:15.655"/>
</kw>
<msg timestamp="20240910 18:19:15.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:12.083" endtime="20240910 18:19:15.655"/>
</kw>
<msg timestamp="20240910 18:19:15.655" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20240910 18:19:12.082" endtime="20240910 18:19:15.655"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:19:15.655" endtime="20240910 18:19:15.656"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:15.659" level="INFO">Running command 'ozone sh key rename /11813-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:19.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:19.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:19:15.657" endtime="20240910 18:19:19.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:19.248" level="INFO"/>
<status status="PASS" starttime="20240910 18:19:19.247" endtime="20240910 18:19:19.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:19.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:19.248" endtime="20240910 18:19:19.249"/>
</kw>
<status status="PASS" starttime="20240910 18:19:15.656" endtime="20240910 18:19:19.250"/>
</kw>
<msg timestamp="20240910 18:19:19.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:15.656" endtime="20240910 18:19:19.250"/>
</kw>
<status status="PASS" starttime="20240910 18:19:15.656" endtime="20240910 18:19:19.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:19.253" level="INFO">Running command 'ozone sh key list /11813-without-scheme/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:22.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:22.789" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20240910 18:19:19.251" endtime="20240910 18:19:22.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:22.790" level="INFO">key2</msg>
<status status="PASS" starttime="20240910 18:19:22.789" endtime="20240910 18:19:22.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:22.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:22.790" endtime="20240910 18:19:22.790"/>
</kw>
<status status="PASS" starttime="20240910 18:19:19.251" endtime="20240910 18:19:22.790"/>
</kw>
<msg timestamp="20240910 18:19:22.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:19.251" endtime="20240910 18:19:22.790"/>
</kw>
<msg timestamp="20240910 18:19:22.791" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20240910 18:19:19.250" endtime="20240910 18:19:22.791"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:19:22.791" endtime="20240910 18:19:22.791"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:22.794" level="INFO">Running command 'ozone sh key delete /11813-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:26.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:26.225" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20240910 18:19:22.792" endtime="20240910 18:19:26.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:26.226" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20240910 18:19:26.226" endtime="20240910 18:19:26.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:26.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:26.226" endtime="20240910 18:19:26.227"/>
</kw>
<status status="PASS" starttime="20240910 18:19:22.792" endtime="20240910 18:19:26.227"/>
</kw>
<msg timestamp="20240910 18:19:26.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:22.792" endtime="20240910 18:19:26.227"/>
</kw>
<status status="PASS" starttime="20240910 18:19:22.791" endtime="20240910 18:19:26.227"/>
</kw>
<status status="PASS" starttime="20240910 18:18:18.867" endtime="20240910 18:19:26.227"/>
</kw>
<status status="PASS" starttime="20240910 18:18:18.866" endtime="20240910 18:19:26.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:26.231" level="INFO">Running command 'ozone sh volume clrquota --space-quota /11813-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:29.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:29.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:19:26.229" endtime="20240910 18:19:29.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:29.801" level="INFO"/>
<status status="PASS" starttime="20240910 18:19:29.800" endtime="20240910 18:19:29.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:29.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:29.801" endtime="20240910 18:19:29.802"/>
</kw>
<status status="PASS" starttime="20240910 18:19:26.228" endtime="20240910 18:19:29.802"/>
</kw>
<msg timestamp="20240910 18:19:29.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:26.228" endtime="20240910 18:19:29.802"/>
</kw>
<status status="PASS" starttime="20240910 18:19:26.227" endtime="20240910 18:19:29.802"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:29.806" level="INFO">Running command 'ozone sh volume info /11813-without-scheme | jq -r '. | select(.name=="11813-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:33.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:33.502" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:19:29.803" endtime="20240910 18:19:33.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:33.503" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:19:33.502" endtime="20240910 18:19:33.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:33.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:33.503" endtime="20240910 18:19:33.504"/>
</kw>
<status status="PASS" starttime="20240910 18:19:29.803" endtime="20240910 18:19:33.504"/>
</kw>
<msg timestamp="20240910 18:19:33.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:29.803" endtime="20240910 18:19:33.504"/>
</kw>
<msg timestamp="20240910 18:19:33.504" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:19:29.802" endtime="20240910 18:19:33.504"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:19:33.504" endtime="20240910 18:19:33.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:33.508" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /11813-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:36.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:36.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:19:33.506" endtime="20240910 18:19:36.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:36.957" level="INFO"/>
<status status="PASS" starttime="20240910 18:19:36.957" endtime="20240910 18:19:36.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:36.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:36.957" endtime="20240910 18:19:36.958"/>
</kw>
<status status="PASS" starttime="20240910 18:19:33.506" endtime="20240910 18:19:36.958"/>
</kw>
<msg timestamp="20240910 18:19:36.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:33.505" endtime="20240910 18:19:36.958"/>
</kw>
<status status="PASS" starttime="20240910 18:19:33.505" endtime="20240910 18:19:36.958"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:36.962" level="INFO">Running command 'ozone sh volume info /11813-without-scheme | jq -r '. | select(.name=="11813-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:40.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:40.506" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:19:36.960" endtime="20240910 18:19:40.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:40.507" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:19:40.506" endtime="20240910 18:19:40.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:40.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:40.507" endtime="20240910 18:19:40.507"/>
</kw>
<status status="PASS" starttime="20240910 18:19:36.959" endtime="20240910 18:19:40.508"/>
</kw>
<msg timestamp="20240910 18:19:40.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:36.959" endtime="20240910 18:19:40.508"/>
</kw>
<msg timestamp="20240910 18:19:40.508" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:19:36.958" endtime="20240910 18:19:40.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:19:40.508" endtime="20240910 18:19:40.508"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:40.512" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /11813-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:44.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:44.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:19:40.510" endtime="20240910 18:19:44.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:44.315" level="INFO"/>
<status status="PASS" starttime="20240910 18:19:44.315" endtime="20240910 18:19:44.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:44.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:44.315" endtime="20240910 18:19:44.316"/>
</kw>
<status status="PASS" starttime="20240910 18:19:40.509" endtime="20240910 18:19:44.316"/>
</kw>
<msg timestamp="20240910 18:19:44.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:40.509" endtime="20240910 18:19:44.316"/>
</kw>
<status status="PASS" starttime="20240910 18:19:40.508" endtime="20240910 18:19:44.316"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:44.320" level="INFO">Running command 'ozone sh bucket info /11813-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:47.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:47.859" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:19:44.318" endtime="20240910 18:19:47.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:47.860" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:19:47.859" endtime="20240910 18:19:47.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:47.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:47.860" endtime="20240910 18:19:47.860"/>
</kw>
<status status="PASS" starttime="20240910 18:19:44.317" endtime="20240910 18:19:47.860"/>
</kw>
<msg timestamp="20240910 18:19:47.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:44.317" endtime="20240910 18:19:47.861"/>
</kw>
<msg timestamp="20240910 18:19:47.861" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:19:44.316" endtime="20240910 18:19:47.861"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:19:47.861" endtime="20240910 18:19:47.861"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:47.864" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /11813-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:51.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:51.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:19:47.862" endtime="20240910 18:19:51.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:51.285" level="INFO"/>
<status status="PASS" starttime="20240910 18:19:51.284" endtime="20240910 18:19:51.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:51.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:51.285" endtime="20240910 18:19:51.285"/>
</kw>
<status status="PASS" starttime="20240910 18:19:47.862" endtime="20240910 18:19:51.285"/>
</kw>
<msg timestamp="20240910 18:19:51.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:47.862" endtime="20240910 18:19:51.285"/>
</kw>
<status status="PASS" starttime="20240910 18:19:47.861" endtime="20240910 18:19:51.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:51.289" level="INFO">Running command 'ozone sh bucket info /11813-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:54.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:54.900" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:19:51.287" endtime="20240910 18:19:54.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:54.901" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:19:54.900" endtime="20240910 18:19:54.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:54.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:54.901" endtime="20240910 18:19:54.901"/>
</kw>
<status status="PASS" starttime="20240910 18:19:51.287" endtime="20240910 18:19:54.901"/>
</kw>
<msg timestamp="20240910 18:19:54.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:51.286" endtime="20240910 18:19:54.901"/>
</kw>
<msg timestamp="20240910 18:19:54.901" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:19:51.286" endtime="20240910 18:19:54.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:19:54.902" endtime="20240910 18:19:54.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:54.905" level="INFO">Running command 'ozone sh bucket delete -r --yes /11813-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:19:58.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:19:58.854" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:19:54.903" endtime="20240910 18:19:58.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:19:58.855" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:19:58.854" endtime="20240910 18:19:58.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:19:58.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:19:58.855" endtime="20240910 18:19:58.855"/>
</kw>
<status status="PASS" starttime="20240910 18:19:54.903" endtime="20240910 18:19:58.856"/>
</kw>
<msg timestamp="20240910 18:19:58.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:54.902" endtime="20240910 18:19:58.856"/>
</kw>
<status status="PASS" starttime="20240910 18:19:54.902" endtime="20240910 18:19:58.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:19:58.859" level="INFO">Running command 'ozone sh volume delete /11813-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:02.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:02.545" level="INFO">${output} = Volume 11813-without-scheme is deleted</msg>
<status status="PASS" starttime="20240910 18:19:58.857" endtime="20240910 18:20:02.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:02.545" level="INFO">Volume 11813-without-scheme is deleted</msg>
<status status="PASS" starttime="20240910 18:20:02.545" endtime="20240910 18:20:02.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:02.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:02.546" endtime="20240910 18:20:02.546"/>
</kw>
<status status="PASS" starttime="20240910 18:19:58.857" endtime="20240910 18:20:02.546"/>
</kw>
<msg timestamp="20240910 18:20:02.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:19:58.856" endtime="20240910 18:20:02.546"/>
</kw>
<status status="PASS" starttime="20240910 18:19:58.856" endtime="20240910 18:20:02.546"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:02.550" level="INFO">Running command 'ozone sh volume create /11813-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:06.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:06.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:02.548" endtime="20240910 18:20:06.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:06.033" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:06.032" endtime="20240910 18:20:06.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:06.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:06.033" endtime="20240910 18:20:06.033"/>
</kw>
<status status="PASS" starttime="20240910 18:20:02.547" endtime="20240910 18:20:06.033"/>
</kw>
<msg timestamp="20240910 18:20:06.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:02.547" endtime="20240910 18:20:06.034"/>
</kw>
<status status="PASS" starttime="20240910 18:20:02.547" endtime="20240910 18:20:06.034"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:06.037" level="INFO">Running command 'ozone sh volume info /11813-without-scheme &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:20:09.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:09.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:06.035" endtime="20240910 18:20:09.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:09.638" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:09.637" endtime="20240910 18:20:09.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:09.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:09.639" endtime="20240910 18:20:09.640"/>
</kw>
<status status="PASS" starttime="20240910 18:20:06.035" endtime="20240910 18:20:09.640"/>
</kw>
<msg timestamp="20240910 18:20:09.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:06.034" endtime="20240910 18:20:09.640"/>
</kw>
<status status="PASS" starttime="20240910 18:20:06.034" endtime="20240910 18:20:09.640"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:09.645" level="INFO">Running command 'jq -r '. | select(.name=="11813-without-scheme") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:09.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:09.650" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:20:09.642" endtime="20240910 18:20:09.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:09.651" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:20:09.651" endtime="20240910 18:20:09.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:09.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:09.652" endtime="20240910 18:20:09.652"/>
</kw>
<status status="PASS" starttime="20240910 18:20:09.641" endtime="20240910 18:20:09.652"/>
</kw>
<msg timestamp="20240910 18:20:09.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:09.641" endtime="20240910 18:20:09.652"/>
</kw>
<msg timestamp="20240910 18:20:09.652" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:20:09.640" endtime="20240910 18:20:09.652"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:20:09.653" endtime="20240910 18:20:09.653"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:09.656" level="INFO">Running command 'jq -r '. | select(.name=="11813-without-scheme") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:09.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:09.661" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:20:09.654" endtime="20240910 18:20:09.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:09.662" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:20:09.662" endtime="20240910 18:20:09.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:09.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:09.662" endtime="20240910 18:20:09.663"/>
</kw>
<status status="PASS" starttime="20240910 18:20:09.654" endtime="20240910 18:20:09.663"/>
</kw>
<msg timestamp="20240910 18:20:09.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:09.654" endtime="20240910 18:20:09.663"/>
</kw>
<msg timestamp="20240910 18:20:09.663" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:20:09.653" endtime="20240910 18:20:09.663"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:20:09.663" endtime="20240910 18:20:09.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:09.667" level="INFO">Running command 'ozone sh bucket create /11813-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:13.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:13.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:09.665" endtime="20240910 18:20:13.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:13.153" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:13.153" endtime="20240910 18:20:13.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:13.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:13.154" endtime="20240910 18:20:13.154"/>
</kw>
<status status="PASS" starttime="20240910 18:20:09.664" endtime="20240910 18:20:13.154"/>
</kw>
<msg timestamp="20240910 18:20:13.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:09.664" endtime="20240910 18:20:13.154"/>
</kw>
<status status="PASS" starttime="20240910 18:20:09.664" endtime="20240910 18:20:13.154"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:13.158" level="INFO">Running command 'ozone sh bucket info /11813-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:20:16.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:16.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:13.156" endtime="20240910 18:20:16.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:16.955" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:16.955" endtime="20240910 18:20:16.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:16.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:16.955" endtime="20240910 18:20:16.956"/>
</kw>
<status status="PASS" starttime="20240910 18:20:13.155" endtime="20240910 18:20:16.956"/>
</kw>
<msg timestamp="20240910 18:20:16.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:13.155" endtime="20240910 18:20:16.956"/>
</kw>
<status status="PASS" starttime="20240910 18:20:13.154" endtime="20240910 18:20:16.956"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:16.960" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:16.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:16.965" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:20:16.958" endtime="20240910 18:20:16.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:16.966" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:20:16.965" endtime="20240910 18:20:16.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:16.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:16.966" endtime="20240910 18:20:16.966"/>
</kw>
<status status="PASS" starttime="20240910 18:20:16.957" endtime="20240910 18:20:16.967"/>
</kw>
<msg timestamp="20240910 18:20:16.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:16.957" endtime="20240910 18:20:16.967"/>
</kw>
<msg timestamp="20240910 18:20:16.967" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:20:16.956" endtime="20240910 18:20:16.967"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:20:16.967" endtime="20240910 18:20:16.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:16.970" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:16.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:16.975" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:20:16.968" endtime="20240910 18:20:16.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:16.976" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:20:16.976" endtime="20240910 18:20:16.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:16.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:16.976" endtime="20240910 18:20:16.977"/>
</kw>
<status status="PASS" starttime="20240910 18:20:16.968" endtime="20240910 18:20:16.977"/>
</kw>
<msg timestamp="20240910 18:20:16.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:16.968" endtime="20240910 18:20:16.977"/>
</kw>
<msg timestamp="20240910 18:20:16.977" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:20:16.967" endtime="20240910 18:20:16.977"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:20:16.977" endtime="20240910 18:20:16.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:16.980" level="INFO">Running command 'ozone sh bucket delete /11813-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:20.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:20.607" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:20:16.978" endtime="20240910 18:20:20.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:20.608" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:20:20.608" endtime="20240910 18:20:20.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:20.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:20.609" endtime="20240910 18:20:20.609"/>
</kw>
<status status="PASS" starttime="20240910 18:20:16.978" endtime="20240910 18:20:20.609"/>
</kw>
<msg timestamp="20240910 18:20:20.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:16.978" endtime="20240910 18:20:20.609"/>
</kw>
<status status="PASS" starttime="20240910 18:20:16.978" endtime="20240910 18:20:20.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:20.613" level="INFO">Running command 'ozone sh volume delete /11813-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:24.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:24.200" level="INFO">${output} = Volume 11813-without-scheme is deleted</msg>
<status status="PASS" starttime="20240910 18:20:20.611" endtime="20240910 18:20:24.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:24.201" level="INFO">Volume 11813-without-scheme is deleted</msg>
<status status="PASS" starttime="20240910 18:20:24.201" endtime="20240910 18:20:24.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:24.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:24.201" endtime="20240910 18:20:24.202"/>
</kw>
<status status="PASS" starttime="20240910 18:20:20.610" endtime="20240910 18:20:24.202"/>
</kw>
<msg timestamp="20240910 18:20:24.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:20.610" endtime="20240910 18:20:24.202"/>
</kw>
<status status="PASS" starttime="20240910 18:20:20.610" endtime="20240910 18:20:24.202"/>
</kw>
<status status="PASS" starttime="20240910 18:17:43.543" endtime="20240910 18:20:24.202"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240910 18:17:43.543" endtime="20240910 18:20:24.203"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20240910 18:17:43.521" endtime="20240910 18:20:24.203"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:20:24.210" level="INFO">${random} = 95353</msg>
<status status="PASS" starttime="20240910 18:20:24.210" endtime="20240910 18:20:24.211"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:20:24.211" level="INFO">${prefix} = 95353</msg>
<status status="PASS" starttime="20240910 18:20:24.211" endtime="20240910 18:20:24.211"/>
</kw>
<status status="PASS" starttime="20240910 18:20:24.210" endtime="20240910 18:20:24.211"/>
</kw>
<test id="s1-s2-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:20:24.212" endtime="20240910 18:20:24.213"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:24.216" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:24.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:24.220" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:20:24.214" endtime="20240910 18:20:24.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:24.220" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:20:24.220" endtime="20240910 18:20:24.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:24.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:24.221" endtime="20240910 18:20:24.221"/>
</kw>
<status status="PASS" starttime="20240910 18:20:24.213" endtime="20240910 18:20:24.221"/>
</kw>
<msg timestamp="20240910 18:20:24.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:24.213" endtime="20240910 18:20:24.221"/>
</kw>
<msg timestamp="20240910 18:20:24.221" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:20:24.213" endtime="20240910 18:20:24.221"/>
</kw>
<msg timestamp="20240910 18:20:24.222" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:20:24.213" endtime="20240910 18:20:24.222"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:20:24.222" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:20:24.222" endtime="20240910 18:20:24.222"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:24.225" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:24.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:24.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:24.223" endtime="20240910 18:20:24.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:24.269" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:24.268" endtime="20240910 18:20:24.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:24.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:24.269" endtime="20240910 18:20:24.269"/>
</kw>
<status status="PASS" starttime="20240910 18:20:24.223" endtime="20240910 18:20:24.269"/>
</kw>
<msg timestamp="20240910 18:20:24.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:24.223" endtime="20240910 18:20:24.269"/>
</kw>
<status status="PASS" starttime="20240910 18:20:24.222" endtime="20240910 18:20:24.270"/>
</kw>
<status status="PASS" starttime="20240910 18:20:24.222" endtime="20240910 18:20:24.270"/>
</kw>
<status status="PASS" starttime="20240910 18:20:24.212" endtime="20240910 18:20:24.270"/>
</kw>
<status status="PASS" starttime="20240910 18:20:24.212" endtime="20240910 18:20:24.270"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:24.273" level="INFO">Running command 'ozone sh volume info o3://om:9862/95353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:27.830" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:20:27.830" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95353-with-host is not found</msg>
<status status="PASS" starttime="20240910 18:20:24.271" endtime="20240910 18:20:27.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:27.831" level="INFO">VOLUME_NOT_FOUND Volume 95353-with-host is not found</msg>
<status status="PASS" starttime="20240910 18:20:27.831" endtime="20240910 18:20:27.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:27.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:27.832" endtime="20240910 18:20:27.832"/>
</kw>
<msg timestamp="20240910 18:20:27.832" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95353-with-host is not found</msg>
<status status="PASS" starttime="20240910 18:20:24.270" endtime="20240910 18:20:27.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:20:27.833" endtime="20240910 18:20:27.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:27.836" level="INFO">Running command 'ozone sh volume create o3://om:9862/95353-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:31.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:31.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:27.834" endtime="20240910 18:20:31.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:31.415" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:31.415" endtime="20240910 18:20:31.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:31.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:31.415" endtime="20240910 18:20:31.416"/>
</kw>
<status status="PASS" starttime="20240910 18:20:27.834" endtime="20240910 18:20:31.416"/>
</kw>
<msg timestamp="20240910 18:20:31.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:27.834" endtime="20240910 18:20:31.416"/>
</kw>
<msg timestamp="20240910 18:20:31.416" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:20:27.833" endtime="20240910 18:20:31.416"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20240910 18:20:31.417" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20240910 18:20:31.416" endtime="20240910 18:20:31.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:31.420" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="95353-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:34.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:34.995" level="INFO">${output} = {
  "metadata": {},
  "name": "95353-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20240910 18:20:31.418" endtime="20240910 18:20:34.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:34.996" level="INFO">{
  "metadata": {},
  "name": "95353-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2024-09-10T18:20:31.312Z",
  "modificationTime": "2024-09-10T18:20:31.312Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20240910 18:20:34.996" endtime="20240910 18:20:34.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:34.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:34.996" endtime="20240910 18:20:34.997"/>
</kw>
<status status="PASS" starttime="20240910 18:20:31.418" endtime="20240910 18:20:34.997"/>
</kw>
<msg timestamp="20240910 18:20:34.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:31.417" endtime="20240910 18:20:34.997"/>
</kw>
<msg timestamp="20240910 18:20:34.997" level="INFO">${result} = {
  "metadata": {},
  "name": "95353-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20240910 18:20:31.417" endtime="20240910 18:20:34.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:20:34.997" endtime="20240910 18:20:34.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:35.001" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/95353-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:38.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:38.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:34.999" endtime="20240910 18:20:38.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:38.677" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:38.676" endtime="20240910 18:20:38.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:38.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:38.677" endtime="20240910 18:20:38.677"/>
</kw>
<status status="PASS" starttime="20240910 18:20:34.999" endtime="20240910 18:20:38.677"/>
</kw>
<msg timestamp="20240910 18:20:38.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:34.998" endtime="20240910 18:20:38.677"/>
</kw>
<status status="PASS" starttime="20240910 18:20:34.998" endtime="20240910 18:20:38.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:38.681" level="INFO">Running command 'ozone sh volume info o3://om:9862/95353-with-host | jq -r '. | select(.name=="95353-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:42.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:42.374" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:20:38.679" endtime="20240910 18:20:42.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:42.375" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20240910 18:20:42.374" endtime="20240910 18:20:42.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:42.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:42.375" endtime="20240910 18:20:42.375"/>
</kw>
<status status="PASS" starttime="20240910 18:20:38.679" endtime="20240910 18:20:42.375"/>
</kw>
<msg timestamp="20240910 18:20:42.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:38.678" endtime="20240910 18:20:42.375"/>
</kw>
<msg timestamp="20240910 18:20:42.376" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:20:38.678" endtime="20240910 18:20:42.376"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:20:42.376" endtime="20240910 18:20:42.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:42.379" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:46.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:46.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:42.377" endtime="20240910 18:20:46.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:46.029" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:46.028" endtime="20240910 18:20:46.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:46.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:46.029" endtime="20240910 18:20:46.029"/>
</kw>
<status status="PASS" starttime="20240910 18:20:42.377" endtime="20240910 18:20:46.030"/>
</kw>
<msg timestamp="20240910 18:20:46.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:42.377" endtime="20240910 18:20:46.030"/>
</kw>
<msg timestamp="20240910 18:20:46.030" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:20:42.376" endtime="20240910 18:20:46.030"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20240910 18:20:46.030" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20240910 18:20:46.030" endtime="20240910 18:20:46.030"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:46.034" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95353-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:20:49.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:49.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:46.032" endtime="20240910 18:20:49.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:49.666" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:49.665" endtime="20240910 18:20:49.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:49.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:49.666" endtime="20240910 18:20:49.667"/>
</kw>
<status status="PASS" starttime="20240910 18:20:46.031" endtime="20240910 18:20:49.667"/>
</kw>
<msg timestamp="20240910 18:20:49.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:46.031" endtime="20240910 18:20:49.667"/>
</kw>
<status status="PASS" starttime="20240910 18:20:46.031" endtime="20240910 18:20:49.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:49.671" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:49.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:49.676" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20240910 18:20:49.668" endtime="20240910 18:20:49.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:49.677" level="INFO">DISK</msg>
<status status="PASS" starttime="20240910 18:20:49.677" endtime="20240910 18:20:49.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:49.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:49.677" endtime="20240910 18:20:49.678"/>
</kw>
<status status="PASS" starttime="20240910 18:20:49.668" endtime="20240910 18:20:49.678"/>
</kw>
<msg timestamp="20240910 18:20:49.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:49.668" endtime="20240910 18:20:49.678"/>
</kw>
<msg timestamp="20240910 18:20:49.678" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20240910 18:20:49.667" endtime="20240910 18:20:49.678"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:20:49.678" endtime="20240910 18:20:49.678"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:49.682" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:49.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:49.686" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:20:49.680" endtime="20240910 18:20:49.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:49.687" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20240910 18:20:49.687" endtime="20240910 18:20:49.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:49.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:49.687" endtime="20240910 18:20:49.688"/>
</kw>
<status status="PASS" starttime="20240910 18:20:49.679" endtime="20240910 18:20:49.688"/>
</kw>
<msg timestamp="20240910 18:20:49.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:49.679" endtime="20240910 18:20:49.688"/>
</kw>
<msg timestamp="20240910 18:20:49.688" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:20:49.679" endtime="20240910 18:20:49.688"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:20:49.688" endtime="20240910 18:20:49.689"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:49.692" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:49.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:49.697" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20240910 18:20:49.690" endtime="20240910 18:20:49.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:49.697" level="INFO">100</msg>
<status status="PASS" starttime="20240910 18:20:49.697" endtime="20240910 18:20:49.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:49.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:49.698" endtime="20240910 18:20:49.698"/>
</kw>
<status status="PASS" starttime="20240910 18:20:49.689" endtime="20240910 18:20:49.698"/>
</kw>
<msg timestamp="20240910 18:20:49.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:49.689" endtime="20240910 18:20:49.698"/>
</kw>
<msg timestamp="20240910 18:20:49.698" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20240910 18:20:49.689" endtime="20240910 18:20:49.698"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:20:49.698" endtime="20240910 18:20:49.699"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:49.702" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/95353-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:53.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:53.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:49.700" endtime="20240910 18:20:53.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:53.605" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:53.605" endtime="20240910 18:20:53.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:53.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:53.606" endtime="20240910 18:20:53.606"/>
</kw>
<status status="PASS" starttime="20240910 18:20:49.700" endtime="20240910 18:20:53.606"/>
</kw>
<msg timestamp="20240910 18:20:53.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:49.699" endtime="20240910 18:20:53.606"/>
</kw>
<status status="PASS" starttime="20240910 18:20:49.699" endtime="20240910 18:20:53.606"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:53.610" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95353-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:20:57.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:57.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:20:53.608" endtime="20240910 18:20:57.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:57.250" level="INFO"/>
<status status="PASS" starttime="20240910 18:20:57.250" endtime="20240910 18:20:57.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:57.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:57.250" endtime="20240910 18:20:57.251"/>
</kw>
<status status="PASS" starttime="20240910 18:20:53.607" endtime="20240910 18:20:57.251"/>
</kw>
<msg timestamp="20240910 18:20:57.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:53.607" endtime="20240910 18:20:57.251"/>
</kw>
<status status="PASS" starttime="20240910 18:20:53.607" endtime="20240910 18:20:57.251"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:57.255" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:57.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:57.260" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20240910 18:20:57.253" endtime="20240910 18:20:57.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:57.260" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20240910 18:20:57.260" endtime="20240910 18:20:57.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:57.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:57.261" endtime="20240910 18:20:57.261"/>
</kw>
<status status="PASS" starttime="20240910 18:20:57.252" endtime="20240910 18:20:57.261"/>
</kw>
<msg timestamp="20240910 18:20:57.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:57.252" endtime="20240910 18:20:57.261"/>
</kw>
<msg timestamp="20240910 18:20:57.261" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20240910 18:20:57.251" endtime="20240910 18:20:57.261"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:20:57.261" endtime="20240910 18:20:57.262"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:57.265" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:20:57.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:20:57.269" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20240910 18:20:57.263" endtime="20240910 18:20:57.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:20:57.270" level="INFO">1000</msg>
<status status="PASS" starttime="20240910 18:20:57.270" endtime="20240910 18:20:57.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:20:57.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:20:57.270" endtime="20240910 18:20:57.271"/>
</kw>
<status status="PASS" starttime="20240910 18:20:57.262" endtime="20240910 18:20:57.271"/>
</kw>
<msg timestamp="20240910 18:20:57.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:57.262" endtime="20240910 18:20:57.271"/>
</kw>
<msg timestamp="20240910 18:20:57.271" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20240910 18:20:57.262" endtime="20240910 18:20:57.271"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:20:57.271" endtime="20240910 18:20:57.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:20:57.275" level="INFO">Running command 'ozone sh bucket list o3://om:9862/95353-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:01.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:01.039" level="INFO">${output} = 95353-with-host</msg>
<status status="PASS" starttime="20240910 18:20:57.273" endtime="20240910 18:21:01.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:01.040" level="INFO">95353-with-host</msg>
<status status="PASS" starttime="20240910 18:21:01.039" endtime="20240910 18:21:01.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:01.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:01.040" endtime="20240910 18:21:01.040"/>
</kw>
<status status="PASS" starttime="20240910 18:20:57.272" endtime="20240910 18:21:01.040"/>
</kw>
<msg timestamp="20240910 18:21:01.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:20:57.272" endtime="20240910 18:21:01.041"/>
</kw>
<msg timestamp="20240910 18:21:01.041" level="INFO">${result} = 95353-with-host</msg>
<status status="PASS" starttime="20240910 18:20:57.272" endtime="20240910 18:21:01.041"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:21:01.041" endtime="20240910 18:21:01.041"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:01.045" level="INFO">Running command 'ozone sh key put o3://om:9862/95353-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:06.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:06.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:01.043" endtime="20240910 18:21:06.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:06.246" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:06.246" endtime="20240910 18:21:06.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:06.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:06.246" endtime="20240910 18:21:06.247"/>
</kw>
<status status="PASS" starttime="20240910 18:21:01.043" endtime="20240910 18:21:06.247"/>
</kw>
<msg timestamp="20240910 18:21:06.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:01.042" endtime="20240910 18:21:06.247"/>
</kw>
<status status="PASS" starttime="20240910 18:21:01.042" endtime="20240910 18:21:06.247"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:06.251" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:06.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:06.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:06.249" endtime="20240910 18:21:06.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:06.255" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:06.255" endtime="20240910 18:21:06.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:06.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:06.255" endtime="20240910 18:21:06.256"/>
</kw>
<status status="PASS" starttime="20240910 18:21:06.248" endtime="20240910 18:21:06.256"/>
</kw>
<msg timestamp="20240910 18:21:06.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:06.248" endtime="20240910 18:21:06.256"/>
</kw>
<status status="PASS" starttime="20240910 18:21:06.247" endtime="20240910 18:21:06.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:06.259" level="INFO">Running command 'ozone sh key get o3://om:9862/95353-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:11.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:11.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:06.257" endtime="20240910 18:21:11.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:11.379" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:11.379" endtime="20240910 18:21:11.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:11.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:11.380" endtime="20240910 18:21:11.380"/>
</kw>
<status status="PASS" starttime="20240910 18:21:06.257" endtime="20240910 18:21:11.380"/>
</kw>
<msg timestamp="20240910 18:21:11.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:06.257" endtime="20240910 18:21:11.380"/>
</kw>
<status status="PASS" starttime="20240910 18:21:06.256" endtime="20240910 18:21:11.380"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:11.383" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:11.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:11.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:11.381" endtime="20240910 18:21:11.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:11.387" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:11.387" endtime="20240910 18:21:11.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:11.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:11.387" endtime="20240910 18:21:11.388"/>
</kw>
<status status="PASS" starttime="20240910 18:21:11.381" endtime="20240910 18:21:11.388"/>
</kw>
<msg timestamp="20240910 18:21:11.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:11.381" endtime="20240910 18:21:11.388"/>
</kw>
<status status="PASS" starttime="20240910 18:21:11.380" endtime="20240910 18:21:11.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:11.391" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/95353-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:16.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:16.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:11.389" endtime="20240910 18:21:16.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:16.417" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:16.416" endtime="20240910 18:21:16.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:16.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:16.417" endtime="20240910 18:21:16.417"/>
</kw>
<status status="PASS" starttime="20240910 18:21:11.389" endtime="20240910 18:21:16.417"/>
</kw>
<msg timestamp="20240910 18:21:16.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:11.389" endtime="20240910 18:21:16.418"/>
</kw>
<status status="PASS" starttime="20240910 18:21:11.388" endtime="20240910 18:21:16.418"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:16.421" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:16.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:16.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:16.419" endtime="20240910 18:21:16.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:16.425" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:16.425" endtime="20240910 18:21:16.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:16.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:16.426" endtime="20240910 18:21:16.426"/>
</kw>
<status status="PASS" starttime="20240910 18:21:16.418" endtime="20240910 18:21:16.426"/>
</kw>
<msg timestamp="20240910 18:21:16.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:16.418" endtime="20240910 18:21:16.426"/>
</kw>
<status status="PASS" starttime="20240910 18:21:16.418" endtime="20240910 18:21:16.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:16.429" level="INFO">Running command 'ozone sh key get o3://om:9862/95353-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:21.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:21.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:16.427" endtime="20240910 18:21:21.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:21.632" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:21.631" endtime="20240910 18:21:21.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:21.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:21.632" endtime="20240910 18:21:21.633"/>
</kw>
<status status="PASS" starttime="20240910 18:21:16.427" endtime="20240910 18:21:21.633"/>
</kw>
<msg timestamp="20240910 18:21:21.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:16.427" endtime="20240910 18:21:21.633"/>
</kw>
<status status="PASS" starttime="20240910 18:21:16.426" endtime="20240910 18:21:21.633"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:21.636" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:21.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:21.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:21.634" endtime="20240910 18:21:21.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:21.640" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:21.639" endtime="20240910 18:21:21.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:21.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:21.640" endtime="20240910 18:21:21.641"/>
</kw>
<status status="PASS" starttime="20240910 18:21:21.634" endtime="20240910 18:21:21.641"/>
</kw>
<msg timestamp="20240910 18:21:21.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:21.633" endtime="20240910 18:21:21.641"/>
</kw>
<status status="PASS" starttime="20240910 18:21:21.633" endtime="20240910 18:21:21.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:21.644" level="INFO">Running command 'ozone sh key info o3://om:9862/95353-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:25.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:25.313" level="INFO">${output} = {
  "volumeName": "95353-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:21:14.750Z",
  "modificationTime": "202...</msg>
<status status="PASS" starttime="20240910 18:21:21.642" endtime="20240910 18:21:25.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:25.314" level="INFO">{
  "volumeName": "95353-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:21:14.750Z",
  "modificationTime": "2024-09-10T18:21:15.999Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 113750153625600010,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 183,
  "file": true
}</msg>
<status status="PASS" starttime="20240910 18:21:25.313" endtime="20240910 18:21:25.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:25.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:25.314" endtime="20240910 18:21:25.314"/>
</kw>
<status status="PASS" starttime="20240910 18:21:21.642" endtime="20240910 18:21:25.314"/>
</kw>
<msg timestamp="20240910 18:21:25.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:21.642" endtime="20240910 18:21:25.315"/>
</kw>
<msg timestamp="20240910 18:21:25.315" level="INFO">${result} = {
  "volumeName": "95353-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:21:14.750Z",
  "modificationTime": "202...</msg>
<status status="PASS" starttime="20240910 18:21:21.641" endtime="20240910 18:21:25.315"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:21:25.315" endtime="20240910 18:21:25.315"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:25.319" level="INFO">Running command 'ozone sh key delete o3://om:9862/95353-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:29.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:29.138" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20240910 18:21:25.316" endtime="20240910 18:21:29.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:29.139" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20240910 18:21:29.139" endtime="20240910 18:21:29.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:29.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:29.139" endtime="20240910 18:21:29.140"/>
</kw>
<status status="PASS" starttime="20240910 18:21:25.316" endtime="20240910 18:21:29.140"/>
</kw>
<msg timestamp="20240910 18:21:29.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:25.316" endtime="20240910 18:21:29.140"/>
</kw>
<status status="PASS" starttime="20240910 18:21:25.315" endtime="20240910 18:21:29.140"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:29.145" level="INFO">Running command 'ozone sh key cp o3://om:9862/95353-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:34.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:34.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:29.142" endtime="20240910 18:21:34.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:34.710" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:34.710" endtime="20240910 18:21:34.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:34.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:34.711" endtime="20240910 18:21:34.711"/>
</kw>
<status status="PASS" starttime="20240910 18:21:29.141" endtime="20240910 18:21:34.711"/>
</kw>
<msg timestamp="20240910 18:21:34.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:29.141" endtime="20240910 18:21:34.711"/>
</kw>
<status status="PASS" starttime="20240910 18:21:29.140" endtime="20240910 18:21:34.711"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:34.714" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:34.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:34.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:34.712" endtime="20240910 18:21:34.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:34.719" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:34.718" endtime="20240910 18:21:34.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:34.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:34.719" endtime="20240910 18:21:34.719"/>
</kw>
<status status="PASS" starttime="20240910 18:21:34.712" endtime="20240910 18:21:34.720"/>
</kw>
<msg timestamp="20240910 18:21:34.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:34.712" endtime="20240910 18:21:34.720"/>
</kw>
<status status="PASS" starttime="20240910 18:21:34.711" endtime="20240910 18:21:34.720"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:34.723" level="INFO">Running command 'ozone sh key get o3://om:9862/95353-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:39.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:39.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:34.721" endtime="20240910 18:21:39.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:39.521" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:39.520" endtime="20240910 18:21:39.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:39.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:39.521" endtime="20240910 18:21:39.521"/>
</kw>
<status status="PASS" starttime="20240910 18:21:34.721" endtime="20240910 18:21:39.521"/>
</kw>
<msg timestamp="20240910 18:21:39.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:34.720" endtime="20240910 18:21:39.521"/>
</kw>
<status status="PASS" starttime="20240910 18:21:34.720" endtime="20240910 18:21:39.521"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:39.525" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:39.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:39.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:39.523" endtime="20240910 18:21:39.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:39.528" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:39.528" endtime="20240910 18:21:39.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:39.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:39.528" endtime="20240910 18:21:39.529"/>
</kw>
<status status="PASS" starttime="20240910 18:21:39.522" endtime="20240910 18:21:39.529"/>
</kw>
<msg timestamp="20240910 18:21:39.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:39.522" endtime="20240910 18:21:39.529"/>
</kw>
<status status="PASS" starttime="20240910 18:21:39.522" endtime="20240910 18:21:39.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:39.532" level="INFO">Running command 'ozone sh key delete o3://om:9862/95353-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:42.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:42.982" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20240910 18:21:39.530" endtime="20240910 18:21:42.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:42.983" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20240910 18:21:42.982" endtime="20240910 18:21:42.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:42.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:42.983" endtime="20240910 18:21:42.983"/>
</kw>
<status status="PASS" starttime="20240910 18:21:39.530" endtime="20240910 18:21:42.983"/>
</kw>
<msg timestamp="20240910 18:21:42.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:39.530" endtime="20240910 18:21:42.984"/>
</kw>
<status status="PASS" starttime="20240910 18:21:39.529" endtime="20240910 18:21:42.984"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:42.987" level="INFO">Running command 'ozone sh key get o3://om:9862/95353-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:46.509" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:21:46.509" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20240910 18:21:42.984" endtime="20240910 18:21:46.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:46.510" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20240910 18:21:46.510" endtime="20240910 18:21:46.511"/>
</kw>
<msg timestamp="20240910 18:21:46.511" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20240910 18:21:42.984" endtime="20240910 18:21:46.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:21:46.511" endtime="20240910 18:21:46.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:46.515" level="INFO">Running command 'ozone sh key get --force o3://om:9862/95353-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:51.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:51.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:46.513" endtime="20240910 18:21:51.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:51.702" level="INFO"/>
<status status="PASS" starttime="20240910 18:21:51.701" endtime="20240910 18:21:51.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:51.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:51.702" endtime="20240910 18:21:51.702"/>
</kw>
<status status="PASS" starttime="20240910 18:21:46.512" endtime="20240910 18:21:51.703"/>
</kw>
<msg timestamp="20240910 18:21:51.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:46.512" endtime="20240910 18:21:51.703"/>
</kw>
<msg timestamp="20240910 18:21:51.703" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:21:46.511" endtime="20240910 18:21:51.703"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:21:51.703" endtime="20240910 18:21:51.703"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:51.707" level="INFO">Running command 'ozone sh key info o3://om:9862/95353-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:55.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:55.673" level="INFO">${output} = {
  "volumeName": "95353-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:21:04.600Z",
  "modificationTime": "2024-09-1...</msg>
<status status="PASS" starttime="20240910 18:21:51.705" endtime="20240910 18:21:55.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:55.674" level="INFO">{
  "volumeName": "95353-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:21:04.600Z",
  "modificationTime": "2024-09-10T18:21:05.795Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 113750153625600009,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 179,
  "file": true
}</msg>
<status status="PASS" starttime="20240910 18:21:55.674" endtime="20240910 18:21:55.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:55.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:55.674" endtime="20240910 18:21:55.675"/>
</kw>
<status status="PASS" starttime="20240910 18:21:51.704" endtime="20240910 18:21:55.675"/>
</kw>
<msg timestamp="20240910 18:21:55.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:51.704" endtime="20240910 18:21:55.675"/>
</kw>
<msg timestamp="20240910 18:21:55.675" level="INFO">${result} = {
  "volumeName": "95353-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:21:04.600Z",
  "modificationTime": "2024-09-1...</msg>
<status status="PASS" starttime="20240910 18:21:51.703" endtime="20240910 18:21:55.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:21:55.675" endtime="20240910 18:21:55.676"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:21:55.676" endtime="20240910 18:21:55.676"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:55.680" level="INFO">Running command 'ozone sh key list o3://om:9862/95353-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:21:59.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:21:59.732" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20240910 18:21:55.677" endtime="20240910 18:21:59.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:21:59.733" level="INFO">key1</msg>
<status status="PASS" starttime="20240910 18:21:59.732" endtime="20240910 18:21:59.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:21:59.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:21:59.733" endtime="20240910 18:21:59.733"/>
</kw>
<status status="PASS" starttime="20240910 18:21:55.677" endtime="20240910 18:21:59.734"/>
</kw>
<msg timestamp="20240910 18:21:59.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:55.677" endtime="20240910 18:21:59.734"/>
</kw>
<msg timestamp="20240910 18:21:59.734" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20240910 18:21:55.676" endtime="20240910 18:21:59.734"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:21:59.734" endtime="20240910 18:21:59.734"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:21:59.738" level="INFO">Running command 'ozone sh key rename o3://om:9862/95353-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:03.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:03.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:21:59.735" endtime="20240910 18:22:03.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:03.381" level="INFO"/>
<status status="PASS" starttime="20240910 18:22:03.381" endtime="20240910 18:22:03.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:03.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:03.382" endtime="20240910 18:22:03.383"/>
</kw>
<status status="PASS" starttime="20240910 18:21:59.735" endtime="20240910 18:22:03.383"/>
</kw>
<msg timestamp="20240910 18:22:03.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:21:59.735" endtime="20240910 18:22:03.383"/>
</kw>
<status status="PASS" starttime="20240910 18:21:59.734" endtime="20240910 18:22:03.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:03.387" level="INFO">Running command 'ozone sh key list o3://om:9862/95353-with-host/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:07.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:07.340" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20240910 18:22:03.384" endtime="20240910 18:22:07.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:07.341" level="INFO">key2</msg>
<status status="PASS" starttime="20240910 18:22:07.341" endtime="20240910 18:22:07.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:07.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:07.342" endtime="20240910 18:22:07.342"/>
</kw>
<status status="PASS" starttime="20240910 18:22:03.384" endtime="20240910 18:22:07.342"/>
</kw>
<msg timestamp="20240910 18:22:07.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:03.384" endtime="20240910 18:22:07.342"/>
</kw>
<msg timestamp="20240910 18:22:07.343" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20240910 18:22:03.383" endtime="20240910 18:22:07.343"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:22:07.343" endtime="20240910 18:22:07.343"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:07.346" level="INFO">Running command 'ozone sh key delete o3://om:9862/95353-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:11.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:11.353" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20240910 18:22:07.344" endtime="20240910 18:22:11.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:11.354" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20240910 18:22:11.354" endtime="20240910 18:22:11.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:11.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:11.354" endtime="20240910 18:22:11.355"/>
</kw>
<status status="PASS" starttime="20240910 18:22:07.344" endtime="20240910 18:22:11.355"/>
</kw>
<msg timestamp="20240910 18:22:11.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:07.344" endtime="20240910 18:22:11.355"/>
</kw>
<status status="PASS" starttime="20240910 18:22:07.343" endtime="20240910 18:22:11.355"/>
</kw>
<status status="PASS" starttime="20240910 18:21:01.042" endtime="20240910 18:22:11.355"/>
</kw>
<status status="PASS" starttime="20240910 18:21:01.041" endtime="20240910 18:22:11.355"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:11.359" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/95353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:15.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:15.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:22:11.357" endtime="20240910 18:22:15.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:15.048" level="INFO"/>
<status status="PASS" starttime="20240910 18:22:15.047" endtime="20240910 18:22:15.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:15.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:15.048" endtime="20240910 18:22:15.049"/>
</kw>
<status status="PASS" starttime="20240910 18:22:11.356" endtime="20240910 18:22:15.049"/>
</kw>
<msg timestamp="20240910 18:22:15.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:11.356" endtime="20240910 18:22:15.049"/>
</kw>
<status status="PASS" starttime="20240910 18:22:11.355" endtime="20240910 18:22:15.049"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:15.053" level="INFO">Running command 'ozone sh volume info o3://om:9862/95353-with-host | jq -r '. | select(.name=="95353-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:18.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:18.913" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:22:15.050" endtime="20240910 18:22:18.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:18.914" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:22:18.914" endtime="20240910 18:22:18.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:18.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:18.915" endtime="20240910 18:22:18.915"/>
</kw>
<status status="PASS" starttime="20240910 18:22:15.050" endtime="20240910 18:22:18.915"/>
</kw>
<msg timestamp="20240910 18:22:18.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:15.050" endtime="20240910 18:22:18.915"/>
</kw>
<msg timestamp="20240910 18:22:18.916" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:22:15.049" endtime="20240910 18:22:18.916"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:22:18.916" endtime="20240910 18:22:18.916"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:18.920" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/95353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:22.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:22.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:22:18.918" endtime="20240910 18:22:22.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:22.462" level="INFO"/>
<status status="PASS" starttime="20240910 18:22:22.462" endtime="20240910 18:22:22.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:22.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:22.462" endtime="20240910 18:22:22.463"/>
</kw>
<status status="PASS" starttime="20240910 18:22:18.917" endtime="20240910 18:22:22.463"/>
</kw>
<msg timestamp="20240910 18:22:22.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:18.917" endtime="20240910 18:22:22.463"/>
</kw>
<status status="PASS" starttime="20240910 18:22:18.916" endtime="20240910 18:22:22.463"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:22.466" level="INFO">Running command 'ozone sh volume info o3://om:9862/95353-with-host | jq -r '. | select(.name=="95353-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:26.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:26.311" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:22:22.464" endtime="20240910 18:22:26.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:26.312" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:22:26.312" endtime="20240910 18:22:26.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:26.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:26.312" endtime="20240910 18:22:26.313"/>
</kw>
<status status="PASS" starttime="20240910 18:22:22.464" endtime="20240910 18:22:26.313"/>
</kw>
<msg timestamp="20240910 18:22:26.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:22.464" endtime="20240910 18:22:26.313"/>
</kw>
<msg timestamp="20240910 18:22:26.313" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:22:22.463" endtime="20240910 18:22:26.313"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:22:26.313" endtime="20240910 18:22:26.314"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:26.317" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/95353-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:29.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:29.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:22:26.315" endtime="20240910 18:22:29.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:29.712" level="INFO"/>
<status status="PASS" starttime="20240910 18:22:29.711" endtime="20240910 18:22:29.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:29.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:29.712" endtime="20240910 18:22:29.712"/>
</kw>
<status status="PASS" starttime="20240910 18:22:26.315" endtime="20240910 18:22:29.712"/>
</kw>
<msg timestamp="20240910 18:22:29.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:26.314" endtime="20240910 18:22:29.713"/>
</kw>
<status status="PASS" starttime="20240910 18:22:26.314" endtime="20240910 18:22:29.713"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:29.716" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95353-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:33.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:33.506" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:22:29.714" endtime="20240910 18:22:33.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:33.507" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:22:33.507" endtime="20240910 18:22:33.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:33.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:33.507" endtime="20240910 18:22:33.508"/>
</kw>
<status status="PASS" starttime="20240910 18:22:29.714" endtime="20240910 18:22:33.508"/>
</kw>
<msg timestamp="20240910 18:22:33.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:29.713" endtime="20240910 18:22:33.508"/>
</kw>
<msg timestamp="20240910 18:22:33.508" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:22:29.713" endtime="20240910 18:22:33.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:22:33.509" endtime="20240910 18:22:33.509"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:33.512" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/95353-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:37.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:37.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:22:33.510" endtime="20240910 18:22:37.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:37.060" level="INFO"/>
<status status="PASS" starttime="20240910 18:22:37.060" endtime="20240910 18:22:37.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:37.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:37.060" endtime="20240910 18:22:37.061"/>
</kw>
<status status="PASS" starttime="20240910 18:22:33.510" endtime="20240910 18:22:37.061"/>
</kw>
<msg timestamp="20240910 18:22:37.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:33.509" endtime="20240910 18:22:37.061"/>
</kw>
<status status="PASS" starttime="20240910 18:22:33.509" endtime="20240910 18:22:37.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:37.065" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95353-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:40.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:40.717" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:22:37.063" endtime="20240910 18:22:40.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:40.718" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:22:40.718" endtime="20240910 18:22:40.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:40.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:40.718" endtime="20240910 18:22:40.719"/>
</kw>
<status status="PASS" starttime="20240910 18:22:37.062" endtime="20240910 18:22:40.719"/>
</kw>
<msg timestamp="20240910 18:22:40.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:37.062" endtime="20240910 18:22:40.719"/>
</kw>
<msg timestamp="20240910 18:22:40.719" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:22:37.061" endtime="20240910 18:22:40.719"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:22:40.719" endtime="20240910 18:22:40.720"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:40.723" level="INFO">Running command 'ozone sh bucket delete -r --yes o3://om:9862/95353-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:44.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:44.658" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:22:40.721" endtime="20240910 18:22:44.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:44.659" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:22:44.658" endtime="20240910 18:22:44.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:44.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:44.659" endtime="20240910 18:22:44.659"/>
</kw>
<status status="PASS" starttime="20240910 18:22:40.721" endtime="20240910 18:22:44.660"/>
</kw>
<msg timestamp="20240910 18:22:44.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:40.720" endtime="20240910 18:22:44.660"/>
</kw>
<status status="PASS" starttime="20240910 18:22:40.720" endtime="20240910 18:22:44.660"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:44.663" level="INFO">Running command 'ozone sh volume delete o3://om:9862/95353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:48.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:48.073" level="INFO">${output} = Volume 95353-with-host is deleted</msg>
<status status="PASS" starttime="20240910 18:22:44.661" endtime="20240910 18:22:48.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:48.074" level="INFO">Volume 95353-with-host is deleted</msg>
<status status="PASS" starttime="20240910 18:22:48.073" endtime="20240910 18:22:48.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:48.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:48.074" endtime="20240910 18:22:48.074"/>
</kw>
<status status="PASS" starttime="20240910 18:22:44.661" endtime="20240910 18:22:48.075"/>
</kw>
<msg timestamp="20240910 18:22:48.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:44.661" endtime="20240910 18:22:48.075"/>
</kw>
<status status="PASS" starttime="20240910 18:22:44.660" endtime="20240910 18:22:48.075"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:48.078" level="INFO">Running command 'ozone sh volume create o3://om:9862/95353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:51.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:51.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:22:48.076" endtime="20240910 18:22:51.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:51.737" level="INFO"/>
<status status="PASS" starttime="20240910 18:22:51.736" endtime="20240910 18:22:51.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:51.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:51.737" endtime="20240910 18:22:51.738"/>
</kw>
<status status="PASS" starttime="20240910 18:22:48.076" endtime="20240910 18:22:51.738"/>
</kw>
<msg timestamp="20240910 18:22:51.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:48.076" endtime="20240910 18:22:51.738"/>
</kw>
<status status="PASS" starttime="20240910 18:22:48.075" endtime="20240910 18:22:51.738"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:51.742" level="INFO">Running command 'ozone sh volume info o3://om:9862/95353-with-host &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:22:55.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:55.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:22:51.739" endtime="20240910 18:22:55.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:55.249" level="INFO"/>
<status status="PASS" starttime="20240910 18:22:55.248" endtime="20240910 18:22:55.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:55.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:55.249" endtime="20240910 18:22:55.250"/>
</kw>
<status status="PASS" starttime="20240910 18:22:51.739" endtime="20240910 18:22:55.250"/>
</kw>
<msg timestamp="20240910 18:22:55.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:51.739" endtime="20240910 18:22:55.250"/>
</kw>
<status status="PASS" starttime="20240910 18:22:51.738" endtime="20240910 18:22:55.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:55.253" level="INFO">Running command 'jq -r '. | select(.name=="95353-with-host") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:55.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:55.258" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:22:55.251" endtime="20240910 18:22:55.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:55.259" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:22:55.258" endtime="20240910 18:22:55.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:55.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:55.259" endtime="20240910 18:22:55.259"/>
</kw>
<status status="PASS" starttime="20240910 18:22:55.251" endtime="20240910 18:22:55.260"/>
</kw>
<msg timestamp="20240910 18:22:55.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:55.251" endtime="20240910 18:22:55.260"/>
</kw>
<msg timestamp="20240910 18:22:55.260" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:22:55.250" endtime="20240910 18:22:55.260"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:22:55.260" endtime="20240910 18:22:55.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:55.263" level="INFO">Running command 'jq -r '. | select(.name=="95353-with-host") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:55.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:55.268" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:22:55.261" endtime="20240910 18:22:55.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:55.268" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:22:55.268" endtime="20240910 18:22:55.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:55.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:55.269" endtime="20240910 18:22:55.269"/>
</kw>
<status status="PASS" starttime="20240910 18:22:55.261" endtime="20240910 18:22:55.269"/>
</kw>
<msg timestamp="20240910 18:22:55.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:55.261" endtime="20240910 18:22:55.269"/>
</kw>
<msg timestamp="20240910 18:22:55.269" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:22:55.260" endtime="20240910 18:22:55.269"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:22:55.270" endtime="20240910 18:22:55.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:55.273" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:22:58.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:22:58.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:22:55.271" endtime="20240910 18:22:58.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:22:58.699" level="INFO"/>
<status status="PASS" starttime="20240910 18:22:58.699" endtime="20240910 18:22:58.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:22:58.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:22:58.699" endtime="20240910 18:22:58.700"/>
</kw>
<status status="PASS" starttime="20240910 18:22:55.271" endtime="20240910 18:22:58.700"/>
</kw>
<msg timestamp="20240910 18:22:58.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:55.270" endtime="20240910 18:22:58.700"/>
</kw>
<status status="PASS" starttime="20240910 18:22:55.270" endtime="20240910 18:22:58.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:22:58.704" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95353-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:23:02.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:23:02.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:22:58.701" endtime="20240910 18:23:02.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:02.555" level="INFO"/>
<status status="PASS" starttime="20240910 18:23:02.555" endtime="20240910 18:23:02.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:02.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:02.556" endtime="20240910 18:23:02.556"/>
</kw>
<status status="PASS" starttime="20240910 18:22:58.701" endtime="20240910 18:23:02.556"/>
</kw>
<msg timestamp="20240910 18:23:02.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:22:58.701" endtime="20240910 18:23:02.556"/>
</kw>
<status status="PASS" starttime="20240910 18:22:58.700" endtime="20240910 18:23:02.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:02.560" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:02.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:23:02.565" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:23:02.558" endtime="20240910 18:23:02.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:02.566" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:23:02.566" endtime="20240910 18:23:02.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:02.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:02.566" endtime="20240910 18:23:02.567"/>
</kw>
<status status="PASS" starttime="20240910 18:23:02.557" endtime="20240910 18:23:02.567"/>
</kw>
<msg timestamp="20240910 18:23:02.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:23:02.557" endtime="20240910 18:23:02.567"/>
</kw>
<msg timestamp="20240910 18:23:02.567" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:23:02.557" endtime="20240910 18:23:02.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:23:02.567" endtime="20240910 18:23:02.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:02.570" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:02.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:23:02.575" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:23:02.569" endtime="20240910 18:23:02.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:02.576" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:23:02.576" endtime="20240910 18:23:02.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:02.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:02.576" endtime="20240910 18:23:02.577"/>
</kw>
<status status="PASS" starttime="20240910 18:23:02.568" endtime="20240910 18:23:02.577"/>
</kw>
<msg timestamp="20240910 18:23:02.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:23:02.568" endtime="20240910 18:23:02.577"/>
</kw>
<msg timestamp="20240910 18:23:02.577" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:23:02.567" endtime="20240910 18:23:02.577"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:23:02.577" endtime="20240910 18:23:02.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:02.580" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/95353-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:06.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:23:06.168" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:23:02.578" endtime="20240910 18:23:06.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:06.169" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:23:06.168" endtime="20240910 18:23:06.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:06.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:06.169" endtime="20240910 18:23:06.169"/>
</kw>
<status status="PASS" starttime="20240910 18:23:02.578" endtime="20240910 18:23:06.169"/>
</kw>
<msg timestamp="20240910 18:23:06.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:23:02.578" endtime="20240910 18:23:06.170"/>
</kw>
<status status="PASS" starttime="20240910 18:23:02.577" endtime="20240910 18:23:06.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:06.173" level="INFO">Running command 'ozone sh volume delete o3://om:9862/95353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:09.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:23:09.602" level="INFO">${output} = Volume 95353-with-host is deleted</msg>
<status status="PASS" starttime="20240910 18:23:06.171" endtime="20240910 18:23:09.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:09.603" level="INFO">Volume 95353-with-host is deleted</msg>
<status status="PASS" starttime="20240910 18:23:09.603" endtime="20240910 18:23:09.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:09.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:09.603" endtime="20240910 18:23:09.604"/>
</kw>
<status status="PASS" starttime="20240910 18:23:06.171" endtime="20240910 18:23:09.604"/>
</kw>
<msg timestamp="20240910 18:23:09.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:23:06.170" endtime="20240910 18:23:09.604"/>
</kw>
<status status="PASS" starttime="20240910 18:23:06.170" endtime="20240910 18:23:09.604"/>
</kw>
<status status="PASS" starttime="20240910 18:20:24.270" endtime="20240910 18:23:09.604"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240910 18:20:24.211" endtime="20240910 18:23:09.604"/>
</test>
<test id="s1-s2-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:23:09.606" endtime="20240910 18:23:09.606"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:09.610" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:09.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:23:09.613" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:23:09.608" endtime="20240910 18:23:09.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:09.614" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:23:09.614" endtime="20240910 18:23:09.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:09.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:09.614" endtime="20240910 18:23:09.615"/>
</kw>
<status status="PASS" starttime="20240910 18:23:09.608" endtime="20240910 18:23:09.615"/>
</kw>
<msg timestamp="20240910 18:23:09.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:23:09.607" endtime="20240910 18:23:09.615"/>
</kw>
<msg timestamp="20240910 18:23:09.615" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:23:09.607" endtime="20240910 18:23:09.615"/>
</kw>
<msg timestamp="20240910 18:23:09.615" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:23:09.607" endtime="20240910 18:23:09.615"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:23:09.616" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:23:09.616" endtime="20240910 18:23:09.616"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:09.619" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:09.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:23:09.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:23:09.617" endtime="20240910 18:23:09.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:09.695" level="INFO"/>
<status status="PASS" starttime="20240910 18:23:09.695" endtime="20240910 18:23:09.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:09.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:09.696" endtime="20240910 18:23:09.696"/>
</kw>
<status status="PASS" starttime="20240910 18:23:09.617" endtime="20240910 18:23:09.696"/>
</kw>
<msg timestamp="20240910 18:23:09.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:23:09.617" endtime="20240910 18:23:09.696"/>
</kw>
<status status="PASS" starttime="20240910 18:23:09.616" endtime="20240910 18:23:09.696"/>
</kw>
<status status="PASS" starttime="20240910 18:23:09.616" endtime="20240910 18:23:09.696"/>
</kw>
<status status="PASS" starttime="20240910 18:23:09.606" endtime="20240910 18:23:09.696"/>
</kw>
<status status="PASS" starttime="20240910 18:23:09.606" endtime="20240910 18:23:09.697"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 1.5GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:09.700" level="INFO">Running command 'ozone sh volume create o3://om:9862/95353-with-errors --space-quota 1.5GB 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:13.061" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:23:13.061" level="INFO">${output} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:09.698" endtime="20240910 18:23:13.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:13.062" level="INFO">1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:13.061" endtime="20240910 18:23:13.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:13.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:13.062" endtime="20240910 18:23:13.063"/>
</kw>
<msg timestamp="20240910 18:23:13.063" level="INFO">${result} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:09.697" endtime="20240910 18:23:13.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5GB is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:13.063" endtime="20240910 18:23:13.063"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:13.066" level="INFO">Running command 'ozone sh volume create o3://om:9862/95353-with-errors --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:16.526" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:23:16.526" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:13.064" endtime="20240910 18:23:16.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:16.527" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:16.527" endtime="20240910 18:23:16.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:16.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:16.527" endtime="20240910 18:23:16.528"/>
</kw>
<msg timestamp="20240910 18:23:16.528" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:13.063" endtime="20240910 18:23:16.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:16.528" endtime="20240910 18:23:16.528"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:16.531" level="INFO">Running command 'ozone sh volume create o3://om:9862/95353-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:19.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:23:19.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:23:16.529" endtime="20240910 18:23:19.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:19.787" level="INFO"/>
<status status="PASS" starttime="20240910 18:23:19.786" endtime="20240910 18:23:19.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:19.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:19.787" endtime="20240910 18:23:19.787"/>
</kw>
<status status="PASS" starttime="20240910 18:23:16.529" endtime="20240910 18:23:19.787"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:19.790" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:23.231" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:23:23.231" level="INFO">${output} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20240910 18:23:19.788" endtime="20240910 18:23:23.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:23.232" level="INFO">INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20240910 18:23:23.231" endtime="20240910 18:23:23.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:23.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:23.232" endtime="20240910 18:23:23.232"/>
</kw>
<msg timestamp="20240910 18:23:23.233" level="INFO">${result} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20240910 18:23:19.788" endtime="20240910 18:23:23.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:23.233" endtime="20240910 18:23:23.233"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --space-quota 1.5GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:23.236" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-with-errors/bucket1 --space-quota 1.5GB 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:26.599" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:23:26.599" level="INFO">${output} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:23.234" endtime="20240910 18:23:26.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:26.601" level="INFO">1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:26.600" endtime="20240910 18:23:26.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:26.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:26.601" endtime="20240910 18:23:26.601"/>
</kw>
<msg timestamp="20240910 18:23:26.601" level="INFO">${result} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:23.233" endtime="20240910 18:23:26.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5GB is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:26.602" endtime="20240910 18:23:26.602"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:26.605" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-with-errors/bucket1 --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:30.123" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:23:30.123" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:26.603" endtime="20240910 18:23:30.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:30.124" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:30.123" endtime="20240910 18:23:30.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:30.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:30.124" endtime="20240910 18:23:30.124"/>
</kw>
<msg timestamp="20240910 18:23:30.124" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:26.602" endtime="20240910 18:23:30.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:30.125" endtime="20240910 18:23:30.125"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:30.128" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:32.001" level="INFO">${rc} = 2</msg>
<msg timestamp="20240910 18:23:32.001" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20240910 18:23:30.126" endtime="20240910 18:23:32.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:32.002" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20240910 18:23:32.002" endtime="20240910 18:23:32.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:32.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:32.002" endtime="20240910 18:23:32.003"/>
</kw>
<msg timestamp="20240910 18:23:32.003" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20240910 18:23:30.125" endtime="20240910 18:23:32.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:32.003" endtime="20240910 18:23:32.003"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:32.006" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:35.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:23:35.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:23:32.004" endtime="20240910 18:23:35.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:35.508" level="INFO"/>
<status status="PASS" starttime="20240910 18:23:35.508" endtime="20240910 18:23:35.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:35.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:35.508" endtime="20240910 18:23:35.509"/>
</kw>
<status status="PASS" starttime="20240910 18:23:32.003" endtime="20240910 18:23:35.509"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:35.512" level="INFO">Running command 'ozone sh key info o3://om:9862/95353-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:39.080" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:23:39.080" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20240910 18:23:35.510" endtime="20240910 18:23:39.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:39.081" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20240910 18:23:39.080" endtime="20240910 18:23:39.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:39.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:39.081" endtime="20240910 18:23:39.081"/>
</kw>
<msg timestamp="20240910 18:23:39.081" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20240910 18:23:35.509" endtime="20240910 18:23:39.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:39.082" endtime="20240910 18:23:39.082"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:39.084" level="INFO">Running command 'ozone sh key put o3://om:9862/95353-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:40.988" level="INFO">${rc} = 2</msg>
<msg timestamp="20240910 18:23:40.988" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20240910 18:23:39.083" endtime="20240910 18:23:40.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:40.989" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream]
                        [--expectedGeneration=&lt;expectedGeneration&gt;]
                        [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt; &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
      --expectedGeneration=&lt;expectedGeneration&gt;
                   Store key only if it already exists and its generation
                     matches the value provided
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20240910 18:23:40.988" endtime="20240910 18:23:40.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:40.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:40.989" endtime="20240910 18:23:40.989"/>
</kw>
<msg timestamp="20240910 18:23:40.989" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20240910 18:23:39.082" endtime="20240910 18:23:40.990"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${volume}/bucket1 --space-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:40.992" level="INFO">Running command 'ozone sh bucket setquota 95353-with-errors/bucket1 --space-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:44.642" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:23:44.642" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:40.990" endtime="20240910 18:23:44.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:44.643" level="INFO">1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:44.642" endtime="20240910 18:23:44.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:44.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:44.643" endtime="20240910 18:23:44.644"/>
</kw>
<msg timestamp="20240910 18:23:44.644" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:40.990" endtime="20240910 18:23:44.644"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:44.644" endtime="20240910 18:23:44.645"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${volume}/bucket1 --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:44.648" level="INFO">Running command 'ozone sh bucket setquota 95353-with-errors/bucket1 --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:47.993" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:23:47.993" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:44.645" endtime="20240910 18:23:47.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:47.994" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:47.994" endtime="20240910 18:23:47.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:47.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:47.994" endtime="20240910 18:23:47.995"/>
</kw>
<msg timestamp="20240910 18:23:47.995" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:44.645" endtime="20240910 18:23:47.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:47.995" endtime="20240910 18:23:47.995"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:47.998" level="INFO">Running command 'ozone sh volume setquota 95353-with-errors --space-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:51.196" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:23:51.196" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:47.996" endtime="20240910 18:23:51.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:51.197" level="INFO">1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:51.196" endtime="20240910 18:23:51.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:51.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:51.198" endtime="20240910 18:23:51.198"/>
</kw>
<msg timestamp="20240910 18:23:51.198" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20240910 18:23:47.996" endtime="20240910 18:23:51.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:51.198" endtime="20240910 18:23:51.199"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:51.201" level="INFO">Running command 'ozone sh volume setquota 95353-with-errors --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:54.664" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:23:54.664" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:51.199" endtime="20240910 18:23:54.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:54.665" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:54.665" endtime="20240910 18:23:54.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:54.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:54.666" endtime="20240910 18:23:54.666"/>
</kw>
<msg timestamp="20240910 18:23:54.666" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20240910 18:23:51.199" endtime="20240910 18:23:54.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:23:54.666" endtime="20240910 18:23:54.667"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket setquota ${volume}/bucket1 --space-quota 2KB</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:54.670" level="INFO">Running command 'ozone sh bucket setquota 95353-with-errors/bucket1 --space-quota 2KB 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:23:58.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:23:58.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:23:54.667" endtime="20240910 18:23:58.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:23:58.264" level="INFO"/>
<status status="PASS" starttime="20240910 18:23:58.264" endtime="20240910 18:23:58.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:23:58.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:23:58.264" endtime="20240910 18:23:58.265"/>
</kw>
<status status="PASS" starttime="20240910 18:23:54.667" endtime="20240910 18:23:58.265"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:23:58.268" level="INFO">Running command 'ozone sh key put 95353-with-errors/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:01.718" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:24:01.718" level="INFO">${output} = QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 805306368 Bytes.</msg>
<status status="PASS" starttime="20240910 18:23:58.266" endtime="20240910 18:24:01.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:01.719" level="INFO">QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 805306368 Bytes.</msg>
<status status="PASS" starttime="20240910 18:24:01.718" endtime="20240910 18:24:01.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:01.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:01.719" endtime="20240910 18:24:01.719"/>
</kw>
<msg timestamp="20240910 18:24:01.719" level="INFO">${result} = QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 805306368 Bytes.</msg>
<status status="PASS" starttime="20240910 18:23:58.265" endtime="20240910 18:24:01.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_EXCEEDED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:24:01.719" endtime="20240910 18:24:01.720"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1KB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:01.722" level="INFO">Running command 'ozone sh volume setquota 95353-with-errors --space-quota 1KB 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:05.261" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:24:05.261" level="INFO">${output} = QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20240910 18:24:01.720" endtime="20240910 18:24:05.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:05.262" level="INFO">QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20240910 18:24:05.261" endtime="20240910 18:24:05.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:05.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:05.262" endtime="20240910 18:24:05.262"/>
</kw>
<msg timestamp="20240910 18:24:05.262" level="INFO">${result} = QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20240910 18:24:01.720" endtime="20240910 18:24:05.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_EXCEEDED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:24:05.263" endtime="20240910 18:24:05.263"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket clrquota ${volume}/bucket1 --space-quota</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:05.266" level="INFO">Running command 'ozone sh bucket clrquota 95353-with-errors/bucket1 --space-quota 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:08.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:08.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:24:05.263" endtime="20240910 18:24:08.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:08.672" level="INFO"/>
<status status="PASS" starttime="20240910 18:24:08.672" endtime="20240910 18:24:08.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:08.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:08.672" endtime="20240910 18:24:08.673"/>
</kw>
<status status="PASS" starttime="20240910 18:24:05.263" endtime="20240910 18:24:08.673"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:08.676" level="INFO">Running command 'ozone sh volume setquota 95353-with-errors --space-quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:12.020" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:24:12.020" level="INFO">${output} = QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20240910 18:24:08.674" endtime="20240910 18:24:12.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:12.021" level="INFO">QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20240910 18:24:12.020" endtime="20240910 18:24:12.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:12.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:12.021" endtime="20240910 18:24:12.021"/>
</kw>
<msg timestamp="20240910 18:24:12.021" level="INFO">${result} = QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20240910 18:24:08.673" endtime="20240910 18:24:12.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_ERROR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:24:12.021" endtime="20240910 18:24:12.022"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:12.024" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/95353-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:15.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:15.613" level="INFO">${output} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20240910 18:24:12.022" endtime="20240910 18:24:15.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:15.614" level="INFO">Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20240910 18:24:15.614" endtime="20240910 18:24:15.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:15.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:15.614" endtime="20240910 18:24:15.615"/>
</kw>
<status status="PASS" starttime="20240910 18:24:12.022" endtime="20240910 18:24:15.615"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume setquota ${volume} --space-quota 1GB</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:15.618" level="INFO">Running command 'ozone sh volume setquota 95353-with-errors --space-quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:19.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:19.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:24:15.616" endtime="20240910 18:24:19.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:19.189" level="INFO"/>
<status status="PASS" starttime="20240910 18:24:19.189" endtime="20240910 18:24:19.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:19.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:19.189" endtime="20240910 18:24:19.190"/>
</kw>
<status status="PASS" starttime="20240910 18:24:15.615" endtime="20240910 18:24:19.190"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:19.193" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:22.736" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:24:22.736" level="INFO">${output} = QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20240910 18:24:19.191" endtime="20240910 18:24:22.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:22.737" level="INFO">QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20240910 18:24:22.737" endtime="20240910 18:24:22.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:22.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:22.737" endtime="20240910 18:24:22.738"/>
</kw>
<msg timestamp="20240910 18:24:22.738" level="INFO">${result} = QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20240910 18:24:19.190" endtime="20240910 18:24:22.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_ERROR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:24:22.738" endtime="20240910 18:24:22.738"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:22.741" level="INFO">Running command 'ozone sh volume delete o3://om:9862/95353-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:26.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:26.104" level="INFO">${output} = Volume 95353-with-errors is deleted</msg>
<status status="PASS" starttime="20240910 18:24:22.739" endtime="20240910 18:24:26.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:26.105" level="INFO">Volume 95353-with-errors is deleted</msg>
<status status="PASS" starttime="20240910 18:24:26.105" endtime="20240910 18:24:26.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:26.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:26.105" endtime="20240910 18:24:26.106"/>
</kw>
<status status="PASS" starttime="20240910 18:24:22.738" endtime="20240910 18:24:26.106"/>
</kw>
<status status="PASS" starttime="20240910 18:23:09.697" endtime="20240910 18:24:26.106"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240910 18:23:09.605" endtime="20240910 18:24:26.106"/>
</test>
<test id="s1-s2-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:24:26.108" endtime="20240910 18:24:26.108"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:26.112" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:26.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:26.116" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:24:26.110" endtime="20240910 18:24:26.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:26.116" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:24:26.116" endtime="20240910 18:24:26.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:26.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:26.117" endtime="20240910 18:24:26.117"/>
</kw>
<status status="PASS" starttime="20240910 18:24:26.109" endtime="20240910 18:24:26.117"/>
</kw>
<msg timestamp="20240910 18:24:26.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:26.109" endtime="20240910 18:24:26.117"/>
</kw>
<msg timestamp="20240910 18:24:26.117" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:24:26.109" endtime="20240910 18:24:26.117"/>
</kw>
<msg timestamp="20240910 18:24:26.118" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:24:26.109" endtime="20240910 18:24:26.118"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:24:26.118" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:24:26.118" endtime="20240910 18:24:26.118"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:26.121" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:26.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:26.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:24:26.120" endtime="20240910 18:24:26.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:26.188" level="INFO"/>
<status status="PASS" starttime="20240910 18:24:26.187" endtime="20240910 18:24:26.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:26.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:26.188" endtime="20240910 18:24:26.188"/>
</kw>
<status status="PASS" starttime="20240910 18:24:26.119" endtime="20240910 18:24:26.188"/>
</kw>
<msg timestamp="20240910 18:24:26.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:26.119" endtime="20240910 18:24:26.188"/>
</kw>
<status status="PASS" starttime="20240910 18:24:26.119" endtime="20240910 18:24:26.189"/>
</kw>
<status status="PASS" starttime="20240910 18:24:26.118" endtime="20240910 18:24:26.189"/>
</kw>
<status status="PASS" starttime="20240910 18:24:26.108" endtime="20240910 18:24:26.189"/>
</kw>
<status status="PASS" starttime="20240910 18:24:26.107" endtime="20240910 18:24:26.189"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:26.193" level="INFO">Running command 'ozone sh volume create o3://om:9862/95353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:29.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:29.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:24:26.190" endtime="20240910 18:24:29.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:29.948" level="INFO"/>
<status status="PASS" starttime="20240910 18:24:29.948" endtime="20240910 18:24:29.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:29.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:29.949" endtime="20240910 18:24:29.949"/>
</kw>
<status status="PASS" starttime="20240910 18:24:26.190" endtime="20240910 18:24:29.949"/>
</kw>
<msg timestamp="20240910 18:24:29.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:26.190" endtime="20240910 18:24:29.949"/>
</kw>
<status status="PASS" starttime="20240910 18:24:26.189" endtime="20240910 18:24:29.949"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:29.953" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:33.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:33.353" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:24:29.951" endtime="20240910 18:24:33.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:33.354" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:24:33.353" endtime="20240910 18:24:33.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:33.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:33.354" endtime="20240910 18:24:33.354"/>
</kw>
<status status="PASS" starttime="20240910 18:24:29.950" endtime="20240910 18:24:33.354"/>
</kw>
<msg timestamp="20240910 18:24:33.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:29.950" endtime="20240910 18:24:33.355"/>
</kw>
<msg timestamp="20240910 18:24:33.355" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:24:29.950" endtime="20240910 18:24:33.355"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:24:33.355" endtime="20240910 18:24:33.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:33.359" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/95353-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:36.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:36.806" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20240910 18:24:33.357" endtime="20240910 18:24:36.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:36.807" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20240910 18:24:36.806" endtime="20240910 18:24:36.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:36.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:36.807" endtime="20240910 18:24:36.807"/>
</kw>
<status status="PASS" starttime="20240910 18:24:33.356" endtime="20240910 18:24:36.807"/>
</kw>
<msg timestamp="20240910 18:24:36.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:33.356" endtime="20240910 18:24:36.808"/>
</kw>
<msg timestamp="20240910 18:24:36.808" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20240910 18:24:33.356" endtime="20240910 18:24:36.808"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:36.811" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:40.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:40.568" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20240910 18:24:36.809" endtime="20240910 18:24:40.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:40.569" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:24:40.568" endtime="20240910 18:24:40.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:40.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:40.569" endtime="20240910 18:24:40.570"/>
</kw>
<status status="PASS" starttime="20240910 18:24:36.809" endtime="20240910 18:24:40.570"/>
</kw>
<msg timestamp="20240910 18:24:40.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:36.808" endtime="20240910 18:24:40.570"/>
</kw>
<msg timestamp="20240910 18:24:40.570" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20240910 18:24:36.808" endtime="20240910 18:24:40.570"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:24:40.570" endtime="20240910 18:24:40.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:40.575" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/95353-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:44.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:44.357" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:24:40.572" endtime="20240910 18:24:44.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:44.358" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:24:44.358" endtime="20240910 18:24:44.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:44.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:44.359" endtime="20240910 18:24:44.359"/>
</kw>
<status status="PASS" starttime="20240910 18:24:40.572" endtime="20240910 18:24:44.359"/>
</kw>
<msg timestamp="20240910 18:24:44.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:40.572" endtime="20240910 18:24:44.359"/>
</kw>
<msg timestamp="20240910 18:24:44.359" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:24:40.571" endtime="20240910 18:24:44.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:44.363" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:48.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:48.240" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20240910 18:24:44.361" endtime="20240910 18:24:48.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:48.241" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:24:48.241" endtime="20240910 18:24:48.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:48.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:48.242" endtime="20240910 18:24:48.242"/>
</kw>
<status status="PASS" starttime="20240910 18:24:44.360" endtime="20240910 18:24:48.242"/>
</kw>
<msg timestamp="20240910 18:24:48.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:44.360" endtime="20240910 18:24:48.242"/>
</kw>
<msg timestamp="20240910 18:24:48.242" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20240910 18:24:44.360" endtime="20240910 18:24:48.242"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:24:48.242" endtime="20240910 18:24:48.243"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:48.246" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/95353-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:51.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:51.395" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:24:48.244" endtime="20240910 18:24:51.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:51.396" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:24:51.396" endtime="20240910 18:24:51.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:51.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:51.396" endtime="20240910 18:24:51.397"/>
</kw>
<status status="PASS" starttime="20240910 18:24:48.244" endtime="20240910 18:24:51.397"/>
</kw>
<msg timestamp="20240910 18:24:51.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:48.244" endtime="20240910 18:24:51.397"/>
</kw>
<msg timestamp="20240910 18:24:51.397" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:24:48.243" endtime="20240910 18:24:51.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:51.400" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:55.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:55.037" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20240910 18:24:51.398" endtime="20240910 18:24:55.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:55.038" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:24:55.037" endtime="20240910 18:24:55.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:55.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:55.038" endtime="20240910 18:24:55.039"/>
</kw>
<status status="PASS" starttime="20240910 18:24:51.398" endtime="20240910 18:24:55.039"/>
</kw>
<msg timestamp="20240910 18:24:55.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:51.398" endtime="20240910 18:24:55.039"/>
</kw>
<msg timestamp="20240910 18:24:55.039" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20240910 18:24:51.397" endtime="20240910 18:24:55.039"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:24:55.039" endtime="20240910 18:24:55.039"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:24:55.040" endtime="20240910 18:24:55.040"/>
</kw>
<status status="PASS" starttime="20240910 18:24:26.189" endtime="20240910 18:24:55.040"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240910 18:24:26.107" endtime="20240910 18:24:55.040"/>
</test>
<test id="s1-s2-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:24:55.042" endtime="20240910 18:24:55.042"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:55.046" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:55.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:55.050" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:24:55.044" endtime="20240910 18:24:55.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:55.051" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:24:55.051" endtime="20240910 18:24:55.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:55.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:55.051" endtime="20240910 18:24:55.052"/>
</kw>
<status status="PASS" starttime="20240910 18:24:55.043" endtime="20240910 18:24:55.052"/>
</kw>
<msg timestamp="20240910 18:24:55.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:55.043" endtime="20240910 18:24:55.052"/>
</kw>
<msg timestamp="20240910 18:24:55.052" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:24:55.043" endtime="20240910 18:24:55.052"/>
</kw>
<msg timestamp="20240910 18:24:55.052" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:24:55.042" endtime="20240910 18:24:55.052"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:24:55.053" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:24:55.052" endtime="20240910 18:24:55.053"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:55.056" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:55.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:55.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:24:55.054" endtime="20240910 18:24:55.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:55.101" level="INFO"/>
<status status="PASS" starttime="20240910 18:24:55.100" endtime="20240910 18:24:55.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:55.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:55.101" endtime="20240910 18:24:55.101"/>
</kw>
<status status="PASS" starttime="20240910 18:24:55.054" endtime="20240910 18:24:55.101"/>
</kw>
<msg timestamp="20240910 18:24:55.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:55.054" endtime="20240910 18:24:55.101"/>
</kw>
<status status="PASS" starttime="20240910 18:24:55.053" endtime="20240910 18:24:55.101"/>
</kw>
<status status="PASS" starttime="20240910 18:24:55.053" endtime="20240910 18:24:55.102"/>
</kw>
<status status="PASS" starttime="20240910 18:24:55.042" endtime="20240910 18:24:55.102"/>
</kw>
<status status="PASS" starttime="20240910 18:24:55.041" endtime="20240910 18:24:55.102"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:55.105" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:24:58.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:24:58.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:24:55.103" endtime="20240910 18:24:58.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:24:58.830" level="INFO"/>
<status status="PASS" starttime="20240910 18:24:58.830" endtime="20240910 18:24:58.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:24:58.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:24:58.830" endtime="20240910 18:24:58.831"/>
</kw>
<status status="PASS" starttime="20240910 18:24:55.103" endtime="20240910 18:24:58.831"/>
</kw>
<msg timestamp="20240910 18:24:58.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:55.103" endtime="20240910 18:24:58.831"/>
</kw>
<status status="PASS" starttime="20240910 18:24:55.102" endtime="20240910 18:24:58.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:24:58.834" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:02.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:02.374" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:24:58.832" endtime="20240910 18:25:02.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:02.375" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:25:02.374" endtime="20240910 18:25:02.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:02.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:02.375" endtime="20240910 18:25:02.375"/>
</kw>
<status status="PASS" starttime="20240910 18:24:58.832" endtime="20240910 18:25:02.375"/>
</kw>
<msg timestamp="20240910 18:25:02.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:24:58.832" endtime="20240910 18:25:02.375"/>
</kw>
<msg timestamp="20240910 18:25:02.376" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:24:58.831" endtime="20240910 18:25:02.376"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:25:02.376" endtime="20240910 18:25:02.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:02.380" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/95353-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:05.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:05.985" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20240910 18:25:02.377" endtime="20240910 18:25:05.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:05.986" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20240910 18:25:05.985" endtime="20240910 18:25:05.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:05.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:05.986" endtime="20240910 18:25:05.986"/>
</kw>
<status status="PASS" starttime="20240910 18:25:02.377" endtime="20240910 18:25:05.987"/>
</kw>
<msg timestamp="20240910 18:25:05.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:02.377" endtime="20240910 18:25:05.987"/>
</kw>
<msg timestamp="20240910 18:25:05.987" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20240910 18:25:02.376" endtime="20240910 18:25:05.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:05.990" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:09.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:09.472" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:25:05.988" endtime="20240910 18:25:09.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:09.473" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:25:09.472" endtime="20240910 18:25:09.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:09.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:09.473" endtime="20240910 18:25:09.474"/>
</kw>
<status status="PASS" starttime="20240910 18:25:05.988" endtime="20240910 18:25:09.474"/>
</kw>
<msg timestamp="20240910 18:25:09.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:05.987" endtime="20240910 18:25:09.474"/>
</kw>
<msg timestamp="20240910 18:25:09.474" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:25:05.987" endtime="20240910 18:25:09.474"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:25:09.474" endtime="20240910 18:25:09.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:09.478" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/95353-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:12.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:12.972" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:25:09.476" endtime="20240910 18:25:12.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:12.973" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:25:12.972" endtime="20240910 18:25:12.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:12.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:12.973" endtime="20240910 18:25:12.973"/>
</kw>
<status status="PASS" starttime="20240910 18:25:09.476" endtime="20240910 18:25:12.973"/>
</kw>
<msg timestamp="20240910 18:25:12.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:09.476" endtime="20240910 18:25:12.974"/>
</kw>
<msg timestamp="20240910 18:25:12.974" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:25:09.475" endtime="20240910 18:25:12.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:12.977" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:16.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:16.498" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:25:12.975" endtime="20240910 18:25:16.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:16.499" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:25:16.499" endtime="20240910 18:25:16.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:16.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:16.500" endtime="20240910 18:25:16.500"/>
</kw>
<status status="PASS" starttime="20240910 18:25:12.975" endtime="20240910 18:25:16.500"/>
</kw>
<msg timestamp="20240910 18:25:16.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:12.974" endtime="20240910 18:25:16.500"/>
</kw>
<msg timestamp="20240910 18:25:16.500" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:25:12.974" endtime="20240910 18:25:16.500"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:25:16.501" endtime="20240910 18:25:16.501"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:16.504" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/95353-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:20.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:20.093" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:25:16.502" endtime="20240910 18:25:20.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:20.094" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:25:20.093" endtime="20240910 18:25:20.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:20.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:20.094" endtime="20240910 18:25:20.095"/>
</kw>
<status status="PASS" starttime="20240910 18:25:16.502" endtime="20240910 18:25:20.095"/>
</kw>
<msg timestamp="20240910 18:25:20.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:16.502" endtime="20240910 18:25:20.095"/>
</kw>
<msg timestamp="20240910 18:25:20.095" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:25:16.501" endtime="20240910 18:25:20.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:20.099" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:23.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:23.787" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20240910 18:25:20.097" endtime="20240910 18:25:23.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:23.788" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:25:23.788" endtime="20240910 18:25:23.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:23.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:23.789" endtime="20240910 18:25:23.789"/>
</kw>
<status status="PASS" starttime="20240910 18:25:20.096" endtime="20240910 18:25:23.789"/>
</kw>
<msg timestamp="20240910 18:25:23.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:20.096" endtime="20240910 18:25:23.789"/>
</kw>
<msg timestamp="20240910 18:25:23.789" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20240910 18:25:20.095" endtime="20240910 18:25:23.789"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:25:23.790" endtime="20240910 18:25:23.790"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:25:23.790" endtime="20240910 18:25:23.790"/>
</kw>
<status status="PASS" starttime="20240910 18:24:55.102" endtime="20240910 18:25:23.790"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240910 18:24:55.041" endtime="20240910 18:25:23.790"/>
</test>
<test id="s1-s2-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:25:23.792" endtime="20240910 18:25:23.792"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:23.796" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:23.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:23.799" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:25:23.794" endtime="20240910 18:25:23.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:23.800" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:25:23.799" endtime="20240910 18:25:23.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:23.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:23.800" endtime="20240910 18:25:23.801"/>
</kw>
<status status="PASS" starttime="20240910 18:25:23.793" endtime="20240910 18:25:23.801"/>
</kw>
<msg timestamp="20240910 18:25:23.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:23.793" endtime="20240910 18:25:23.801"/>
</kw>
<msg timestamp="20240910 18:25:23.801" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:25:23.793" endtime="20240910 18:25:23.801"/>
</kw>
<msg timestamp="20240910 18:25:23.801" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:25:23.792" endtime="20240910 18:25:23.801"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:25:23.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:25:23.801" endtime="20240910 18:25:23.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:23.805" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:23.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:23.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:25:23.803" endtime="20240910 18:25:23.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:23.862" level="INFO"/>
<status status="PASS" starttime="20240910 18:25:23.861" endtime="20240910 18:25:23.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:23.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:23.862" endtime="20240910 18:25:23.862"/>
</kw>
<status status="PASS" starttime="20240910 18:25:23.803" endtime="20240910 18:25:23.863"/>
</kw>
<msg timestamp="20240910 18:25:23.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:23.803" endtime="20240910 18:25:23.863"/>
</kw>
<status status="PASS" starttime="20240910 18:25:23.802" endtime="20240910 18:25:23.863"/>
</kw>
<status status="PASS" starttime="20240910 18:25:23.802" endtime="20240910 18:25:23.863"/>
</kw>
<status status="PASS" starttime="20240910 18:25:23.792" endtime="20240910 18:25:23.863"/>
</kw>
<status status="PASS" starttime="20240910 18:25:23.791" endtime="20240910 18:25:23.863"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:23.867" level="INFO">Running command 'ozone sh key put o3://om:9862/95353-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:28.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:28.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:25:23.865" endtime="20240910 18:25:28.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:28.990" level="INFO"/>
<status status="PASS" starttime="20240910 18:25:28.989" endtime="20240910 18:25:28.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:28.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:28.990" endtime="20240910 18:25:28.990"/>
</kw>
<status status="PASS" starttime="20240910 18:25:23.864" endtime="20240910 18:25:28.990"/>
</kw>
<msg timestamp="20240910 18:25:28.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:23.864" endtime="20240910 18:25:28.991"/>
</kw>
<status status="PASS" starttime="20240910 18:25:23.864" endtime="20240910 18:25:28.991"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:28.995" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95353-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:32.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:32.897" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:25:28.992" endtime="20240910 18:25:32.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:32.898" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:25:32.897" endtime="20240910 18:25:32.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:32.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:32.898" endtime="20240910 18:25:32.898"/>
</kw>
<status status="PASS" starttime="20240910 18:25:28.992" endtime="20240910 18:25:32.898"/>
</kw>
<msg timestamp="20240910 18:25:32.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:28.991" endtime="20240910 18:25:32.899"/>
</kw>
<msg timestamp="20240910 18:25:32.899" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:25:28.991" endtime="20240910 18:25:32.899"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:25:32.899" endtime="20240910 18:25:32.899"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:32.902" level="INFO">Running command 'ozone sh key addacl o3://om:9862/95353-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:36.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:36.474" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:25:32.900" endtime="20240910 18:25:36.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:36.475" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:25:36.474" endtime="20240910 18:25:36.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:36.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:36.475" endtime="20240910 18:25:36.475"/>
</kw>
<status status="PASS" starttime="20240910 18:25:32.900" endtime="20240910 18:25:36.475"/>
</kw>
<msg timestamp="20240910 18:25:36.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:32.900" endtime="20240910 18:25:36.475"/>
</kw>
<msg timestamp="20240910 18:25:36.476" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:25:32.899" endtime="20240910 18:25:36.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:36.479" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95353-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:40.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:40.009" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:25:36.477" endtime="20240910 18:25:40.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:40.010" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:25:40.009" endtime="20240910 18:25:40.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:40.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:40.010" endtime="20240910 18:25:40.011"/>
</kw>
<status status="PASS" starttime="20240910 18:25:36.477" endtime="20240910 18:25:40.011"/>
</kw>
<msg timestamp="20240910 18:25:40.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:36.476" endtime="20240910 18:25:40.011"/>
</kw>
<msg timestamp="20240910 18:25:40.011" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:25:36.476" endtime="20240910 18:25:40.011"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:25:40.011" endtime="20240910 18:25:40.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:40.015" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/95353-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:43.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:43.482" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:25:40.013" endtime="20240910 18:25:43.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:43.483" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:25:43.482" endtime="20240910 18:25:43.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:43.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:43.483" endtime="20240910 18:25:43.484"/>
</kw>
<status status="PASS" starttime="20240910 18:25:40.013" endtime="20240910 18:25:43.484"/>
</kw>
<msg timestamp="20240910 18:25:43.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:40.013" endtime="20240910 18:25:43.484"/>
</kw>
<msg timestamp="20240910 18:25:43.485" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:25:40.012" endtime="20240910 18:25:43.485"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:43.489" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95353-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:47.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:47.188" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:25:43.487" endtime="20240910 18:25:47.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:47.189" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:25:47.188" endtime="20240910 18:25:47.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:47.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:47.189" endtime="20240910 18:25:47.189"/>
</kw>
<status status="PASS" starttime="20240910 18:25:43.486" endtime="20240910 18:25:47.190"/>
</kw>
<msg timestamp="20240910 18:25:47.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:43.486" endtime="20240910 18:25:47.190"/>
</kw>
<msg timestamp="20240910 18:25:47.190" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:25:43.485" endtime="20240910 18:25:47.190"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:25:47.190" endtime="20240910 18:25:47.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:47.194" level="INFO">Running command 'ozone sh key setacl o3://om:9862/95353-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:50.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:50.829" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:25:47.192" endtime="20240910 18:25:50.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:50.830" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:25:50.830" endtime="20240910 18:25:50.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:50.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:50.831" endtime="20240910 18:25:50.831"/>
</kw>
<status status="PASS" starttime="20240910 18:25:47.191" endtime="20240910 18:25:50.831"/>
</kw>
<msg timestamp="20240910 18:25:50.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:47.191" endtime="20240910 18:25:50.831"/>
</kw>
<msg timestamp="20240910 18:25:50.831" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:25:47.190" endtime="20240910 18:25:50.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:50.835" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95353-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:54.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:54.519" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20240910 18:25:50.833" endtime="20240910 18:25:54.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:54.519" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:25:54.519" endtime="20240910 18:25:54.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:54.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:54.520" endtime="20240910 18:25:54.520"/>
</kw>
<status status="PASS" starttime="20240910 18:25:50.832" endtime="20240910 18:25:54.520"/>
</kw>
<msg timestamp="20240910 18:25:54.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:50.832" endtime="20240910 18:25:54.520"/>
</kw>
<msg timestamp="20240910 18:25:54.521" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20240910 18:25:50.832" endtime="20240910 18:25:54.521"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:25:54.521" endtime="20240910 18:25:54.521"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:25:54.521" endtime="20240910 18:25:54.522"/>
</kw>
<status status="PASS" starttime="20240910 18:25:23.863" endtime="20240910 18:25:54.522"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240910 18:25:23.791" endtime="20240910 18:25:54.522"/>
</test>
<test id="s1-s2-s5-t6" name="Test native authorizer" line="42">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:25:54.524" endtime="20240910 18:25:54.524"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:54.528" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:54.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:54.531" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:25:54.525" endtime="20240910 18:25:54.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:54.532" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:25:54.532" endtime="20240910 18:25:54.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:54.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:54.532" endtime="20240910 18:25:54.533"/>
</kw>
<status status="PASS" starttime="20240910 18:25:54.525" endtime="20240910 18:25:54.533"/>
</kw>
<msg timestamp="20240910 18:25:54.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:54.525" endtime="20240910 18:25:54.533"/>
</kw>
<msg timestamp="20240910 18:25:54.533" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:25:54.525" endtime="20240910 18:25:54.533"/>
</kw>
<msg timestamp="20240910 18:25:54.533" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:25:54.524" endtime="20240910 18:25:54.533"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:25:54.534" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:25:54.534" endtime="20240910 18:25:54.534"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:54.537" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:54.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:54.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:25:54.535" endtime="20240910 18:25:54.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:54.590" level="INFO"/>
<status status="PASS" starttime="20240910 18:25:54.589" endtime="20240910 18:25:54.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:54.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:54.590" endtime="20240910 18:25:54.590"/>
</kw>
<status status="PASS" starttime="20240910 18:25:54.535" endtime="20240910 18:25:54.591"/>
</kw>
<msg timestamp="20240910 18:25:54.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:54.535" endtime="20240910 18:25:54.591"/>
</kw>
<status status="PASS" starttime="20240910 18:25:54.534" endtime="20240910 18:25:54.591"/>
</kw>
<status status="PASS" starttime="20240910 18:25:54.534" endtime="20240910 18:25:54.591"/>
</kw>
<status status="PASS" starttime="20240910 18:25:54.524" endtime="20240910 18:25:54.591"/>
</kw>
<status status="PASS" starttime="20240910 18:25:54.523" endtime="20240910 18:25:54.591"/>
</kw>
<kw name="Test native authorizer" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:25:54.592" endtime="20240910 18:25:54.592"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:54.595" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/95353-acls -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:57.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:57.844" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:25:54.593" endtime="20240910 18:25:57.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:57.845" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20240910 18:25:57.844" endtime="20240910 18:25:57.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:57.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:57.845" endtime="20240910 18:25:57.845"/>
</kw>
<status status="PASS" starttime="20240910 18:25:54.593" endtime="20240910 18:25:57.845"/>
</kw>
<msg timestamp="20240910 18:25:57.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:54.592" endtime="20240910 18:25:57.845"/>
</kw>
<status status="PASS" starttime="20240910 18:25:54.592" endtime="20240910 18:25:57.846"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:57.849" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:57.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:57.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:25:57.847" endtime="20240910 18:25:57.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:57.853" level="INFO"/>
<status status="PASS" starttime="20240910 18:25:57.853" endtime="20240910 18:25:57.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:57.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:57.854" endtime="20240910 18:25:57.854"/>
</kw>
<status status="PASS" starttime="20240910 18:25:57.846" endtime="20240910 18:25:57.854"/>
</kw>
<msg timestamp="20240910 18:25:57.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:57.846" endtime="20240910 18:25:57.854"/>
</kw>
<status status="PASS" starttime="20240910 18:25:57.846" endtime="20240910 18:25:57.854"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:25:57.855" endtime="20240910 18:25:57.855"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:57.859" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:57.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:57.862" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:25:57.857" endtime="20240910 18:25:57.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:57.862" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:25:57.862" endtime="20240910 18:25:57.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:57.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:57.863" endtime="20240910 18:25:57.863"/>
</kw>
<status status="PASS" starttime="20240910 18:25:57.857" endtime="20240910 18:25:57.863"/>
</kw>
<msg timestamp="20240910 18:25:57.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:57.856" endtime="20240910 18:25:57.863"/>
</kw>
<msg timestamp="20240910 18:25:57.863" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:25:57.856" endtime="20240910 18:25:57.863"/>
</kw>
<msg timestamp="20240910 18:25:57.864" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:25:57.855" endtime="20240910 18:25:57.864"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:25:57.864" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:25:57.864" endtime="20240910 18:25:57.864"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:57.867" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:25:57.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:25:57.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:25:57.866" endtime="20240910 18:25:57.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:25:57.913" level="INFO"/>
<status status="PASS" starttime="20240910 18:25:57.913" endtime="20240910 18:25:57.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:25:57.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:25:57.913" endtime="20240910 18:25:57.914"/>
</kw>
<status status="PASS" starttime="20240910 18:25:57.865" endtime="20240910 18:25:57.914"/>
</kw>
<msg timestamp="20240910 18:25:57.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:25:57.865" endtime="20240910 18:25:57.914"/>
</kw>
<status status="PASS" starttime="20240910 18:25:57.865" endtime="20240910 18:25:57.914"/>
</kw>
<status status="PASS" starttime="20240910 18:25:57.864" endtime="20240910 18:25:57.914"/>
</kw>
<status status="PASS" starttime="20240910 18:25:57.855" endtime="20240910 18:25:57.914"/>
</kw>
<status status="PASS" starttime="20240910 18:25:57.854" endtime="20240910 18:25:57.914"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:25:57.917" level="INFO">Running command 'ozone sh bucket list o3://om:9862/95353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:01.698" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:26:01.699" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:25:57.915" endtime="20240910 18:26:01.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:01.700" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:26:01.699" endtime="20240910 18:26:01.700"/>
</kw>
<msg timestamp="20240910 18:26:01.700" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:25:57.914" endtime="20240910 18:26:01.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:26:01.700" endtime="20240910 18:26:01.700"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:01.703" level="INFO">Running command 'ozone sh key list o3://om:9862/95353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:04.943" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:26:04.943" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:26:01.701" endtime="20240910 18:26:04.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:04.944" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:26:04.944" endtime="20240910 18:26:04.944"/>
</kw>
<msg timestamp="20240910 18:26:04.944" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:26:01.701" endtime="20240910 18:26:04.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:26:04.945" endtime="20240910 18:26:04.945"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:04.948" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/95353-acls -a user:testuser2:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:08.562" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:26:08.562" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:26:04.946" endtime="20240910 18:26:08.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:08.563" level="INFO">PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:26:08.562" endtime="20240910 18:26:08.563"/>
</kw>
<msg timestamp="20240910 18:26:08.563" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:26:04.945" endtime="20240910 18:26:08.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:26:08.563" endtime="20240910 18:26:08.564"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:08.567" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:08.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:08.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:08.565" endtime="20240910 18:26:08.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:08.580" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:08.579" endtime="20240910 18:26:08.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:08.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:08.580" endtime="20240910 18:26:08.580"/>
</kw>
<status status="PASS" starttime="20240910 18:26:08.565" endtime="20240910 18:26:08.580"/>
</kw>
<msg timestamp="20240910 18:26:08.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:08.564" endtime="20240910 18:26:08.581"/>
</kw>
<status status="PASS" starttime="20240910 18:26:08.564" endtime="20240910 18:26:08.581"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:26:08.582" endtime="20240910 18:26:08.582"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:08.585" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:08.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:08.588" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:26:08.583" endtime="20240910 18:26:08.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:08.589" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:26:08.589" endtime="20240910 18:26:08.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:08.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:08.589" endtime="20240910 18:26:08.590"/>
</kw>
<status status="PASS" starttime="20240910 18:26:08.583" endtime="20240910 18:26:08.590"/>
</kw>
<msg timestamp="20240910 18:26:08.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:08.583" endtime="20240910 18:26:08.590"/>
</kw>
<msg timestamp="20240910 18:26:08.590" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:26:08.582" endtime="20240910 18:26:08.590"/>
</kw>
<msg timestamp="20240910 18:26:08.590" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:08.582" endtime="20240910 18:26:08.590"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:26:08.591" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:08.591" endtime="20240910 18:26:08.591"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:08.594" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:08.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:08.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:08.592" endtime="20240910 18:26:08.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:08.651" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:08.651" endtime="20240910 18:26:08.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:08.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:08.652" endtime="20240910 18:26:08.652"/>
</kw>
<status status="PASS" starttime="20240910 18:26:08.592" endtime="20240910 18:26:08.652"/>
</kw>
<msg timestamp="20240910 18:26:08.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:08.592" endtime="20240910 18:26:08.652"/>
</kw>
<status status="PASS" starttime="20240910 18:26:08.591" endtime="20240910 18:26:08.652"/>
</kw>
<status status="PASS" starttime="20240910 18:26:08.591" endtime="20240910 18:26:08.652"/>
</kw>
<status status="PASS" starttime="20240910 18:26:08.581" endtime="20240910 18:26:08.653"/>
</kw>
<status status="PASS" starttime="20240910 18:26:08.581" endtime="20240910 18:26:08.653"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:08.656" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/95353-acls -a user:testuser2:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:12.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:12.295" level="INFO">${output} = ACL user:testuser2:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:26:08.654" endtime="20240910 18:26:12.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:12.296" level="INFO">ACL user:testuser2:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:26:12.296" endtime="20240910 18:26:12.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:12.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:12.296" endtime="20240910 18:26:12.297"/>
</kw>
<status status="PASS" starttime="20240910 18:26:08.653" endtime="20240910 18:26:12.297"/>
</kw>
<msg timestamp="20240910 18:26:12.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:08.653" endtime="20240910 18:26:12.297"/>
</kw>
<status status="PASS" starttime="20240910 18:26:08.653" endtime="20240910 18:26:12.297"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:12.301" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:12.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:12.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:12.298" endtime="20240910 18:26:12.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:12.306" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:12.305" endtime="20240910 18:26:12.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:12.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:12.306" endtime="20240910 18:26:12.307"/>
</kw>
<status status="PASS" starttime="20240910 18:26:12.298" endtime="20240910 18:26:12.307"/>
</kw>
<msg timestamp="20240910 18:26:12.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:12.298" endtime="20240910 18:26:12.307"/>
</kw>
<status status="PASS" starttime="20240910 18:26:12.297" endtime="20240910 18:26:12.307"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:26:12.308" endtime="20240910 18:26:12.308"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:12.311" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:12.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:12.315" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:26:12.309" endtime="20240910 18:26:12.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:12.315" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:26:12.315" endtime="20240910 18:26:12.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:12.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:12.316" endtime="20240910 18:26:12.316"/>
</kw>
<status status="PASS" starttime="20240910 18:26:12.309" endtime="20240910 18:26:12.316"/>
</kw>
<msg timestamp="20240910 18:26:12.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:12.309" endtime="20240910 18:26:12.316"/>
</kw>
<msg timestamp="20240910 18:26:12.316" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:26:12.309" endtime="20240910 18:26:12.316"/>
</kw>
<msg timestamp="20240910 18:26:12.317" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:12.308" endtime="20240910 18:26:12.317"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:26:12.317" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:12.317" endtime="20240910 18:26:12.317"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:12.320" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:12.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:12.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:12.318" endtime="20240910 18:26:12.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:12.335" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:12.335" endtime="20240910 18:26:12.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:12.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:12.335" endtime="20240910 18:26:12.336"/>
</kw>
<status status="PASS" starttime="20240910 18:26:12.318" endtime="20240910 18:26:12.336"/>
</kw>
<msg timestamp="20240910 18:26:12.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:12.318" endtime="20240910 18:26:12.336"/>
</kw>
<status status="PASS" starttime="20240910 18:26:12.317" endtime="20240910 18:26:12.336"/>
</kw>
<status status="PASS" starttime="20240910 18:26:12.317" endtime="20240910 18:26:12.336"/>
</kw>
<status status="PASS" starttime="20240910 18:26:12.307" endtime="20240910 18:26:12.336"/>
</kw>
<status status="PASS" starttime="20240910 18:26:12.307" endtime="20240910 18:26:12.336"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:12.339" level="INFO">Running command 'ozone sh bucket list o3://om:9862/95353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:16.020" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:26:16.020" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:26:12.337" endtime="20240910 18:26:16.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:16.021" level="INFO">PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:26:16.020" endtime="20240910 18:26:16.021"/>
</kw>
<msg timestamp="20240910 18:26:16.021" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume Volume:95353-acls </msg>
<status status="PASS" starttime="20240910 18:26:12.336" endtime="20240910 18:26:16.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:26:16.021" endtime="20240910 18:26:16.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:16.025" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/95353-acls -a user:testuser2:l 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:19.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:19.572" level="INFO">${output} = ACL user:testuser2:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:26:16.023" endtime="20240910 18:26:19.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:19.573" level="INFO">ACL user:testuser2:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:26:19.572" endtime="20240910 18:26:19.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:19.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:19.573" endtime="20240910 18:26:19.573"/>
</kw>
<status status="PASS" starttime="20240910 18:26:16.022" endtime="20240910 18:26:19.573"/>
</kw>
<msg timestamp="20240910 18:26:19.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:16.022" endtime="20240910 18:26:19.574"/>
</kw>
<status status="PASS" starttime="20240910 18:26:16.021" endtime="20240910 18:26:19.574"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:19.578" level="INFO">Running command 'ozone sh bucket list o3://om:9862/95353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:23.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:23.109" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "95353-acls",
  "name" : "bb1",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 51867,
  "usedNamespace" : 1,
  "cr...</msg>
<status status="PASS" starttime="20240910 18:26:19.575" endtime="20240910 18:26:23.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:23.110" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "95353-acls",
  "name" : "bb1",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 51867,
  "usedNamespace" : 1,
  "creationTime" : "2024-09-10T18:24:58.713Z",
  "modificationTime" : "2024-09-10T18:25:20.014Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20240910 18:26:23.109" endtime="20240910 18:26:23.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:23.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:23.110" endtime="20240910 18:26:23.110"/>
</kw>
<status status="PASS" starttime="20240910 18:26:19.575" endtime="20240910 18:26:23.110"/>
</kw>
<msg timestamp="20240910 18:26:23.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:19.574" endtime="20240910 18:26:23.111"/>
</kw>
<status status="PASS" starttime="20240910 18:26:19.574" endtime="20240910 18:26:23.111"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:23.114" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:26.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:26.919" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20240910 18:26:23.112" endtime="20240910 18:26:26.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:26.920" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:26:26.919" endtime="20240910 18:26:26.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:26.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:26.920" endtime="20240910 18:26:26.921"/>
</kw>
<status status="PASS" starttime="20240910 18:26:23.112" endtime="20240910 18:26:26.921"/>
</kw>
<msg timestamp="20240910 18:26:26.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:23.111" endtime="20240910 18:26:26.921"/>
</kw>
<status status="PASS" starttime="20240910 18:26:23.111" endtime="20240910 18:26:26.921"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:26.924" level="INFO">Running command 'ozone sh key list o3://om:9862/95353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:30.128" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:26:30.128" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:95353-acls Bucket:bb1 </msg>
<status status="PASS" starttime="20240910 18:26:26.922" endtime="20240910 18:26:30.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:30.129" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:95353-acls Bucket:bb1 </msg>
<status status="PASS" starttime="20240910 18:26:30.129" endtime="20240910 18:26:30.129"/>
</kw>
<msg timestamp="20240910 18:26:30.130" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:95353-acls Bucket:bb1 </msg>
<status status="PASS" starttime="20240910 18:26:26.921" endtime="20240910 18:26:30.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:26:30.130" endtime="20240910 18:26:30.130"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:30.133" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:30.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:30.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:30.131" endtime="20240910 18:26:30.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:30.138" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:30.138" endtime="20240910 18:26:30.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:30.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:30.139" endtime="20240910 18:26:30.139"/>
</kw>
<status status="PASS" starttime="20240910 18:26:30.131" endtime="20240910 18:26:30.139"/>
</kw>
<msg timestamp="20240910 18:26:30.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:30.131" endtime="20240910 18:26:30.139"/>
</kw>
<status status="PASS" starttime="20240910 18:26:30.130" endtime="20240910 18:26:30.139"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:26:30.140" endtime="20240910 18:26:30.140"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:30.144" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:30.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:30.147" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:26:30.142" endtime="20240910 18:26:30.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:30.148" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:26:30.147" endtime="20240910 18:26:30.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:30.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:30.148" endtime="20240910 18:26:30.148"/>
</kw>
<status status="PASS" starttime="20240910 18:26:30.141" endtime="20240910 18:26:30.149"/>
</kw>
<msg timestamp="20240910 18:26:30.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:30.141" endtime="20240910 18:26:30.149"/>
</kw>
<msg timestamp="20240910 18:26:30.149" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:26:30.141" endtime="20240910 18:26:30.149"/>
</kw>
<msg timestamp="20240910 18:26:30.149" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:30.140" endtime="20240910 18:26:30.149"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:26:30.149" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:30.149" endtime="20240910 18:26:30.149"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:30.153" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:30.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:30.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:30.151" endtime="20240910 18:26:30.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:30.202" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:30.202" endtime="20240910 18:26:30.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:30.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:30.203" endtime="20240910 18:26:30.203"/>
</kw>
<status status="PASS" starttime="20240910 18:26:30.151" endtime="20240910 18:26:30.203"/>
</kw>
<msg timestamp="20240910 18:26:30.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:30.150" endtime="20240910 18:26:30.203"/>
</kw>
<status status="PASS" starttime="20240910 18:26:30.150" endtime="20240910 18:26:30.203"/>
</kw>
<status status="PASS" starttime="20240910 18:26:30.150" endtime="20240910 18:26:30.203"/>
</kw>
<status status="PASS" starttime="20240910 18:26:30.140" endtime="20240910 18:26:30.204"/>
</kw>
<status status="PASS" starttime="20240910 18:26:30.139" endtime="20240910 18:26:30.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:testuser2:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:30.207" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/95353-acls/bb1 -a user:testuser2:a 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:33.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:33.702" level="INFO">${output} = ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:26:30.205" endtime="20240910 18:26:33.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:33.703" level="INFO">ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20240910 18:26:33.702" endtime="20240910 18:26:33.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:33.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:33.703" endtime="20240910 18:26:33.703"/>
</kw>
<status status="PASS" starttime="20240910 18:26:30.204" endtime="20240910 18:26:33.704"/>
</kw>
<msg timestamp="20240910 18:26:33.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:30.204" endtime="20240910 18:26:33.704"/>
</kw>
<status status="PASS" starttime="20240910 18:26:30.204" endtime="20240910 18:26:33.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:33.707" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:37.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:37.464" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20240910 18:26:33.705" endtime="20240910 18:26:37.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:37.465" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:26:37.464" endtime="20240910 18:26:37.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:37.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:37.465" endtime="20240910 18:26:37.465"/>
</kw>
<status status="PASS" starttime="20240910 18:26:33.705" endtime="20240910 18:26:37.466"/>
</kw>
<msg timestamp="20240910 18:26:37.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:33.704" endtime="20240910 18:26:37.466"/>
</kw>
<status status="PASS" starttime="20240910 18:26:33.704" endtime="20240910 18:26:37.466"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:37.469" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:37.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:37.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:37.467" endtime="20240910 18:26:37.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:37.474" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:37.474" endtime="20240910 18:26:37.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:37.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:37.474" endtime="20240910 18:26:37.475"/>
</kw>
<status status="PASS" starttime="20240910 18:26:37.467" endtime="20240910 18:26:37.475"/>
</kw>
<msg timestamp="20240910 18:26:37.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:37.466" endtime="20240910 18:26:37.475"/>
</kw>
<status status="PASS" starttime="20240910 18:26:37.466" endtime="20240910 18:26:37.475"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:26:37.477" endtime="20240910 18:26:37.477"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:37.480" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:37.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:37.484" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:26:37.478" endtime="20240910 18:26:37.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:37.484" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:26:37.484" endtime="20240910 18:26:37.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:37.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:37.485" endtime="20240910 18:26:37.485"/>
</kw>
<status status="PASS" starttime="20240910 18:26:37.478" endtime="20240910 18:26:37.485"/>
</kw>
<msg timestamp="20240910 18:26:37.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:37.478" endtime="20240910 18:26:37.485"/>
</kw>
<msg timestamp="20240910 18:26:37.485" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:26:37.478" endtime="20240910 18:26:37.485"/>
</kw>
<msg timestamp="20240910 18:26:37.486" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:37.477" endtime="20240910 18:26:37.486"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:26:37.486" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:37.486" endtime="20240910 18:26:37.486"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:37.489" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:37.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:37.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:37.488" endtime="20240910 18:26:37.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:37.515" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:37.515" endtime="20240910 18:26:37.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:37.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:37.515" endtime="20240910 18:26:37.516"/>
</kw>
<status status="PASS" starttime="20240910 18:26:37.487" endtime="20240910 18:26:37.516"/>
</kw>
<msg timestamp="20240910 18:26:37.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:37.487" endtime="20240910 18:26:37.516"/>
</kw>
<status status="PASS" starttime="20240910 18:26:37.487" endtime="20240910 18:26:37.516"/>
</kw>
<status status="PASS" starttime="20240910 18:26:37.486" endtime="20240910 18:26:37.516"/>
</kw>
<status status="PASS" starttime="20240910 18:26:37.475" endtime="20240910 18:26:37.516"/>
</kw>
<status status="PASS" starttime="20240910 18:26:37.475" endtime="20240910 18:26:37.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:37.519" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:41.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:41.261" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20240910 18:26:37.517" endtime="20240910 18:26:41.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:41.262" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:26:41.261" endtime="20240910 18:26:41.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:41.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:41.262" endtime="20240910 18:26:41.262"/>
</kw>
<status status="PASS" starttime="20240910 18:26:37.517" endtime="20240910 18:26:41.262"/>
</kw>
<msg timestamp="20240910 18:26:41.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:37.517" endtime="20240910 18:26:41.262"/>
</kw>
<status status="PASS" starttime="20240910 18:26:37.516" endtime="20240910 18:26:41.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:41.266" level="INFO">Running command 'ozone sh key list o3://om:9862/95353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:44.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:44.881" level="INFO">${output} = [ {
  "volumeName" : "95353-acls",
  "bucketName" : "bb1",
  "name" : "key2",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:25:27.301Z",
  "modificationTime" : "2024-...</msg>
<status status="PASS" starttime="20240910 18:26:41.264" endtime="20240910 18:26:44.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:44.882" level="INFO">[ {
  "volumeName" : "95353-acls",
  "bucketName" : "bb1",
  "name" : "key2",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:25:27.301Z",
  "modificationTime" : "2024-09-10T18:25:50.749Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20240910 18:26:44.881" endtime="20240910 18:26:44.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:44.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:44.882" endtime="20240910 18:26:44.882"/>
</kw>
<status status="PASS" starttime="20240910 18:26:41.263" endtime="20240910 18:26:44.882"/>
</kw>
<msg timestamp="20240910 18:26:44.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:41.263" endtime="20240910 18:26:44.882"/>
</kw>
<status status="PASS" starttime="20240910 18:26:41.263" endtime="20240910 18:26:44.883"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:44.886" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:44.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:44.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:44.884" endtime="20240910 18:26:44.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:44.891" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:44.891" endtime="20240910 18:26:44.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:44.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:44.891" endtime="20240910 18:26:44.892"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.884" endtime="20240910 18:26:44.892"/>
</kw>
<msg timestamp="20240910 18:26:44.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:44.883" endtime="20240910 18:26:44.892"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.883" endtime="20240910 18:26:44.892"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:26:44.893" endtime="20240910 18:26:44.893"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:44.896" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:44.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:44.899" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:26:44.894" endtime="20240910 18:26:44.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:44.900" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:26:44.899" endtime="20240910 18:26:44.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:44.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:44.900" endtime="20240910 18:26:44.900"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.894" endtime="20240910 18:26:44.901"/>
</kw>
<msg timestamp="20240910 18:26:44.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:44.894" endtime="20240910 18:26:44.901"/>
</kw>
<msg timestamp="20240910 18:26:44.901" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:26:44.893" endtime="20240910 18:26:44.901"/>
</kw>
<msg timestamp="20240910 18:26:44.901" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:44.893" endtime="20240910 18:26:44.901"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:26:44.901" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:44.901" endtime="20240910 18:26:44.902"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:44.905" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:44.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:44.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:44.903" endtime="20240910 18:26:44.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:44.921" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:44.920" endtime="20240910 18:26:44.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:44.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:44.921" endtime="20240910 18:26:44.921"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.903" endtime="20240910 18:26:44.921"/>
</kw>
<msg timestamp="20240910 18:26:44.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:44.902" endtime="20240910 18:26:44.921"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.902" endtime="20240910 18:26:44.922"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.902" endtime="20240910 18:26:44.922"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.892" endtime="20240910 18:26:44.922"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.892" endtime="20240910 18:26:44.922"/>
</kw>
<status status="PASS" starttime="20240910 18:25:54.591" endtime="20240910 18:26:44.922"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240910 18:25:54.523" endtime="20240910 18:26:44.922"/>
</test>
<test id="s1-s2-s5-t7" name="RpcClient prefix acls" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:26:44.924" endtime="20240910 18:26:44.924"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:44.927" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:44.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:44.930" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:26:44.925" endtime="20240910 18:26:44.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:44.931" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:26:44.930" endtime="20240910 18:26:44.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:44.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:44.931" endtime="20240910 18:26:44.931"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.925" endtime="20240910 18:26:44.932"/>
</kw>
<msg timestamp="20240910 18:26:44.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:44.925" endtime="20240910 18:26:44.932"/>
</kw>
<msg timestamp="20240910 18:26:44.932" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:26:44.924" endtime="20240910 18:26:44.932"/>
</kw>
<msg timestamp="20240910 18:26:44.932" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:44.924" endtime="20240910 18:26:44.932"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:26:44.932" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:26:44.932" endtime="20240910 18:26:44.932"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:44.935" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:44.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:44.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:26:44.934" endtime="20240910 18:26:44.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:44.951" level="INFO"/>
<status status="PASS" starttime="20240910 18:26:44.951" endtime="20240910 18:26:44.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:44.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:44.951" endtime="20240910 18:26:44.952"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.933" endtime="20240910 18:26:44.952"/>
</kw>
<msg timestamp="20240910 18:26:44.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:44.933" endtime="20240910 18:26:44.952"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.933" endtime="20240910 18:26:44.952"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.933" endtime="20240910 18:26:44.952"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.923" endtime="20240910 18:26:44.952"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.923" endtime="20240910 18:26:44.952"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:44.955" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/95353-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:48.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:48.596" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20240910 18:26:44.954" endtime="20240910 18:26:48.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:48.597" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20240910 18:26:48.596" endtime="20240910 18:26:48.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:48.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:48.597" endtime="20240910 18:26:48.597"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.953" endtime="20240910 18:26:48.598"/>
</kw>
<msg timestamp="20240910 18:26:48.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:44.953" endtime="20240910 18:26:48.598"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.953" endtime="20240910 18:26:48.598"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:48.601" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/95353-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:52.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:52.105" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20240910 18:26:48.599" endtime="20240910 18:26:52.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:52.106" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:26:52.105" endtime="20240910 18:26:52.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:52.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:52.106" endtime="20240910 18:26:52.106"/>
</kw>
<status status="PASS" starttime="20240910 18:26:48.599" endtime="20240910 18:26:52.106"/>
</kw>
<msg timestamp="20240910 18:26:52.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:48.598" endtime="20240910 18:26:52.106"/>
</kw>
<msg timestamp="20240910 18:26:52.107" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20240910 18:26:48.598" endtime="20240910 18:26:52.107"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:26:52.107" endtime="20240910 18:26:52.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:52.111" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/95353-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:55.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:55.537" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20240910 18:26:52.109" endtime="20240910 18:26:55.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:55.537" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20240910 18:26:55.537" endtime="20240910 18:26:55.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:55.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:55.538" endtime="20240910 18:26:55.538"/>
</kw>
<status status="PASS" starttime="20240910 18:26:52.108" endtime="20240910 18:26:55.538"/>
</kw>
<msg timestamp="20240910 18:26:55.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:52.108" endtime="20240910 18:26:55.538"/>
</kw>
<msg timestamp="20240910 18:26:55.538" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20240910 18:26:52.108" endtime="20240910 18:26:55.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:55.542" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/95353-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:26:59.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:26:59.253" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20240910 18:26:55.540" endtime="20240910 18:26:59.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:26:59.254" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:26:59.253" endtime="20240910 18:26:59.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:26:59.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:26:59.254" endtime="20240910 18:26:59.255"/>
</kw>
<status status="PASS" starttime="20240910 18:26:55.539" endtime="20240910 18:26:59.255"/>
</kw>
<msg timestamp="20240910 18:26:59.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:55.539" endtime="20240910 18:26:59.255"/>
</kw>
<msg timestamp="20240910 18:26:59.255" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20240910 18:26:55.539" endtime="20240910 18:26:59.255"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:26:59.255" endtime="20240910 18:26:59.256"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:26:59.259" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/95353-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:02.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:02.660" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:26:59.257" endtime="20240910 18:27:02.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:02.661" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:27:02.661" endtime="20240910 18:27:02.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:02.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:02.662" endtime="20240910 18:27:02.662"/>
</kw>
<status status="PASS" starttime="20240910 18:26:59.257" endtime="20240910 18:27:02.662"/>
</kw>
<msg timestamp="20240910 18:27:02.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:26:59.257" endtime="20240910 18:27:02.662"/>
</kw>
<msg timestamp="20240910 18:27:02.663" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20240910 18:26:59.256" endtime="20240910 18:27:02.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:02.666" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/95353-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:06.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:06.367" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20240910 18:27:02.664" endtime="20240910 18:27:06.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:06.368" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:27:06.367" endtime="20240910 18:27:06.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:06.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:06.368" endtime="20240910 18:27:06.368"/>
</kw>
<status status="PASS" starttime="20240910 18:27:02.664" endtime="20240910 18:27:06.369"/>
</kw>
<msg timestamp="20240910 18:27:06.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:02.663" endtime="20240910 18:27:06.369"/>
</kw>
<msg timestamp="20240910 18:27:06.369" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20240910 18:27:02.663" endtime="20240910 18:27:06.369"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:27:06.369" endtime="20240910 18:27:06.369"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:27:06.369" endtime="20240910 18:27:06.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:06.373" level="INFO">Running command 'ozone sh key put o3://om:9862/95353-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:11.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:11.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:06.371" endtime="20240910 18:27:11.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:11.360" level="INFO"/>
<status status="PASS" starttime="20240910 18:27:11.359" endtime="20240910 18:27:11.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:11.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:11.360" endtime="20240910 18:27:11.360"/>
</kw>
<status status="PASS" starttime="20240910 18:27:06.371" endtime="20240910 18:27:11.360"/>
</kw>
<msg timestamp="20240910 18:27:11.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:06.370" endtime="20240910 18:27:11.361"/>
</kw>
<status status="PASS" starttime="20240910 18:27:06.370" endtime="20240910 18:27:11.361"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:11.364" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95353-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:15.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:15.007" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:27:11.362" endtime="20240910 18:27:15.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:15.008" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240910 18:27:15.007" endtime="20240910 18:27:15.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:15.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:15.008" endtime="20240910 18:27:15.009"/>
</kw>
<status status="PASS" starttime="20240910 18:27:11.362" endtime="20240910 18:27:15.009"/>
</kw>
<msg timestamp="20240910 18:27:15.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:11.361" endtime="20240910 18:27:15.009"/>
</kw>
<msg timestamp="20240910 18:27:15.009" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20240910 18:27:11.361" endtime="20240910 18:27:15.009"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:27:15.009" endtime="20240910 18:27:15.010"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240910 18:27:15.010" endtime="20240910 18:27:15.010"/>
</kw>
<status status="PASS" starttime="20240910 18:26:44.952" endtime="20240910 18:27:15.010"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240910 18:26:44.922" endtime="20240910 18:27:15.010"/>
</test>
<test id="s1-s2-s5-t8" name="RpcClient without host" line="48">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:27:15.012" endtime="20240910 18:27:15.012"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:15.016" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:15.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:15.019" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:27:15.014" endtime="20240910 18:27:15.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:15.020" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:27:15.020" endtime="20240910 18:27:15.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:15.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:15.020" endtime="20240910 18:27:15.021"/>
</kw>
<status status="PASS" starttime="20240910 18:27:15.013" endtime="20240910 18:27:15.021"/>
</kw>
<msg timestamp="20240910 18:27:15.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:15.013" endtime="20240910 18:27:15.021"/>
</kw>
<msg timestamp="20240910 18:27:15.021" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:27:15.013" endtime="20240910 18:27:15.021"/>
</kw>
<msg timestamp="20240910 18:27:15.021" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:27:15.012" endtime="20240910 18:27:15.021"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:27:15.022" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:27:15.022" endtime="20240910 18:27:15.022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:15.025" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:15.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:15.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:15.023" endtime="20240910 18:27:15.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:15.080" level="INFO"/>
<status status="PASS" starttime="20240910 18:27:15.079" endtime="20240910 18:27:15.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:15.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:15.080" endtime="20240910 18:27:15.080"/>
</kw>
<status status="PASS" starttime="20240910 18:27:15.023" endtime="20240910 18:27:15.080"/>
</kw>
<msg timestamp="20240910 18:27:15.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:15.023" endtime="20240910 18:27:15.080"/>
</kw>
<status status="PASS" starttime="20240910 18:27:15.022" endtime="20240910 18:27:15.081"/>
</kw>
<status status="PASS" starttime="20240910 18:27:15.022" endtime="20240910 18:27:15.081"/>
</kw>
<status status="PASS" starttime="20240910 18:27:15.012" endtime="20240910 18:27:15.081"/>
</kw>
<status status="PASS" starttime="20240910 18:27:15.011" endtime="20240910 18:27:15.081"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:15.084" level="INFO">Running command 'ozone sh volume info o3:///95353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:18.581" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:27:18.581" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95353-without-host is not found</msg>
<status status="PASS" starttime="20240910 18:27:15.082" endtime="20240910 18:27:18.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:18.582" level="INFO">VOLUME_NOT_FOUND Volume 95353-without-host is not found</msg>
<status status="PASS" starttime="20240910 18:27:18.582" endtime="20240910 18:27:18.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:18.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:18.582" endtime="20240910 18:27:18.583"/>
</kw>
<msg timestamp="20240910 18:27:18.583" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95353-without-host is not found</msg>
<status status="PASS" starttime="20240910 18:27:15.082" endtime="20240910 18:27:18.583"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:27:18.583" endtime="20240910 18:27:18.583"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:18.587" level="INFO">Running command 'ozone sh volume create o3:///95353-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:21.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:21.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:18.585" endtime="20240910 18:27:21.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:21.992" level="INFO"/>
<status status="PASS" starttime="20240910 18:27:21.992" endtime="20240910 18:27:21.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:21.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:21.993" endtime="20240910 18:27:21.993"/>
</kw>
<status status="PASS" starttime="20240910 18:27:18.585" endtime="20240910 18:27:21.993"/>
</kw>
<msg timestamp="20240910 18:27:21.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:18.584" endtime="20240910 18:27:21.993"/>
</kw>
<msg timestamp="20240910 18:27:21.994" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:27:18.584" endtime="20240910 18:27:21.994"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20240910 18:27:21.994" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20240910 18:27:21.994" endtime="20240910 18:27:21.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:21.998" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="95353-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:25.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:25.660" level="INFO">${output} = {
  "metadata": {},
  "name": "95353-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20240910 18:27:21.995" endtime="20240910 18:27:25.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:25.661" level="INFO">{
  "metadata": {},
  "name": "95353-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2024-09-10T18:27:21.888Z",
  "modificationTime": "2024-09-10T18:27:21.888Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20240910 18:27:25.660" endtime="20240910 18:27:25.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:25.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:25.661" endtime="20240910 18:27:25.661"/>
</kw>
<status status="PASS" starttime="20240910 18:27:21.995" endtime="20240910 18:27:25.661"/>
</kw>
<msg timestamp="20240910 18:27:25.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:21.995" endtime="20240910 18:27:25.661"/>
</kw>
<msg timestamp="20240910 18:27:25.662" level="INFO">${result} = {
  "metadata": {},
  "name": "95353-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20240910 18:27:21.994" endtime="20240910 18:27:25.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:27:25.662" endtime="20240910 18:27:25.662"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:25.666" level="INFO">Running command 'ozone sh volume setquota o3:///95353-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:29.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:29.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:25.663" endtime="20240910 18:27:29.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:29.282" level="INFO"/>
<status status="PASS" starttime="20240910 18:27:29.282" endtime="20240910 18:27:29.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:29.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:29.283" endtime="20240910 18:27:29.283"/>
</kw>
<status status="PASS" starttime="20240910 18:27:25.663" endtime="20240910 18:27:29.283"/>
</kw>
<msg timestamp="20240910 18:27:29.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:25.663" endtime="20240910 18:27:29.283"/>
</kw>
<status status="PASS" starttime="20240910 18:27:25.662" endtime="20240910 18:27:29.283"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:29.287" level="INFO">Running command 'ozone sh volume info o3:///95353-without-host | jq -r '. | select(.name=="95353-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:32.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:32.929" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:27:29.285" endtime="20240910 18:27:32.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:32.930" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20240910 18:27:32.929" endtime="20240910 18:27:32.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:32.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:32.930" endtime="20240910 18:27:32.930"/>
</kw>
<status status="PASS" starttime="20240910 18:27:29.284" endtime="20240910 18:27:32.931"/>
</kw>
<msg timestamp="20240910 18:27:32.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:29.284" endtime="20240910 18:27:32.931"/>
</kw>
<msg timestamp="20240910 18:27:32.931" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:27:29.284" endtime="20240910 18:27:32.931"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:27:32.931" endtime="20240910 18:27:32.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:32.935" level="INFO">Running command 'ozone sh bucket create o3:///95353-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:36.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:36.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:32.933" endtime="20240910 18:27:36.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:36.206" level="INFO"/>
<status status="PASS" starttime="20240910 18:27:36.205" endtime="20240910 18:27:36.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:36.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:36.206" endtime="20240910 18:27:36.207"/>
</kw>
<status status="PASS" starttime="20240910 18:27:32.932" endtime="20240910 18:27:36.207"/>
</kw>
<msg timestamp="20240910 18:27:36.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:32.932" endtime="20240910 18:27:36.207"/>
</kw>
<msg timestamp="20240910 18:27:36.207" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:27:32.931" endtime="20240910 18:27:36.207"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20240910 18:27:36.207" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20240910 18:27:36.207" endtime="20240910 18:27:36.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:36.211" level="INFO">Running command 'ozone sh bucket info o3:///95353-without-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:27:39.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:39.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:36.209" endtime="20240910 18:27:39.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:39.756" level="INFO"/>
<status status="PASS" starttime="20240910 18:27:39.755" endtime="20240910 18:27:39.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:39.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:39.756" endtime="20240910 18:27:39.757"/>
</kw>
<status status="PASS" starttime="20240910 18:27:36.208" endtime="20240910 18:27:39.757"/>
</kw>
<msg timestamp="20240910 18:27:39.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:36.208" endtime="20240910 18:27:39.757"/>
</kw>
<status status="PASS" starttime="20240910 18:27:36.208" endtime="20240910 18:27:39.757"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:39.760" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:39.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:39.765" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20240910 18:27:39.758" endtime="20240910 18:27:39.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:39.766" level="INFO">DISK</msg>
<status status="PASS" starttime="20240910 18:27:39.766" endtime="20240910 18:27:39.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:39.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:39.766" endtime="20240910 18:27:39.767"/>
</kw>
<status status="PASS" starttime="20240910 18:27:39.758" endtime="20240910 18:27:39.767"/>
</kw>
<msg timestamp="20240910 18:27:39.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:39.758" endtime="20240910 18:27:39.767"/>
</kw>
<msg timestamp="20240910 18:27:39.767" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20240910 18:27:39.757" endtime="20240910 18:27:39.767"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:27:39.767" endtime="20240910 18:27:39.768"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:39.771" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:39.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:39.776" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:27:39.769" endtime="20240910 18:27:39.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:39.776" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20240910 18:27:39.776" endtime="20240910 18:27:39.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:39.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:39.777" endtime="20240910 18:27:39.777"/>
</kw>
<status status="PASS" starttime="20240910 18:27:39.769" endtime="20240910 18:27:39.777"/>
</kw>
<msg timestamp="20240910 18:27:39.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:39.768" endtime="20240910 18:27:39.777"/>
</kw>
<msg timestamp="20240910 18:27:39.777" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20240910 18:27:39.768" endtime="20240910 18:27:39.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:27:39.777" endtime="20240910 18:27:39.778"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:39.781" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:39.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:39.786" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20240910 18:27:39.779" endtime="20240910 18:27:39.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:39.786" level="INFO">100</msg>
<status status="PASS" starttime="20240910 18:27:39.786" endtime="20240910 18:27:39.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:39.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:39.787" endtime="20240910 18:27:39.787"/>
</kw>
<status status="PASS" starttime="20240910 18:27:39.779" endtime="20240910 18:27:39.787"/>
</kw>
<msg timestamp="20240910 18:27:39.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:39.778" endtime="20240910 18:27:39.787"/>
</kw>
<msg timestamp="20240910 18:27:39.787" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20240910 18:27:39.778" endtime="20240910 18:27:39.787"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:27:39.788" endtime="20240910 18:27:39.788"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:39.791" level="INFO">Running command 'ozone sh bucket setquota o3:///95353-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:43.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:43.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:39.789" endtime="20240910 18:27:43.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:43.361" level="INFO"/>
<status status="PASS" starttime="20240910 18:27:43.360" endtime="20240910 18:27:43.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:43.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:43.361" endtime="20240910 18:27:43.361"/>
</kw>
<status status="PASS" starttime="20240910 18:27:39.789" endtime="20240910 18:27:43.361"/>
</kw>
<msg timestamp="20240910 18:27:43.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:39.788" endtime="20240910 18:27:43.361"/>
</kw>
<status status="PASS" starttime="20240910 18:27:39.788" endtime="20240910 18:27:43.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:43.365" level="INFO">Running command 'ozone sh bucket info o3:///95353-without-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:27:46.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:46.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:43.363" endtime="20240910 18:27:46.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:46.992" level="INFO"/>
<status status="PASS" starttime="20240910 18:27:46.991" endtime="20240910 18:27:46.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:46.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:46.992" endtime="20240910 18:27:46.992"/>
</kw>
<status status="PASS" starttime="20240910 18:27:43.362" endtime="20240910 18:27:46.992"/>
</kw>
<msg timestamp="20240910 18:27:46.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:43.362" endtime="20240910 18:27:46.992"/>
</kw>
<status status="PASS" starttime="20240910 18:27:43.362" endtime="20240910 18:27:46.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:46.996" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:47.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:47.001" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20240910 18:27:46.994" endtime="20240910 18:27:47.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:47.001" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20240910 18:27:47.001" endtime="20240910 18:27:47.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:47.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:47.002" endtime="20240910 18:27:47.002"/>
</kw>
<status status="PASS" starttime="20240910 18:27:46.993" endtime="20240910 18:27:47.002"/>
</kw>
<msg timestamp="20240910 18:27:47.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:46.993" endtime="20240910 18:27:47.002"/>
</kw>
<msg timestamp="20240910 18:27:47.002" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20240910 18:27:46.993" endtime="20240910 18:27:47.002"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:27:47.003" endtime="20240910 18:27:47.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:47.006" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:47.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:47.010" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20240910 18:27:47.004" endtime="20240910 18:27:47.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:47.011" level="INFO">1000</msg>
<status status="PASS" starttime="20240910 18:27:47.011" endtime="20240910 18:27:47.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:47.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:47.011" endtime="20240910 18:27:47.012"/>
</kw>
<status status="PASS" starttime="20240910 18:27:47.004" endtime="20240910 18:27:47.012"/>
</kw>
<msg timestamp="20240910 18:27:47.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:47.003" endtime="20240910 18:27:47.012"/>
</kw>
<msg timestamp="20240910 18:27:47.012" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20240910 18:27:47.003" endtime="20240910 18:27:47.012"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:27:47.012" endtime="20240910 18:27:47.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:47.016" level="INFO">Running command 'ozone sh bucket list o3:///95353-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:50.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:50.555" level="INFO">${output} = 95353-without-host</msg>
<status status="PASS" starttime="20240910 18:27:47.014" endtime="20240910 18:27:50.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:50.556" level="INFO">95353-without-host</msg>
<status status="PASS" starttime="20240910 18:27:50.556" endtime="20240910 18:27:50.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:50.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:50.557" endtime="20240910 18:27:50.557"/>
</kw>
<status status="PASS" starttime="20240910 18:27:47.014" endtime="20240910 18:27:50.557"/>
</kw>
<msg timestamp="20240910 18:27:50.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:47.013" endtime="20240910 18:27:50.557"/>
</kw>
<msg timestamp="20240910 18:27:50.557" level="INFO">${result} = 95353-without-host</msg>
<status status="PASS" starttime="20240910 18:27:47.013" endtime="20240910 18:27:50.557"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:27:50.557" endtime="20240910 18:27:50.558"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:50.562" level="INFO">Running command 'ozone sh key put o3:///95353-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:55.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:55.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:50.560" endtime="20240910 18:27:55.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:55.738" level="INFO"/>
<status status="PASS" starttime="20240910 18:27:55.738" endtime="20240910 18:27:55.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:55.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:55.738" endtime="20240910 18:27:55.739"/>
</kw>
<status status="PASS" starttime="20240910 18:27:50.559" endtime="20240910 18:27:55.739"/>
</kw>
<msg timestamp="20240910 18:27:55.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:50.559" endtime="20240910 18:27:55.739"/>
</kw>
<status status="PASS" starttime="20240910 18:27:50.559" endtime="20240910 18:27:55.739"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:55.742" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:27:55.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:27:55.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:55.740" endtime="20240910 18:27:55.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:27:55.747" level="INFO"/>
<status status="PASS" starttime="20240910 18:27:55.746" endtime="20240910 18:27:55.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:27:55.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:27:55.747" endtime="20240910 18:27:55.747"/>
</kw>
<status status="PASS" starttime="20240910 18:27:55.740" endtime="20240910 18:27:55.747"/>
</kw>
<msg timestamp="20240910 18:27:55.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:55.740" endtime="20240910 18:27:55.748"/>
</kw>
<status status="PASS" starttime="20240910 18:27:55.739" endtime="20240910 18:27:55.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:27:55.751" level="INFO">Running command 'ozone sh key get o3:///95353-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:00.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:00.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:27:55.749" endtime="20240910 18:28:00.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:00.595" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:00.594" endtime="20240910 18:28:00.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:00.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:00.595" endtime="20240910 18:28:00.595"/>
</kw>
<status status="PASS" starttime="20240910 18:27:55.748" endtime="20240910 18:28:00.595"/>
</kw>
<msg timestamp="20240910 18:28:00.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:27:55.748" endtime="20240910 18:28:00.595"/>
</kw>
<status status="PASS" starttime="20240910 18:27:55.748" endtime="20240910 18:28:00.595"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:00.599" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:00.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:00.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:00.597" endtime="20240910 18:28:00.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:00.603" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:00.602" endtime="20240910 18:28:00.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:00.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:00.603" endtime="20240910 18:28:00.603"/>
</kw>
<status status="PASS" starttime="20240910 18:28:00.596" endtime="20240910 18:28:00.603"/>
</kw>
<msg timestamp="20240910 18:28:00.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:00.596" endtime="20240910 18:28:00.603"/>
</kw>
<status status="PASS" starttime="20240910 18:28:00.596" endtime="20240910 18:28:00.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:00.606" level="INFO">Running command 'ozone sh key put -t RATIS o3:///95353-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:05.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:05.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:00.605" endtime="20240910 18:28:05.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:05.779" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:05.778" endtime="20240910 18:28:05.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:05.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:05.779" endtime="20240910 18:28:05.779"/>
</kw>
<status status="PASS" starttime="20240910 18:28:00.604" endtime="20240910 18:28:05.779"/>
</kw>
<msg timestamp="20240910 18:28:05.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:00.604" endtime="20240910 18:28:05.779"/>
</kw>
<status status="PASS" starttime="20240910 18:28:00.604" endtime="20240910 18:28:05.780"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:05.783" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:05.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:05.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:05.781" endtime="20240910 18:28:05.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:05.787" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:05.787" endtime="20240910 18:28:05.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:05.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:05.787" endtime="20240910 18:28:05.788"/>
</kw>
<status status="PASS" starttime="20240910 18:28:05.780" endtime="20240910 18:28:05.788"/>
</kw>
<msg timestamp="20240910 18:28:05.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:05.780" endtime="20240910 18:28:05.788"/>
</kw>
<status status="PASS" starttime="20240910 18:28:05.780" endtime="20240910 18:28:05.788"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:05.791" level="INFO">Running command 'ozone sh key get o3:///95353-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:10.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:10.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:05.789" endtime="20240910 18:28:10.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:10.682" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:10.682" endtime="20240910 18:28:10.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:10.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:10.682" endtime="20240910 18:28:10.683"/>
</kw>
<status status="PASS" starttime="20240910 18:28:05.789" endtime="20240910 18:28:10.683"/>
</kw>
<msg timestamp="20240910 18:28:10.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:05.789" endtime="20240910 18:28:10.683"/>
</kw>
<status status="PASS" starttime="20240910 18:28:05.788" endtime="20240910 18:28:10.683"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:10.686" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:10.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:10.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:10.684" endtime="20240910 18:28:10.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:10.690" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:10.689" endtime="20240910 18:28:10.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:10.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:10.690" endtime="20240910 18:28:10.690"/>
</kw>
<status status="PASS" starttime="20240910 18:28:10.684" endtime="20240910 18:28:10.690"/>
</kw>
<msg timestamp="20240910 18:28:10.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:10.683" endtime="20240910 18:28:10.691"/>
</kw>
<status status="PASS" starttime="20240910 18:28:10.683" endtime="20240910 18:28:10.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:10.694" level="INFO">Running command 'ozone sh key info o3:///95353-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:14.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:14.270" level="INFO">${output} = {
  "volumeName": "95353-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:28:03.994Z",
  "modificationTime": "...</msg>
<status status="PASS" starttime="20240910 18:28:10.692" endtime="20240910 18:28:14.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:14.271" level="INFO">{
  "volumeName": "95353-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:28:03.994Z",
  "modificationTime": "2024-09-10T18:28:05.334Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 113750153625600016,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 307,
  "file": true
}</msg>
<status status="PASS" starttime="20240910 18:28:14.271" endtime="20240910 18:28:14.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:14.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:14.271" endtime="20240910 18:28:14.272"/>
</kw>
<status status="PASS" starttime="20240910 18:28:10.692" endtime="20240910 18:28:14.272"/>
</kw>
<msg timestamp="20240910 18:28:14.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:10.691" endtime="20240910 18:28:14.272"/>
</kw>
<msg timestamp="20240910 18:28:14.272" level="INFO">${result} = {
  "volumeName": "95353-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:28:03.994Z",
  "modificationTime": "...</msg>
<status status="PASS" starttime="20240910 18:28:10.691" endtime="20240910 18:28:14.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:28:14.272" endtime="20240910 18:28:14.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:14.276" level="INFO">Running command 'ozone sh key delete o3:///95353-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:17.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:17.936" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20240910 18:28:14.274" endtime="20240910 18:28:17.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:17.937" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20240910 18:28:17.936" endtime="20240910 18:28:17.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:17.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:17.937" endtime="20240910 18:28:17.938"/>
</kw>
<status status="PASS" starttime="20240910 18:28:14.274" endtime="20240910 18:28:17.938"/>
</kw>
<msg timestamp="20240910 18:28:17.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:14.273" endtime="20240910 18:28:17.938"/>
</kw>
<status status="PASS" starttime="20240910 18:28:14.273" endtime="20240910 18:28:17.938"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:17.941" level="INFO">Running command 'ozone sh key cp o3:///95353-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:23.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:23.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:17.939" endtime="20240910 18:28:23.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:23.141" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:23.140" endtime="20240910 18:28:23.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:23.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:23.141" endtime="20240910 18:28:23.141"/>
</kw>
<status status="PASS" starttime="20240910 18:28:17.939" endtime="20240910 18:28:23.141"/>
</kw>
<msg timestamp="20240910 18:28:23.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:17.939" endtime="20240910 18:28:23.142"/>
</kw>
<status status="PASS" starttime="20240910 18:28:17.938" endtime="20240910 18:28:23.142"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:23.145" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:23.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:23.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:23.143" endtime="20240910 18:28:23.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:23.149" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:23.149" endtime="20240910 18:28:23.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:23.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:23.149" endtime="20240910 18:28:23.149"/>
</kw>
<status status="PASS" starttime="20240910 18:28:23.142" endtime="20240910 18:28:23.150"/>
</kw>
<msg timestamp="20240910 18:28:23.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:23.142" endtime="20240910 18:28:23.150"/>
</kw>
<status status="PASS" starttime="20240910 18:28:23.142" endtime="20240910 18:28:23.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:23.154" level="INFO">Running command 'ozone sh key get o3:///95353-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:27.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:27.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:23.151" endtime="20240910 18:28:27.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:27.955" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:27.954" endtime="20240910 18:28:27.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:27.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:27.955" endtime="20240910 18:28:27.956"/>
</kw>
<status status="PASS" starttime="20240910 18:28:23.151" endtime="20240910 18:28:27.956"/>
</kw>
<msg timestamp="20240910 18:28:27.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:23.150" endtime="20240910 18:28:27.956"/>
</kw>
<status status="PASS" starttime="20240910 18:28:23.150" endtime="20240910 18:28:27.956"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:27.960" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:27.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:27.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:27.957" endtime="20240910 18:28:27.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:27.963" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:27.963" endtime="20240910 18:28:27.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:27.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:27.963" endtime="20240910 18:28:27.964"/>
</kw>
<status status="PASS" starttime="20240910 18:28:27.957" endtime="20240910 18:28:27.964"/>
</kw>
<msg timestamp="20240910 18:28:27.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:27.957" endtime="20240910 18:28:27.964"/>
</kw>
<status status="PASS" starttime="20240910 18:28:27.956" endtime="20240910 18:28:27.964"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:27.967" level="INFO">Running command 'ozone sh key delete o3:///95353-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:31.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:31.497" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20240910 18:28:27.965" endtime="20240910 18:28:31.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:31.498" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20240910 18:28:31.497" endtime="20240910 18:28:31.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:31.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:31.498" endtime="20240910 18:28:31.499"/>
</kw>
<status status="PASS" starttime="20240910 18:28:27.965" endtime="20240910 18:28:31.499"/>
</kw>
<msg timestamp="20240910 18:28:31.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:27.965" endtime="20240910 18:28:31.499"/>
</kw>
<status status="PASS" starttime="20240910 18:28:27.964" endtime="20240910 18:28:31.499"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:31.502" level="INFO">Running command 'ozone sh key get o3:///95353-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:34.822" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:28:34.822" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20240910 18:28:31.500" endtime="20240910 18:28:34.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:34.823" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20240910 18:28:34.823" endtime="20240910 18:28:34.823"/>
</kw>
<msg timestamp="20240910 18:28:34.824" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20240910 18:28:31.499" endtime="20240910 18:28:34.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:28:34.824" endtime="20240910 18:28:34.824"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:34.828" level="INFO">Running command 'ozone sh key get --force o3:///95353-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:39.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:39.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:34.825" endtime="20240910 18:28:39.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:39.716" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:39.715" endtime="20240910 18:28:39.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:39.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:39.716" endtime="20240910 18:28:39.717"/>
</kw>
<status status="PASS" starttime="20240910 18:28:34.825" endtime="20240910 18:28:39.717"/>
</kw>
<msg timestamp="20240910 18:28:39.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:34.825" endtime="20240910 18:28:39.717"/>
</kw>
<msg timestamp="20240910 18:28:39.717" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:28:34.824" endtime="20240910 18:28:39.717"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:28:39.717" endtime="20240910 18:28:39.718"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:39.721" level="INFO">Running command 'ozone sh key info o3:///95353-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:43.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:43.508" level="INFO">${output} = {
  "volumeName": "95353-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:27:53.930Z",
  "modificationTime": "2024-0...</msg>
<status status="PASS" starttime="20240910 18:28:39.719" endtime="20240910 18:28:43.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:43.509" level="INFO">{
  "volumeName": "95353-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:27:53.930Z",
  "modificationTime": "2024-09-10T18:27:55.301Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 113750153625600015,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 303,
  "file": true
}</msg>
<status status="PASS" starttime="20240910 18:28:43.508" endtime="20240910 18:28:43.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:43.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:43.509" endtime="20240910 18:28:43.509"/>
</kw>
<status status="PASS" starttime="20240910 18:28:39.719" endtime="20240910 18:28:43.510"/>
</kw>
<msg timestamp="20240910 18:28:43.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:39.718" endtime="20240910 18:28:43.510"/>
</kw>
<msg timestamp="20240910 18:28:43.510" level="INFO">${result} = {
  "volumeName": "95353-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 17289,
  "creationTime": "2024-09-10T18:27:53.930Z",
  "modificationTime": "2024-0...</msg>
<status status="PASS" starttime="20240910 18:28:39.718" endtime="20240910 18:28:43.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:28:43.510" endtime="20240910 18:28:43.510"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:28:43.510" endtime="20240910 18:28:43.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:43.515" level="INFO">Running command 'ozone sh key list o3:///95353-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:47.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:47.552" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20240910 18:28:43.513" endtime="20240910 18:28:47.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:47.553" level="INFO">key1</msg>
<status status="PASS" starttime="20240910 18:28:47.553" endtime="20240910 18:28:47.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:47.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:47.553" endtime="20240910 18:28:47.554"/>
</kw>
<status status="PASS" starttime="20240910 18:28:43.512" endtime="20240910 18:28:47.554"/>
</kw>
<msg timestamp="20240910 18:28:47.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:43.511" endtime="20240910 18:28:47.554"/>
</kw>
<msg timestamp="20240910 18:28:47.554" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20240910 18:28:43.511" endtime="20240910 18:28:47.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:28:47.554" endtime="20240910 18:28:47.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:47.558" level="INFO">Running command 'ozone sh key rename o3:///95353-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:50.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:50.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:47.556" endtime="20240910 18:28:50.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:50.810" level="INFO"/>
<status status="PASS" starttime="20240910 18:28:50.810" endtime="20240910 18:28:50.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:50.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:50.810" endtime="20240910 18:28:50.811"/>
</kw>
<status status="PASS" starttime="20240910 18:28:47.555" endtime="20240910 18:28:50.811"/>
</kw>
<msg timestamp="20240910 18:28:50.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:47.555" endtime="20240910 18:28:50.811"/>
</kw>
<status status="PASS" starttime="20240910 18:28:47.555" endtime="20240910 18:28:50.811"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:50.815" level="INFO">Running command 'ozone sh key list o3:///95353-without-host/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:54.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:54.533" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20240910 18:28:50.813" endtime="20240910 18:28:54.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:54.534" level="INFO">key2</msg>
<status status="PASS" starttime="20240910 18:28:54.533" endtime="20240910 18:28:54.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:54.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:54.534" endtime="20240910 18:28:54.534"/>
</kw>
<status status="PASS" starttime="20240910 18:28:50.812" endtime="20240910 18:28:54.534"/>
</kw>
<msg timestamp="20240910 18:28:54.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:50.812" endtime="20240910 18:28:54.534"/>
</kw>
<msg timestamp="20240910 18:28:54.535" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20240910 18:28:50.811" endtime="20240910 18:28:54.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:28:54.535" endtime="20240910 18:28:54.535"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:54.538" level="INFO">Running command 'ozone sh key delete o3:///95353-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:28:58.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:28:58.119" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20240910 18:28:54.536" endtime="20240910 18:28:58.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:28:58.120" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20240910 18:28:58.120" endtime="20240910 18:28:58.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:28:58.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:28:58.120" endtime="20240910 18:28:58.121"/>
</kw>
<status status="PASS" starttime="20240910 18:28:54.536" endtime="20240910 18:28:58.121"/>
</kw>
<msg timestamp="20240910 18:28:58.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:54.536" endtime="20240910 18:28:58.121"/>
</kw>
<status status="PASS" starttime="20240910 18:28:54.535" endtime="20240910 18:28:58.121"/>
</kw>
<status status="PASS" starttime="20240910 18:27:50.558" endtime="20240910 18:28:58.121"/>
</kw>
<status status="PASS" starttime="20240910 18:27:50.558" endtime="20240910 18:28:58.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:28:58.125" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///95353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:01.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:01.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:28:58.123" endtime="20240910 18:29:01.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:01.815" level="INFO"/>
<status status="PASS" starttime="20240910 18:29:01.814" endtime="20240910 18:29:01.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:01.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:01.815" endtime="20240910 18:29:01.815"/>
</kw>
<status status="PASS" starttime="20240910 18:28:58.122" endtime="20240910 18:29:01.815"/>
</kw>
<msg timestamp="20240910 18:29:01.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:28:58.122" endtime="20240910 18:29:01.815"/>
</kw>
<status status="PASS" starttime="20240910 18:28:58.122" endtime="20240910 18:29:01.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:01.820" level="INFO">Running command 'ozone sh volume info o3:///95353-without-host | jq -r '. | select(.name=="95353-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:05.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:05.582" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:29:01.817" endtime="20240910 18:29:05.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:05.583" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:29:05.582" endtime="20240910 18:29:05.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:05.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:05.583" endtime="20240910 18:29:05.583"/>
</kw>
<status status="PASS" starttime="20240910 18:29:01.817" endtime="20240910 18:29:05.584"/>
</kw>
<msg timestamp="20240910 18:29:05.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:01.816" endtime="20240910 18:29:05.584"/>
</kw>
<msg timestamp="20240910 18:29:05.584" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:29:01.816" endtime="20240910 18:29:05.584"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:29:05.584" endtime="20240910 18:29:05.584"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:05.588" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///95353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:08.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:08.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:29:05.585" endtime="20240910 18:29:08.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:08.774" level="INFO"/>
<status status="PASS" starttime="20240910 18:29:08.774" endtime="20240910 18:29:08.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:08.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:08.775" endtime="20240910 18:29:08.775"/>
</kw>
<status status="PASS" starttime="20240910 18:29:05.585" endtime="20240910 18:29:08.775"/>
</kw>
<msg timestamp="20240910 18:29:08.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:05.585" endtime="20240910 18:29:08.775"/>
</kw>
<status status="PASS" starttime="20240910 18:29:05.584" endtime="20240910 18:29:08.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:08.779" level="INFO">Running command 'ozone sh volume info o3:///95353-without-host | jq -r '. | select(.name=="95353-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:12.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:12.417" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:29:08.777" endtime="20240910 18:29:12.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:12.418" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:29:12.417" endtime="20240910 18:29:12.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:12.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:12.418" endtime="20240910 18:29:12.418"/>
</kw>
<status status="PASS" starttime="20240910 18:29:08.777" endtime="20240910 18:29:12.418"/>
</kw>
<msg timestamp="20240910 18:29:12.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:08.776" endtime="20240910 18:29:12.419"/>
</kw>
<msg timestamp="20240910 18:29:12.419" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:29:08.776" endtime="20240910 18:29:12.419"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:29:12.419" endtime="20240910 18:29:12.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:12.422" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///95353-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:15.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:15.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:29:12.420" endtime="20240910 18:29:15.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:15.995" level="INFO"/>
<status status="PASS" starttime="20240910 18:29:15.994" endtime="20240910 18:29:15.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:15.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:15.995" endtime="20240910 18:29:15.996"/>
</kw>
<status status="PASS" starttime="20240910 18:29:12.420" endtime="20240910 18:29:15.996"/>
</kw>
<msg timestamp="20240910 18:29:15.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:12.420" endtime="20240910 18:29:15.996"/>
</kw>
<status status="PASS" starttime="20240910 18:29:12.419" endtime="20240910 18:29:15.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:16.000" level="INFO">Running command 'ozone sh bucket info o3:///95353-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:19.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:19.531" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:29:15.998" endtime="20240910 18:29:19.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:19.532" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:29:19.531" endtime="20240910 18:29:19.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:19.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:19.532" endtime="20240910 18:29:19.533"/>
</kw>
<status status="PASS" starttime="20240910 18:29:15.998" endtime="20240910 18:29:19.533"/>
</kw>
<msg timestamp="20240910 18:29:19.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:15.997" endtime="20240910 18:29:19.533"/>
</kw>
<msg timestamp="20240910 18:29:19.533" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:29:15.997" endtime="20240910 18:29:19.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:29:19.533" endtime="20240910 18:29:19.534"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:19.537" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///95353-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:23.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:23.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:29:19.535" endtime="20240910 18:29:23.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:23.198" level="INFO"/>
<status status="PASS" starttime="20240910 18:29:23.197" endtime="20240910 18:29:23.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:23.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:23.198" endtime="20240910 18:29:23.198"/>
</kw>
<status status="PASS" starttime="20240910 18:29:19.535" endtime="20240910 18:29:23.198"/>
</kw>
<msg timestamp="20240910 18:29:23.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:19.534" endtime="20240910 18:29:23.198"/>
</kw>
<status status="PASS" starttime="20240910 18:29:19.534" endtime="20240910 18:29:23.199"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:23.202" level="INFO">Running command 'ozone sh bucket info o3:///95353-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:26.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:26.694" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:29:23.200" endtime="20240910 18:29:26.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:26.695" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:29:26.694" endtime="20240910 18:29:26.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:26.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:26.695" endtime="20240910 18:29:26.695"/>
</kw>
<status status="PASS" starttime="20240910 18:29:23.200" endtime="20240910 18:29:26.695"/>
</kw>
<msg timestamp="20240910 18:29:26.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:23.199" endtime="20240910 18:29:26.696"/>
</kw>
<msg timestamp="20240910 18:29:26.696" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:29:23.199" endtime="20240910 18:29:26.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:29:26.696" endtime="20240910 18:29:26.696"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:26.700" level="INFO">Running command 'ozone sh bucket delete -r --yes o3:///95353-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:30.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:30.563" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:29:26.697" endtime="20240910 18:29:30.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:30.564" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:29:30.564" endtime="20240910 18:29:30.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:30.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:30.564" endtime="20240910 18:29:30.565"/>
</kw>
<status status="PASS" starttime="20240910 18:29:26.697" endtime="20240910 18:29:30.565"/>
</kw>
<msg timestamp="20240910 18:29:30.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:26.697" endtime="20240910 18:29:30.565"/>
</kw>
<status status="PASS" starttime="20240910 18:29:26.696" endtime="20240910 18:29:30.565"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:30.568" level="INFO">Running command 'ozone sh volume delete o3:///95353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:34.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:34.036" level="INFO">${output} = Volume 95353-without-host is deleted</msg>
<status status="PASS" starttime="20240910 18:29:30.566" endtime="20240910 18:29:34.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:34.038" level="INFO">Volume 95353-without-host is deleted</msg>
<status status="PASS" starttime="20240910 18:29:34.037" endtime="20240910 18:29:34.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:34.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:34.038" endtime="20240910 18:29:34.038"/>
</kw>
<status status="PASS" starttime="20240910 18:29:30.566" endtime="20240910 18:29:34.038"/>
</kw>
<msg timestamp="20240910 18:29:34.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:30.566" endtime="20240910 18:29:34.039"/>
</kw>
<status status="PASS" starttime="20240910 18:29:30.565" endtime="20240910 18:29:34.039"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:34.043" level="INFO">Running command 'ozone sh volume create o3:///95353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:37.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:37.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:29:34.041" endtime="20240910 18:29:37.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:37.326" level="INFO"/>
<status status="PASS" starttime="20240910 18:29:37.326" endtime="20240910 18:29:37.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:37.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:37.326" endtime="20240910 18:29:37.327"/>
</kw>
<status status="PASS" starttime="20240910 18:29:34.040" endtime="20240910 18:29:37.327"/>
</kw>
<msg timestamp="20240910 18:29:37.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:34.040" endtime="20240910 18:29:37.327"/>
</kw>
<status status="PASS" starttime="20240910 18:29:34.039" endtime="20240910 18:29:37.327"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:37.331" level="INFO">Running command 'ozone sh volume info o3:///95353-without-host &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:29:40.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:40.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:29:37.328" endtime="20240910 18:29:40.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:40.773" level="INFO"/>
<status status="PASS" starttime="20240910 18:29:40.772" endtime="20240910 18:29:40.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:40.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:40.773" endtime="20240910 18:29:40.773"/>
</kw>
<status status="PASS" starttime="20240910 18:29:37.328" endtime="20240910 18:29:40.773"/>
</kw>
<msg timestamp="20240910 18:29:40.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:37.328" endtime="20240910 18:29:40.774"/>
</kw>
<status status="PASS" starttime="20240910 18:29:37.327" endtime="20240910 18:29:40.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:40.777" level="INFO">Running command 'jq -r '. | select(.name=="95353-without-host") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:40.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:40.782" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:29:40.775" endtime="20240910 18:29:40.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:40.783" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:29:40.783" endtime="20240910 18:29:40.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:40.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:40.783" endtime="20240910 18:29:40.784"/>
</kw>
<status status="PASS" starttime="20240910 18:29:40.775" endtime="20240910 18:29:40.784"/>
</kw>
<msg timestamp="20240910 18:29:40.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:40.774" endtime="20240910 18:29:40.784"/>
</kw>
<msg timestamp="20240910 18:29:40.784" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:29:40.774" endtime="20240910 18:29:40.784"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:29:40.784" endtime="20240910 18:29:40.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:40.788" level="INFO">Running command 'jq -r '. | select(.name=="95353-without-host") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:40.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:40.793" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:29:40.786" endtime="20240910 18:29:40.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:40.793" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:29:40.793" endtime="20240910 18:29:40.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:40.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:40.793" endtime="20240910 18:29:40.794"/>
</kw>
<status status="PASS" starttime="20240910 18:29:40.785" endtime="20240910 18:29:40.794"/>
</kw>
<msg timestamp="20240910 18:29:40.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:40.785" endtime="20240910 18:29:40.794"/>
</kw>
<msg timestamp="20240910 18:29:40.794" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:29:40.785" endtime="20240910 18:29:40.794"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:29:40.794" endtime="20240910 18:29:40.795"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:40.798" level="INFO">Running command 'ozone sh bucket create o3:///95353-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:44.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:44.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:29:40.796" endtime="20240910 18:29:44.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:44.442" level="INFO"/>
<status status="PASS" starttime="20240910 18:29:44.441" endtime="20240910 18:29:44.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:44.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:44.442" endtime="20240910 18:29:44.443"/>
</kw>
<status status="PASS" starttime="20240910 18:29:40.795" endtime="20240910 18:29:44.443"/>
</kw>
<msg timestamp="20240910 18:29:44.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:40.795" endtime="20240910 18:29:44.443"/>
</kw>
<status status="PASS" starttime="20240910 18:29:40.795" endtime="20240910 18:29:44.443"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:44.447" level="INFO">Running command 'ozone sh bucket info o3:///95353-without-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20240910 18:29:48.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:48.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:29:44.445" endtime="20240910 18:29:48.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:48.155" level="INFO"/>
<status status="PASS" starttime="20240910 18:29:48.154" endtime="20240910 18:29:48.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:48.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:48.155" endtime="20240910 18:29:48.155"/>
</kw>
<status status="PASS" starttime="20240910 18:29:44.444" endtime="20240910 18:29:48.155"/>
</kw>
<msg timestamp="20240910 18:29:48.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:44.444" endtime="20240910 18:29:48.156"/>
</kw>
<status status="PASS" starttime="20240910 18:29:44.443" endtime="20240910 18:29:48.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:48.159" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:48.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:48.164" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:29:48.157" endtime="20240910 18:29:48.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:48.165" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:29:48.164" endtime="20240910 18:29:48.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:48.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:48.165" endtime="20240910 18:29:48.165"/>
</kw>
<status status="PASS" starttime="20240910 18:29:48.157" endtime="20240910 18:29:48.165"/>
</kw>
<msg timestamp="20240910 18:29:48.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:48.156" endtime="20240910 18:29:48.165"/>
</kw>
<msg timestamp="20240910 18:29:48.166" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:29:48.156" endtime="20240910 18:29:48.166"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:29:48.166" endtime="20240910 18:29:48.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:48.169" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:48.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:48.174" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20240910 18:29:48.167" endtime="20240910 18:29:48.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:48.175" level="INFO">-1</msg>
<status status="PASS" starttime="20240910 18:29:48.174" endtime="20240910 18:29:48.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:48.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:48.175" endtime="20240910 18:29:48.175"/>
</kw>
<status status="PASS" starttime="20240910 18:29:48.167" endtime="20240910 18:29:48.175"/>
</kw>
<msg timestamp="20240910 18:29:48.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:48.167" endtime="20240910 18:29:48.175"/>
</kw>
<msg timestamp="20240910 18:29:48.176" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20240910 18:29:48.166" endtime="20240910 18:29:48.176"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:29:48.176" endtime="20240910 18:29:48.176"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:48.179" level="INFO">Running command 'ozone sh bucket delete o3:///95353-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:51.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:51.703" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:29:48.177" endtime="20240910 18:29:51.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:51.704" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20240910 18:29:51.703" endtime="20240910 18:29:51.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:51.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:51.704" endtime="20240910 18:29:51.704"/>
</kw>
<status status="PASS" starttime="20240910 18:29:48.177" endtime="20240910 18:29:51.705"/>
</kw>
<msg timestamp="20240910 18:29:51.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:48.177" endtime="20240910 18:29:51.705"/>
</kw>
<status status="PASS" starttime="20240910 18:29:48.176" endtime="20240910 18:29:51.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:51.709" level="INFO">Running command 'ozone sh volume delete o3:///95353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:55.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:55.274" level="INFO">${output} = Volume 95353-without-host is deleted</msg>
<status status="PASS" starttime="20240910 18:29:51.706" endtime="20240910 18:29:55.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:55.275" level="INFO">Volume 95353-without-host is deleted</msg>
<status status="PASS" starttime="20240910 18:29:55.274" endtime="20240910 18:29:55.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:55.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:55.275" endtime="20240910 18:29:55.275"/>
</kw>
<status status="PASS" starttime="20240910 18:29:51.706" endtime="20240910 18:29:55.275"/>
</kw>
<msg timestamp="20240910 18:29:55.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:51.706" endtime="20240910 18:29:55.276"/>
</kw>
<status status="PASS" starttime="20240910 18:29:51.705" endtime="20240910 18:29:55.276"/>
</kw>
<status status="PASS" starttime="20240910 18:27:15.081" endtime="20240910 18:29:55.276"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240910 18:27:15.011" endtime="20240910 18:29:55.276"/>
</test>
<test id="s1-s2-s5-t9" name="RpcClient Delete key" line="51">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:29:55.278" endtime="20240910 18:29:55.278"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:55.281" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:55.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:55.285" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:29:55.279" endtime="20240910 18:29:55.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:55.286" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:29:55.285" endtime="20240910 18:29:55.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:55.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:55.286" endtime="20240910 18:29:55.286"/>
</kw>
<status status="PASS" starttime="20240910 18:29:55.279" endtime="20240910 18:29:55.287"/>
</kw>
<msg timestamp="20240910 18:29:55.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:55.279" endtime="20240910 18:29:55.287"/>
</kw>
<msg timestamp="20240910 18:29:55.287" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:29:55.278" endtime="20240910 18:29:55.287"/>
</kw>
<msg timestamp="20240910 18:29:55.287" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:29:55.278" endtime="20240910 18:29:55.287"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:29:55.287" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:29:55.287" endtime="20240910 18:29:55.288"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:55.291" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:55.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:55.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:29:55.289" endtime="20240910 18:29:55.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:55.350" level="INFO"/>
<status status="PASS" starttime="20240910 18:29:55.349" endtime="20240910 18:29:55.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:55.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:55.350" endtime="20240910 18:29:55.351"/>
</kw>
<status status="PASS" starttime="20240910 18:29:55.289" endtime="20240910 18:29:55.351"/>
</kw>
<msg timestamp="20240910 18:29:55.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:55.288" endtime="20240910 18:29:55.351"/>
</kw>
<status status="PASS" starttime="20240910 18:29:55.288" endtime="20240910 18:29:55.351"/>
</kw>
<status status="PASS" starttime="20240910 18:29:55.288" endtime="20240910 18:29:55.351"/>
</kw>
<status status="PASS" starttime="20240910 18:29:55.277" endtime="20240910 18:29:55.351"/>
</kw>
<status status="PASS" starttime="20240910 18:29:55.277" endtime="20240910 18:29:55.351"/>
</kw>
<kw name="Test Delete key with Trash" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-del</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:55.356" level="INFO">Running command 'ozone sh volume create o3://om:9862/95353-with-del 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:29:59.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:29:59.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:29:55.353" endtime="20240910 18:29:59.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:29:59.014" level="INFO"/>
<status status="PASS" starttime="20240910 18:29:59.013" endtime="20240910 18:29:59.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:29:59.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:29:59.014" endtime="20240910 18:29:59.014"/>
</kw>
<status status="PASS" starttime="20240910 18:29:55.353" endtime="20240910 18:29:59.015"/>
</kw>
<msg timestamp="20240910 18:29:59.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:55.352" endtime="20240910 18:29:59.015"/>
</kw>
<status status="PASS" starttime="20240910 18:29:55.352" endtime="20240910 18:29:59.015"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bfso --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:29:59.018" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:02.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:02.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:29:59.016" endtime="20240910 18:30:02.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:02.608" level="INFO"/>
<status status="PASS" starttime="20240910 18:30:02.607" endtime="20240910 18:30:02.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:02.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:02.608" endtime="20240910 18:30:02.609"/>
</kw>
<status status="PASS" starttime="20240910 18:29:59.016" endtime="20240910 18:30:02.609"/>
</kw>
<msg timestamp="20240910 18:30:02.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:29:59.015" endtime="20240910 18:30:02.609"/>
</kw>
<status status="PASS" starttime="20240910 18:29:59.015" endtime="20240910 18:30:02.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bfso/key3 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:02.613" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/95353-with-del/bfso/key3 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:07.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:07.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:30:02.610" endtime="20240910 18:30:07.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:07.893" level="INFO"/>
<status status="PASS" starttime="20240910 18:30:07.892" endtime="20240910 18:30:07.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:07.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:07.893" endtime="20240910 18:30:07.893"/>
</kw>
<status status="PASS" starttime="20240910 18:30:02.610" endtime="20240910 18:30:07.893"/>
</kw>
<msg timestamp="20240910 18:30:07.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:02.610" endtime="20240910 18:30:07.894"/>
</kw>
<status status="PASS" starttime="20240910 18:30:02.609" endtime="20240910 18:30:07.894"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bfso/key3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:07.897" level="INFO">Running command 'ozone sh key delete o3://om:9862/95353-with-del/bfso/key3 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:11.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:11.612" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key3 </msg>
<status status="PASS" starttime="20240910 18:30:07.895" endtime="20240910 18:30:11.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:11.612" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key3 </msg>
<status status="PASS" starttime="20240910 18:30:11.612" endtime="20240910 18:30:11.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:11.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:11.613" endtime="20240910 18:30:11.613"/>
</kw>
<status status="PASS" starttime="20240910 18:30:07.895" endtime="20240910 18:30:11.613"/>
</kw>
<msg timestamp="20240910 18:30:11.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:07.894" endtime="20240910 18:30:11.613"/>
</kw>
<status status="PASS" starttime="20240910 18:30:07.894" endtime="20240910 18:30:11.613"/>
</kw>
<kw name="Execute" library="os">
<var>${fsokey}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bfso</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:11.617" level="INFO">Running command 'ozone sh key list o3://om:9862/95353-with-del/bfso 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:15.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:15.446" level="INFO">${output} = [ {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20240910 18:30:11.615" endtime="20240910 18:30:15.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:15.447" level="INFO">[ {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2024-09-10T18:30:11.472Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2024-09-10T18:30:11.472Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2024-09-10T18:30:11.478Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/key3",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:30:06.175Z",
  "modificationTime" : "2024-09-10T18:30:07.447Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20240910 18:30:15.446" endtime="20240910 18:30:15.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:15.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:15.447" endtime="20240910 18:30:15.448"/>
</kw>
<status status="PASS" starttime="20240910 18:30:11.614" endtime="20240910 18:30:15.448"/>
</kw>
<msg timestamp="20240910 18:30:15.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:11.614" endtime="20240910 18:30:15.448"/>
</kw>
<msg timestamp="20240910 18:30:15.448" level="INFO">${fsokey} = [ {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20240910 18:30:11.614" endtime="20240910 18:30:15.448"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:15.452" level="INFO">Running command 'echo '[ {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2024-09-10T18:30:11.472Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2024-09-10T18:30:11.472Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2024-09-10T18:30:11.478Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/key3",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:30:06.175Z",
  "modificationTime" : "2024-09-10T18:30:07.447Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:15.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:15.457" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key3</msg>
<status status="PASS" starttime="20240910 18:30:15.450" endtime="20240910 18:30:15.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:15.458" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key3</msg>
<status status="PASS" starttime="20240910 18:30:15.457" endtime="20240910 18:30:15.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:15.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:15.458" endtime="20240910 18:30:15.458"/>
</kw>
<status status="PASS" starttime="20240910 18:30:15.449" endtime="20240910 18:30:15.458"/>
</kw>
<msg timestamp="20240910 18:30:15.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:15.449" endtime="20240910 18:30:15.459"/>
</kw>
<msg timestamp="20240910 18:30:15.459" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key3</msg>
<status status="PASS" starttime="20240910 18:30:15.448" endtime="20240910 18:30:15.459"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20240910 18:30:15.459" endtime="20240910 18:30:15.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:30:15.459" endtime="20240910 18:30:15.459"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:15.462" level="INFO">Running command 'echo '[ {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2024-09-10T18:30:11.472Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2024-09-10T18:30:11.472Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2024-09-10T18:30:11.472Z",
  "modificationTime" : "2024-09-10T18:30:11.478Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "95353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/key3",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:30:06.175Z",
  "modificationTime" : "2024-09-10T18:30:07.447Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:15.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:15.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:30:15.461" endtime="20240910 18:30:15.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:15.468" level="INFO"/>
<status status="PASS" starttime="20240910 18:30:15.468" endtime="20240910 18:30:15.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:15.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:15.469" endtime="20240910 18:30:15.469"/>
</kw>
<status status="PASS" starttime="20240910 18:30:15.460" endtime="20240910 18:30:15.469"/>
</kw>
<msg timestamp="20240910 18:30:15.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:15.460" endtime="20240910 18:30:15.469"/>
</kw>
<msg timestamp="20240910 18:30:15.469" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:30:15.460" endtime="20240910 18:30:15.469"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:30:15.470" endtime="20240910 18:30:15.470"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/obsbkt --layout OBJECT_STORE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:15.473" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95353-with-del/obsbkt --layout OBJECT_STORE 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:19.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:19.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:30:15.471" endtime="20240910 18:30:19.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:19.121" level="INFO"/>
<status status="PASS" starttime="20240910 18:30:19.120" endtime="20240910 18:30:19.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:19.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:19.121" endtime="20240910 18:30:19.121"/>
</kw>
<status status="PASS" starttime="20240910 18:30:15.471" endtime="20240910 18:30:19.122"/>
</kw>
<msg timestamp="20240910 18:30:19.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:15.470" endtime="20240910 18:30:19.122"/>
</kw>
<status status="PASS" starttime="20240910 18:30:15.470" endtime="20240910 18:30:19.122"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/obsbkt/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:19.125" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/95353-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:24.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:24.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:30:19.123" endtime="20240910 18:30:24.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:24.474" level="INFO"/>
<status status="PASS" starttime="20240910 18:30:24.474" endtime="20240910 18:30:24.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:24.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:24.475" endtime="20240910 18:30:24.475"/>
</kw>
<status status="PASS" starttime="20240910 18:30:19.123" endtime="20240910 18:30:24.475"/>
</kw>
<msg timestamp="20240910 18:30:24.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:19.123" endtime="20240910 18:30:24.475"/>
</kw>
<status status="PASS" starttime="20240910 18:30:19.122" endtime="20240910 18:30:24.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/obsbkt/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:24.479" level="INFO">Running command 'ozone sh key delete o3://om:9862/95353-with-del/obsbkt/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:27.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:27.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:30:24.477" endtime="20240910 18:30:27.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:27.989" level="INFO"/>
<status status="PASS" starttime="20240910 18:30:27.989" endtime="20240910 18:30:27.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:27.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:27.990" endtime="20240910 18:30:27.990"/>
</kw>
<status status="PASS" starttime="20240910 18:30:24.476" endtime="20240910 18:30:27.990"/>
</kw>
<msg timestamp="20240910 18:30:27.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:24.476" endtime="20240910 18:30:27.990"/>
</kw>
<status status="PASS" starttime="20240910 18:30:24.475" endtime="20240910 18:30:27.990"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/obsbkt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:27.994" level="INFO">Running command 'ozone sh key list o3://om:9862/95353-with-del/obsbkt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:31.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:31.647" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20240910 18:30:27.992" endtime="20240910 18:30:31.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:31.648" level="INFO">[ ]</msg>
<status status="PASS" starttime="20240910 18:30:31.647" endtime="20240910 18:30:31.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:31.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:31.648" endtime="20240910 18:30:31.648"/>
</kw>
<status status="PASS" starttime="20240910 18:30:27.992" endtime="20240910 18:30:31.649"/>
</kw>
<msg timestamp="20240910 18:30:31.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:27.991" endtime="20240910 18:30:31.649"/>
</kw>
<msg timestamp="20240910 18:30:31.649" level="INFO">${result} = [ ]</msg>
<status status="PASS" starttime="20240910 18:30:27.991" endtime="20240910 18:30:31.649"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:30:31.649" endtime="20240910 18:30:31.649"/>
</kw>
<status status="PASS" starttime="20240910 18:29:55.351" endtime="20240910 18:30:31.649"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240910 18:29:55.276" endtime="20240910 18:30:31.650"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20240910 18:20:24.204" endtime="20240910 18:30:31.651"/>
</suite>
<suite id="s1-s2-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s2-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:30:31.660" endtime="20240910 18:30:31.660"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:31.664" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:31.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:31.668" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:30:31.662" endtime="20240910 18:30:31.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:31.668" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:30:31.668" endtime="20240910 18:30:31.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:31.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:31.669" endtime="20240910 18:30:31.669"/>
</kw>
<status status="PASS" starttime="20240910 18:30:31.661" endtime="20240910 18:30:31.669"/>
</kw>
<msg timestamp="20240910 18:30:31.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:31.661" endtime="20240910 18:30:31.669"/>
</kw>
<msg timestamp="20240910 18:30:31.669" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:30:31.661" endtime="20240910 18:30:31.669"/>
</kw>
<msg timestamp="20240910 18:30:31.670" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:30:31.661" endtime="20240910 18:30:31.670"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:30:31.670" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:30:31.670" endtime="20240910 18:30:31.670"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:31.673" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:31.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:31.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:30:31.671" endtime="20240910 18:30:31.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:31.741" level="INFO"/>
<status status="PASS" starttime="20240910 18:30:31.740" endtime="20240910 18:30:31.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:31.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:31.741" endtime="20240910 18:30:31.741"/>
</kw>
<status status="PASS" starttime="20240910 18:30:31.671" endtime="20240910 18:30:31.741"/>
</kw>
<msg timestamp="20240910 18:30:31.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:31.671" endtime="20240910 18:30:31.742"/>
</kw>
<status status="PASS" starttime="20240910 18:30:31.670" endtime="20240910 18:30:31.742"/>
</kw>
<status status="PASS" starttime="20240910 18:30:31.670" endtime="20240910 18:30:31.742"/>
</kw>
<status status="PASS" starttime="20240910 18:30:31.660" endtime="20240910 18:30:31.742"/>
</kw>
<status status="PASS" starttime="20240910 18:30:31.659" endtime="20240910 18:30:31.742"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:30:31.742" level="INFO">${random} = Z3Y9ovWTzF</msg>
<status status="PASS" starttime="20240910 18:30:31.742" endtime="20240910 18:30:31.742"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:31.746" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p Z3Y9ovWTzF --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:37.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:37.699" level="INFO">${output} = 2024-09-10 18:30:33,461 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:30:33,555 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240910 18:30:31.744" endtime="20240910 18:30:37.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:37.700" level="INFO">2024-09-10 18:30:33,461 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:30:33,555 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-09-10 18:30:33,555 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-09-10 18:30:33,658 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Z3Y9ovWTzF and number-of-tests 1
2024-09-10 18:30:33,697 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:30:34,698 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:30:35,443 [pool-2-thread-1] WARN helpers.OzoneFSUtils: Ignoring ozone.fs.hsync.enabled = false because HBase enhancements are disallowed. To enable it, set ozone.client.hbase.enhancements.allowed = true as well.
2024-09-10 18:30:35,451 [pool-2-thread-1] WARN helpers.OzoneFSUtils: Ignoring ozone.fs.hsync.enabled = false because HBase enhancements are disallowed. To enable it, set ozone.client.hbase.enhancements.allowed = true as well.
2024-09-10 18:30:35,504 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-09-10 18:30:35,557 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-09-10 18:30:35,699 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:30:35,739 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-09-10 18:30:36,699 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-09-10 18:30:37,333 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1287.187926, max=1287.187926, mean=1287.187926, stddev=0.0, median=1287.187926, p75=1287.187926, p95=1287.187926, p98=1287.187926, p99=1287.187926, p999=1287.187926, mean_rate=0.48913932337454247, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-09-10 18:30:37,334 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-09-10 18:30:37,334 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-09-10 18:30:37,334 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20240910 18:30:37.700" endtime="20240910 18:30:37.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:37.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:37.700" endtime="20240910 18:30:37.701"/>
</kw>
<status status="PASS" starttime="20240910 18:30:31.744" endtime="20240910 18:30:37.701"/>
</kw>
<msg timestamp="20240910 18:30:37.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:31.744" endtime="20240910 18:30:37.701"/>
</kw>
<msg timestamp="20240910 18:30:37.701" level="INFO">${result} = 2024-09-10 18:30:33,461 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:30:33,555 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240910 18:30:31.743" endtime="20240910 18:30:37.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:30:37.701" endtime="20240910 18:30:37.702"/>
</kw>
<status status="PASS" starttime="20240910 18:30:31.743" endtime="20240910 18:30:37.702"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:37.706" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p Z3Y9ovWTzF  2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:43.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:43.393" level="INFO">${output} = 2024-09-10 18:30:39,459 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:30:39,546 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240910 18:30:37.704" endtime="20240910 18:30:43.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:43.394" level="INFO">2024-09-10 18:30:39,459 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:30:39,546 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-09-10 18:30:39,546 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-09-10 18:30:39,636 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Z3Y9ovWTzF and number-of-tests 1
2024-09-10 18:30:39,690 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:30:40,690 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:30:41,050 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-09-10 18:30:41,690 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-09-10 18:30:42,691 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-09-10 18:30:43,013 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=23.258539, max=23.258539, mean=23.258539, stddev=0.0, median=23.258539, p75=23.258539, p95=23.258539, p98=23.258539, p99=23.258539, p999=23.258539, mean_rate=0.9795307210543289, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-09-10 18:30:43,016 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-09-10 18:30:43,016 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-09-10 18:30:43,016 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20240910 18:30:43.393" endtime="20240910 18:30:43.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:43.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:43.394" endtime="20240910 18:30:43.395"/>
</kw>
<status status="PASS" starttime="20240910 18:30:37.704" endtime="20240910 18:30:43.395"/>
</kw>
<msg timestamp="20240910 18:30:43.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:37.703" endtime="20240910 18:30:43.395"/>
</kw>
<msg timestamp="20240910 18:30:43.395" level="INFO">${result} = 2024-09-10 18:30:39,459 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:30:39,546 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240910 18:30:37.703" endtime="20240910 18:30:43.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:30:43.395" endtime="20240910 18:30:43.395"/>
</kw>
<status status="PASS" starttime="20240910 18:30:37.702" endtime="20240910 18:30:43.396"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:30:31.659" endtime="20240910 18:30:43.396"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20240910 18:30:31.653" endtime="20240910 18:30:43.396"/>
</suite>
<status status="PASS" starttime="20240910 18:11:50.836" endtime="20240910 18:30:43.399"/>
</suite>
<suite id="s1-s3" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s3-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:30:44.051" endtime="20240910 18:30:44.051"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:44.055" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:44.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:44.058" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:30:44.052" endtime="20240910 18:30:44.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:44.059" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:30:44.059" endtime="20240910 18:30:44.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:44.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:44.059" endtime="20240910 18:30:44.059"/>
</kw>
<status status="PASS" starttime="20240910 18:30:44.052" endtime="20240910 18:30:44.060"/>
</kw>
<msg timestamp="20240910 18:30:44.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:44.052" endtime="20240910 18:30:44.060"/>
</kw>
<msg timestamp="20240910 18:30:44.060" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:30:44.052" endtime="20240910 18:30:44.060"/>
</kw>
<msg timestamp="20240910 18:30:44.060" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:30:44.051" endtime="20240910 18:30:44.060"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:30:44.061" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:30:44.060" endtime="20240910 18:30:44.061"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:44.064" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:44.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:44.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:30:44.062" endtime="20240910 18:30:44.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:44.089" level="INFO"/>
<status status="PASS" starttime="20240910 18:30:44.089" endtime="20240910 18:30:44.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:44.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:44.089" endtime="20240910 18:30:44.089"/>
</kw>
<status status="PASS" starttime="20240910 18:30:44.062" endtime="20240910 18:30:44.090"/>
</kw>
<msg timestamp="20240910 18:30:44.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:44.061" endtime="20240910 18:30:44.090"/>
</kw>
<status status="PASS" starttime="20240910 18:30:44.061" endtime="20240910 18:30:44.090"/>
</kw>
<status status="PASS" starttime="20240910 18:30:44.061" endtime="20240910 18:30:44.090"/>
</kw>
<status status="PASS" starttime="20240910 18:30:44.051" endtime="20240910 18:30:44.090"/>
</kw>
<status status="PASS" starttime="20240910 18:30:44.050" endtime="20240910 18:30:44.090"/>
</kw>
<status status="PASS" starttime="20240910 18:30:44.050" endtime="20240910 18:30:44.090"/>
</kw>
<test id="s1-s3-s1-t1" name="List valid certificates" line="33">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:44.094" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:47.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:47.121" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20240910 18:30:44.092" endtime="20240910 18:30:47.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:47.122" level="INFO">Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Tue Sep 10 18:11:04 UTC 2024   Fri Oct 19 18:11:04 UTC 2029   CN=scm@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=1   CN=scm@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=1  
2                 Tue Sep 10 18:11:04 UTC 2024   Fri Oct 19 18:11:04 UTC 2029   CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2 CN=scm@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=1  
3                 Tue Sep 10 18:11:24 UTC 2024   Wed Sep 10 18:11:24 UTC 2025   CN=recon@recon,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=3 CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2
4                 Tue Sep 10 18:11:24 UTC 2024   Wed Sep 10 18:11:24 UTC 2025   CN=dn@dn,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=4     CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2
5                 Tue Sep 10 18:11:25 UTC 2024   Wed Sep 10 18:11:25 UTC 2025   CN=dn@dn,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=5     CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2
6                 Tue Sep 10 18:11:25 UTC 2024   Wed Sep 10 18:11:25 UTC 2025   CN=dn@dn,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=6     CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2
7                 Tue Sep 10 18:11:27 UTC 2024   Wed Sep 10 18:11:27 UTC 2025   CN=om,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=7        CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2</msg>
<status status="PASS" starttime="20240910 18:30:47.121" endtime="20240910 18:30:47.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:47.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:47.122" endtime="20240910 18:30:47.122"/>
</kw>
<status status="PASS" starttime="20240910 18:30:44.091" endtime="20240910 18:30:47.123"/>
</kw>
<msg timestamp="20240910 18:30:47.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:44.091" endtime="20240910 18:30:47.123"/>
</kw>
<msg timestamp="20240910 18:30:47.123" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20240910 18:30:44.091" endtime="20240910 18:30:47.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate list:(BatchSize=20,</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:30:47.123" endtime="20240910 18:30:47.123"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:30:44.090" endtime="20240910 18:30:47.123"/>
</test>
<test id="s1-s3-s1-t2" name="List revoked certificates" line="38">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:47.128" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:50.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:50.101" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20240910 18:30:47.126" endtime="20240910 18:30:50.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:50.102" level="INFO">Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Tue Sep 10 18:11:04 UTC 2024   Fri Oct 19 18:11:04 UTC 2029   CN=scm@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=1   CN=scm@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=1  
2                 Tue Sep 10 18:11:04 UTC 2024   Fri Oct 19 18:11:04 UTC 2029   CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2 CN=scm@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=1  
3                 Tue Sep 10 18:11:24 UTC 2024   Wed Sep 10 18:11:24 UTC 2025   CN=recon@recon,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=3 CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2
4                 Tue Sep 10 18:11:24 UTC 2024   Wed Sep 10 18:11:24 UTC 2025   CN=dn@dn,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=4     CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2
5                 Tue Sep 10 18:11:25 UTC 2024   Wed Sep 10 18:11:25 UTC 2025   CN=dn@dn,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=5     CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2
6                 Tue Sep 10 18:11:25 UTC 2024   Wed Sep 10 18:11:25 UTC 2025   CN=dn@dn,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=6     CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2
7                 Tue Sep 10 18:11:27 UTC 2024   Wed Sep 10 18:11:27 UTC 2025   CN=om,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=7        CN=scm-sub@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=2</msg>
<status status="PASS" starttime="20240910 18:30:50.102" endtime="20240910 18:30:50.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:50.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:50.102" endtime="20240910 18:30:50.103"/>
</kw>
<status status="PASS" starttime="20240910 18:30:47.125" endtime="20240910 18:30:50.103"/>
</kw>
<msg timestamp="20240910 18:30:50.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:47.125" endtime="20240910 18:30:50.103"/>
</kw>
<msg timestamp="20240910 18:30:50.103" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20240910 18:30:47.124" endtime="20240910 18:30:50.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate list:(BatchSize=20,</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:30:50.103" endtime="20240910 18:30:50.104"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:30:47.124" endtime="20240910 18:30:50.104"/>
</test>
<test id="s1-s3-s1-t3" name="Info of the cert" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:50.108" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:56.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:56.252" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             Issue...</msg>
<status status="PASS" starttime="20240910 18:30:50.106" endtime="20240910 18:30:56.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:56.253" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             IssuerDN: CN=scm@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=1
           Start Date: Tue Sep 10 18:11:04 UTC 2024
           Final Date: Fri Oct 19 18:11:04 UTC 2029
            SubjectDN: CN=scm@scm,OU=19071ddd-8efe-46ab-b998-bd48ed5ba2f7,O=CID-53a80e83-4a71-4700-8961-f5cd6a2efba9,SERIALNUMBER=1
           Public Key: RSA Public Key [44:eb:fd:98:f5:a3:86:75:09:67:c4:7d:41:b4:37:32:ce:0b:2f:fb],[56:66:d1:a4]
        modulus: 87703eba93762a1dabedfab4a631d44f2a77ba6faa1737ea12cc0773028cd360f1ee3f2969ba2245afdb796db29aab6a85ed6b40b3d5185b4af3bbb4dddc06983c0abfa18916bf14c00003a048d18bd569d1a9a9408916ae3f355bc1276060c850e73797859ced10d26cef9d18476500f0a8bcd705074c3330643691cc316200257bf87680d614762c4ad76d6f603b954a2a8a76b1c1d73040cec799a20cfdf6153e5fbba07b81d156fd9752052dacfb21400b8ce91cac4c7df6d11aae716259e7ebd42bd0113ded0fa164dabfc1d075f496554a28b2b0347ce861219ded3e3c4ca1553626973f42bed93c7706de309408e5c61350c10e634925f14f53452f81
public exponent: 10001

  Signature Algorithm: SHA256WITHRSA
            Signature: 014b38e17175d089dc657fb69959816898acefaa
                       088c4b4002bfcbf7f9da79371221c1b38604e431
                       be5a44766760ba522c333d713f82752ca3876c70
                       34c7212f137029d8f67c7b1e28e265ea684d8acc
                       69a40f41bc4b7c9e22ab44390fab65a1c7af0547
                       23609f19d7e6c66c8b1515856bfc63d625c0ad7e
                       1630161cd87db849ae3aa8e410355c9eb6fb0660
                       f76d11bde9b79d9aa60175849f0e694b0945f440
                       66b82ea1a51adea81e4efed15d8fb45c179c6c49
                       53c00050034b93e0b8ff2df4a69d3fe0506dfc1a
                       6e2020df8784e79432cd0a9ff4786604cb23e64b
                       60fab16231ac281dbb803c179401d665e7eb22ac
                       32045e2b1a88995adb6e94fb1f98a1df
       Extensions: 
                       critical(true) BasicConstraints: isCa(true)
                       critical(true) KeyUsage: 0x6
                       critical(false) 2.5.29.17 value = Sequence
    Tagged [CONTEXT 7] IMPLICIT 
        DER Octet String[4] 

</msg>
<status status="PASS" starttime="20240910 18:30:56.253" endtime="20240910 18:30:56.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:56.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:56.254" endtime="20240910 18:30:56.254"/>
</kw>
<status status="PASS" starttime="20240910 18:30:50.105" endtime="20240910 18:30:56.254"/>
</kw>
<msg timestamp="20240910 18:30:56.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:50.105" endtime="20240910 18:30:56.254"/>
</kw>
<msg timestamp="20240910 18:30:56.254" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             Issue...</msg>
<status status="PASS" starttime="20240910 18:30:50.105" endtime="20240910 18:30:56.254"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:30:56.255" endtime="20240910 18:30:56.255"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:30:50.104" endtime="20240910 18:30:56.255"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20240910 18:30:44.021" endtime="20240910 18:30:56.256"/>
</suite>
<suite id="s1-s3-s2" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Create Random Volume" library="shell">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:30:56.264" level="INFO">${random} = fvsww</msg>
<status status="PASS" starttime="20240910 18:30:56.264" endtime="20240910 18:30:56.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:56.267" level="INFO">Running command 'ozone sh volume create o3://om/vol-fvsww 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:30:59.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:30:59.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:30:56.265" endtime="20240910 18:30:59.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:30:59.831" level="INFO"/>
<status status="PASS" starttime="20240910 18:30:59.830" endtime="20240910 18:30:59.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:30:59.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:30:59.831" endtime="20240910 18:30:59.831"/>
</kw>
<status status="PASS" starttime="20240910 18:30:56.265" endtime="20240910 18:30:59.832"/>
</kw>
<msg timestamp="20240910 18:30:59.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:56.265" endtime="20240910 18:30:59.832"/>
</kw>
<status status="PASS" starttime="20240910 18:30:56.265" endtime="20240910 18:30:59.832"/>
</kw>
<msg timestamp="20240910 18:30:59.832" level="INFO">${volume} = vol-fvsww</msg>
<status status="PASS" starttime="20240910 18:30:56.264" endtime="20240910 18:30:59.832"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:30:59.832" level="INFO">${VOLUME} = vol-fvsww</msg>
<status status="PASS" starttime="20240910 18:30:59.832" endtime="20240910 18:30:59.832"/>
</kw>
<status status="PASS" starttime="20240910 18:30:56.264" endtime="20240910 18:30:59.833"/>
</kw>
<test id="s1-s3-s2-t1" name="Create Encrypted Bucket" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:30:59.837" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-fvsww/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:03.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:03.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:30:59.835" endtime="20240910 18:31:03.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:03.625" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:03.624" endtime="20240910 18:31:03.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:03.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:03.625" endtime="20240910 18:31:03.625"/>
</kw>
<status status="PASS" starttime="20240910 18:30:59.834" endtime="20240910 18:31:03.625"/>
</kw>
<msg timestamp="20240910 18:31:03.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:30:59.834" endtime="20240910 18:31:03.625"/>
</kw>
<msg timestamp="20240910 18:31:03.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:30:59.833" endtime="20240910 18:31:03.626"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:31:03.626" endtime="20240910 18:31:03.626"/>
</kw>
<kw name="Bucket Exists" library="shell">
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:03.629" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-fvsww/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:07.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:07.297" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol-fvsww",
  "name" : "encrypted-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,...</msg>
<status status="PASS" starttime="20240910 18:31:03.627" endtime="20240910 18:31:07.297"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:31:07.298" endtime="20240910 18:31:07.298"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:31:07.298" endtime="20240910 18:31:07.298"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:31:07.299" endtime="20240910 18:31:07.299"/>
</kw>
<status status="PASS" starttime="20240910 18:31:03.626" endtime="20240910 18:31:07.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:30:59.833" endtime="20240910 18:31:07.299"/>
</test>
<test id="s1-s3-s2-t2" name="Create Key in Encrypted Bucket" line="42">
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:31:07.301" level="INFO">${key} = o3://om/vol-fvsww/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20240910 18:31:07.300" endtime="20240910 18:31:07.301"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${key} /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:07.304" level="INFO">Running command 'ozone sh key put o3://om/vol-fvsww/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:13.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:13.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:07.302" endtime="20240910 18:31:13.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:13.242" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:13.241" endtime="20240910 18:31:13.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:13.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:13.242" endtime="20240910 18:31:13.242"/>
</kw>
<status status="PASS" starttime="20240910 18:31:07.301" endtime="20240910 18:31:13.242"/>
</kw>
<msg timestamp="20240910 18:31:13.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:07.301" endtime="20240910 18:31:13.242"/>
</kw>
<msg timestamp="20240910 18:31:13.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:07.301" endtime="20240910 18:31:13.243"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:31:13.244" level="INFO">${postfix} = 92452</msg>
<status status="PASS" starttime="20240910 18:31:13.244" endtime="20240910 18:31:13.244"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:31:13.244" level="INFO">${tmpfile} = /tmp/tempkey-92452</msg>
<status status="PASS" starttime="20240910 18:31:13.244" endtime="20240910 18:31:13.244"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:13.247" level="INFO">Running command 'ozone sh key get o3://om/vol-fvsww/encrypted-bucket/passwd /tmp/tempkey-92452 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:18.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:18.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:13.245" endtime="20240910 18:31:18.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:18.750" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:18.750" endtime="20240910 18:31:18.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:18.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:18.750" endtime="20240910 18:31:18.751"/>
</kw>
<status status="PASS" starttime="20240910 18:31:13.245" endtime="20240910 18:31:18.751"/>
</kw>
<msg timestamp="20240910 18:31:18.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:13.245" endtime="20240910 18:31:18.751"/>
</kw>
<status status="PASS" starttime="20240910 18:31:13.244" endtime="20240910 18:31:18.751"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240910 18:31:18.753" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-92452 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:18.756" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240910 18:31:18.751" endtime="20240910 18:31:18.756"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:18.760" level="INFO">Running command 'rm -f /tmp/tempkey-92452 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:18.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:18.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:18.758" endtime="20240910 18:31:18.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:18.764" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:18.763" endtime="20240910 18:31:18.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:18.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:18.764" endtime="20240910 18:31:18.764"/>
</kw>
<status status="PASS" starttime="20240910 18:31:18.758" endtime="20240910 18:31:18.765"/>
</kw>
<msg timestamp="20240910 18:31:18.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:18.757" endtime="20240910 18:31:18.765"/>
</kw>
<status status="PASS" starttime="20240910 18:31:18.757" endtime="20240910 18:31:18.765"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240910 18:31:18.765" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240910 18:31:18.765" endtime="20240910 18:31:18.765"/>
</kw>
<msg timestamp="20240910 18:31:18.765" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240910 18:31:13.243" endtime="20240910 18:31:18.765"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240910 18:31:18.765" endtime="20240910 18:31:18.766"/>
</kw>
<status status="PASS" starttime="20240910 18:31:13.243" endtime="20240910 18:31:18.766"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:31:07.300" endtime="20240910 18:31:18.766"/>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20240910 18:30:56.257" endtime="20240910 18:31:18.767"/>
</suite>
<suite id="s1-s3-s3" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s3-s3-t1" name="Create volume bucket with wrong credentials" line="52">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:18.781" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:18.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:18.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:18.779" endtime="20240910 18:31:18.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:18.786" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:18.786" endtime="20240910 18:31:18.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:18.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:18.786" endtime="20240910 18:31:18.787"/>
</kw>
<status status="PASS" starttime="20240910 18:31:18.778" endtime="20240910 18:31:18.787"/>
</kw>
<msg timestamp="20240910 18:31:18.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:18.778" endtime="20240910 18:31:18.787"/>
</kw>
<status status="PASS" starttime="20240910 18:31:18.778" endtime="20240910 18:31:18.787"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:18.789" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:21.409" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:31:21.409" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20240910 18:31:18.787" endtime="20240910 18:31:21.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:31:21.409" endtime="20240910 18:31:21.410"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:31:18.778" endtime="20240910 18:31:21.410"/>
</test>
<test id="s1-s3-s3-t2" name="Create volume with non-admin user" line="57">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:31:21.412" endtime="20240910 18:31:21.412"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:21.416" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:21.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:21.420" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:31:21.414" endtime="20240910 18:31:21.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:21.420" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:31:21.420" endtime="20240910 18:31:21.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:21.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:21.421" endtime="20240910 18:31:21.421"/>
</kw>
<status status="PASS" starttime="20240910 18:31:21.413" endtime="20240910 18:31:21.421"/>
</kw>
<msg timestamp="20240910 18:31:21.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:21.413" endtime="20240910 18:31:21.421"/>
</kw>
<msg timestamp="20240910 18:31:21.421" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:31:21.413" endtime="20240910 18:31:21.421"/>
</kw>
<msg timestamp="20240910 18:31:21.422" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:31:21.412" endtime="20240910 18:31:21.422"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:21.422" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:31:21.422" endtime="20240910 18:31:21.422"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:21.425" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:21.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:21.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:21.423" endtime="20240910 18:31:21.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:21.491" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:21.490" endtime="20240910 18:31:21.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:21.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:21.491" endtime="20240910 18:31:21.491"/>
</kw>
<status status="PASS" starttime="20240910 18:31:21.423" endtime="20240910 18:31:21.491"/>
</kw>
<msg timestamp="20240910 18:31:21.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:21.423" endtime="20240910 18:31:21.492"/>
</kw>
<status status="PASS" starttime="20240910 18:31:21.422" endtime="20240910 18:31:21.492"/>
</kw>
<status status="PASS" starttime="20240910 18:31:21.422" endtime="20240910 18:31:21.492"/>
</kw>
<status status="PASS" starttime="20240910 18:31:21.411" endtime="20240910 18:31:21.492"/>
</kw>
<status status="PASS" starttime="20240910 18:31:21.411" endtime="20240910 18:31:21.492"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:21.494" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:25.320" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:31:25.320" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20240910 18:31:21.492" endtime="20240910 18:31:25.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:31:25.320" endtime="20240910 18:31:25.321"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:31:21.410" endtime="20240910 18:31:25.321"/>
</test>
<test id="s1-s3-s3-t3" name="Create bucket with non-admin owner(testuser2)" line="62">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:31:25.323" endtime="20240910 18:31:25.324"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:25.327" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:25.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:25.331" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:31:25.325" endtime="20240910 18:31:25.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:25.332" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:31:25.331" endtime="20240910 18:31:25.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:25.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:25.332" endtime="20240910 18:31:25.332"/>
</kw>
<status status="PASS" starttime="20240910 18:31:25.325" endtime="20240910 18:31:25.333"/>
</kw>
<msg timestamp="20240910 18:31:25.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:25.324" endtime="20240910 18:31:25.333"/>
</kw>
<msg timestamp="20240910 18:31:25.333" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:31:25.324" endtime="20240910 18:31:25.333"/>
</kw>
<msg timestamp="20240910 18:31:25.333" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:31:25.324" endtime="20240910 18:31:25.333"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:25.333" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:31:25.333" endtime="20240910 18:31:25.334"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:25.337" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:25.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:25.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:25.335" endtime="20240910 18:31:25.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:25.382" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:25.382" endtime="20240910 18:31:25.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:25.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:25.383" endtime="20240910 18:31:25.383"/>
</kw>
<status status="PASS" starttime="20240910 18:31:25.335" endtime="20240910 18:31:25.383"/>
</kw>
<msg timestamp="20240910 18:31:25.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:25.334" endtime="20240910 18:31:25.383"/>
</kw>
<status status="PASS" starttime="20240910 18:31:25.334" endtime="20240910 18:31:25.383"/>
</kw>
<status status="PASS" starttime="20240910 18:31:25.334" endtime="20240910 18:31:25.383"/>
</kw>
<status status="PASS" starttime="20240910 18:31:25.323" endtime="20240910 18:31:25.384"/>
</kw>
<status status="PASS" starttime="20240910 18:31:25.323" endtime="20240910 18:31:25.384"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:31:25.385" level="INFO">${random} = 42</msg>
<status status="PASS" starttime="20240910 18:31:25.384" endtime="20240910 18:31:25.385"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:25.386" level="INFO">${volume1} = fstest42</msg>
<status status="PASS" starttime="20240910 18:31:25.385" endtime="20240910 18:31:25.386"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:25.387" level="INFO">${volume2} = fstest242</msg>
<status status="PASS" starttime="20240910 18:31:25.386" endtime="20240910 18:31:25.387"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:25.388" level="INFO">${volume3} = fstest342</msg>
<status status="PASS" starttime="20240910 18:31:25.387" endtime="20240910 18:31:25.388"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:25.389" level="INFO">${volume4} = fstest442</msg>
<status status="PASS" starttime="20240910 18:31:25.388" endtime="20240910 18:31:25.389"/>
</kw>
<status status="PASS" starttime="20240910 18:31:25.384" endtime="20240910 18:31:25.390"/>
</kw>
<status status="PASS" starttime="20240910 18:31:25.384" endtime="20240910 18:31:25.390"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:25.393" level="INFO">Running command 'ozone sh volume create o3://om/fstest442 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:29.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:29.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:25.391" endtime="20240910 18:31:29.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:29.027" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:29.026" endtime="20240910 18:31:29.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:29.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:29.027" endtime="20240910 18:31:29.028"/>
</kw>
<status status="PASS" starttime="20240910 18:31:25.390" endtime="20240910 18:31:29.028"/>
</kw>
<msg timestamp="20240910 18:31:29.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:25.390" endtime="20240910 18:31:29.028"/>
</kw>
<status status="PASS" starttime="20240910 18:31:25.390" endtime="20240910 18:31:29.028"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:31:29.029" endtime="20240910 18:31:29.029"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:29.033" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:29.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:29.036" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:31:29.030" endtime="20240910 18:31:29.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:29.037" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:31:29.036" endtime="20240910 18:31:29.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:29.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:29.037" endtime="20240910 18:31:29.037"/>
</kw>
<status status="PASS" starttime="20240910 18:31:29.030" endtime="20240910 18:31:29.038"/>
</kw>
<msg timestamp="20240910 18:31:29.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:29.030" endtime="20240910 18:31:29.038"/>
</kw>
<msg timestamp="20240910 18:31:29.038" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:31:29.030" endtime="20240910 18:31:29.038"/>
</kw>
<msg timestamp="20240910 18:31:29.038" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:31:29.029" endtime="20240910 18:31:29.038"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:29.039" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:31:29.038" endtime="20240910 18:31:29.039"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:29.042" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:29.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:29.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:29.040" endtime="20240910 18:31:29.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:29.091" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:29.091" endtime="20240910 18:31:29.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:29.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:29.091" endtime="20240910 18:31:29.092"/>
</kw>
<status status="PASS" starttime="20240910 18:31:29.040" endtime="20240910 18:31:29.092"/>
</kw>
<msg timestamp="20240910 18:31:29.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:29.039" endtime="20240910 18:31:29.092"/>
</kw>
<status status="PASS" starttime="20240910 18:31:29.039" endtime="20240910 18:31:29.092"/>
</kw>
<status status="PASS" starttime="20240910 18:31:29.039" endtime="20240910 18:31:29.092"/>
</kw>
<status status="PASS" starttime="20240910 18:31:29.029" endtime="20240910 18:31:29.092"/>
</kw>
<status status="PASS" starttime="20240910 18:31:29.028" endtime="20240910 18:31:29.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:29.095" level="INFO">Running command 'ozone sh bucket create o3://om/fstest442/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:32.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:32.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:29.093" endtime="20240910 18:31:32.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:32.551" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:32.550" endtime="20240910 18:31:32.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:32.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:32.551" endtime="20240910 18:31:32.551"/>
</kw>
<status status="PASS" starttime="20240910 18:31:29.093" endtime="20240910 18:31:32.551"/>
</kw>
<msg timestamp="20240910 18:31:32.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:29.093" endtime="20240910 18:31:32.552"/>
</kw>
<msg timestamp="20240910 18:31:32.552" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:31:29.092" endtime="20240910 18:31:32.552"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:31:32.552" endtime="20240910 18:31:32.552"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:32.555" level="INFO">Running command 'ozone sh key put fstest442/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:40.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:40.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:32.553" endtime="20240910 18:31:40.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:40.129" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:40.128" endtime="20240910 18:31:40.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:40.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:40.129" endtime="20240910 18:31:40.129"/>
</kw>
<status status="PASS" starttime="20240910 18:31:32.553" endtime="20240910 18:31:40.129"/>
</kw>
<msg timestamp="20240910 18:31:40.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:32.553" endtime="20240910 18:31:40.130"/>
</kw>
<msg timestamp="20240910 18:31:40.130" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:31:32.552" endtime="20240910 18:31:40.130"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:31:40.130" endtime="20240910 18:31:40.130"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:40.133" level="INFO">Running command 'ozone sh key list fstest442/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:43.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:43.694" level="INFO">${output} = [ {
  "volumeName" : "fstest442",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:31:35.851Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20240910 18:31:40.131" endtime="20240910 18:31:43.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:43.695" level="INFO">[ {
  "volumeName" : "fstest442",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:31:35.851Z",
  "modificationTime" : "2024-09-10T18:31:39.728Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20240910 18:31:43.694" endtime="20240910 18:31:43.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:43.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:43.695" endtime="20240910 18:31:43.696"/>
</kw>
<status status="PASS" starttime="20240910 18:31:40.131" endtime="20240910 18:31:43.696"/>
</kw>
<msg timestamp="20240910 18:31:43.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:40.131" endtime="20240910 18:31:43.696"/>
</kw>
<msg timestamp="20240910 18:31:43.696" level="INFO">${result} = [ {
  "volumeName" : "fstest442",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 17289,
  "creationTime" : "2024-09-10T18:31:35.851Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20240910 18:31:40.130" endtime="20240910 18:31:43.696"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:31:43.696" endtime="20240910 18:31:43.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:43.700" level="INFO">Running command 'ozone sh key delete fstest442/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:47.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:47.137" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20240910 18:31:43.698" endtime="20240910 18:31:47.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:47.138" level="INFO">Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20240910 18:31:47.137" endtime="20240910 18:31:47.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:47.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:47.138" endtime="20240910 18:31:47.139"/>
</kw>
<status status="PASS" starttime="20240910 18:31:43.697" endtime="20240910 18:31:47.139"/>
</kw>
<msg timestamp="20240910 18:31:47.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:43.697" endtime="20240910 18:31:47.139"/>
</kw>
<msg timestamp="20240910 18:31:47.139" level="INFO">${result} = Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20240910 18:31:43.697" endtime="20240910 18:31:47.139"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:31:47.139" endtime="20240910 18:31:47.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete -r --yes ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:47.143" level="INFO">Running command 'ozone sh bucket delete -r --yes fstest442/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:50.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:50.693" level="INFO">${output} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20240910 18:31:47.141" endtime="20240910 18:31:50.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:50.694" level="INFO">Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20240910 18:31:50.694" endtime="20240910 18:31:50.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:50.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:50.694" endtime="20240910 18:31:50.695"/>
</kw>
<status status="PASS" starttime="20240910 18:31:47.140" endtime="20240910 18:31:50.695"/>
</kw>
<msg timestamp="20240910 18:31:50.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:47.140" endtime="20240910 18:31:50.695"/>
</kw>
<msg timestamp="20240910 18:31:50.695" level="INFO">${result} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20240910 18:31:47.140" endtime="20240910 18:31:50.695"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:31:50.695" endtime="20240910 18:31:50.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:31:25.322" endtime="20240910 18:31:50.696"/>
</test>
<test id="s1-s3-s3-t4" name="Create volume bucket with credentials" line="78">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:31:50.698" endtime="20240910 18:31:50.698"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:50.701" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:50.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:50.705" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:31:50.699" endtime="20240910 18:31:50.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:50.706" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:31:50.705" endtime="20240910 18:31:50.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:50.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:50.706" endtime="20240910 18:31:50.706"/>
</kw>
<status status="PASS" starttime="20240910 18:31:50.699" endtime="20240910 18:31:50.706"/>
</kw>
<msg timestamp="20240910 18:31:50.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:50.699" endtime="20240910 18:31:50.707"/>
</kw>
<msg timestamp="20240910 18:31:50.707" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:31:50.698" endtime="20240910 18:31:50.707"/>
</kw>
<msg timestamp="20240910 18:31:50.707" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:31:50.698" endtime="20240910 18:31:50.707"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:50.707" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:31:50.707" endtime="20240910 18:31:50.707"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:50.712" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:50.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:50.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:50.709" endtime="20240910 18:31:50.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:50.766" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:50.765" endtime="20240910 18:31:50.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:50.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:50.766" endtime="20240910 18:31:50.766"/>
</kw>
<status status="PASS" starttime="20240910 18:31:50.709" endtime="20240910 18:31:50.767"/>
</kw>
<msg timestamp="20240910 18:31:50.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:50.708" endtime="20240910 18:31:50.767"/>
</kw>
<status status="PASS" starttime="20240910 18:31:50.708" endtime="20240910 18:31:50.767"/>
</kw>
<status status="PASS" starttime="20240910 18:31:50.707" endtime="20240910 18:31:50.767"/>
</kw>
<status status="PASS" starttime="20240910 18:31:50.697" endtime="20240910 18:31:50.767"/>
</kw>
<status status="PASS" starttime="20240910 18:31:50.697" endtime="20240910 18:31:50.767"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:31:50.768" level="INFO">${random} = 94</msg>
<status status="PASS" starttime="20240910 18:31:50.768" endtime="20240910 18:31:50.768"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:50.769" level="INFO">${volume1} = fstest94</msg>
<status status="PASS" starttime="20240910 18:31:50.768" endtime="20240910 18:31:50.769"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:50.769" level="INFO">${volume2} = fstest294</msg>
<status status="PASS" starttime="20240910 18:31:50.769" endtime="20240910 18:31:50.769"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:50.769" level="INFO">${volume3} = fstest394</msg>
<status status="PASS" starttime="20240910 18:31:50.769" endtime="20240910 18:31:50.769"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:31:50.770" level="INFO">${volume4} = fstest494</msg>
<status status="PASS" starttime="20240910 18:31:50.770" endtime="20240910 18:31:50.770"/>
</kw>
<status status="PASS" starttime="20240910 18:31:50.767" endtime="20240910 18:31:50.770"/>
</kw>
<status status="PASS" starttime="20240910 18:31:50.767" endtime="20240910 18:31:50.770"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:50.773" level="INFO">Running command 'ozone sh volume create o3://om/fstest94 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:54.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:54.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:50.771" endtime="20240910 18:31:54.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:54.361" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:54.361" endtime="20240910 18:31:54.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:54.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:54.362" endtime="20240910 18:31:54.362"/>
</kw>
<status status="PASS" starttime="20240910 18:31:50.770" endtime="20240910 18:31:54.362"/>
</kw>
<msg timestamp="20240910 18:31:54.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:50.770" endtime="20240910 18:31:54.362"/>
</kw>
<status status="PASS" starttime="20240910 18:31:50.770" endtime="20240910 18:31:54.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:54.366" level="INFO">Running command 'ozone sh volume create o3://om/fstest294 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:31:57.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:31:57.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:54.364" endtime="20240910 18:31:57.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:31:57.829" level="INFO"/>
<status status="PASS" starttime="20240910 18:31:57.829" endtime="20240910 18:31:57.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:31:57.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:31:57.829" endtime="20240910 18:31:57.830"/>
</kw>
<status status="PASS" starttime="20240910 18:31:54.363" endtime="20240910 18:31:57.830"/>
</kw>
<msg timestamp="20240910 18:31:57.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:54.363" endtime="20240910 18:31:57.830"/>
</kw>
<status status="PASS" starttime="20240910 18:31:54.363" endtime="20240910 18:31:57.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:31:57.833" level="INFO">Running command 'ozone sh bucket create o3://om/fstest94/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:01.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:01.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:31:57.831" endtime="20240910 18:32:01.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:01.521" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:01.520" endtime="20240910 18:32:01.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:01.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:01.521" endtime="20240910 18:32:01.522"/>
</kw>
<status status="PASS" starttime="20240910 18:31:57.831" endtime="20240910 18:32:01.522"/>
</kw>
<msg timestamp="20240910 18:32:01.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:31:57.831" endtime="20240910 18:32:01.522"/>
</kw>
<status status="PASS" starttime="20240910 18:31:57.830" endtime="20240910 18:32:01.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:01.525" level="INFO">Running command 'ozone sh bucket create o3://om/fstest94/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:04.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:04.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:01.523" endtime="20240910 18:32:04.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:04.894" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:04.894" endtime="20240910 18:32:04.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:04.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:04.894" endtime="20240910 18:32:04.895"/>
</kw>
<status status="PASS" starttime="20240910 18:32:01.523" endtime="20240910 18:32:04.895"/>
</kw>
<msg timestamp="20240910 18:32:04.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:01.523" endtime="20240910 18:32:04.895"/>
</kw>
<status status="PASS" starttime="20240910 18:32:01.522" endtime="20240910 18:32:04.895"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:04.907" level="INFO">Running command 'ozone sh bucket create o3://om/fstest294/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:08.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:08.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:04.905" endtime="20240910 18:32:08.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:08.273" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:08.273" endtime="20240910 18:32:08.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:08.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:08.273" endtime="20240910 18:32:08.274"/>
</kw>
<status status="PASS" starttime="20240910 18:32:04.904" endtime="20240910 18:32:08.274"/>
</kw>
<msg timestamp="20240910 18:32:08.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:04.896" endtime="20240910 18:32:08.274"/>
</kw>
<status status="PASS" starttime="20240910 18:32:04.895" endtime="20240910 18:32:08.274"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:31:50.696" endtime="20240910 18:32:08.274"/>
</test>
<test id="s1-s3-s3-t5" name="Check volume from ozonefs" line="88">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:08.279" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest94/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:11.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:11.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:08.276" endtime="20240910 18:32:11.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:11.244" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:11.244" endtime="20240910 18:32:11.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:11.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:11.245" endtime="20240910 18:32:11.245"/>
</kw>
<status status="PASS" starttime="20240910 18:32:08.276" endtime="20240910 18:32:11.245"/>
</kw>
<msg timestamp="20240910 18:32:11.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:08.276" endtime="20240910 18:32:11.245"/>
</kw>
<msg timestamp="20240910 18:32:11.245" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:32:08.275" endtime="20240910 18:32:11.245"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:08.275" endtime="20240910 18:32:11.246"/>
</test>
<test id="s1-s3-s3-t6" name="Test tmp mount for shared ofs tmp dir" line="91">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:11.249" level="INFO">Running command 'ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:12.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:12.289" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20240910 18:32:11.247" endtime="20240910 18:32:12.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:12.291" level="INFO">false</msg>
<status status="PASS" starttime="20240910 18:32:12.290" endtime="20240910 18:32:12.291"/>
</kw>
<msg timestamp="20240910 18:32:12.291" level="INFO">${result} = false</msg>
<status status="PASS" starttime="20240910 18:32:11.247" endtime="20240910 18:32:12.291"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${contains}</var>
<arg>"true" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240910 18:32:12.291" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20240910 18:32:12.291" endtime="20240910 18:32:12.291"/>
</kw>
<if>
<branch type="IF" condition="${contains} == ${True}">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240910 18:32:12.292" endtime="20240910 18:32:12.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${TMP_MOUNT} -u testuser</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.292" endtime="20240910 18:32:12.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${TMP_MOUNT}/${TMP_DIR} -u testuser</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.292" endtime="20240910 18:32:12.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl /${TMP_MOUNT} -a user:testuser:a,user:testuser2:rw</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.292" endtime="20240910 18:32:12.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl /${TMP_MOUNT}/${TMP_DIR} -a user:testuser:a,user:testuser2:rwlc</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.292" endtime="20240910 18:32:12.292"/>
</kw>
<kw name="Format ofs TMPMOUNT">
<var>${tmpdirmount}</var>
<arg>${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.293" endtime="20240910 18:32:12.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./NOTICE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.293" endtime="20240910 18:32:12.293"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20240910 18:32:12.293" endtime="20240910 18:32:12.293"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240910 18:32:12.293" endtime="20240910 18:32:12.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./LICENSE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.293" endtime="20240910 18:32:12.293"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20240910 18:32:12.293" endtime="20240910 18:32:12.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.293" endtime="20240910 18:32:12.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240910 18:32:12.294" endtime="20240910 18:32:12.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LICENSE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240910 18:32:12.294" endtime="20240910 18:32:12.294"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.294" endtime="20240910 18:32:12.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240910 18:32:12.294" endtime="20240910 18:32:12.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/LICENSE.txt</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.294" endtime="20240910 18:32:12.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240910 18:32:12.294" endtime="20240910 18:32:12.294"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240910 18:32:12.294" endtime="20240910 18:32:12.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.294" endtime="20240910 18:32:12.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240910 18:32:12.295" endtime="20240910 18:32:12.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -r -skipTrash ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.295" endtime="20240910 18:32:12.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete /${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20240910 18:32:12.295" endtime="20240910 18:32:12.295"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:32:12.292" endtime="20240910 18:32:12.295"/>
</branch>
<status status="PASS" starttime="20240910 18:32:12.291" endtime="20240910 18:32:12.295"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:11.246" endtime="20240910 18:32:12.295"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20240910 18:31:18.768" endtime="20240910 18:32:12.296"/>
</suite>
<suite id="s1-s3-s4" name="Ozone-Secure-Owner-S3" source="/opt/hadoop/smoketest/security/ozone-secure-owner-s3.robot">
<test id="s1-s3-s4-t1" name="Initialize testuser Credentials" line="51">
<kw name="Initialize User Credentials">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>${username}</arg>
<arg>${keytab}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>${username}</arg>
<arg>${keytab}</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:32:12.323" endtime="20240910 18:32:12.324"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:12.327" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:12.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:12.331" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:32:12.325" endtime="20240910 18:32:12.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:12.332" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:32:12.331" endtime="20240910 18:32:12.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:12.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:12.332" endtime="20240910 18:32:12.332"/>
</kw>
<status status="PASS" starttime="20240910 18:32:12.324" endtime="20240910 18:32:12.332"/>
</kw>
<msg timestamp="20240910 18:32:12.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:12.324" endtime="20240910 18:32:12.332"/>
</kw>
<msg timestamp="20240910 18:32:12.333" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:32:12.324" endtime="20240910 18:32:12.333"/>
</kw>
<msg timestamp="20240910 18:32:12.333" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:32:12.324" endtime="20240910 18:32:12.333"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:32:12.333" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:32:12.333" endtime="20240910 18:32:12.333"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:12.336" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:12.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:12.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:12.335" endtime="20240910 18:32:12.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:12.375" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:12.375" endtime="20240910 18:32:12.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:12.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:12.375" endtime="20240910 18:32:12.376"/>
</kw>
<status status="PASS" starttime="20240910 18:32:12.334" endtime="20240910 18:32:12.376"/>
</kw>
<msg timestamp="20240910 18:32:12.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:12.334" endtime="20240910 18:32:12.376"/>
</kw>
<status status="PASS" starttime="20240910 18:32:12.334" endtime="20240910 18:32:12.376"/>
</kw>
<status status="PASS" starttime="20240910 18:32:12.333" endtime="20240910 18:32:12.376"/>
</kw>
<status status="PASS" starttime="20240910 18:32:12.323" endtime="20240910 18:32:12.376"/>
</kw>
<status status="PASS" starttime="20240910 18:32:12.323" endtime="20240910 18:32:12.376"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u ${username}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:12.379" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:15.172" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:32:15.172" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20240910 18:32:12.377" endtime="20240910 18:32:15.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:15.173" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20240910 18:32:15.172" endtime="20240910 18:32:15.173"/>
</kw>
<status status="PASS" starttime="20240910 18:32:12.376" endtime="20240910 18:32:15.173"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u ${username}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:15.176" level="INFO">Running command 'ozone s3 getsecret -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:18.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:18.164" level="INFO">${output} = awsAccessKey=testuser
awsSecret=77ced125001a29d9edc6a686ea7b9fbba6e335dd90fd4472e88c802b338477df</msg>
<status status="PASS" starttime="20240910 18:32:15.174" endtime="20240910 18:32:18.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:18.165" level="INFO">awsAccessKey=testuser
awsSecret=77ced125001a29d9edc6a686ea7b9fbba6e335dd90fd4472e88c802b338477df</msg>
<status status="PASS" starttime="20240910 18:32:18.165" endtime="20240910 18:32:18.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:18.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:18.166" endtime="20240910 18:32:18.166"/>
</kw>
<status status="PASS" starttime="20240910 18:32:15.174" endtime="20240910 18:32:18.166"/>
</kw>
<msg timestamp="20240910 18:32:18.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:15.174" endtime="20240910 18:32:18.166"/>
</kw>
<msg timestamp="20240910 18:32:18.166" level="INFO">${output} = awsAccessKey=testuser
awsSecret=77ced125001a29d9edc6a686ea7b9fbba6e335dd90fd4472e88c802b338477df</msg>
<status status="PASS" starttime="20240910 18:32:15.173" endtime="20240910 18:32:18.166"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240910 18:32:18.167" level="INFO">${accessId} = ['testuser']</msg>
<status status="PASS" starttime="20240910 18:32:18.167" endtime="20240910 18:32:18.167"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240910 18:32:18.168" level="INFO">${secretKey} = ['77ced125001a29d9edc6a686ea7b9fbba6e335dd90fd4472e88c802b338477df']</msg>
<status status="PASS" starttime="20240910 18:32:18.168" endtime="20240910 18:32:18.168"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:32:18.169" level="INFO">${accessId} = testuser</msg>
<status status="PASS" starttime="20240910 18:32:18.168" endtime="20240910 18:32:18.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:32:18.170" level="INFO">${secretKey} = 77ced125001a29d9edc6a686ea7b9fbba6e335dd90fd4472e88c802b338477df</msg>
<status status="PASS" starttime="20240910 18:32:18.169" endtime="20240910 18:32:18.170"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID_${username}}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:32:18.171" level="INFO">${ACCESS_ID_testuser} = testuser</msg>
<status status="PASS" starttime="20240910 18:32:18.170" endtime="20240910 18:32:18.171"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY_${username}}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:32:18.172" level="INFO">${SECRET_KEY_testuser} = 77ced125001a29d9edc6a686ea7b9fbba6e335dd90fd4472e88c802b338477df</msg>
<status status="PASS" starttime="20240910 18:32:18.171" endtime="20240910 18:32:18.172"/>
</kw>
<status status="PASS" starttime="20240910 18:32:12.322" endtime="20240910 18:32:18.173"/>
</kw>
<kw name="Initialize AWS S3">
<arg>${ACCESS_ID_testuser}</arg>
<arg>${SECRET_KEY_testuser}</arg>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${acess_id}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:18.176" level="INFO">Running command 'aws configure set aws_access_key_id testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:18.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:18.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:18.174" endtime="20240910 18:32:18.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:18.542" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:18.542" endtime="20240910 18:32:18.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:18.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:18.542" endtime="20240910 18:32:18.543"/>
</kw>
<status status="PASS" starttime="20240910 18:32:18.174" endtime="20240910 18:32:18.543"/>
</kw>
<msg timestamp="20240910 18:32:18.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:18.173" endtime="20240910 18:32:18.543"/>
</kw>
<status status="PASS" starttime="20240910 18:32:18.173" endtime="20240910 18:32:18.543"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret_key}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:18.546" level="INFO">Running command 'aws configure set aws_secret_access_key 77ced125001a29d9edc6a686ea7b9fbba6e335dd90fd4472e88c802b338477df 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:18.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:18.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:18.544" endtime="20240910 18:32:18.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:18.900" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:18.900" endtime="20240910 18:32:18.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:18.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:18.901" endtime="20240910 18:32:18.901"/>
</kw>
<status status="PASS" starttime="20240910 18:32:18.544" endtime="20240910 18:32:18.901"/>
</kw>
<msg timestamp="20240910 18:32:18.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:18.544" endtime="20240910 18:32:18.901"/>
</kw>
<status status="PASS" starttime="20240910 18:32:18.543" endtime="20240910 18:32:18.901"/>
</kw>
<status status="PASS" starttime="20240910 18:32:18.173" endtime="20240910 18:32:18.901"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:12.322" endtime="20240910 18:32:18.902"/>
</test>
<test id="s1-s3-s4-t2" name="Create Bucket" line="55">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test-owner1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:18.906" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test-owner1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:20.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:20.618" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20240910 18:32:18.904" endtime="20240910 18:32:20.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:20.619" level="INFO">{
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20240910 18:32:20.618" endtime="20240910 18:32:20.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:20.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:20.619" endtime="20240910 18:32:20.620"/>
</kw>
<status status="PASS" starttime="20240910 18:32:18.903" endtime="20240910 18:32:20.620"/>
</kw>
<msg timestamp="20240910 18:32:20.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:18.903" endtime="20240910 18:32:20.620"/>
</kw>
<msg timestamp="20240910 18:32:20.621" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20240910 18:32:18.903" endtime="20240910 18:32:20.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test-owner1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:20.621" endtime="20240910 18:32:20.621"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:18.902" endtime="20240910 18:32:20.621"/>
</test>
<test id="s1-s3-s4-t3" name="Verify Owner of Uploaded S3 Object By testuser" line="59">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:20.627" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20240910 18:32:20.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:20.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:20.624" endtime="20240910 18:32:20.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:20.631" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:20.630" endtime="20240910 18:32:20.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:20.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:20.631" endtime="20240910 18:32:20.631"/>
</kw>
<status status="PASS" starttime="20240910 18:32:20.623" endtime="20240910 18:32:20.632"/>
</kw>
<msg timestamp="20240910 18:32:20.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:20.623" endtime="20240910 18:32:20.632"/>
</kw>
<status status="PASS" starttime="20240910 18:32:20.623" endtime="20240910 18:32:20.632"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} put-object --bucket bucket-test-owner1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:20.635" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test-owner1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:22.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:22.214" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240910 18:32:20.633" endtime="20240910 18:32:22.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:22.215" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240910 18:32:22.215" endtime="20240910 18:32:22.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:22.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:22.215" endtime="20240910 18:32:22.216"/>
</kw>
<status status="PASS" starttime="20240910 18:32:20.632" endtime="20240910 18:32:22.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/bucket-test-owner1/mykey | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:22.219" level="INFO">Running command 'ozone sh key info /s3v/bucket-test-owner1/mykey | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:25.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:25.709" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20240910 18:32:22.217" endtime="20240910 18:32:25.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:25.710" level="INFO">testuser</msg>
<status status="PASS" starttime="20240910 18:32:25.709" endtime="20240910 18:32:25.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:25.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:25.710" endtime="20240910 18:32:25.710"/>
</kw>
<status status="PASS" starttime="20240910 18:32:22.217" endtime="20240910 18:32:25.710"/>
</kw>
<msg timestamp="20240910 18:32:25.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:22.216" endtime="20240910 18:32:25.711"/>
</kw>
<msg timestamp="20240910 18:32:25.711" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20240910 18:32:22.216" endtime="20240910 18:32:25.711"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:32:25.711" endtime="20240910 18:32:25.711"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:20.622" endtime="20240910 18:32:25.711"/>
</test>
<doc>This test suite verifies the functionality of S3 secure mode in a Ceph cluster environment using docker-compose.</doc>
<status status="PASS" starttime="20240910 18:32:12.298" endtime="20240910 18:32:25.712"/>
</suite>
<suite id="s1-s3-s5" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s3-s5-t1" name="Secure S3 test Success" line="37">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:32:25.723" endtime="20240910 18:32:25.723"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:32:25.724" level="INFO">${randStr} = 3778080572</msg>
<status status="PASS" starttime="20240910 18:32:25.724" endtime="20240910 18:32:25.724"/>
</kw>
<msg timestamp="20240910 18:32:25.725" level="INFO">${random} = ozone-test-3778080572</msg>
<status status="PASS" starttime="20240910 18:32:25.724" endtime="20240910 18:32:25.725"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:32:25.726" level="INFO">${PREFIX} = ozone-test-3778080572</msg>
<status status="PASS" starttime="20240910 18:32:25.725" endtime="20240910 18:32:25.726"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.723" endtime="20240910 18:32:25.726"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.723" endtime="20240910 18:32:25.726"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:25.728" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:25.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:25.731" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20240910 18:32:25.726" endtime="20240910 18:32:25.731"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240910 18:32:25.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:25.731" endtime="20240910 18:32:25.732"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20240910 18:32:25.732" endtime="20240910 18:32:25.732"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240910 18:32:25.732" endtime="20240910 18:32:25.732"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20240910 18:32:25.732" endtime="20240910 18:32:25.732"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240910 18:32:25.733" endtime="20240910 18:32:25.733"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.726" endtime="20240910 18:32:25.733"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.726" endtime="20240910 18:32:25.733"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:32:25.734" endtime="20240910 18:32:25.734"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:25.737" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:25.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:25.741" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:32:25.735" endtime="20240910 18:32:25.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:25.741" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:32:25.741" endtime="20240910 18:32:25.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:25.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:25.742" endtime="20240910 18:32:25.742"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.735" endtime="20240910 18:32:25.742"/>
</kw>
<msg timestamp="20240910 18:32:25.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:25.735" endtime="20240910 18:32:25.742"/>
</kw>
<msg timestamp="20240910 18:32:25.742" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:32:25.735" endtime="20240910 18:32:25.742"/>
</kw>
<msg timestamp="20240910 18:32:25.743" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:32:25.734" endtime="20240910 18:32:25.743"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:32:25.743" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:32:25.743" endtime="20240910 18:32:25.743"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:25.746" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:25.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:25.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:25.745" endtime="20240910 18:32:25.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:25.798" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:25.797" endtime="20240910 18:32:25.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:25.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:25.798" endtime="20240910 18:32:25.798"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.744" endtime="20240910 18:32:25.798"/>
</kw>
<msg timestamp="20240910 18:32:25.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:25.744" endtime="20240910 18:32:25.798"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.743" endtime="20240910 18:32:25.798"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.743" endtime="20240910 18:32:25.799"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.734" endtime="20240910 18:32:25.799"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.733" endtime="20240910 18:32:25.799"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:25.802" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:28.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:28.579" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3dfc0f13f495f81c9c5cf9bf14411f315e7c7f4777bf2645e2cb09b8f0614d50</msg>
<status status="PASS" starttime="20240910 18:32:25.800" endtime="20240910 18:32:28.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:28.580" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3dfc0f13f495f81c9c5cf9bf14411f315e7c7f4777bf2645e2cb09b8f0614d50</msg>
<status status="PASS" starttime="20240910 18:32:28.580" endtime="20240910 18:32:28.580"/>
</kw>
<msg timestamp="20240910 18:32:28.580" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3dfc0f13f495f81c9c5cf9bf14411f315e7c7f4777bf2645e2cb09b8f0614d50</msg>
<status status="PASS" starttime="20240910 18:32:25.799" endtime="20240910 18:32:28.580"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20240910 18:32:28.581" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3dfc0f13f495f81c9c5cf9bf14411f315e7c7f4777bf2645e2cb09b8f0614d50' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20240910 18:32:28.581" endtime="20240910 18:32:28.581"/>
</kw>
<msg timestamp="20240910 18:32:28.581" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20240910 18:32:28.581" endtime="20240910 18:32:28.581"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240910 18:32:28.582" endtime="20240910 18:32:28.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240910 18:32:28.582" endtime="20240910 18:32:28.582"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:32:28.582" endtime="20240910 18:32:28.582"/>
</branch>
<status status="PASS" starttime="20240910 18:32:28.582" endtime="20240910 18:32:28.582"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240910 18:32:28.583" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240910 18:32:28.582" endtime="20240910 18:32:28.583"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240910 18:32:28.583" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240910 18:32:28.583" endtime="20240910 18:32:28.583"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240910 18:32:28.583" level="INFO">${secret} = ['3dfc0f13f495f81c9c5cf9bf14411f315e7c7f4777bf2645e2cb09b8f0614d50']</msg>
<status status="PASS" starttime="20240910 18:32:28.583" endtime="20240910 18:32:28.583"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:32:28.584" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:32:28.583" endtime="20240910 18:32:28.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:32:28.585" level="INFO">${secret} = 3dfc0f13f495f81c9c5cf9bf14411f315e7c7f4777bf2645e2cb09b8f0614d50</msg>
<status status="PASS" starttime="20240910 18:32:28.584" endtime="20240910 18:32:28.585"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:28.588" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:28.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:28.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:28.586" endtime="20240910 18:32:28.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:28.946" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:28.946" endtime="20240910 18:32:28.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:28.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:28.946" endtime="20240910 18:32:28.947"/>
</kw>
<status status="PASS" starttime="20240910 18:32:28.586" endtime="20240910 18:32:28.947"/>
</kw>
<msg timestamp="20240910 18:32:28.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:28.586" endtime="20240910 18:32:28.947"/>
</kw>
<status status="PASS" starttime="20240910 18:32:28.585" endtime="20240910 18:32:28.947"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:28.952" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:29.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:29.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:28.949" endtime="20240910 18:32:29.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:29.310" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:29.310" endtime="20240910 18:32:29.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:29.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:29.310" endtime="20240910 18:32:29.311"/>
</kw>
<status status="PASS" starttime="20240910 18:32:28.948" endtime="20240910 18:32:29.311"/>
</kw>
<msg timestamp="20240910 18:32:29.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:28.948" endtime="20240910 18:32:29.311"/>
</kw>
<status status="PASS" starttime="20240910 18:32:28.947" endtime="20240910 18:32:29.311"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:29.315" level="INFO">Running command 'aws configure set aws_secret_access_key 3dfc0f13f495f81c9c5cf9bf14411f315e7c7f4777bf2645e2cb09b8f0614d50 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:29.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:29.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:29.312" endtime="20240910 18:32:29.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:29.675" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:29.674" endtime="20240910 18:32:29.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:29.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:29.675" endtime="20240910 18:32:29.675"/>
</kw>
<status status="PASS" starttime="20240910 18:32:29.312" endtime="20240910 18:32:29.676"/>
</kw>
<msg timestamp="20240910 18:32:29.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:29.312" endtime="20240910 18:32:29.676"/>
</kw>
<status status="PASS" starttime="20240910 18:32:29.311" endtime="20240910 18:32:29.676"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:29.679" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:30.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:30.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:29.677" endtime="20240910 18:32:30.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:30.042" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:30.042" endtime="20240910 18:32:30.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:30.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:30.042" endtime="20240910 18:32:30.043"/>
</kw>
<status status="PASS" starttime="20240910 18:32:29.677" endtime="20240910 18:32:30.043"/>
</kw>
<msg timestamp="20240910 18:32:30.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:29.676" endtime="20240910 18:32:30.043"/>
</kw>
<status status="PASS" starttime="20240910 18:32:29.676" endtime="20240910 18:32:30.043"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:30.047" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:30.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:30.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:30.045" endtime="20240910 18:32:30.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:30.403" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:30.402" endtime="20240910 18:32:30.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:30.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:30.403" endtime="20240910 18:32:30.403"/>
</kw>
<status status="PASS" starttime="20240910 18:32:30.044" endtime="20240910 18:32:30.403"/>
</kw>
<msg timestamp="20240910 18:32:30.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:30.044" endtime="20240910 18:32:30.403"/>
</kw>
<status status="PASS" starttime="20240910 18:32:30.043" endtime="20240910 18:32:30.403"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.799" endtime="20240910 18:32:30.404"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.799" endtime="20240910 18:32:30.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:32:30.404" endtime="20240910 18:32:30.404"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.733" endtime="20240910 18:32:30.404"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.733" endtime="20240910 18:32:30.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create generated bucket" library="commonawslib">
<arg>${BUCKET_LAYOUT}</arg>
<kw name="Create bucket with layout" library="shell">
<var>${BUCKET}</var>
<arg>s3v</arg>
<arg>${layout}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240910 18:32:30.406" level="INFO">${postfix} = gmpzahzsxn</msg>
<status status="PASS" starttime="20240910 18:32:30.405" endtime="20240910 18:32:30.406"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:32:30.406" level="INFO">${bucket} = bucket-gmpzahzsxn</msg>
<status status="PASS" starttime="20240910 18:32:30.406" endtime="20240910 18:32:30.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --layout ${layout} ${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:30.409" level="INFO">Running command 'ozone sh bucket create --layout OBJECT_STORE s3v/bucket-gmpzahzsxn 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:33.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:33.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:30.407" endtime="20240910 18:32:33.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:33.853" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:33.853" endtime="20240910 18:32:33.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:33.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:33.853" endtime="20240910 18:32:33.854"/>
</kw>
<status status="PASS" starttime="20240910 18:32:30.407" endtime="20240910 18:32:33.854"/>
</kw>
<msg timestamp="20240910 18:32:33.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:30.406" endtime="20240910 18:32:33.854"/>
</kw>
<msg timestamp="20240910 18:32:33.854" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240910 18:32:30.406" endtime="20240910 18:32:33.854"/>
</kw>
<msg timestamp="20240910 18:32:33.854" level="INFO">${BUCKET} = bucket-gmpzahzsxn</msg>
<status status="PASS" starttime="20240910 18:32:30.405" endtime="20240910 18:32:33.854"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:32:33.855" level="INFO">${BUCKET} = bucket-gmpzahzsxn</msg>
<status status="PASS" starttime="20240910 18:32:33.855" endtime="20240910 18:32:33.855"/>
</kw>
<status status="PASS" starttime="20240910 18:32:30.405" endtime="20240910 18:32:33.855"/>
</kw>
<status status="PASS" starttime="20240910 18:32:30.404" endtime="20240910 18:32:33.855"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:32:33.855" endtime="20240910 18:32:33.855"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:32:33.855" endtime="20240910 18:32:33.856"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:32:33.856" endtime="20240910 18:32:33.856"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:32:33.856" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20240910 18:32:33.856" endtime="20240910 18:32:33.856"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.723" endtime="20240910 18:32:33.856"/>
</kw>
<status status="PASS" starttime="20240910 18:32:25.722" endtime="20240910 18:32:33.857"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:33.860" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:34.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:34.307" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20240910 18:32:33.858" endtime="20240910 18:32:34.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:34.308" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20240910 18:32:34.308" endtime="20240910 18:32:34.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:34.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:34.308" endtime="20240910 18:32:34.309"/>
</kw>
<status status="PASS" starttime="20240910 18:32:33.857" endtime="20240910 18:32:34.309"/>
</kw>
<msg timestamp="20240910 18:32:34.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:33.857" endtime="20240910 18:32:34.309"/>
</kw>
<msg timestamp="20240910 18:32:34.309" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20240910 18:32:33.857" endtime="20240910 18:32:34.309"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:34.312" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:34.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:34.777" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-gmpzahzsxn",
            "CreationDate": "2024-09-10T18:32:33.704Z"
        },
        {
            "Name": "bucket-test-owner1",
            ...</msg>
<status status="PASS" starttime="20240910 18:32:34.310" endtime="20240910 18:32:34.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:34.778" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-gmpzahzsxn",
            "CreationDate": "2024-09-10T18:32:33.704Z"
        },
        {
            "Name": "bucket-test-owner1",
            "CreationDate": "2024-09-10T18:32:20.525Z"
        },
        {
            "Name": "bucket-test123",
            "CreationDate": "2024-09-10T18:32:34.262Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20240910 18:32:34.777" endtime="20240910 18:32:34.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:34.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:34.778" endtime="20240910 18:32:34.778"/>
</kw>
<status status="PASS" starttime="20240910 18:32:34.310" endtime="20240910 18:32:34.778"/>
</kw>
<msg timestamp="20240910 18:32:34.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:34.310" endtime="20240910 18:32:34.779"/>
</kw>
<msg timestamp="20240910 18:32:34.779" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-gmpzahzsxn",
            "CreationDate": "2024-09-10T18:32:33.704Z"
        },
        {
            "Name": "bucket-test-owner1",
            ...</msg>
<status status="PASS" starttime="20240910 18:32:34.309" endtime="20240910 18:32:34.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:34.779" endtime="20240910 18:32:34.779"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:25.722" endtime="20240910 18:32:34.779"/>
</test>
<test id="s1-s3-s5-t2" name="Secure S3 put-object test" line="43">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:32:34.781" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20240910 18:32:34.780" endtime="20240910 18:32:34.781"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20240910 18:32:34.782" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240910 18:32:34.781" endtime="20240910 18:32:34.782"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:34.785" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:35.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:35.335" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20240910 18:32:34.783" endtime="20240910 18:32:35.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:35.336" level="INFO">{
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20240910 18:32:35.335" endtime="20240910 18:32:35.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:35.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:35.336" endtime="20240910 18:32:35.336"/>
</kw>
<status status="PASS" starttime="20240910 18:32:34.783" endtime="20240910 18:32:35.336"/>
</kw>
<msg timestamp="20240910 18:32:35.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:34.783" endtime="20240910 18:32:35.337"/>
</kw>
<msg timestamp="20240910 18:32:35.337" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20240910 18:32:34.782" endtime="20240910 18:32:35.337"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:35.341" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:35.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:35.799" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:35.291Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20240910 18:32:35.338" endtime="20240910 18:32:35.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:35.800" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:35.291Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20240910 18:32:35.799" endtime="20240910 18:32:35.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:35.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:35.800" endtime="20240910 18:32:35.801"/>
</kw>
<status status="PASS" starttime="20240910 18:32:35.338" endtime="20240910 18:32:35.801"/>
</kw>
<msg timestamp="20240910 18:32:35.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:35.337" endtime="20240910 18:32:35.801"/>
</kw>
<msg timestamp="20240910 18:32:35.801" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:35.291Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20240910 18:32:35.337" endtime="20240910 18:32:35.801"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:35.801" endtime="20240910 18:32:35.802"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:35.806" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:36.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:36.296" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20240910 18:32:35.803" endtime="20240910 18:32:36.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:36.297" level="INFO">{
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20240910 18:32:36.296" endtime="20240910 18:32:36.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:36.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:36.297" endtime="20240910 18:32:36.297"/>
</kw>
<status status="PASS" starttime="20240910 18:32:35.803" endtime="20240910 18:32:36.297"/>
</kw>
<msg timestamp="20240910 18:32:36.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:35.802" endtime="20240910 18:32:36.298"/>
</kw>
<msg timestamp="20240910 18:32:36.298" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20240910 18:32:35.802" endtime="20240910 18:32:36.298"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:36.301" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:36.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:36.736" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:35.291Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20240910 18:32:36.299" endtime="20240910 18:32:36.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:36.737" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:35.291Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:36.252Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20240910 18:32:36.736" endtime="20240910 18:32:36.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:36.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:36.737" endtime="20240910 18:32:36.737"/>
</kw>
<status status="PASS" starttime="20240910 18:32:36.299" endtime="20240910 18:32:36.738"/>
</kw>
<msg timestamp="20240910 18:32:36.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:36.298" endtime="20240910 18:32:36.738"/>
</kw>
<msg timestamp="20240910 18:32:36.738" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:35.291Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20240910 18:32:36.298" endtime="20240910 18:32:36.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:36.738" endtime="20240910 18:32:36.738"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:36.742" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:37.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:37.214" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20240910 18:32:36.740" endtime="20240910 18:32:37.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:37.215" level="INFO">{
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20240910 18:32:37.214" endtime="20240910 18:32:37.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:37.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:37.215" endtime="20240910 18:32:37.215"/>
</kw>
<status status="PASS" starttime="20240910 18:32:36.739" endtime="20240910 18:32:37.215"/>
</kw>
<msg timestamp="20240910 18:32:37.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:36.739" endtime="20240910 18:32:37.216"/>
</kw>
<msg timestamp="20240910 18:32:37.216" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20240910 18:32:36.739" endtime="20240910 18:32:37.216"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:37.219" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:37.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:37.649" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:37.172Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
  ...</msg>
<status status="PASS" starttime="20240910 18:32:37.217" endtime="20240910 18:32:37.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:37.650" level="INFO">{
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:37.172Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:35.291Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:36.252Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20240910 18:32:37.649" endtime="20240910 18:32:37.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:37.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:37.650" endtime="20240910 18:32:37.650"/>
</kw>
<status status="PASS" starttime="20240910 18:32:37.217" endtime="20240910 18:32:37.650"/>
</kw>
<msg timestamp="20240910 18:32:37.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:37.216" endtime="20240910 18:32:37.651"/>
</kw>
<msg timestamp="20240910 18:32:37.651" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2024-09-10T18:32:37.172Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
  ...</msg>
<status status="PASS" starttime="20240910 18:32:37.216" endtime="20240910 18:32:37.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:37.651" endtime="20240910 18:32:37.651"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:34.780" endtime="20240910 18:32:37.651"/>
</test>
<test id="s1-s3-s5-t3" name="Secure S3 test Failure" line="56">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:37.656" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:38.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:38.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:37.654" endtime="20240910 18:32:38.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:38.011" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:38.011" endtime="20240910 18:32:38.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:38.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:38.011" endtime="20240910 18:32:38.012"/>
</kw>
<status status="PASS" starttime="20240910 18:32:37.654" endtime="20240910 18:32:38.012"/>
</kw>
<msg timestamp="20240910 18:32:38.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:37.653" endtime="20240910 18:32:38.012"/>
</kw>
<status status="PASS" starttime="20240910 18:32:37.653" endtime="20240910 18:32:38.012"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:38.016" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:38.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:38.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:38.014" endtime="20240910 18:32:38.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:38.390" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:38.389" endtime="20240910 18:32:38.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:38.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:38.390" endtime="20240910 18:32:38.390"/>
</kw>
<status status="PASS" starttime="20240910 18:32:38.013" endtime="20240910 18:32:38.390"/>
</kw>
<msg timestamp="20240910 18:32:38.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:38.013" endtime="20240910 18:32:38.391"/>
</kw>
<status status="PASS" starttime="20240910 18:32:38.013" endtime="20240910 18:32:38.391"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:38.394" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:38.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:38.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:38.392" endtime="20240910 18:32:38.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:38.751" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:38.750" endtime="20240910 18:32:38.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:38.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:38.751" endtime="20240910 18:32:38.751"/>
</kw>
<status status="PASS" starttime="20240910 18:32:38.391" endtime="20240910 18:32:38.752"/>
</kw>
<msg timestamp="20240910 18:32:38.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:38.391" endtime="20240910 18:32:38.752"/>
</kw>
<status status="PASS" starttime="20240910 18:32:38.391" endtime="20240910 18:32:38.752"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:38.755" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:39.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:39.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:38.753" endtime="20240910 18:32:39.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:39.112" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:39.111" endtime="20240910 18:32:39.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:39.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:39.112" endtime="20240910 18:32:39.112"/>
</kw>
<status status="PASS" starttime="20240910 18:32:38.753" endtime="20240910 18:32:39.112"/>
</kw>
<msg timestamp="20240910 18:32:39.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:38.752" endtime="20240910 18:32:39.113"/>
</kw>
<status status="PASS" starttime="20240910 18:32:38.752" endtime="20240910 18:32:39.113"/>
</kw>
<status status="PASS" starttime="20240910 18:32:37.653" endtime="20240910 18:32:39.113"/>
</kw>
<status status="PASS" starttime="20240910 18:32:37.652" endtime="20240910 18:32:39.113"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:39.115" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:39.669" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:32:39.669" level="INFO">${result} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20240910 18:32:39.113" endtime="20240910 18:32:39.669"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240910 18:32:39.669" endtime="20240910 18:32:39.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:37.652" endtime="20240910 18:32:39.670"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20240910 18:32:25.714" endtime="20240910 18:32:39.671"/>
</suite>
<suite id="s1-s3-s6" name="Ozone-Secure-Tenant" source="/opt/hadoop/smoketest/security/ozone-secure-tenant.robot">
<test id="s1-s3-s6-t1" name="Create Tenant Success with Cluster Admin" line="30">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:32:39.681" endtime="20240910 18:32:39.681"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:39.685" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:39.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:39.688" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:32:39.683" endtime="20240910 18:32:39.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:39.689" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:32:39.689" endtime="20240910 18:32:39.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:39.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:39.689" endtime="20240910 18:32:39.690"/>
</kw>
<status status="PASS" starttime="20240910 18:32:39.682" endtime="20240910 18:32:39.690"/>
</kw>
<msg timestamp="20240910 18:32:39.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:39.682" endtime="20240910 18:32:39.690"/>
</kw>
<msg timestamp="20240910 18:32:39.690" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:32:39.682" endtime="20240910 18:32:39.690"/>
</kw>
<msg timestamp="20240910 18:32:39.690" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:32:39.682" endtime="20240910 18:32:39.690"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:32:39.691" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:32:39.690" endtime="20240910 18:32:39.691"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:39.694" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:39.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:39.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:39.692" endtime="20240910 18:32:39.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:39.719" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:39.719" endtime="20240910 18:32:39.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:39.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:39.720" endtime="20240910 18:32:39.720"/>
</kw>
<status status="PASS" starttime="20240910 18:32:39.692" endtime="20240910 18:32:39.721"/>
</kw>
<msg timestamp="20240910 18:32:39.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:39.692" endtime="20240910 18:32:39.721"/>
</kw>
<status status="PASS" starttime="20240910 18:32:39.691" endtime="20240910 18:32:39.721"/>
</kw>
<status status="PASS" starttime="20240910 18:32:39.691" endtime="20240910 18:32:39.721"/>
</kw>
<status status="PASS" starttime="20240910 18:32:39.681" endtime="20240910 18:32:39.721"/>
</kw>
<status status="PASS" starttime="20240910 18:32:39.681" endtime="20240910 18:32:39.721"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose create tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:39.724" level="INFO">Running command 'ozone tenant --verbose create tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:42.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:42.823" level="INFO">${output} = {
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20240910 18:32:39.722" endtime="20240910 18:32:42.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:42.824" level="INFO">{
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20240910 18:32:42.824" endtime="20240910 18:32:42.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:42.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:42.824" endtime="20240910 18:32:42.825"/>
</kw>
<status status="PASS" starttime="20240910 18:32:39.722" endtime="20240910 18:32:42.825"/>
</kw>
<msg timestamp="20240910 18:32:42.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:39.721" endtime="20240910 18:32:42.825"/>
</kw>
<msg timestamp="20240910 18:32:42.825" level="INFO">${output} = {
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20240910 18:32:39.721" endtime="20240910 18:32:42.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantId" : "tenantone"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:42.826" endtime="20240910 18:32:42.826"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:39.680" endtime="20240910 18:32:42.826"/>
</test>
<test id="s1-s3-s6-t2" name="Assign User Success with Cluster Admin" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user assign testuser --tenant=tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:42.830" level="INFO">Running command 'ozone tenant --verbose user assign testuser --tenant=tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:45.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:45.931" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='d0da42e97adda8308079452601f51e1eb9863cfe3e34cb104f3c70366b162894'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20240910 18:32:42.828" endtime="20240910 18:32:45.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:45.932" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='d0da42e97adda8308079452601f51e1eb9863cfe3e34cb104f3c70366b162894'
Assigned 'testuser' to 'tenantone' with accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20240910 18:32:45.932" endtime="20240910 18:32:45.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:45.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:45.932" endtime="20240910 18:32:45.933"/>
</kw>
<status status="PASS" starttime="20240910 18:32:42.828" endtime="20240910 18:32:45.933"/>
</kw>
<msg timestamp="20240910 18:32:45.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:42.827" endtime="20240910 18:32:45.933"/>
</kw>
<msg timestamp="20240910 18:32:45.933" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='d0da42e97adda8308079452601f51e1eb9863cfe3e34cb104f3c70366b162894'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20240910 18:32:42.827" endtime="20240910 18:32:45.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Assigned 'testuser' to 'tenantone'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:45.934" endtime="20240910 18:32:45.934"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_ACCESS_KEY_ID=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240910 18:32:45.934" level="INFO">${accessId} = ["'tenantone$testuser'"]</msg>
<status status="PASS" starttime="20240910 18:32:45.934" endtime="20240910 18:32:45.934"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_SECRET_ACCESS_KEY=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240910 18:32:45.935" level="INFO">${secretKey} = ["'d0da42e97adda8308079452601f51e1eb9863cfe3e34cb104f3c70366b162894'"]</msg>
<status status="PASS" starttime="20240910 18:32:45.935" endtime="20240910 18:32:45.935"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:32:45.936" level="INFO">${accessId} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20240910 18:32:45.935" endtime="20240910 18:32:45.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:32:45.937" level="INFO">${secretKey} = 'd0da42e97adda8308079452601f51e1eb9863cfe3e34cb104f3c70366b162894'</msg>
<status status="PASS" starttime="20240910 18:32:45.936" endtime="20240910 18:32:45.937"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:32:45.937" level="INFO">${ACCESS_ID} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20240910 18:32:45.937" endtime="20240910 18:32:45.938"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:32:45.938" level="INFO">${SECRET_KEY} = 'd0da42e97adda8308079452601f51e1eb9863cfe3e34cb104f3c70366b162894'</msg>
<status status="PASS" starttime="20240910 18:32:45.938" endtime="20240910 18:32:45.938"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:42.826" endtime="20240910 18:32:45.938"/>
</test>
<test id="s1-s3-s6-t3" name="Assign User Failure to Non-existent Tenant" line="45">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user assign testuser --tenant=thistenantdoesnotexist</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:45.941" level="INFO">Running command 'ozone tenant user assign testuser --tenant=thistenantdoesnotexist 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:48.933" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:32:48.933" level="INFO">${output} = TENANT_NOT_FOUND Tenant 'thistenantdoesnotexist' doesn't exist.</msg>
<status status="PASS" starttime="20240910 18:32:45.939" endtime="20240910 18:32:48.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'thistenantdoesnotexist' doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:48.933" endtime="20240910 18:32:48.934"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:45.939" endtime="20240910 18:32:48.934"/>
</test>
<test id="s1-s3-s6-t4" name="GetUserInfo Success" line="49">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:48.939" level="INFO">Running command 'ozone tenant user info testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:51.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:51.800" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20240910 18:32:48.936" endtime="20240910 18:32:51.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:51.801" level="INFO">User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20240910 18:32:51.801" endtime="20240910 18:32:51.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:51.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:51.801" endtime="20240910 18:32:51.802"/>
</kw>
<status status="PASS" starttime="20240910 18:32:48.936" endtime="20240910 18:32:51.802"/>
</kw>
<msg timestamp="20240910 18:32:51.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:48.936" endtime="20240910 18:32:51.802"/>
</kw>
<msg timestamp="20240910 18:32:51.802" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20240910 18:32:48.935" endtime="20240910 18:32:51.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'tenantone' with accessId 'tenantone$testuser'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:51.802" endtime="20240910 18:32:51.803"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:48.935" endtime="20240910 18:32:51.803"/>
</test>
<test id="s1-s3-s6-t5" name="GetUserInfo as JSON Success" line="53">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info --json testuser | jq '.tenants | .[].accessId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:51.807" level="INFO">Running command 'ozone tenant user info --json testuser | jq '.tenants | .[].accessId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:54.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:54.875" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20240910 18:32:51.805" endtime="20240910 18:32:54.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:54.876" level="INFO">"tenantone$testuser"</msg>
<status status="PASS" starttime="20240910 18:32:54.875" endtime="20240910 18:32:54.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:54.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:54.876" endtime="20240910 18:32:54.876"/>
</kw>
<status status="PASS" starttime="20240910 18:32:51.804" endtime="20240910 18:32:54.876"/>
</kw>
<msg timestamp="20240910 18:32:54.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:51.804" endtime="20240910 18:32:54.876"/>
</kw>
<msg timestamp="20240910 18:32:54.877" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20240910 18:32:51.804" endtime="20240910 18:32:54.877"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantone$testuser"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:54.877" endtime="20240910 18:32:54.877"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:51.803" endtime="20240910 18:32:54.877"/>
</test>
<test id="s1-s3-s6-t6" name="Create Bucket 1 Success via S3 API" line="57">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${ACCESS_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:54.881" level="INFO">Running command 'aws configure set aws_access_key_id 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:55.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:55.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:54.879" endtime="20240910 18:32:55.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:55.234" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:55.234" endtime="20240910 18:32:55.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:55.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:55.234" endtime="20240910 18:32:55.235"/>
</kw>
<status status="PASS" starttime="20240910 18:32:54.879" endtime="20240910 18:32:55.235"/>
</kw>
<msg timestamp="20240910 18:32:55.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:54.878" endtime="20240910 18:32:55.235"/>
</kw>
<status status="PASS" starttime="20240910 18:32:54.878" endtime="20240910 18:32:55.235"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${SECRET_KEY}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:55.239" level="INFO">Running command 'aws configure set aws_secret_access_key 'd0da42e97adda8308079452601f51e1eb9863cfe3e34cb104f3c70366b162894' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:55.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:55.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:32:55.237" endtime="20240910 18:32:55.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:55.596" level="INFO"/>
<status status="PASS" starttime="20240910 18:32:55.595" endtime="20240910 18:32:55.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:55.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:55.596" endtime="20240910 18:32:55.597"/>
</kw>
<status status="PASS" starttime="20240910 18:32:55.236" endtime="20240910 18:32:55.597"/>
</kw>
<msg timestamp="20240910 18:32:55.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:55.236" endtime="20240910 18:32:55.597"/>
</kw>
<status status="PASS" starttime="20240910 18:32:55.236" endtime="20240910 18:32:55.597"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:55.601" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:56.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:56.048" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20240910 18:32:55.598" endtime="20240910 18:32:56.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:56.049" level="INFO">{
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20240910 18:32:56.048" endtime="20240910 18:32:56.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:56.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:56.049" endtime="20240910 18:32:56.049"/>
</kw>
<status status="PASS" starttime="20240910 18:32:55.598" endtime="20240910 18:32:56.050"/>
</kw>
<msg timestamp="20240910 18:32:56.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:55.598" endtime="20240910 18:32:56.050"/>
</kw>
<msg timestamp="20240910 18:32:56.050" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20240910 18:32:55.597" endtime="20240910 18:32:56.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:56.050" endtime="20240910 18:32:56.050"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:56.054" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:32:56.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:32:56.501" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2024-09-10T18:32:56.006Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20240910 18:32:56.052" endtime="20240910 18:32:56.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:32:56.502" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2024-09-10T18:32:56.006Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20240910 18:32:56.501" endtime="20240910 18:32:56.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:32:56.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:32:56.502" endtime="20240910 18:32:56.502"/>
</kw>
<status status="PASS" starttime="20240910 18:32:56.051" endtime="20240910 18:32:56.502"/>
</kw>
<msg timestamp="20240910 18:32:56.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:56.051" endtime="20240910 18:32:56.502"/>
</kw>
<msg timestamp="20240910 18:32:56.503" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2024-09-10T18:32:56.006Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20240910 18:32:56.050" endtime="20240910 18:32:56.503"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:32:56.503" endtime="20240910 18:32:56.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:54.878" endtime="20240910 18:32:56.503"/>
</test>
<test id="s1-s3-s6-t7" name="Verify Bucket 1 Owner" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:32:56.507" level="INFO">Running command 'ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:00.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:00.236" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20240910 18:32:56.505" endtime="20240910 18:33:00.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:00.237" level="INFO">testuser</msg>
<status status="PASS" starttime="20240910 18:33:00.237" endtime="20240910 18:33:00.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:00.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:00.237" endtime="20240910 18:33:00.238"/>
</kw>
<status status="PASS" starttime="20240910 18:32:56.505" endtime="20240910 18:33:00.238"/>
</kw>
<msg timestamp="20240910 18:33:00.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:32:56.505" endtime="20240910 18:33:00.238"/>
</kw>
<msg timestamp="20240910 18:33:00.238" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20240910 18:32:56.504" endtime="20240910 18:33:00.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:33:00.238" endtime="20240910 18:33:00.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:32:56.504" endtime="20240910 18:33:00.239"/>
</test>
<test id="s1-s3-s6-t8" name="Put a key in the tenant bucket" line="69">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:00.243" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20240910 18:33:00.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:00.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:00.241" endtime="20240910 18:33:00.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:00.246" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:00.245" endtime="20240910 18:33:00.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:00.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:00.246" endtime="20240910 18:33:00.246"/>
</kw>
<status status="PASS" starttime="20240910 18:33:00.241" endtime="20240910 18:33:00.246"/>
</kw>
<msg timestamp="20240910 18:33:00.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:00.240" endtime="20240910 18:33:00.246"/>
</kw>
<status status="PASS" starttime="20240910 18:33:00.240" endtime="20240910 18:33:00.246"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} put-object --bucket bucket-test1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:00.249" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:00.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:00.760" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240910 18:33:00.247" endtime="20240910 18:33:00.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:00.761" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240910 18:33:00.761" endtime="20240910 18:33:00.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:00.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:00.761" endtime="20240910 18:33:00.762"/>
</kw>
<status status="PASS" starttime="20240910 18:33:00.247" endtime="20240910 18:33:00.762"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:00.239" endtime="20240910 18:33:00.762"/>
</test>
<test id="s1-s3-s6-t9" name="Verify Object Owner" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /tenantone/bucket-test1/mykey | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:00.767" level="INFO">Running command 'ozone sh key info /tenantone/bucket-test1/mykey | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:04.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:04.220" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20240910 18:33:00.765" endtime="20240910 18:33:04.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:04.221" level="INFO">testuser</msg>
<status status="PASS" starttime="20240910 18:33:04.221" endtime="20240910 18:33:04.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:04.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:04.222" endtime="20240910 18:33:04.222"/>
</kw>
<status status="PASS" starttime="20240910 18:33:00.764" endtime="20240910 18:33:04.222"/>
</kw>
<msg timestamp="20240910 18:33:04.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:00.764" endtime="20240910 18:33:04.222"/>
</kw>
<msg timestamp="20240910 18:33:04.222" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20240910 18:33:00.763" endtime="20240910 18:33:04.222"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240910 18:33:04.222" endtime="20240910 18:33:04.223"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:00.763" endtime="20240910 18:33:04.223"/>
</test>
<test id="s1-s3-s6-t10" name="Get and delete a key in the tenant bucket" line="77">
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} head-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:04.226" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:04.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:04.665" level="INFO">${output} = {
    "LastModified": "Tue, 10 Sep 2024 18:33:00 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240910 18:33:04.224" endtime="20240910 18:33:04.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:04.666" level="INFO">{
    "LastModified": "Tue, 10 Sep 2024 18:33:00 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 10 Sep 2024 18:33:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240910 18:33:04.665" endtime="20240910 18:33:04.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:04.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:04.666" endtime="20240910 18:33:04.666"/>
</kw>
<status status="PASS" starttime="20240910 18:33:04.224" endtime="20240910 18:33:04.666"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:04.669" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:05.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:05.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:04.667" endtime="20240910 18:33:05.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:05.110" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:05.110" endtime="20240910 18:33:05.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:05.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:05.110" endtime="20240910 18:33:05.111"/>
</kw>
<status status="PASS" starttime="20240910 18:33:04.667" endtime="20240910 18:33:05.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:04.223" endtime="20240910 18:33:05.111"/>
</test>
<test id="s1-s3-s6-t11" name="SetSecret Success with Cluster Admin" line="81">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:05.115" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:07.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:07.925" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20240910 18:33:05.113" endtime="20240910 18:33:07.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:07.926" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20240910 18:33:07.926" endtime="20240910 18:33:07.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:07.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:07.926" endtime="20240910 18:33:07.927"/>
</kw>
<status status="PASS" starttime="20240910 18:33:05.113" endtime="20240910 18:33:07.927"/>
</kw>
<msg timestamp="20240910 18:33:07.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:05.113" endtime="20240910 18:33:07.927"/>
</kw>
<msg timestamp="20240910 18:33:07.927" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20240910 18:33:05.112" endtime="20240910 18:33:07.927"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:07.927" endtime="20240910 18:33:07.928"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:05.112" endtime="20240910 18:33:07.928"/>
</test>
<test id="s1-s3-s6-t12" name="SetSecret Failure For Invalid Secret 1" line="85">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=''</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:07.931" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret='' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:11.049" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:11.049" level="INFO">${output} = secretKey cannot be null or empty.</msg>
<status status="PASS" starttime="20240910 18:33:07.929" endtime="20240910 18:33:11.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>secretKey cannot be null or empty.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:11.049" endtime="20240910 18:33:11.050"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:07.928" endtime="20240910 18:33:11.050"/>
</test>
<test id="s1-s3-s6-t13" name="SetSecret Failure For Invalid Secret 2" line="89">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=short</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:11.053" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=short 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:13.935" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:13.935" level="INFO">${output} = INVALID_REQUEST Secret key length should be at least 8 characters</msg>
<status status="PASS" starttime="20240910 18:33:11.051" endtime="20240910 18:33:13.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Secret key length should be at least 8 characters</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:13.935" endtime="20240910 18:33:13.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:11.050" endtime="20240910 18:33:13.936"/>
</test>
<test id="s1-s3-s6-t14" name="GetSecret Success" line="93">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user getsecret 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:13.940" level="INFO">Running command 'ozone tenant user getsecret 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:16.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:16.912" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20240910 18:33:13.938" endtime="20240910 18:33:16.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:16.913" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20240910 18:33:16.912" endtime="20240910 18:33:16.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:16.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:16.913" endtime="20240910 18:33:16.913"/>
</kw>
<status status="PASS" starttime="20240910 18:33:13.938" endtime="20240910 18:33:16.914"/>
</kw>
<msg timestamp="20240910 18:33:16.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:13.937" endtime="20240910 18:33:16.914"/>
</kw>
<msg timestamp="20240910 18:33:16.914" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20240910 18:33:13.937" endtime="20240910 18:33:16.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:16.914" endtime="20240910 18:33:16.914"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:13.936" endtime="20240910 18:33:16.914"/>
</test>
<test id="s1-s3-s6-t15" name="Delete Bucket 1 Failure With Old SecretKey via S3 API" line="97">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:16.918" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:17.347" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:17.347" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20240910 18:33:16.916" endtime="20240910 18:33:17.347"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240910 18:33:17.348" endtime="20240910 18:33:17.348"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:16.915" endtime="20240910 18:33:17.349"/>
</test>
<test id="s1-s3-s6-t16" name="Delete Bucket 1 Success With Newly Set SecretKey via S3 API" line="101">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:17.353" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:17.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:17.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:17.351" endtime="20240910 18:33:17.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:17.706" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:17.706" endtime="20240910 18:33:17.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:17.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:17.707" endtime="20240910 18:33:17.707"/>
</kw>
<status status="PASS" starttime="20240910 18:33:17.350" endtime="20240910 18:33:17.707"/>
</kw>
<msg timestamp="20240910 18:33:17.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:17.350" endtime="20240910 18:33:17.707"/>
</kw>
<status status="PASS" starttime="20240910 18:33:17.350" endtime="20240910 18:33:17.707"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:17.711" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:18.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:18.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:17.709" endtime="20240910 18:33:18.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:18.140" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:18.139" endtime="20240910 18:33:18.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:18.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:18.140" endtime="20240910 18:33:18.141"/>
</kw>
<status status="PASS" starttime="20240910 18:33:17.708" endtime="20240910 18:33:18.141"/>
</kw>
<msg timestamp="20240910 18:33:18.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:17.708" endtime="20240910 18:33:18.141"/>
</kw>
<msg timestamp="20240910 18:33:18.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:17.708" endtime="20240910 18:33:18.141"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:17.349" endtime="20240910 18:33:18.141"/>
</test>
<test id="s1-s3-s6-t17" name="Delete Tenant Failure Tenant Not Empty" line="105">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:18.144" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:21.211" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:21.211" level="INFO">${output} = TENANT_AUTHORIZER_ERROR java.io.IOException: Policy does not exist.</msg>
<status status="PASS" starttime="20240910 18:33:18.142" endtime="20240910 18:33:21.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20240910 18:33:21.212" level="FAIL">'TENANT_AUTHORIZER_ERROR java.io.IOException: Policy does not exist.' does not contain 'TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`'</msg>
<status status="FAIL" starttime="20240910 18:33:21.212" endtime="20240910 18:33:21.212"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20240910 18:33:18.142" endtime="20240910 18:33:21.213">'TENANT_AUTHORIZER_ERROR java.io.IOException: Policy does not exist.' does not contain 'TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`'</status>
</test>
<test id="s1-s3-s6-t18" name="Trigger and wait for background Sync to recover Policies and Roles in Authorizer" line="109">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone admin om updateranger -host=om</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:21.216" level="INFO">Running command 'ozone admin om updateranger -host=om 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:24.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:24.397" level="INFO">${output} = Operation completed successfully</msg>
<status status="PASS" starttime="20240910 18:33:21.214" endtime="20240910 18:33:24.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Operation completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:24.397" endtime="20240910 18:33:24.398"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:21.213" endtime="20240910 18:33:24.398"/>
</test>
<test id="s1-s3-s6-t19" name="Create Tenant Failure with Regular User" line="113">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:33:24.400" endtime="20240910 18:33:24.400"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:24.404" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:24.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:24.408" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:33:24.402" endtime="20240910 18:33:24.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:24.408" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:33:24.408" endtime="20240910 18:33:24.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:24.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:24.409" endtime="20240910 18:33:24.409"/>
</kw>
<status status="PASS" starttime="20240910 18:33:24.401" endtime="20240910 18:33:24.409"/>
</kw>
<msg timestamp="20240910 18:33:24.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:24.401" endtime="20240910 18:33:24.409"/>
</kw>
<msg timestamp="20240910 18:33:24.409" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:33:24.401" endtime="20240910 18:33:24.410"/>
</kw>
<msg timestamp="20240910 18:33:24.410" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:33:24.401" endtime="20240910 18:33:24.410"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:33:24.410" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:33:24.410" endtime="20240910 18:33:24.410"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:24.413" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:24.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:24.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:24.412" endtime="20240910 18:33:24.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:24.440" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:24.440" endtime="20240910 18:33:24.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:24.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:24.441" endtime="20240910 18:33:24.441"/>
</kw>
<status status="PASS" starttime="20240910 18:33:24.411" endtime="20240910 18:33:24.441"/>
</kw>
<msg timestamp="20240910 18:33:24.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:24.411" endtime="20240910 18:33:24.441"/>
</kw>
<status status="PASS" starttime="20240910 18:33:24.411" endtime="20240910 18:33:24.441"/>
</kw>
<status status="PASS" starttime="20240910 18:33:24.410" endtime="20240910 18:33:24.441"/>
</kw>
<status status="PASS" starttime="20240910 18:33:24.400" endtime="20240910 18:33:24.442"/>
</kw>
<status status="PASS" starttime="20240910 18:33:24.399" endtime="20240910 18:33:24.442"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant create tenanttwo</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:24.444" level="INFO">Running command 'ozone tenant create tenanttwo 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:27.410" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:27.411" level="INFO">${output} = PERMISSION_DENIED User 'testuser2' is not an Ozone admin</msg>
<status status="PASS" starttime="20240910 18:33:24.442" endtime="20240910 18:33:27.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>PERMISSION_DENIED User 'testuser2' is not an Ozone admin</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:27.411" endtime="20240910 18:33:27.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:24.399" endtime="20240910 18:33:27.412"/>
</test>
<test id="s1-s3-s6-t20" name="SetSecret Failure with Regular User" line="118">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:27.415" level="INFO">Running command 'ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:30.490" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:30.490" level="INFO">${output} = USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</msg>
<status status="PASS" starttime="20240910 18:33:27.413" endtime="20240910 18:33:30.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:30.490" endtime="20240910 18:33:30.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:27.412" endtime="20240910 18:33:30.491"/>
</test>
<test id="s1-s3-s6-t21" name="Create Bucket 2 Success with somesecret1 via S3 API" line="122">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:30.496" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:30.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:30.942" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20240910 18:33:30.493" endtime="20240910 18:33:30.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:30.943" level="INFO">{
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20240910 18:33:30.943" endtime="20240910 18:33:30.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:30.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:30.944" endtime="20240910 18:33:30.944"/>
</kw>
<status status="PASS" starttime="20240910 18:33:30.493" endtime="20240910 18:33:30.944"/>
</kw>
<msg timestamp="20240910 18:33:30.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:30.493" endtime="20240910 18:33:30.944"/>
</kw>
<msg timestamp="20240910 18:33:30.945" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20240910 18:33:30.492" endtime="20240910 18:33:30.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:30.945" endtime="20240910 18:33:30.945"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:30.491" endtime="20240910 18:33:30.945"/>
</test>
<test id="s1-s3-s6-t22" name="Delete Bucket 2 Failure with somesecret2 via S3 API" line="126">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret2'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:30.949" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret2' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:31.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:31.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:30.947" endtime="20240910 18:33:31.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:31.316" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:31.316" endtime="20240910 18:33:31.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:31.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:31.316" endtime="20240910 18:33:31.317"/>
</kw>
<status status="PASS" starttime="20240910 18:33:30.947" endtime="20240910 18:33:31.317"/>
</kw>
<msg timestamp="20240910 18:33:31.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:30.947" endtime="20240910 18:33:31.317"/>
</kw>
<status status="PASS" starttime="20240910 18:33:30.946" endtime="20240910 18:33:31.317"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:31.320" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:31.762" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:31.762" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20240910 18:33:31.317" endtime="20240910 18:33:31.762"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240910 18:33:31.763" endtime="20240910 18:33:31.764"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:30.946" endtime="20240910 18:33:31.764"/>
</test>
<test id="s1-s3-s6-t23" name="Delete Bucket 2 Success with somesecret1 via S3 API" line="131">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:31.768" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:32.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:32.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:31.766" endtime="20240910 18:33:32.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:32.137" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:32.137" endtime="20240910 18:33:32.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:32.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:32.138" endtime="20240910 18:33:32.138"/>
</kw>
<status status="PASS" starttime="20240910 18:33:31.765" endtime="20240910 18:33:32.138"/>
</kw>
<msg timestamp="20240910 18:33:32.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:31.765" endtime="20240910 18:33:32.138"/>
</kw>
<status status="PASS" starttime="20240910 18:33:31.765" endtime="20240910 18:33:32.138"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:32.142" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:32.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:32.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:32.140" endtime="20240910 18:33:32.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:32.579" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:32.579" endtime="20240910 18:33:32.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:32.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:32.580" endtime="20240910 18:33:32.580"/>
</kw>
<status status="PASS" starttime="20240910 18:33:32.139" endtime="20240910 18:33:32.580"/>
</kw>
<msg timestamp="20240910 18:33:32.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:32.139" endtime="20240910 18:33:32.580"/>
</kw>
<msg timestamp="20240910 18:33:32.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:32.139" endtime="20240910 18:33:32.580"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:31.764" endtime="20240910 18:33:32.581"/>
</test>
<test id="s1-s3-s6-t24" name="Revoke User AccessId Success with Cluster Admin" line="135">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:33:32.582" endtime="20240910 18:33:32.583"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:32.586" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:32.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:32.590" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:33:32.584" endtime="20240910 18:33:32.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:32.591" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:33:32.590" endtime="20240910 18:33:32.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:32.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:32.591" endtime="20240910 18:33:32.591"/>
</kw>
<status status="PASS" starttime="20240910 18:33:32.584" endtime="20240910 18:33:32.591"/>
</kw>
<msg timestamp="20240910 18:33:32.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:32.584" endtime="20240910 18:33:32.592"/>
</kw>
<msg timestamp="20240910 18:33:32.592" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:33:32.583" endtime="20240910 18:33:32.592"/>
</kw>
<msg timestamp="20240910 18:33:32.592" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:33:32.583" endtime="20240910 18:33:32.592"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:33:32.593" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:33:32.592" endtime="20240910 18:33:32.593"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:32.596" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:32.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:32.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:32.594" endtime="20240910 18:33:32.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:32.651" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:32.650" endtime="20240910 18:33:32.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:32.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:32.651" endtime="20240910 18:33:32.651"/>
</kw>
<status status="PASS" starttime="20240910 18:33:32.594" endtime="20240910 18:33:32.651"/>
</kw>
<msg timestamp="20240910 18:33:32.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:32.593" endtime="20240910 18:33:32.652"/>
</kw>
<status status="PASS" starttime="20240910 18:33:32.593" endtime="20240910 18:33:32.652"/>
</kw>
<status status="PASS" starttime="20240910 18:33:32.593" endtime="20240910 18:33:32.652"/>
</kw>
<status status="PASS" starttime="20240910 18:33:32.582" endtime="20240910 18:33:32.652"/>
</kw>
<status status="PASS" starttime="20240910 18:33:32.582" endtime="20240910 18:33:32.652"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user revoke 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:32.655" level="INFO">Running command 'ozone tenant --verbose user revoke 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:35.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:35.481" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20240910 18:33:32.653" endtime="20240910 18:33:35.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:35.482" level="INFO">Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20240910 18:33:35.481" endtime="20240910 18:33:35.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:35.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:35.482" endtime="20240910 18:33:35.482"/>
</kw>
<status status="PASS" starttime="20240910 18:33:32.653" endtime="20240910 18:33:35.483"/>
</kw>
<msg timestamp="20240910 18:33:35.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:32.652" endtime="20240910 18:33:35.483"/>
</kw>
<msg timestamp="20240910 18:33:35.483" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20240910 18:33:32.652" endtime="20240910 18:33:35.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Revoked accessId 'tenantone$testuser'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:35.483" endtime="20240910 18:33:35.483"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:32.581" endtime="20240910 18:33:35.483"/>
</test>
<test id="s1-s3-s6-t25" name="Create Bucket 3 Failure with Revoked AccessId via S3 API" line="140">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test3</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:35.487" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test3 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:35.925" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:35.925" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20240910 18:33:35.485" endtime="20240910 18:33:35.925"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240910 18:33:35.925" endtime="20240910 18:33:35.926"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:35.484" endtime="20240910 18:33:35.926"/>
</test>
<test id="s1-s3-s6-t26" name="Delete Tenant Success with Cluster Admin" line="144">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:35.931" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:38.974" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:38.974" level="INFO">${output} = TENANT_AUTHORIZER_ERROR java.io.IOException: Policy does not exist.</msg>
<status status="PASS" starttime="20240910 18:33:35.928" endtime="20240910 18:33:38.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:38.975" level="INFO">TENANT_AUTHORIZER_ERROR java.io.IOException: Policy does not exist.</msg>
<status status="PASS" starttime="20240910 18:33:38.975" endtime="20240910 18:33:38.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:38.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20240910 18:33:38.976" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20240910 18:33:38.976" endtime="20240910 18:33:38.976"/>
</kw>
<status status="FAIL" starttime="20240910 18:33:35.928" endtime="20240910 18:33:38.976"/>
</kw>
<msg timestamp="20240910 18:33:38.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20240910 18:33:35.927" endtime="20240910 18:33:38.976"/>
</kw>
<status status="FAIL" starttime="20240910 18:33:35.927" endtime="20240910 18:33:38.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Deleted tenant 'tenantone'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240910 18:33:38.977" endtime="20240910 18:33:38.977"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20240910 18:33:35.926" endtime="20240910 18:33:38.977">255 != 0</status>
</test>
<test id="s1-s3-s6-t27" name="Delete Volume Success with Cluster Admin" line="148">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:38.981" level="INFO">Running command 'ozone sh volume delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:42.496" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:42.496" level="INFO">${output} = VOLUME_IS_REFERENCED Volume reference count is not zero (1). Ozone features are enabled on this volume. Try `ozone tenant delete &lt;tenantId&gt;` first.</msg>
<status status="PASS" starttime="20240910 18:33:38.979" endtime="20240910 18:33:42.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:42.497" level="INFO">VOLUME_IS_REFERENCED Volume reference count is not zero (1). Ozone features are enabled on this volume. Try `ozone tenant delete &lt;tenantId&gt;` first.</msg>
<status status="PASS" starttime="20240910 18:33:42.497" endtime="20240910 18:33:42.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:42.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20240910 18:33:42.498" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20240910 18:33:42.498" endtime="20240910 18:33:42.498"/>
</kw>
<status status="FAIL" starttime="20240910 18:33:38.979" endtime="20240910 18:33:42.498"/>
</kw>
<msg timestamp="20240910 18:33:42.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20240910 18:33:38.978" endtime="20240910 18:33:42.498"/>
</kw>
<status status="FAIL" starttime="20240910 18:33:38.978" endtime="20240910 18:33:42.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Volume tenantone is deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240910 18:33:42.499" endtime="20240910 18:33:42.499"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20240910 18:33:38.977" endtime="20240910 18:33:42.499">255 != 0</status>
</test>
<test id="s1-s3-s6-t28" name="List Tenant Expect Empty Result" line="152">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:42.503" level="INFO">Running command 'ozone tenant list 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:45.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:45.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:42.501" endtime="20240910 18:33:45.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:45.515" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:45.514" endtime="20240910 18:33:45.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:45.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:45.515" endtime="20240910 18:33:45.515"/>
</kw>
<status status="PASS" starttime="20240910 18:33:42.500" endtime="20240910 18:33:45.516"/>
</kw>
<msg timestamp="20240910 18:33:45.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:42.500" endtime="20240910 18:33:45.516"/>
</kw>
<msg timestamp="20240910 18:33:45.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:42.500" endtime="20240910 18:33:45.516"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tenantone</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:45.516" endtime="20240910 18:33:45.516"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:42.499" endtime="20240910 18:33:45.517"/>
</test>
<doc>Smoke test for ozone secure tenant commands</doc>
<status status="FAIL" starttime="20240910 18:32:39.672" endtime="20240910 18:33:45.518"/>
</suite>
<suite id="s1-s3-s7" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s3-s7-t1" name="Token Test" line="85">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:33:45.528" endtime="20240910 18:33:45.529"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:33:45.530" endtime="20240910 18:33:45.530"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:45.534" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:45.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:45.538" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:33:45.532" endtime="20240910 18:33:45.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:45.539" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:33:45.538" endtime="20240910 18:33:45.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:45.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:45.539" endtime="20240910 18:33:45.539"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.532" endtime="20240910 18:33:45.539"/>
</kw>
<msg timestamp="20240910 18:33:45.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:45.531" endtime="20240910 18:33:45.539"/>
</kw>
<msg timestamp="20240910 18:33:45.540" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:33:45.531" endtime="20240910 18:33:45.540"/>
</kw>
<msg timestamp="20240910 18:33:45.540" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:33:45.530" endtime="20240910 18:33:45.540"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:33:45.540" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:33:45.540" endtime="20240910 18:33:45.540"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:45.544" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:45.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:45.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:45.542" endtime="20240910 18:33:45.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:45.575" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:45.575" endtime="20240910 18:33:45.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:45.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:45.575" endtime="20240910 18:33:45.576"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.541" endtime="20240910 18:33:45.576"/>
</kw>
<msg timestamp="20240910 18:33:45.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:45.541" endtime="20240910 18:33:45.576"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.541" endtime="20240910 18:33:45.576"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.540" endtime="20240910 18:33:45.576"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.530" endtime="20240910 18:33:45.576"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.530" endtime="20240910 18:33:45.576"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh token get -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:45.579" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:49.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:49.276" level="INFO">${output} = Successfully get token for service 172.19.0.2:9862
Kind: OzoneToken, Service: 172.19.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2024-09-10T18:3...</msg>
<status status="PASS" starttime="20240910 18:33:45.578" endtime="20240910 18:33:49.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:49.277" level="INFO">Successfully get token for service 172.19.0.2:9862
Kind: OzoneToken, Service: 172.19.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2024-09-10T18:33:49.136Z, maxDate=2024-09-17T18:33:49.136Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=7)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20240910 18:33:49.276" endtime="20240910 18:33:49.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:49.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:49.277" endtime="20240910 18:33:49.278"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.577" endtime="20240910 18:33:49.278"/>
</kw>
<msg timestamp="20240910 18:33:49.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:45.577" endtime="20240910 18:33:49.278"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.577" endtime="20240910 18:33:49.278"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${TOKEN_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20240910 18:33:49.278" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 391 bytes.</msg>
<status status="PASS" starttime="20240910 18:33:49.278" endtime="20240910 18:33:49.279"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:49.282" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:49.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:49.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:49.280" endtime="20240910 18:33:49.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:49.287" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:49.287" endtime="20240910 18:33:49.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:49.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:49.287" endtime="20240910 18:33:49.288"/>
</kw>
<status status="PASS" starttime="20240910 18:33:49.279" endtime="20240910 18:33:49.288"/>
</kw>
<msg timestamp="20240910 18:33:49.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:49.279" endtime="20240910 18:33:49.288"/>
</kw>
<status status="PASS" starttime="20240910 18:33:49.279" endtime="20240910 18:33:49.288"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>${TOKEN_FILE}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20240910 18:33:49.288" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20240910 18:33:49.288" endtime="20240910 18:33:49.289"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:49.292" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:52.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:52.716" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20240910 18:33:49.290" endtime="20240910 18:33:52.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:52.717" level="INFO">[ ]</msg>
<status status="PASS" starttime="20240910 18:33:52.717" endtime="20240910 18:33:52.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:52.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:52.718" endtime="20240910 18:33:52.718"/>
</kw>
<status status="PASS" starttime="20240910 18:33:49.289" endtime="20240910 18:33:52.718"/>
</kw>
<msg timestamp="20240910 18:33:52.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:49.289" endtime="20240910 18:33:52.718"/>
</kw>
<msg timestamp="20240910 18:33:52.718" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20240910 18:33:49.289" endtime="20240910 18:33:52.718"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:52.719" endtime="20240910 18:33:52.719"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20240910 18:33:52.719" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20240910 18:33:52.719" endtime="20240910 18:33:52.719"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:52.722" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:55.456" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:33:55.457" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20240910 18:33:52.720" endtime="20240910 18:33:55.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:55.458" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20240910 18:33:55.457" endtime="20240910 18:33:55.458"/>
</kw>
<msg timestamp="20240910 18:33:55.458" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20240910 18:33:52.719" endtime="20240910 18:33:55.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:33:55.458" endtime="20240910 18:33:55.458"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:33:55.459" endtime="20240910 18:33:55.459"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:55.463" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:55.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:55.467" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:33:55.461" endtime="20240910 18:33:55.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:55.468" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:33:55.467" endtime="20240910 18:33:55.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:55.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:55.468" endtime="20240910 18:33:55.468"/>
</kw>
<status status="PASS" starttime="20240910 18:33:55.460" endtime="20240910 18:33:55.468"/>
</kw>
<msg timestamp="20240910 18:33:55.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:55.460" endtime="20240910 18:33:55.468"/>
</kw>
<msg timestamp="20240910 18:33:55.469" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:33:55.460" endtime="20240910 18:33:55.469"/>
</kw>
<msg timestamp="20240910 18:33:55.469" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:33:55.459" endtime="20240910 18:33:55.469"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:33:55.469" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:33:55.469" endtime="20240910 18:33:55.469"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:55.473" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:55.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:55.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:33:55.471" endtime="20240910 18:33:55.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:55.503" level="INFO"/>
<status status="PASS" starttime="20240910 18:33:55.503" endtime="20240910 18:33:55.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:55.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:55.504" endtime="20240910 18:33:55.504"/>
</kw>
<status status="PASS" starttime="20240910 18:33:55.470" endtime="20240910 18:33:55.504"/>
</kw>
<msg timestamp="20240910 18:33:55.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:55.470" endtime="20240910 18:33:55.504"/>
</kw>
<status status="PASS" starttime="20240910 18:33:55.470" endtime="20240910 18:33:55.504"/>
</kw>
<status status="PASS" starttime="20240910 18:33:55.469" endtime="20240910 18:33:55.505"/>
</kw>
<status status="PASS" starttime="20240910 18:33:55.459" endtime="20240910 18:33:55.505"/>
</kw>
<status status="PASS" starttime="20240910 18:33:55.458" endtime="20240910 18:33:55.505"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.529" endtime="20240910 18:33:55.505"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:55.509" level="INFO">Running command 'ozone sh token print -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:33:57.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:33:57.441" level="INFO">${output} = Kind: OzoneToken, Service: 172.19.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2024-09-10T18:33:49.136Z, maxDate=2024-09-17T18:33:49.136Z, sequen...</msg>
<status status="PASS" starttime="20240910 18:33:55.506" endtime="20240910 18:33:57.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:33:57.442" level="INFO">Kind: OzoneToken, Service: 172.19.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2024-09-10T18:33:49.136Z, maxDate=2024-09-17T18:33:49.136Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=7)</msg>
<status status="PASS" starttime="20240910 18:33:57.441" endtime="20240910 18:33:57.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:33:57.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:33:57.442" endtime="20240910 18:33:57.442"/>
</kw>
<status status="PASS" starttime="20240910 18:33:55.506" endtime="20240910 18:33:57.443"/>
</kw>
<msg timestamp="20240910 18:33:57.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:55.506" endtime="20240910 18:33:57.443"/>
</kw>
<msg timestamp="20240910 18:33:57.443" level="INFO">${output} = Kind: OzoneToken, Service: 172.19.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2024-09-10T18:33:49.136Z, maxDate=2024-09-17T18:33:49.136Z, sequen...</msg>
<status status="PASS" starttime="20240910 18:33:55.505" endtime="20240910 18:33:57.443"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20240910 18:33:57.443" level="INFO">Length is 329</msg>
<status status="PASS" starttime="20240910 18:33:57.443" endtime="20240910 18:33:57.443"/>
</kw>
<status status="PASS" starttime="20240910 18:33:55.505" endtime="20240910 18:33:57.444"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:33:57.447" level="INFO">Running command 'ozone sh token renew -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:34:01.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:34:01.004" level="INFO">${output} = Token renewed successfully, expiry time: 2024-09-11T18:34:00.912Z.</msg>
<status status="PASS" starttime="20240910 18:33:57.445" endtime="20240910 18:34:01.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:34:01.005" level="INFO">Token renewed successfully, expiry time: 2024-09-11T18:34:00.912Z.</msg>
<status status="PASS" starttime="20240910 18:34:01.004" endtime="20240910 18:34:01.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:34:01.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:34:01.005" endtime="20240910 18:34:01.006"/>
</kw>
<status status="PASS" starttime="20240910 18:33:57.445" endtime="20240910 18:34:01.006"/>
</kw>
<msg timestamp="20240910 18:34:01.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:33:57.444" endtime="20240910 18:34:01.006"/>
</kw>
<msg timestamp="20240910 18:34:01.006" level="INFO">${output} = Token renewed successfully, expiry time: 2024-09-11T18:34:00.912Z.</msg>
<status status="PASS" starttime="20240910 18:33:57.444" endtime="20240910 18:34:01.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:34:01.006" endtime="20240910 18:34:01.006"/>
</kw>
<status status="PASS" starttime="20240910 18:33:57.444" endtime="20240910 18:34:01.007"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:34:01.010" level="INFO">Running command 'ozone sh token cancel -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:34:04.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:34:04.545" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20240910 18:34:01.008" endtime="20240910 18:34:04.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:34:04.546" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20240910 18:34:04.545" endtime="20240910 18:34:04.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:34:04.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:34:04.546" endtime="20240910 18:34:04.547"/>
</kw>
<status status="PASS" starttime="20240910 18:34:01.008" endtime="20240910 18:34:04.547"/>
</kw>
<msg timestamp="20240910 18:34:04.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:34:01.007" endtime="20240910 18:34:04.547"/>
</kw>
<msg timestamp="20240910 18:34:04.547" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20240910 18:34:01.007" endtime="20240910 18:34:04.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:34:04.547" endtime="20240910 18:34:04.548"/>
</kw>
<status status="PASS" starttime="20240910 18:34:01.007" endtime="20240910 18:34:04.548"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.529" endtime="20240910 18:34:04.548"/>
</kw>
<status status="PASS" starttime="20240910 18:33:45.529" endtime="20240910 18:34:04.548"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:34:04.552" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:34:06.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:34:06.348" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20240910 18:34:04.549" endtime="20240910 18:34:06.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:34:06.349" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20240910 18:34:06.348" endtime="20240910 18:34:06.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:34:06.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:34:06.349" endtime="20240910 18:34:06.349"/>
</kw>
<status status="PASS" starttime="20240910 18:34:04.549" endtime="20240910 18:34:06.349"/>
</kw>
<msg timestamp="20240910 18:34:06.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:34:04.549" endtime="20240910 18:34:06.350"/>
</kw>
<msg timestamp="20240910 18:34:06.350" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20240910 18:34:04.548" endtime="20240910 18:34:06.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:34:06.350" endtime="20240910 18:34:06.350"/>
</kw>
<status status="PASS" starttime="20240910 18:34:04.548" endtime="20240910 18:34:06.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240910 18:33:45.528" endtime="20240910 18:34:06.350"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20240910 18:33:45.522" endtime="20240910 18:34:06.351"/>
</suite>
<suite id="s1-s3-s8" name="S3-secret" source="/opt/hadoop/smoketest/security/S3-secret.robot">
<test id="s1-s3-s8-t1" name="Get S3 secret twice" line="42">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:34:06.359" endtime="20240910 18:34:06.359"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:34:06.362" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:34:06.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:34:06.366" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240910 18:34:06.360" endtime="20240910 18:34:06.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:34:06.367" level="INFO">scm</msg>
<status status="PASS" starttime="20240910 18:34:06.367" endtime="20240910 18:34:06.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:34:06.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:34:06.367" endtime="20240910 18:34:06.367"/>
</kw>
<status status="PASS" starttime="20240910 18:34:06.360" endtime="20240910 18:34:06.368"/>
</kw>
<msg timestamp="20240910 18:34:06.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:34:06.359" endtime="20240910 18:34:06.368"/>
</kw>
<msg timestamp="20240910 18:34:06.368" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240910 18:34:06.359" endtime="20240910 18:34:06.368"/>
</kw>
<msg timestamp="20240910 18:34:06.368" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:34:06.359" endtime="20240910 18:34:06.368"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:34:06.369" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:34:06.368" endtime="20240910 18:34:06.369"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:34:06.372" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:34:06.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:34:06.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:34:06.370" endtime="20240910 18:34:06.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:34:06.401" level="INFO"/>
<status status="PASS" starttime="20240910 18:34:06.400" endtime="20240910 18:34:06.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:34:06.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:34:06.401" endtime="20240910 18:34:06.401"/>
</kw>
<status status="PASS" starttime="20240910 18:34:06.370" endtime="20240910 18:34:06.401"/>
</kw>
<msg timestamp="20240910 18:34:06.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:34:06.369" endtime="20240910 18:34:06.401"/>
</kw>
<status status="PASS" starttime="20240910 18:34:06.369" endtime="20240910 18:34:06.402"/>
</kw>
<status status="PASS" starttime="20240910 18:34:06.369" endtime="20240910 18:34:06.402"/>
</kw>
<status status="PASS" starttime="20240910 18:34:06.358" endtime="20240910 18:34:06.402"/>
</kw>
<status status="PASS" starttime="20240910 18:34:06.358" endtime="20240910 18:34:06.402"/>
</kw>
<kw name="Revoke Secrets">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:34:06.405" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:34:09.283" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:34:09.283" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20240910 18:34:06.403" endtime="20240910 18:34:09.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:34:09.284" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20240910 18:34:09.284" endtime="20240910 18:34:09.284"/>
</kw>
<msg timestamp="20240910 18:34:09.285" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20240910 18:34:06.402" endtime="20240910 18:34:09.285"/>
</kw>
<status status="PASS" starttime="20240910 18:34:06.402" endtime="20240910 18:34:09.285"/>
</kw>
<kw name="GetSecret success">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:34:09.288" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:34:12.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:34:12.003" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=050e2395e77f7a97b5f0080c075dceae401b2641884947ce729332b65da5aac5</msg>
<status status="PASS" starttime="20240910 18:34:09.286" endtime="20240910 18:34:12.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:34:12.004" level="INFO">awsAccessKey=testuser2
awsSecret=050e2395e77f7a97b5f0080c075dceae401b2641884947ce729332b65da5aac5</msg>
<status status="PASS" starttime="20240910 18:34:12.003" endtime="20240910 18:34:12.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:34:12.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:34:12.004" endtime="20240910 18:34:12.004"/>
</kw>
<status status="PASS" starttime="20240910 18:34:09.286" endtime="20240910 18:34:12.005"/>
</kw>
<msg timestamp="20240910 18:34:12.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:34:09.286" endtime="20240910 18:34:12.005"/>
</kw>
<msg timestamp="20240910 18:34:12.005" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=050e2395e77f7a97b5f0080c075dceae401b2641884947ce729332b65da5aac5</msg>
<status status="PASS" starttime="20240910 18:34:09.285" endtime="20240910 18:34:12.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:34:12.005" endtime="20240910 18:34:12.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:34:12.005" endtime="20240910 18:34:12.006"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>isDeleted</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:34:12.006" endtime="20240910 18:34:12.006"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>transactionLogIndex</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:34:12.006" endtime="20240910 18:34:12.006"/>
</kw>
<status status="PASS" starttime="20240910 18:34:09.285" endtime="20240910 18:34:12.006"/>
</kw>
<kw name="GetSecret failure">
<kw name="Execute And Ignore Error" library="os">
<var>${output2}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:34:12.009" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:34:14.996" level="INFO">${rc} = 255</msg>
<msg timestamp="20240910 18:34:14.996" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20240910 18:34:12.007" endtime="20240910 18:34:14.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:34:14.997" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20240910 18:34:14.997" endtime="20240910 18:34:14.997"/>
</kw>
<msg timestamp="20240910 18:34:14.998" level="INFO">${output2} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20240910 18:34:12.007" endtime="20240910 18:34:14.998"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:34:14.998" endtime="20240910 18:34:14.998"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:34:14.998" endtime="20240910 18:34:14.999"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:34:14.999" endtime="20240910 18:34:14.999"/>
</kw>
<status status="PASS" starttime="20240910 18:34:12.007" endtime="20240910 18:34:14.999"/>
</kw>
<kw name="Revoke Secrets">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:34:15.002" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:34:17.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:34:17.827" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240910 18:34:15.000" endtime="20240910 18:34:17.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:34:17.828" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240910 18:34:17.828" endtime="20240910 18:34:17.828"/>
</kw>
<msg timestamp="20240910 18:34:17.829" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240910 18:34:15.000" endtime="20240910 18:34:17.829"/>
</kw>
<status status="PASS" starttime="20240910 18:34:14.999" endtime="20240910 18:34:17.829"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20240910 18:34:06.358" endtime="20240910 18:34:17.829"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20240910 18:34:06.352" endtime="20240910 18:34:17.830"/>
</suite>
<status status="FAIL" starttime="20240910 18:30:44.000" endtime="20240910 18:34:17.833"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1346509"/>
</suite>
<statistics>
<total>
<stat pass="80" fail="3" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="80" fail="3" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure.Kinit</stat>
<stat pass="35" fail="0" skip="0" id="s1-s2" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="18" fail="0" skip="0" id="s1-s2-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="44" fail="3" skip="0" id="s1-s3" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s2" name="Bucket-Encryption">ozonesecure.Security.Bucket-Encryption</stat>
<stat pass="6" fail="0" skip="0" id="s1-s3-s3" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s4" name="Ozone-Secure-Owner-S3">ozonesecure.Security.Ozone-Secure-Owner-S3</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s5" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="25" fail="3" skip="0" id="s1-s3-s6" name="Ozone-Secure-Tenant">ozonesecure.Security.Ozone-Secure-Tenant</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s7" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s8" name="S3-secret">ozonesecure.Security.S3-secret</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
