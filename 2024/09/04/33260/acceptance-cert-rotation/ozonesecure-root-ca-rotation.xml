<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.6.8 on linux)" generated="20240904 02:01:58.547" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240904 01:57:29.908" endtime="20240904 01:57:29.908"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:57:29.912" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:57:29.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:57:29.916" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240904 01:57:29.909" endtime="20240904 01:57:29.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:57:29.917" level="INFO">scm</msg>
<status status="PASS" starttime="20240904 01:57:29.917" endtime="20240904 01:57:29.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:57:29.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:57:29.917" endtime="20240904 01:57:29.918"/>
</kw>
<status status="PASS" starttime="20240904 01:57:29.909" endtime="20240904 01:57:29.918"/>
</kw>
<msg timestamp="20240904 01:57:29.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240904 01:57:29.909" endtime="20240904 01:57:29.918"/>
</kw>
<msg timestamp="20240904 01:57:29.918" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240904 01:57:29.908" endtime="20240904 01:57:29.918"/>
</kw>
<msg timestamp="20240904 01:57:29.918" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240904 01:57:29.908" endtime="20240904 01:57:29.918"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240904 01:57:29.919" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240904 01:57:29.918" endtime="20240904 01:57:29.919"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:57:29.922" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:57:29.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:57:29.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:57:29.920" endtime="20240904 01:57:29.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:57:29.999" level="INFO"/>
<status status="PASS" starttime="20240904 01:57:29.998" endtime="20240904 01:57:29.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:57:29.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:57:29.999" endtime="20240904 01:57:29.999"/>
</kw>
<status status="PASS" starttime="20240904 01:57:29.920" endtime="20240904 01:57:29.999"/>
</kw>
<msg timestamp="20240904 01:57:29.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240904 01:57:29.920" endtime="20240904 01:57:30.000"/>
</kw>
<status status="PASS" starttime="20240904 01:57:29.919" endtime="20240904 01:57:30.000"/>
</kw>
<status status="PASS" starttime="20240904 01:57:29.919" endtime="20240904 01:57:30.000"/>
</kw>
<status status="PASS" starttime="20240904 01:57:29.907" endtime="20240904 01:57:30.000"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20240904 01:57:29.907" endtime="20240904 01:57:30.000"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20240904 01:57:29.866" endtime="20240904 01:57:30.002"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240904 01:58:12.924" endtime="20240904 01:58:12.925"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:12.928" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:12.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:12.932" level="INFO">${output} = dn</msg>
<status status="PASS" starttime="20240904 01:58:12.926" endtime="20240904 01:58:12.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:12.933" level="INFO">dn</msg>
<status status="PASS" starttime="20240904 01:58:12.933" endtime="20240904 01:58:12.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:12.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:12.933" endtime="20240904 01:58:12.934"/>
</kw>
<status status="PASS" starttime="20240904 01:58:12.926" endtime="20240904 01:58:12.934"/>
</kw>
<msg timestamp="20240904 01:58:12.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240904 01:58:12.925" endtime="20240904 01:58:12.934"/>
</kw>
<msg timestamp="20240904 01:58:12.934" level="INFO">${instance} = dn</msg>
<status status="PASS" starttime="20240904 01:58:12.925" endtime="20240904 01:58:12.934"/>
</kw>
<msg timestamp="20240904 01:58:12.935" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240904 01:58:12.925" endtime="20240904 01:58:12.935"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240904 01:58:12.935" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240904 01:58:12.935" endtime="20240904 01:58:12.935"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:12.939" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/dn@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:13.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:13.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:12.937" endtime="20240904 01:58:13.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:13.020" level="INFO"/>
<status status="PASS" starttime="20240904 01:58:13.019" endtime="20240904 01:58:13.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:13.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:13.020" endtime="20240904 01:58:13.020"/>
</kw>
<status status="PASS" starttime="20240904 01:58:12.936" endtime="20240904 01:58:13.020"/>
</kw>
<msg timestamp="20240904 01:58:13.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240904 01:58:12.936" endtime="20240904 01:58:13.021"/>
</kw>
<status status="PASS" starttime="20240904 01:58:12.936" endtime="20240904 01:58:13.021"/>
</kw>
<status status="PASS" starttime="20240904 01:58:12.935" endtime="20240904 01:58:13.021"/>
</kw>
<status status="PASS" starttime="20240904 01:58:12.924" endtime="20240904 01:58:13.021"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20240904 01:58:12.923" endtime="20240904 01:58:13.021"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20240904 01:58:12.882" endtime="20240904 01:58:13.022"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240904 01:58:17.207" endtime="20240904 01:58:17.207"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:17.210" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:17.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:17.214" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20240904 01:58:17.208" endtime="20240904 01:58:17.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:17.215" level="INFO">om</msg>
<status status="PASS" starttime="20240904 01:58:17.215" endtime="20240904 01:58:17.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:17.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:17.215" endtime="20240904 01:58:17.216"/>
</kw>
<status status="PASS" starttime="20240904 01:58:17.208" endtime="20240904 01:58:17.216"/>
</kw>
<msg timestamp="20240904 01:58:17.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240904 01:58:17.208" endtime="20240904 01:58:17.216"/>
</kw>
<msg timestamp="20240904 01:58:17.216" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20240904 01:58:17.207" endtime="20240904 01:58:17.216"/>
</kw>
<msg timestamp="20240904 01:58:17.216" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240904 01:58:17.207" endtime="20240904 01:58:17.216"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240904 01:58:17.217" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240904 01:58:17.217" endtime="20240904 01:58:17.217"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:17.220" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:17.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:17.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:17.218" endtime="20240904 01:58:17.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:17.280" level="INFO"/>
<status status="PASS" starttime="20240904 01:58:17.279" endtime="20240904 01:58:17.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:17.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:17.280" endtime="20240904 01:58:17.281"/>
</kw>
<status status="PASS" starttime="20240904 01:58:17.218" endtime="20240904 01:58:17.281"/>
</kw>
<msg timestamp="20240904 01:58:17.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240904 01:58:17.218" endtime="20240904 01:58:17.281"/>
</kw>
<status status="PASS" starttime="20240904 01:58:17.217" endtime="20240904 01:58:17.281"/>
</kw>
<status status="PASS" starttime="20240904 01:58:17.217" endtime="20240904 01:58:17.281"/>
</kw>
<status status="PASS" starttime="20240904 01:58:17.206" endtime="20240904 01:58:17.281"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20240904 01:58:17.205" endtime="20240904 01:58:17.281"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20240904 01:58:17.164" endtime="20240904 01:58:17.282"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s4-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:20.840" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:24.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:24.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:20.838" endtime="20240904 01:58:24.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:24.723" level="INFO"/>
<status status="PASS" starttime="20240904 01:58:24.723" endtime="20240904 01:58:24.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:24.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:24.724" endtime="20240904 01:58:24.724"/>
</kw>
<status status="PASS" starttime="20240904 01:58:20.837" endtime="20240904 01:58:24.724"/>
</kw>
<msg timestamp="20240904 01:58:24.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240904 01:58:20.837" endtime="20240904 01:58:24.724"/>
</kw>
<msg timestamp="20240904 01:58:24.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:20.836" endtime="20240904 01:58:24.724"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240904 01:58:24.725" endtime="20240904 01:58:24.725"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:24.728" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:29.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:29.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:24.726" endtime="20240904 01:58:29.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:29.303" level="INFO"/>
<status status="PASS" starttime="20240904 01:58:29.302" endtime="20240904 01:58:29.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:29.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:29.303" endtime="20240904 01:58:29.303"/>
</kw>
<status status="PASS" starttime="20240904 01:58:24.726" endtime="20240904 01:58:29.304"/>
</kw>
<msg timestamp="20240904 01:58:29.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240904 01:58:24.725" endtime="20240904 01:58:29.304"/>
</kw>
<msg timestamp="20240904 01:58:29.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:24.725" endtime="20240904 01:58:29.304"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240904 01:58:29.304" endtime="20240904 01:58:29.304"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240904 01:58:20.836" endtime="20240904 01:58:29.304"/>
</test>
<test id="s1-s4-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:29.308" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240904 01:58:29.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:29.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:29.306" endtime="20240904 01:58:29.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:29.312" level="INFO"/>
<status status="PASS" starttime="20240904 01:58:29.311" endtime="20240904 01:58:29.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:29.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:29.312" endtime="20240904 01:58:29.312"/>
</kw>
<status status="PASS" starttime="20240904 01:58:29.306" endtime="20240904 01:58:29.312"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:29.316" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:36.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:36.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:29.314" endtime="20240904 01:58:36.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:36.021" level="INFO"/>
<status status="PASS" starttime="20240904 01:58:36.020" endtime="20240904 01:58:36.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:36.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:36.021" endtime="20240904 01:58:36.021"/>
</kw>
<status status="PASS" starttime="20240904 01:58:29.313" endtime="20240904 01:58:36.021"/>
</kw>
<msg timestamp="20240904 01:58:36.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240904 01:58:29.313" endtime="20240904 01:58:36.022"/>
</kw>
<msg timestamp="20240904 01:58:36.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:29.312" endtime="20240904 01:58:36.022"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240904 01:58:36.022" endtime="20240904 01:58:36.022"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:36.025" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:36.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:36.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:36.023" endtime="20240904 01:58:36.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:36.029" level="INFO"/>
<status status="PASS" starttime="20240904 01:58:36.029" endtime="20240904 01:58:36.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:36.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:36.030" endtime="20240904 01:58:36.030"/>
</kw>
<status status="PASS" starttime="20240904 01:58:36.022" endtime="20240904 01:58:36.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240904 01:58:29.305" endtime="20240904 01:58:36.030"/>
</test>
<test id="s1-s4-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240904 01:58:36.032" level="INFO">${random} = 23762</msg>
<status status="PASS" starttime="20240904 01:58:36.031" endtime="20240904 01:58:36.032"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:36.035" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-23762 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:42.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:42.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:36.033" endtime="20240904 01:58:42.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:42.203" level="INFO"/>
<status status="PASS" starttime="20240904 01:58:42.202" endtime="20240904 01:58:42.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:42.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:42.203" endtime="20240904 01:58:42.204"/>
</kw>
<status status="PASS" starttime="20240904 01:58:36.033" endtime="20240904 01:58:42.204"/>
</kw>
<msg timestamp="20240904 01:58:42.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240904 01:58:36.032" endtime="20240904 01:58:42.204"/>
</kw>
<msg timestamp="20240904 01:58:42.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:36.032" endtime="20240904 01:58:42.204"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240904 01:58:42.204" endtime="20240904 01:58:42.204"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:42.207" level="INFO">Running command 'cat /tmp/key-23762 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:42.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:42.211" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240904 01:58:42.205" endtime="20240904 01:58:42.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:42.213" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240904 01:58:42.212" endtime="20240904 01:58:42.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:42.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:42.213" endtime="20240904 01:58:42.213"/>
</kw>
<msg timestamp="20240904 01:58:42.213" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240904 01:58:42.205" endtime="20240904 01:58:42.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240904 01:58:42.213" endtime="20240904 01:58:42.214"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240904 01:58:42.217" level="INFO">Running command 'rm /tmp/key-23762 2&gt;&amp;1'.</msg>
<msg timestamp="20240904 01:58:42.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20240904 01:58:42.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240904 01:58:42.214" endtime="20240904 01:58:42.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240904 01:58:42.221" level="INFO"/>
<status status="PASS" starttime="20240904 01:58:42.221" endtime="20240904 01:58:42.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240904 01:58:42.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240904 01:58:42.222" endtime="20240904 01:58:42.222"/>
</kw>
<status status="PASS" starttime="20240904 01:58:42.214" endtime="20240904 01:58:42.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240904 01:58:36.031" endtime="20240904 01:58:42.222"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20240904 01:58:20.795" endtime="20240904 01:58:42.223"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="21822"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
