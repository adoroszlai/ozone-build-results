<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0 (Python 3.8.10 on linux)" generated="2024-03-21T13:53:33.547604" rpa="false" schemaversion="5">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:31.784000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:31.786000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:31.786000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:31.783000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:31.787000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:31.787000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:31.787000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:31.787000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:31.782000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-21T13:52:31.788000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:31.782000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-21T13:52:31.781000" elapsed="0.007000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:31.788000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:31.788000" elapsed="0.001000"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" owner="String">
<msg time="2024-03-21T13:52:31.789000" level="INFO">${random} = bplfr</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-03-21T13:52:31.789000" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-21T13:52:31.790000" level="INFO">${VOLUME} = vol-bplfr</msg>
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-21T13:52:31.789000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:31.792000" level="INFO">Running command 'ozone sh volume create /vol-bplfr 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:35.430000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:35.430000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:31.791000" elapsed="3.639000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:35.431000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:35.430000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:35.432000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:35.431000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:31.790000" elapsed="3.642000"/>
</kw>
<msg time="2024-03-21T13:52:35.432000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:31.790000" elapsed="3.642000"/>
</kw>
<msg time="2024-03-21T13:52:35.432000" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<status status="PASS" start="2024-03-21T13:52:31.790000" elapsed="3.642000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:35.432000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:31.789000" elapsed="3.644000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:52:31.780000" elapsed="3.653000"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" owner="String">
<msg time="2024-03-21T13:52:35.435000" level="INFO">${random} = nurlv</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-03-21T13:52:35.435000" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-21T13:52:35.436000" level="INFO">${BUCKET} = buc-nurlv</msg>
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-21T13:52:35.435000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:35.439000" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-bplfr/buc-nurlv 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:38.375000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:38.375000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:35.437000" elapsed="2.938000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:38.376000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:38.376000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:38.377000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:38.376000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:35.437000" elapsed="2.940000"/>
</kw>
<msg time="2024-03-21T13:52:38.377000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:35.436000" elapsed="2.941000"/>
</kw>
<msg time="2024-03-21T13:52:38.377000" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<status status="PASS" start="2024-03-21T13:52:35.436000" elapsed="2.941000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:38.377000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:35.434000" elapsed="2.944000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:52:35.434000" elapsed="2.944000"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:38.382000" level="INFO">Running command 'ozone sh key put /vol-bplfr/buc-nurlv/file1 README.md 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:44.189000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:44.189000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:38.380000" elapsed="5.809000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:44.190000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:44.190000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:44.191000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:44.190000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:38.380000" elapsed="5.811000"/>
</kw>
<msg time="2024-03-21T13:52:44.191000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:38.380000" elapsed="5.811000"/>
</kw>
<msg time="2024-03-21T13:52:44.191000" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<status status="PASS" start="2024-03-21T13:52:38.379000" elapsed="5.812000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:44.191000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:44.194000" level="INFO">Running command 'ozone sh key put /vol-bplfr/buc-nurlv/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.428000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.428000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:44.193000" elapsed="5.235000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.429000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.428000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.429000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.429000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:44.192000" elapsed="5.238000"/>
</kw>
<msg time="2024-03-21T13:52:49.430000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:44.192000" elapsed="5.238000"/>
</kw>
<msg time="2024-03-21T13:52:49.430000" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<status status="PASS" start="2024-03-21T13:52:44.192000" elapsed="5.238000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.430000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:38.379000" elapsed="11.051000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:52:38.378000" elapsed="11.053000"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.435000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.438000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.438000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.434000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.438000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.438000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.439000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.439000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.434000" elapsed="0.005000"/>
</kw>
<msg time="2024-03-21T13:52:49.439000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.433000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-21T13:52:49.432000" elapsed="0.007000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.442000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.582000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.582000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.441000" elapsed="0.141000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.584000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.583000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.584000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.584000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.441000" elapsed="0.144000"/>
</kw>
<msg time="2024-03-21T13:52:49.585000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.440000" elapsed="0.145000"/>
</kw>
<msg time="2024-03-21T13:52:49.585000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.440000" elapsed="0.145000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.585000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.585000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.586000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.586000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.585000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-21T13:52:49.440000" elapsed="0.146000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.587000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.586000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.590000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.602000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.602000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.588000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.603000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.603000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.604000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.603000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.588000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:52:49.604000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.588000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:52:49.604000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.587000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.605000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.604000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.605000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.605000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.604000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-03-21T13:52:49.587000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.606000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.605000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.609000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.620000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.620000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.608000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.621000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.620000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.621000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.621000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.607000" elapsed="0.014000"/>
</kw>
<msg time="2024-03-21T13:52:49.621000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.607000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-21T13:52:49.622000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.607000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.622000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.622000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.622000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.622000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.622000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-21T13:52:49.606000" elapsed="0.017000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.623000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.623000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.626000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.637000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.637000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.625000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.638000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.637000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.638000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.638000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.625000" elapsed="0.013000"/>
</kw>
<msg time="2024-03-21T13:52:49.638000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.624000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-21T13:52:49.639000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.624000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.639000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.639000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.639000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.639000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.639000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-21T13:52:49.624000" elapsed="0.016000"/>
</kw>
<arg>${SUMMARY_URL}?path=/</arg>
<status status="PASS" start="2024-03-21T13:52:49.432000" elapsed="0.208000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:52:49.431000" elapsed="0.209000"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.644000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.646000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.646000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.642000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.647000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.646000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.647000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.647000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.642000" elapsed="0.005000"/>
</kw>
<msg time="2024-03-21T13:52:49.647000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.642000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-21T13:52:49.642000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.650000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.666000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.666000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.649000" elapsed="0.017000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.667000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.666000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.667000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.667000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.649000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-21T13:52:49.668000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.649000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-21T13:52:49.668000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.648000" elapsed="0.020000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.669000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.668000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.669000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.669000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.668000" elapsed="0.002000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-21T13:52:49.648000" elapsed="0.022000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.670000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.670000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.673000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.683000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.683000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.672000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.684000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.683000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.684000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.684000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.671000" elapsed="0.014000"/>
</kw>
<msg time="2024-03-21T13:52:49.685000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.671000" elapsed="0.014000"/>
</kw>
<msg time="2024-03-21T13:52:49.685000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.671000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.685000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.685000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.686000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.685000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.685000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-03-21T13:52:49.670000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.686000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.686000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.689000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.699000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.699000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.688000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.700000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.699000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.700000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.700000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.688000" elapsed="0.013000"/>
</kw>
<msg time="2024-03-21T13:52:49.701000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.688000" elapsed="0.013000"/>
</kw>
<msg time="2024-03-21T13:52:49.701000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.687000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.701000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.701000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.702000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.701000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.701000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-21T13:52:49.687000" elapsed="0.015000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.703000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.702000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.706000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.716000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.716000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.705000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.716000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.716000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.717000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.717000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.704000" elapsed="0.013000"/>
</kw>
<msg time="2024-03-21T13:52:49.717000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.704000" elapsed="0.013000"/>
</kw>
<msg time="2024-03-21T13:52:49.717000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.703000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.718000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.718000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.718000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.718000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.718000" elapsed="0.000000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-21T13:52:49.703000" elapsed="0.016000"/>
</kw>
<arg>${DISK_USAGE_URL}?path=/</arg>
<status status="PASS" start="2024-03-21T13:52:49.641000" elapsed="0.078000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:52:49.641000" elapsed="0.078000"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.722000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.725000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.725000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.721000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.725000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.725000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.726000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.725000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.721000" elapsed="0.005000"/>
</kw>
<msg time="2024-03-21T13:52:49.726000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.721000" elapsed="0.005000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-21T13:52:49.720000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.729000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.741000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.741000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.728000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.742000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.741000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.742000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.742000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.727000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-21T13:52:49.742000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.727000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:52:49.743000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.727000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.743000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.743000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.743000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.743000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.743000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-21T13:52:49.726000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.744000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.744000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.747000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.757000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.757000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.746000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.758000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.758000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.759000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.758000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.746000" elapsed="0.013000"/>
</kw>
<msg time="2024-03-21T13:52:49.759000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.745000" elapsed="0.014000"/>
</kw>
<msg time="2024-03-21T13:52:49.759000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.745000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.760000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.759000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.760000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.760000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.759000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-03-21T13:52:49.745000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.761000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.761000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.764000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.774000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.774000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.763000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.774000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.774000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.775000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.775000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.762000" elapsed="0.013000"/>
</kw>
<msg time="2024-03-21T13:52:49.775000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.762000" elapsed="0.013000"/>
</kw>
<msg time="2024-03-21T13:52:49.775000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.762000" elapsed="0.013000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.776000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.775000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.776000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.776000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.775000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-21T13:52:49.761000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.777000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.777000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.780000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.792000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.792000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.779000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.793000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.793000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.794000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.793000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.778000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:52:49.794000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.778000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:52:49.794000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.778000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.795000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.794000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.795000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.795000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.794000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-21T13:52:49.777000" elapsed="0.018000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<status status="PASS" start="2024-03-21T13:52:49.720000" elapsed="0.075000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:52:49.719000" elapsed="0.077000"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.799000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.802000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.802000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.798000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.802000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.802000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.803000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.803000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.798000" elapsed="0.005000"/>
</kw>
<msg time="2024-03-21T13:52:49.803000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.797000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-21T13:52:49.797000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.806000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.822000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.823000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.805000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.823000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.823000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.824000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.824000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.804000" elapsed="0.020000"/>
</kw>
<msg time="2024-03-21T13:52:49.824000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.804000" elapsed="0.020000"/>
</kw>
<msg time="2024-03-21T13:52:49.824000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.804000" elapsed="0.020000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.825000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.825000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.825000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.825000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.825000" elapsed="0.000000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-21T13:52:49.803000" elapsed="0.023000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.826000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.826000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.829000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.841000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.841000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.828000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.842000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.842000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.842000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.842000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.827000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:52:49.843000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.827000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:52:49.843000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.827000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.843000" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.843000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.844000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.844000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.843000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-03-21T13:52:49.826000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.845000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.844000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.848000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.858000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.858000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.847000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.859000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.859000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.859000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.859000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.846000" elapsed="0.014000"/>
</kw>
<msg time="2024-03-21T13:52:49.860000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.846000" elapsed="0.014000"/>
</kw>
<msg time="2024-03-21T13:52:49.860000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.845000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.860000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.860000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.861000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.861000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.860000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-21T13:52:49.845000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:52:49.862000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.861000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.865000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.875000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.875000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.863000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.876000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.875000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.876000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.876000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.863000" elapsed="0.014000"/>
</kw>
<msg time="2024-03-21T13:52:49.877000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.863000" elapsed="0.014000"/>
</kw>
<msg time="2024-03-21T13:52:49.877000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.862000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.877000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-21T13:52:49.877000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:52:49.878000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-21T13:52:49.877000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-21T13:52:49.877000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-21T13:52:49.862000" elapsed="0.016000"/>
</kw>
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<status status="PASS" start="2024-03-21T13:52:49.797000" elapsed="0.081000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:52:49.796000" elapsed="0.082000"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:49.883000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:49.893000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:49.893000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:49.881000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.894000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:49.893000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.894000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:49.894000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:49.881000" elapsed="0.013000"/>
</kw>
<msg time="2024-03-21T13:52:49.894000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:49.881000" elapsed="0.014000"/>
</kw>
<msg time="2024-03-21T13:52:49.895000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:49.880000" elapsed="0.015000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-21T13:52:49.895000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-21T13:52:49.895000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:49.895000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-03-21T13:52:49.880000" elapsed="0.016000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:52:59.899000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:52:59.912000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:52:59.912000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:52:59.898000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:52:59.913000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:52:59.912000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:52:59.913000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:52:59.913000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:52:59.897000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:52:59.913000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:52:59.897000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-21T13:52:59.914000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:52:59.897000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-21T13:52:59.914000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-21T13:52:59.914000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:52:59.914000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-03-21T13:52:59.896000" elapsed="0.019000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:53:09.919000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:53:09.930000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:53:09.930000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:53:09.917000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:53:09.931000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:53:09.930000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:53:09.931000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:53:09.931000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:53:09.916000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-21T13:53:09.932000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:53:09.916000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:53:09.932000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:53:09.916000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-21T13:53:09.932000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-21T13:53:09.932000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-21T13:53:09.933000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-03-21T13:53:09.915000" elapsed="0.018000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:53:19.937000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:53:19.956000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:53:19.956000" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:53:19.935000" elapsed="0.021000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:53:19.957000" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:53:19.957000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:53:19.968000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:53:19.958000" elapsed="0.010000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:53:19.935000" elapsed="0.033000"/>
</kw>
<msg time="2024-03-21T13:53:19.968000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:53:19.935000" elapsed="0.034000"/>
</kw>
<msg time="2024-03-21T13:53:19.969000" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:53:19.934000" elapsed="0.035000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:19.969000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:19.969000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-21T13:53:19.933000" elapsed="0.037000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-21T13:52:49.880000" elapsed="30.090000"/>
</kw>
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<status status="PASS" start="2024-03-21T13:52:49.879000" elapsed="30.091000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:52:49.879000" elapsed="30.091000"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:53:19.975000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-bplfr 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:53:20.009000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:53:20.009000" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-bplfr","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:53:19.974000" elapsed="0.035000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.010000" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-bplfr","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1711029155249,"modificationTime":1711029155249,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-bplfr"},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:53:20.010000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.011000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:53:20.010000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:53:19.973000" elapsed="0.038000"/>
</kw>
<msg time="2024-03-21T13:53:20.011000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:53:19.973000" elapsed="0.038000"/>
</kw>
<msg time="2024-03-21T13:53:20.011000" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-bplfr","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:53:19.973000" elapsed="0.038000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.011000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.012000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-21T13:53:19.972000" elapsed="0.040000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-21T13:53:19.972000" elapsed="0.040000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<status status="PASS" start="2024-03-21T13:53:19.971000" elapsed="0.041000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:53:19.971000" elapsed="0.042000"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:53:20.018000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-bplfr/buc-nurlv 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:53:20.042000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:53:20.042000" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-nurlv","quotaInBytes":-1,"quotaInNamespa...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:53:20.016000" elapsed="0.027000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.043000" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-nurlv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1711029158317,"modificationTime":1711029158317,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-bplfr","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:53:20.043000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.044000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:53:20.044000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:53:20.016000" elapsed="0.028000"/>
</kw>
<msg time="2024-03-21T13:53:20.044000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:53:20.016000" elapsed="0.029000"/>
</kw>
<msg time="2024-03-21T13:53:20.045000" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-nurlv","quotaInBytes":-1,"quotaInNamespa...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:53:20.015000" elapsed="0.030000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.045000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.045000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-21T13:53:20.015000" elapsed="0.031000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-21T13:53:20.014000" elapsed="0.032000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<status status="PASS" start="2024-03-21T13:53:20.014000" elapsed="0.032000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:53:20.013000" elapsed="0.033000"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:53:20.051000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-bplfr/buc-nurlv/file1 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:53:20.091000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:53:20.091000" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:53:20.049000" elapsed="0.042000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.092000" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1711029161706,"modificationTime":1711029163763,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-bplfr","bucketName":"buc-nurlv","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600001},"blockCommitSequenceId":2,"containerID":1,"localID":113750153625600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600001,"blockCommitSequenceId":2}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600001},"blockCommitSequenceId":2,"containerID":1,"localID":113750153625600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600001,"blockCommitSequenceId":2}],"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600001},"blockCommitSequenceId":2,"containerID":1,"localID":113750153625600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600001},"blockCommitSequenceId":2,"containerID":1,"localID":113750153625600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600001,"blockCommitSequenceId":2}]],"locationListCount":1,"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:53:20.091000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.093000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:53:20.092000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:53:20.049000" elapsed="0.044000"/>
</kw>
<msg time="2024-03-21T13:53:20.093000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:53:20.049000" elapsed="0.044000"/>
</kw>
<msg time="2024-03-21T13:53:20.093000" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:53:20.048000" elapsed="0.045000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.093000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.094000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-21T13:53:20.048000" elapsed="0.046000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-21T13:53:20.048000" elapsed="0.046000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<status status="PASS" start="2024-03-21T13:53:20.047000" elapsed="0.047000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:53:20.046000" elapsed="0.048000"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:53:20.100000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-bplfr/buc-nurlv/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:53:20.114000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:53:20.114000" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:53:20.098000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.115000" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:53:20.115000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.116000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:53:20.115000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:53:20.098000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-21T13:53:20.116000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:53:20.098000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-21T13:53:20.116000" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:53:20.097000" elapsed="0.019000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.116000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.117000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-21T13:53:20.097000" elapsed="0.020000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-21T13:53:20.096000" elapsed="0.021000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<status status="PASS" start="2024-03-21T13:53:20.096000" elapsed="0.021000"/>
</kw>
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:53:20.096000" elapsed="0.021000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-21T13:53:20.118000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:53:20.095000" elapsed="0.023000"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:53:20.124000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-bplfr/buc-nurlv&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:53:20.142000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:53:20.142000" level="INFO">${output} = {"status":"OK","path":"/vol-bplfr/buc-nurlv","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-bplfr/buc-nurlv/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:53:20.122000" elapsed="0.020000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.143000" level="INFO">{"status":"OK","path":"/vol-bplfr/buc-nurlv","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-bplfr/buc-nurlv/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:53:20.143000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.144000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:53:20.144000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:53:20.122000" elapsed="0.023000"/>
</kw>
<msg time="2024-03-21T13:53:20.145000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:53:20.121000" elapsed="0.024000"/>
</kw>
<msg time="2024-03-21T13:53:20.145000" level="INFO">${result} = {"status":"OK","path":"/vol-bplfr/buc-nurlv","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-bplfr/buc-nurlv/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:53:20.121000" elapsed="0.024000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.145000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.146000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-21T13:53:20.120000" elapsed="0.027000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-21T13:53:20.120000" elapsed="0.027000"/>
</kw>
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<status status="PASS" start="2024-03-21T13:53:20.119000" elapsed="0.028000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:53:20.119000" elapsed="0.028000"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:53:20.153000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-bplfr 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:53:20.166000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:53:20.167000" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:53:20.152000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.168000" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:53:20.167000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.169000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:53:20.168000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:53:20.151000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-21T13:53:20.169000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:53:20.151000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-21T13:53:20.169000" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:53:20.150000" elapsed="0.019000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.170000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.170000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-21T13:53:20.150000" elapsed="0.021000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-21T13:53:20.149000" elapsed="0.022000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<status status="PASS" start="2024-03-21T13:53:20.148000" elapsed="0.023000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:53:20.148000" elapsed="0.023000"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:53:20.177000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-bplfr/buc-nurlv 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:53:20.190000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:53:20.190000" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:53:20.175000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.191000" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:53:20.190000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.191000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:53:20.191000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:53:20.175000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-21T13:53:20.192000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:53:20.175000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-21T13:53:20.192000" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:53:20.174000" elapsed="0.018000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.192000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.193000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-21T13:53:20.174000" elapsed="0.019000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-21T13:53:20.173000" elapsed="0.020000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<status status="PASS" start="2024-03-21T13:53:20.172000" elapsed="0.021000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:53:20.172000" elapsed="0.021000"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-21T13:53:20.199000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-21T13:53:20.210000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-21T13:53:20.210000" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-21T13:53:20.197000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.211000" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-21T13:53:20.211000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-21T13:53:20.211000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-21T13:53:20.211000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-21T13:53:20.196000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:53:20.212000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-21T13:53:20.196000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-21T13:53:20.212000" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-21T13:53:20.196000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.212000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-21T13:53:20.213000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-21T13:53:20.195000" elapsed="0.018000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-21T13:53:20.195000" elapsed="0.018000"/>
</kw>
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<status status="PASS" start="2024-03-21T13:53:20.194000" elapsed="0.019000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-21T13:53:20.194000" elapsed="0.019000"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" start="2024-03-21T13:52:31.740000" elapsed="48.475000"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
