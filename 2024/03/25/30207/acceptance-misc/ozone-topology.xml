<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0 (Python 3.8.10 on linux)" generated="2024-03-25T15:57:25.632324" rpa="false" schemaversion="5">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:52:38.238000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:52:38.244000" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:52:38.375000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:52:38.375000" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 25 Mar 2024 15:52:38 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 25 Mar 2024 15:26:46 GMT
Content-Typ...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:52:38.241000" elapsed="0.134000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:52:38.377000" level="INFO">HTTP/1.1 200 OK
Date: Mon, 25 Mar 2024 15:52:38 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 25 Mar 2024 15:26:46 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:52:38.376000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:52:38.378000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:52:38.377000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:52:38.240000" elapsed="0.138000"/>
</kw>
<msg time="2024-03-25T15:52:38.378000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:52:38.240000" elapsed="0.139000"/>
</kw>
<msg time="2024-03-25T15:52:38.380000" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 25 Mar 2024 15:52:38 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 25 Mar 2024 15:26:46 GMT
Content-Typ...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<status status="PASS" start="2024-03-25T15:52:38.239000" elapsed="0.141000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:52:38.380000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:52:38.237000" elapsed="0.145000"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:52:38.385000" elapsed="0.002000"/>
</kw>
<kw name="Generate Random String" owner="String">
<msg time="2024-03-25T15:52:38.388000" level="INFO">${random} = 1CxvDWhyGT</msg>
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-03-25T15:52:38.387000" elapsed="0.002000"/>
</kw>
<kw name="Freon OCKG" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:52:38.418000" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 1CxvDWhyGT  2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:52:47.769000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:52:47.769000" level="INFO">${output} = 2024-03-25 15:52:40,740 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:52:40,840 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:52:38.402000" elapsed="9.367000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:52:47.770000" level="INFO">2024-03-25 15:52:40,740 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:52:40,840 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-03-25 15:52:40,840 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-03-25 15:52:40,936 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1CxvDWhyGT and number-of-tests 1
2024-03-25 15:52:41,001 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-03-25 15:52:41,162 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2024-03-25 15:52:42,007 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-03-25 15:52:43,007 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-03-25 15:52:44,008 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-03-25 15:52:44,183 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2024-03-25 15:52:44,314 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2024-03-25 15:52:44,967 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-03-25 15:52:45,008 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-03-25 15:52:45,246 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-03-25 15:52:46,009 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-03-25 15:52:47,009 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-03-25 15:52:47,422 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2013.338788, max=2013.338788, mean=2013.338788, stddev=0.0, median=2013.338788, p75=2013.338788, p95=2013.338788, p98=2013.338788, p99=2013.338788, p999=2013.338788, mean_rate=0.3262159801542542, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-03-25 15:52:47,423 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2024-03-25 15:52:47,423 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-03-25 15:52:47,423 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:52:47.769000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:52:47.771000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:52:47.770000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:52:38.402000" elapsed="9.369000"/>
</kw>
<msg time="2024-03-25T15:52:47.771000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:52:38.395000" elapsed="9.376000"/>
</kw>
<msg time="2024-03-25T15:52:47.771000" level="INFO">${result} = 2024-03-25 15:52:40,740 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:52:40,840 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-03-25T15:52:38.392000" elapsed="9.379000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:52:47.771000" elapsed="0.001000"/>
</kw>
<arg>prefix=${random}</arg>
<status status="PASS" start="2024-03-25T15:52:38.389000" elapsed="9.383000"/>
</kw>
<kw name="Freon OCKV" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:52:47.776000" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 1CxvDWhyGT  2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:52:53.851000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:52:53.851000" level="INFO">${output} = 2024-03-25 15:52:49,682 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:52:49,843 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:52:47.774000" elapsed="6.077000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:52:53.852000" level="INFO">2024-03-25 15:52:49,682 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:52:49,843 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-03-25 15:52:49,843 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-03-25 15:52:49,936 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1CxvDWhyGT and number-of-tests 1
2024-03-25 15:52:49,986 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-03-25 15:52:50,146 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2024-03-25 15:52:50,987 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-03-25 15:52:51,787 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-03-25 15:52:51,987 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-03-25 15:52:52,988 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-03-25 15:52:53,460 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=42.702497, max=42.702497, mean=42.702497, stddev=0.0, median=42.702497, p75=42.702497, p95=42.702497, p98=42.702497, p99=42.702497, p999=42.702497, mean_rate=0.9774174338571676, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-03-25 15:52:53,461 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-03-25 15:52:53,461 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-03-25 15:52:53,461 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:52:53.851000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:52:53.852000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:52:53.852000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:52:47.774000" elapsed="6.079000"/>
</kw>
<msg time="2024-03-25T15:52:53.853000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:52:47.774000" elapsed="6.079000"/>
</kw>
<msg time="2024-03-25T15:52:53.853000" level="INFO">${result} = 2024-03-25 15:52:49,682 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:52:49,843 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-03-25T15:52:47.773000" elapsed="6.080000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:52:53.853000" elapsed="0.000000"/>
</kw>
<arg>prefix=${random}</arg>
<status status="PASS" start="2024-03-25T15:52:47.772000" elapsed="6.081000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:52:38.382000" elapsed="15.472000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-03-25T15:52:38.148000" elapsed="15.706000"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="34">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:52:56.025000" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:52:58.903000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:52:58.903000" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:52:56.023000" elapsed="2.880000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:52:58.904000" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:52:58.904000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:52:58.905000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:52:58.905000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:52:56.022000" elapsed="2.883000"/>
</kw>
<msg time="2024-03-25T15:52:58.905000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:52:56.022000" elapsed="2.883000"/>
</kw>
<msg time="2024-03-25T15:52:58.906000" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<status status="PASS" start="2024-03-25T15:52:56.022000" elapsed="2.884000"/>
</kw>
<kw name="Validate PrintTopology Output">
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>State = HEALTHY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:52:58.906000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:52:58.907000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:52:58.907000" elapsed="0.001000"/>
</kw>
<arg>${output}</arg>
<status status="PASS" start="2024-03-25T15:52:58.906000" elapsed="0.002000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:52:56.021000" elapsed="2.887000"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="38">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:52:58.912000" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:01.892000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:01.892000" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:52:58.910000" elapsed="2.982000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:01.893000" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:01.893000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:01.894000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:01.894000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:52:58.910000" elapsed="2.984000"/>
</kw>
<msg time="2024-03-25T15:53:01.894000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:52:58.910000" elapsed="2.984000"/>
</kw>
<msg time="2024-03-25T15:53:01.894000" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<status status="PASS" start="2024-03-25T15:52:58.909000" elapsed="2.986000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>Location: /.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:53:01.895000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:53:01.895000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:52:58.909000" elapsed="2.987000"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="43">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:01.900000" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:04.518000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:04.518000" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:01.898000" elapsed="2.620000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:04.519000" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:04.518000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:04.519000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:04.519000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:01.898000" elapsed="2.622000"/>
</kw>
<msg time="2024-03-25T15:53:04.520000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:01.898000" elapsed="2.622000"/>
</kw>
<msg time="2024-03-25T15:53:04.520000" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<status status="PASS" start="2024-03-25T15:53:01.897000" elapsed="2.623000"/>
</kw>
<kw name="Validate PrintTopology Output">
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>State = HEALTHY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:53:04.521000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:53:04.521000" elapsed="0.001000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:53:04.522000" elapsed="0.000000"/>
</kw>
<arg>${output}</arg>
<status status="PASS" start="2024-03-25T15:53:04.520000" elapsed="0.002000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:53:01.897000" elapsed="2.625000"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="47">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:04.526000" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:07.372000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:07.372000" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:04.524000" elapsed="2.848000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:07.373000" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:07.373000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:07.374000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:07.373000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:04.524000" elapsed="2.850000"/>
</kw>
<msg time="2024-03-25T15:53:07.374000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:04.524000" elapsed="2.850000"/>
</kw>
<msg time="2024-03-25T15:53:07.374000" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<status status="PASS" start="2024-03-25T15:53:04.523000" elapsed="2.851000"/>
</kw>
<kw name="Validate PrintTopology Output">
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>State = HEALTHY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:53:07.375000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:53:07.375000" elapsed="0.001000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:53:07.376000" elapsed="0.000000"/>
</kw>
<arg>${output}</arg>
<status status="PASS" start="2024-03-25T15:53:07.375000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:53:04.523000" elapsed="2.853000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-03-25T15:52:55.978000" elapsed="11.399000"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:09.578000" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:12.616000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:12.616000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:09.573000" elapsed="3.044000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:12.617000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:12.617000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:12.618000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:12.618000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:09.573000" elapsed="3.045000"/>
</kw>
<msg time="2024-03-25T15:53:12.618000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:09.572000" elapsed="3.046000"/>
</kw>
<arg>ozone sh volume create recon</arg>
<status status="PASS" start="2024-03-25T15:53:09.572000" elapsed="3.046000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:12.622000" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:15.459000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:15.459000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:12.621000" elapsed="2.838000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:15.460000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:15.459000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:15.460000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:15.460000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:12.619000" elapsed="2.842000"/>
</kw>
<msg time="2024-03-25T15:53:15.461000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:12.619000" elapsed="2.842000"/>
</kw>
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<status status="PASS" start="2024-03-25T15:53:12.619000" elapsed="2.842000"/>
</kw>
<kw name="Freon OCKG" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:15.464000" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:24.798000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:24.798000" level="INFO">${output} = 2024-03-25 15:53:17,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:53:17,266 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:15.463000" elapsed="9.335000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:24.799000" level="INFO">2024-03-25 15:53:17,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:53:17,266 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-03-25 15:53:17,266 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-03-25 15:53:17,341 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2024-03-25 15:53:17,382 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-03-25 15:53:17,531 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2024-03-25 15:53:18,383 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-03-25 15:53:18,911 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-03-25 15:53:19,202 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-03-25 15:53:19,383 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-03-25 15:53:20,385 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2024-03-25 15:53:21,385 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2024-03-25 15:53:22,385 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2024-03-25 15:53:23,386 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2024-03-25 15:53:24,386 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2024-03-25 15:53:24,462 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=49.979475, max=2579.765836, mean=523.6967429459279, stddev=782.8800918794741, median=108.970388, p75=607.43459, p95=2579.765836, p98=2579.765836, p99=2579.765836, p999=2579.765836, mean_rate=1.6460421137040306, m1=1.4, m5=1.4, m15=1.4, rate_unit=events/second, duration_unit=milliseconds
2024-03-25 15:53:24,463 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2024-03-25 15:53:24,463 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-03-25 15:53:24,463 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:24.799000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:24.800000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:24.799000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:15.462000" elapsed="9.338000"/>
</kw>
<msg time="2024-03-25T15:53:24.800000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:15.462000" elapsed="9.338000"/>
</kw>
<msg time="2024-03-25T15:53:24.800000" level="INFO">${result} = 2024-03-25 15:53:17,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:53:17,266 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-03-25T15:53:15.462000" elapsed="9.338000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:53:24.800000" elapsed="0.001000"/>
</kw>
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<status status="PASS" start="2024-03-25T15:53:15.461000" elapsed="9.340000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:53:24.802000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:24.805000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:24.921000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:24.921000" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:24.803000" elapsed="0.118000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:24.922000" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:24.921000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:24.923000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:24.922000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:24.803000" elapsed="0.120000"/>
</kw>
<msg time="2024-03-25T15:53:24.923000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:24.802000" elapsed="0.121000"/>
</kw>
<msg time="2024-03-25T15:53:24.923000" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<status status="PASS" start="2024-03-25T15:53:24.802000" elapsed="0.122000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:53:24.924000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:24.928000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:24.948000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:24.948000" level="INFO">${output} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:24.926000" elapsed="0.022000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:24.949000" level="INFO">[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:24.948000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:24.949000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:24.949000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:24.925000" elapsed="0.024000"/>
</kw>
<msg time="2024-03-25T15:53:24.950000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:24.925000" elapsed="0.025000"/>
</kw>
<msg time="2024-03-25T15:53:24.950000" level="INFO">${result} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<status status="PASS" start="2024-03-25T15:53:24.924000" elapsed="0.026000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-25T15:53:24.950000" level="FAIL">'[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-25T15:53:24.950000" elapsed="0.001000"/>
</kw>
<status status="FAIL" start="2024-03-25T15:53:24.801000" elapsed="0.150000"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:53:34.952000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:34.955000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:34.968000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:34.968000" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:34.954000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:34.969000" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:34.969000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:34.970000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:34.969000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:34.953000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:53:34.970000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:34.953000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:53:34.970000" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<status status="PASS" start="2024-03-25T15:53:34.953000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:53:34.970000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:34.973000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:34.986000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:34.986000" level="INFO">${output} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:34.972000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:34.987000" level="INFO">[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:34.987000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:34.988000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:34.988000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:34.972000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:53:34.988000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:34.971000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:53:34.988000" level="INFO">${result} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<status status="PASS" start="2024-03-25T15:53:34.971000" elapsed="0.018000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-25T15:53:34.989000" level="FAIL">'[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-25T15:53:34.989000" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-03-25T15:53:34.951000" elapsed="0.038000"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:53:44.990000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:44.994000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:45.006000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:45.006000" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:44.993000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:45.007000" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:45.007000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:45.008000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:45.008000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:44.992000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:53:45.008000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:44.992000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:53:45.009000" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<status status="PASS" start="2024-03-25T15:53:44.991000" elapsed="0.018000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:53:45.009000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:45.013000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:45.026000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:45.026000" level="INFO">${output} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:45.011000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:45.028000" level="INFO">[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:45.027000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:45.028000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:45.028000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:45.010000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-25T15:53:45.029000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:45.010000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-25T15:53:45.029000" level="INFO">${result} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<status status="PASS" start="2024-03-25T15:53:45.009000" elapsed="0.020000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-25T15:53:45.029000" level="FAIL">'[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-25T15:53:45.029000" elapsed="0.001000"/>
</kw>
<status status="FAIL" start="2024-03-25T15:53:44.990000" elapsed="0.040000"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:53:55.031000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:55.034000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:55.045000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:55.046000" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:55.032000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:55.046000" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:55.046000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:55.047000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:55.047000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:55.032000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-25T15:53:55.047000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:55.032000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-25T15:53:55.048000" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<status status="PASS" start="2024-03-25T15:53:55.031000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:53:55.048000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:53:55.051000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:53:55.064000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:53:55.064000" level="INFO">${output} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:53:55.050000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:53:55.065000" level="INFO">[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:53:55.064000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:53:55.066000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:53:55.065000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:53:55.049000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:53:55.066000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:53:55.049000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:53:55.066000" level="INFO">${result} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<status status="PASS" start="2024-03-25T15:53:55.048000" elapsed="0.018000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-25T15:53:55.067000" level="FAIL">'[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-25T15:53:55.066000" elapsed="0.001000"/>
</kw>
<status status="FAIL" start="2024-03-25T15:53:55.030000" elapsed="0.037000"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:05.068000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:05.071000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:05.083000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:05.083000" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:05.070000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:05.084000" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:05.084000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:05.085000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:05.084000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:05.069000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:05.085000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:05.069000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:05.085000" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<status status="PASS" start="2024-03-25T15:54:05.069000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:05.085000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:05.088000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:05.101000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:05.101000" level="INFO">${output} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:05.087000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:05.102000" level="INFO">[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:05.102000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:05.103000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:05.102000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:05.086000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:05.103000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:05.086000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:05.103000" level="INFO">${result} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<status status="PASS" start="2024-03-25T15:54:05.086000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-25T15:54:05.104000" level="FAIL">'[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-25T15:54:05.104000" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-03-25T15:54:05.068000" elapsed="0.036000"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:15.105000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:15.109000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:15.121000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:15.121000" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:15.107000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:15.122000" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:15.121000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:15.122000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:15.122000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:15.106000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:15.122000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:15.106000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:15.123000" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<status status="PASS" start="2024-03-25T15:54:15.106000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:15.123000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:15.126000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:15.140000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:15.140000" level="INFO">${output} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:15.124000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:15.141000" level="INFO">[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:15.140000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:15.141000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:15.141000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:15.124000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:15.141000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:15.124000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-25T15:54:15.142000" level="INFO">${result} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<status status="PASS" start="2024-03-25T15:54:15.123000" elapsed="0.019000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-25T15:54:15.142000" level="FAIL">'[{"volume":"recon","bucket":"api","fileSize":2048,"count":2},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-25T15:54:15.142000" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-03-25T15:54:15.105000" elapsed="0.038000"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.144000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.147000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.159000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.159000" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.145000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.160000" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.159000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.160000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.160000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.145000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:25.161000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.145000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:25.161000" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<status status="PASS" start="2024-03-25T15:54:25.144000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.161000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.164000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.176000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.177000" level="INFO">${output} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.163000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.178000" level="INFO">[{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.177000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.178000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.178000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.162000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:25.178000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.162000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:25.179000" level="INFO">${result} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<status status="PASS" start="2024-03-25T15:54:25.162000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.179000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.143000" elapsed="0.036000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-25T15:53:24.801000" elapsed="60.378000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:53:09.571000" elapsed="75.608000"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.184000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.215000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.215000" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"59a678e7-665a-437a-9f02-d629772f74f7","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1711382...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.182000" elapsed="0.033000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.216000" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"59a678e7-665a-437a-9f02-d629772f74f7","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1711382046411,"storageReport":{"capacity":77851254784,"used":4096,"remaining":17510117376,"committed":0},"pipelines":[{"pipelineID":"a850e185-e108-40f5-af92-2ba1c3383440","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":0,"openContainers":0,"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1711381911695,"revision":"07a68c02d4cd3d24afde259c0d1a072d0ed78fed","buildDate":"2024-03-25T15:26Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1711382060708,"storageReport":{"capacity":77851254784,"used":20486,"remaining":17209585664,"committed":536854522},"pipelines":[{"pipelineID":"ab84dff5-46d8-4e73-9a38-1af495a75e3a","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"e94984f5-54eb-45fb-86a2-726a8b49eec3","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"8a75de81-e94c-4e75-b89c-3599629e7548","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1711381910836,"revision":"07a68c02d4cd3d24afde259c0d1a072d0ed78fed","buildDate":"2024-03-25T15:26Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"dafa9657-960e-41a2-b0b9-fc4be96342d6","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1711382060032,"storageReport":{"capacity":77851254784,"used":8196,"remaining":17209585664,"committed":268431356},"pipelines":[{"pipelineID":"4e3f7cf4-0234-4771-95fb-29e6ea0328c5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"f170743d-9965-4443-896f-8bff8211061c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1711381910321,"revision":"07a68c02d4cd3d24afde259c0d1a072d0ed78fed","buildDate":"2024-03-25T15:26Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1711382060729,"storageReport":{"capacity":77851254784,"used":20486,"remaining":17209585664,"committed":536854522},"pipelines":[{"pipelineID":"d22a81c3-ad74-4cf5-9b22-640e44a3bc4a","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"e94984f5-54eb-45fb-86a2-726a8b49eec3","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"8a75de81-e94c-4e75-b89c-3599629e7548","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1711381910919,"revision":"07a68c02d4cd3d24afde259c0d1a072d0ed78fed","buildDate":"2024-03-25T15:26Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"ec5df961-52fc-447b-8ac0-8207254044c7","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1711382060734,"storageReport":{"capacity":77851254784,"used":9221,"remaining":17209585664,"committed":536865787},"pipelines":[{"pipelineID":"70dfba01-bb81-40e2-97d7-f68c76ab48ed","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"4e3f7cf4-0234-4771-95fb-29e6ea0328c5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"e94984f5-54eb-45fb-86a2-726a8b49eec3","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1711381910170,"revision":"07a68c02d4cd3d24afde259c0d1a072d0ed78fed","buildDate":"2024-03-25T15:26Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"d88d56f1-f1fe-4160-be7a-298bb84a4516","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1711382059919,"storageReport":{"capacity":77851254784,"used":23561,"remaining":17209585664,"committed":536851447},"pipelines":[{"pipelineID":"4e3f7cf4-0234-4771-95fb-29e6ea0328c5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"b238af17-5973-4335-b2a0-b85d18948ccb","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"8a75de81-e94c-4e75-b89c-3599629e7548","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1711381909188,"revision":"07a68c02d4cd3d24afde259c0d1a072d0ed78fed","buildDate":"2024-03-25T15:26Z","layoutVersion":7,"networkLocation":"/rack1"}]}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.216000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.217000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.216000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.182000" elapsed="0.035000"/>
</kw>
<msg time="2024-03-25T15:54:25.217000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.181000" elapsed="0.036000"/>
</kw>
<msg time="2024-03-25T15:54:25.217000" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"59a678e7-665a-437a-9f02-d629772f74f7","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1711382...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<status status="PASS" start="2024-03-25T15:54:25.181000" elapsed="0.036000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.218000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]1</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:54:25.218000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]2</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:54:25.219000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]3</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:54:25.219000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.222000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.258000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.258000" level="INFO">${output} = {"totalCount":9,"pipelines":[{"pipelineId":"70dfba01-bb81-40e2-97d7-f68c76ab48ed","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"c...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.221000" elapsed="0.037000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.259000" level="INFO">{"totalCount":9,"pipelines":[{"pipelineId":"70dfba01-bb81-40e2-97d7-f68c76ab48ed","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"ec5df961-52fc-447b-8ac0-8207254044c7","uuidString":"ec5df961-52fc-447b-8ac0-8207254044c7","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"ec5df961-52fc-447b-8ac0-8207254044c7","networkLocation":"/rack2","networkFullPath":"/rack2/ec5df961-52fc-447b-8ac0-8207254044c7","numOfLeaves":1}],"lastLeaderElection":0,"duration":118894,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"a850e185-e108-40f5-af92-2ba1c3383440","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"59a678e7-665a-437a-9f02-d629772f74f7","uuidString":"59a678e7-665a-437a-9f02-d629772f74f7","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"59a678e7-665a-437a-9f02-d629772f74f7","networkLocation":"/rack1","networkFullPath":"/rack1/59a678e7-665a-437a-9f02-d629772f74f7","numOfLeaves":1}],"lastLeaderElection":0,"duration":118252,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"4e3f7cf4-0234-4771-95fb-29e6ea0328c5","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"dafa9657-960e-41a2-b0b9-fc4be96342d6","uuidString":"dafa9657-960e-41a2-b0b9-fc4be96342d6","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"dafa9657-960e-41a2-b0b9-fc4be96342d6","networkLocation":"/rack2","networkFullPath":"/rack2/dafa9657-960e-41a2-b0b9-fc4be96342d6","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"d88d56f1-f1fe-4160-be7a-298bb84a4516","uuidString":"d88d56f1-f1fe-4160-be7a-298bb84a4516","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"d88d56f1-f1fe-4160-be7a-298bb84a4516","networkLocation":"/rack1","networkFullPath":"/rack1/d88d56f1-f1fe-4160-be7a-298bb84a4516","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"ec5df961-52fc-447b-8ac0-8207254044c7","uuidString":"ec5df961-52fc-447b-8ac0-8207254044c7","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"ec5df961-52fc-447b-8ac0-8207254044c7","networkLocation":"/rack2","networkFullPath":"/rack2/ec5df961-52fc-447b-8ac0-8207254044c7","numOfLeaves":1}],"lastLeaderElection":0,"duration":118638,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"f170743d-9965-4443-896f-8bff8211061c","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"dafa9657-960e-41a2-b0b9-fc4be96342d6","uuidString":"dafa9657-960e-41a2-b0b9-fc4be96342d6","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"dafa9657-960e-41a2-b0b9-fc4be96342d6","networkLocation":"/rack2","networkFullPath":"/rack2/dafa9657-960e-41a2-b0b9-fc4be96342d6","numOfLeaves":1}],"lastLeaderElection":0,"duration":118651,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"ab84dff5-46d8-4e73-9a38-1af495a75e3a","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","uuidString":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","networkLocation":"/rack2","networkFullPath":"/rack2/aee7c90b-aecc-40f5-a144-1fef8f00e5c8","numOfLeaves":1}],"lastLeaderElection":0,"duration":118909,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"b238af17-5973-4335-b2a0-b85d18948ccb","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"d88d56f1-f1fe-4160-be7a-298bb84a4516","uuidString":"d88d56f1-f1fe-4160-be7a-298bb84a4516","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"d88d56f1-f1fe-4160-be7a-298bb84a4516","networkLocation":"/rack1","networkFullPath":"/rack1/d88d56f1-f1fe-4160-be7a-298bb84a4516","numOfLeaves":1}],"lastLeaderElection":0,"duration":118887,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"d22a81c3-ad74-4cf5-9b22-640e44a3bc4a","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","uuidString":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","networkLocation":"/rack1","networkFullPath":"/rack1/bf7c2585-54a1-42cd-a2c0-63e593150fd2","numOfLeaves":1}],"lastLeaderElection":0,"duration":119231,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"e94984f5-54eb-45fb-86a2-726a8b49eec3","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","uuidString":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","networkLocation":"/rack2","networkFullPath":"/rack2/aee7c90b-aecc-40f5-a144-1fef8f00e5c8","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","uuidString":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","networkLocation":"/rack1","networkFullPath":"/rack1/bf7c2585-54a1-42cd-a2c0-63e593150fd2","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"ec5df961-52fc-447b-8ac0-8207254044c7","uuidString":"ec5df961-52fc-447b-8ac0-8207254044c7","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"ec5df961-52fc-447b-8ac0-8207254044c7","networkLocation":"/rack2","networkFullPath":"/rack2/ec5df961-52fc-447b-8ac0-8207254044c7","numOfLeaves":1}],"lastLeaderElection":0,"duration":118938,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"8a75de81-e94c-4e75-b89c-3599629e7548","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"d88d56f1-f1fe-4160-be7a-298bb84a4516","uuidString":"d88d56f1-f1fe-4160-be7a-298bb84a4516","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"d88d56f1-f1fe-4160-be7a-298bb84a4516","networkLocation":"/rack1","networkFullPath":"/rack1/d88d56f1-f1fe-4160-be7a-298bb84a4516","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","uuidString":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","networkLocation":"/rack2","networkFullPath":"/rack2/aee7c90b-aecc-40f5-a144-1fef8f00e5c8","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","uuidString":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"maintenance":false,"decommissioned":false,"networkName":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","networkLocation":"/rack1","networkFullPath":"/rack1/bf7c2585-54a1-42cd-a2c0-63e593150fd2","numOfLeaves":1}],"lastLeaderElection":0,"duration":118902,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1}]}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.258000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.259000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.259000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.220000" elapsed="0.040000"/>
</kw>
<msg time="2024-03-25T15:54:25.260000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.220000" elapsed="0.040000"/>
</kw>
<msg time="2024-03-25T15:54:25.260000" level="INFO">${result} = {"totalCount":9,"pipelines":[{"pipelineId":"70dfba01-bb81-40e2-97d7-f68c76ab48ed","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"c...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<status status="PASS" start="2024-03-25T15:54:25.219000" elapsed="0.041000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.260000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.261000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.261000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]1</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:54:25.261000" elapsed="0.001000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]2</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:54:25.262000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]3</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-25T15:54:25.262000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.266000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.302000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.302000" level="INFO">${output} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":467107528704,"used":86046,"remaining":103558045696,"committed":2415857634},"containers":3,"missingCon...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.264000" elapsed="0.038000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.304000" level="INFO">{"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":467107528704,"used":86046,"remaining":103558045696,"committed":2415857634},"containers":3,"missingContainers":0,"openContainers":3,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.303000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.304000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.304000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.264000" elapsed="0.041000"/>
</kw>
<msg time="2024-03-25T15:54:25.305000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.263000" elapsed="0.042000"/>
</kw>
<msg time="2024-03-25T15:54:25.305000" level="INFO">${result} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":467107528704,"used":86046,"remaining":103558045696,"committed":2415857634},"containers":3,"missingCon...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<status status="PASS" start="2024-03-25T15:54:25.263000" elapsed="0.042000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.305000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.306000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.306000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.312000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.328000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.328000" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1711381965962,"lastSeenTime":1711381965962,"last...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.309000" elapsed="0.019000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.329000" level="INFO">[{"containerId":1,"datanodeUuid":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1711381965962,"lastSeenTime":1711381965962,"lastBcsId":0,"state":"OPEN"},{"containerId":1,"datanodeUuid":"bf7c2585-54a1-42cd-a2c0-63e593150fd2","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1711381966031,"lastSeenTime":1711381966031,"lastBcsId":0,"state":"OPEN"},{"containerId":1,"datanodeUuid":"d88d56f1-f1fe-4160-be7a-298bb84a4516","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1711381965943,"lastSeenTime":1711381965943,"lastBcsId":0,"state":"OPEN"}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.328000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.330000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.329000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.308000" elapsed="0.022000"/>
</kw>
<msg time="2024-03-25T15:54:25.330000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.308000" elapsed="0.022000"/>
</kw>
<msg time="2024-03-25T15:54:25.330000" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"aee7c90b-aecc-40f5-a144-1fef8f00e5c8","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1711381965962,"lastSeenTime":1711381965962,"last...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<status status="PASS" start="2024-03-25T15:54:25.307000" elapsed="0.023000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.330000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:25.180000" elapsed="0.151000"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.332000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.336000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.352000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.352000" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.333000" elapsed="0.019000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.353000" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.eddc7837.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.d3483ea3.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.62d33507.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.82fb13cc.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.352000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.353000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.353000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.333000" elapsed="0.020000"/>
</kw>
<msg time="2024-03-25T15:54:25.353000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.333000" elapsed="0.021000"/>
</kw>
<msg time="2024-03-25T15:54:25.354000" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<status status="PASS" start="2024-03-25T15:54:25.332000" elapsed="0.022000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.354000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:25.331000" elapsed="0.023000"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.358000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.361000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.361000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.357000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.361000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.361000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.362000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.362000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.356000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-25T15:54:25.362000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.356000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-25T15:54:25.356000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.365000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.376000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.376000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.364000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.377000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.377000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.378000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.378000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.364000" elapsed="0.014000"/>
</kw>
<msg time="2024-03-25T15:54:25.379000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.363000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:25.379000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.363000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.380000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.379000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.380000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.380000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.379000" elapsed="0.001000"/>
</if>
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-25T15:54:25.362000" elapsed="0.019000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.381000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.381000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.386000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.397000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.397000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.384000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.398000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.397000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.398000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.398000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.383000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-25T15:54:25.398000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.383000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-25T15:54:25.399000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.382000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.399000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.399000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.399000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.399000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.399000" elapsed="0.001000"/>
</if>
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:25.382000" elapsed="0.018000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:25.355000" elapsed="0.045000"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.404000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.406000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.406000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.402000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.407000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.406000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.407000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.407000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.402000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-25T15:54:25.408000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.401000" elapsed="0.007000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-25T15:54:25.401000" elapsed="0.007000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.411000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.423000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.423000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.409000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.424000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.423000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.424000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.424000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.409000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-25T15:54:25.424000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.409000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:25.425000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.408000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.425000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.425000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.425000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.425000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.425000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-25T15:54:25.408000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.426000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.426000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.430000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.441000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.441000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.428000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.442000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.442000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.443000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.443000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.428000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-25T15:54:25.443000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.428000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-25T15:54:25.443000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.427000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.444000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.444000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.444000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.444000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.444000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<status status="PASS" start="2024-03-25T15:54:25.427000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.445000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.445000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.448000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.460000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.460000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.447000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.461000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.460000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.461000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.461000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.446000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-25T15:54:25.462000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.446000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:25.462000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.446000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.462000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.462000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.462000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.462000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.462000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:25.445000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.463000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.463000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.467000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.478000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.478000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.465000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.479000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.478000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.479000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.479000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.465000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-25T15:54:25.480000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.465000" elapsed="0.015000"/>
</kw>
<msg time="2024-03-25T15:54:25.480000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.464000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.480000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.480000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.481000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.480000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.480000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:25.464000" elapsed="0.017000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:25.401000" elapsed="0.080000"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.485000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.487000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.487000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.483000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.488000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.488000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.489000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.488000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.483000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-25T15:54:25.489000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.483000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-25T15:54:25.482000" elapsed="0.007000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.492000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.521000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.521000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.491000" elapsed="0.030000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.522000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.522000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.523000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.523000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.490000" elapsed="0.033000"/>
</kw>
<msg time="2024-03-25T15:54:25.523000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.490000" elapsed="0.033000"/>
</kw>
<msg time="2024-03-25T15:54:25.524000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.490000" elapsed="0.034000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.524000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.524000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.524000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.524000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.524000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-25T15:54:25.489000" elapsed="0.036000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.525000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.525000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.529000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.543000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.543000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.527000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.544000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.543000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.544000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.544000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.527000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-25T15:54:25.545000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.527000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-25T15:54:25.545000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.526000" elapsed="0.019000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.545000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.545000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.546000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.545000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.545000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<status status="PASS" start="2024-03-25T15:54:25.526000" elapsed="0.020000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.547000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.546000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.550000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.563000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.563000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.548000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.564000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.564000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.565000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.564000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.548000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:25.565000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.548000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:25.565000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.547000" elapsed="0.018000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.566000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.565000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.566000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.566000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.565000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:25.547000" elapsed="0.019000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.567000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.567000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.570000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.584000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.584000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.569000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.585000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.584000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.585000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.585000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.568000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:25.586000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.568000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-25T15:54:25.586000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.568000" elapsed="0.018000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.586000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.586000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.587000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.586000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.586000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:25.567000" elapsed="0.020000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:25.482000" elapsed="0.105000"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.591000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.594000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.594000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.589000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.595000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.594000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.595000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.595000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.589000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-25T15:54:25.596000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.589000" elapsed="0.007000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-25T15:54:25.588000" elapsed="0.008000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.599000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.615000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.615000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.597000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.616000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.616000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.617000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.616000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.597000" elapsed="0.020000"/>
</kw>
<msg time="2024-03-25T15:54:25.617000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.597000" elapsed="0.020000"/>
</kw>
<msg time="2024-03-25T15:54:25.617000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.596000" elapsed="0.021000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.618000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.617000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.618000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.618000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.617000" elapsed="0.002000"/>
</if>
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-25T15:54:25.596000" elapsed="0.023000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.619000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.619000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.623000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.642000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.643000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.621000" elapsed="0.022000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.644000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.643000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.645000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.644000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.621000" elapsed="0.024000"/>
</kw>
<msg time="2024-03-25T15:54:25.645000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.620000" elapsed="0.025000"/>
</kw>
<msg time="2024-03-25T15:54:25.646000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:25.620000" elapsed="0.026000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:25.646000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:25.646000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:25.646000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.646000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:25.646000" elapsed="0.001000"/>
</if>
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:25.620000" elapsed="0.027000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:25.588000" elapsed="0.059000"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" start="2024-03-25T15:53:09.538000" elapsed="76.110000"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.661000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:25.664000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:25.664000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.660000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.664000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:25.664000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.665000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:25.665000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.659000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-25T15:54:25.665000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.659000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-25T15:54:25.659000" elapsed="0.006000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:25.666000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.666000" elapsed="0.000000"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" owner="String">
<msg time="2024-03-25T15:54:25.667000" level="INFO">${random} = ghzpb</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-03-25T15:54:25.667000" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-25T15:54:25.668000" level="INFO">${VOLUME} = vol-ghzpb</msg>
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-25T15:54:25.667000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:25.680000" level="INFO">Running command 'ozone sh volume create /vol-ghzpb 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:28.746000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:28.747000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:25.679000" elapsed="3.068000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:28.748000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:28.747000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:28.748000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:28.748000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:25.678000" elapsed="3.070000"/>
</kw>
<msg time="2024-03-25T15:54:28.748000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:25.678000" elapsed="3.070000"/>
</kw>
<msg time="2024-03-25T15:54:28.749000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<status status="PASS" start="2024-03-25T15:54:25.668000" elapsed="3.081000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:28.749000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:25.666000" elapsed="3.083000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:25.658000" elapsed="3.091000"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" owner="String">
<msg time="2024-03-25T15:54:28.751000" level="INFO">${random} = knxrx</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-03-25T15:54:28.751000" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-25T15:54:28.752000" level="INFO">${BUCKET} = buc-knxrx</msg>
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-25T15:54:28.751000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:28.754000" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-ghzpb/buc-knxrx 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:31.868000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:31.868000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:28.753000" elapsed="3.115000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:31.869000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:31.869000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:31.870000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:31.869000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:28.752000" elapsed="3.118000"/>
</kw>
<msg time="2024-03-25T15:54:31.870000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:28.752000" elapsed="3.118000"/>
</kw>
<msg time="2024-03-25T15:54:31.870000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<status status="PASS" start="2024-03-25T15:54:28.752000" elapsed="3.118000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:31.870000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:28.750000" elapsed="3.121000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:28.750000" elapsed="3.121000"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:31.875000" level="INFO">Running command 'ozone sh key put /vol-ghzpb/buc-knxrx/file1 README.md 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:36.707000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:36.707000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:31.873000" elapsed="4.834000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:36.708000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:36.707000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:36.708000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:36.708000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:31.873000" elapsed="4.835000"/>
</kw>
<msg time="2024-03-25T15:54:36.708000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:31.873000" elapsed="4.836000"/>
</kw>
<msg time="2024-03-25T15:54:36.709000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<status status="PASS" start="2024-03-25T15:54:31.872000" elapsed="4.837000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:36.709000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:36.712000" level="INFO">Running command 'ozone sh key put /vol-ghzpb/buc-knxrx/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.284000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.284000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:36.710000" elapsed="7.574000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.285000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.285000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.286000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.286000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:36.710000" elapsed="7.576000"/>
</kw>
<msg time="2024-03-25T15:54:44.286000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:36.710000" elapsed="7.576000"/>
</kw>
<msg time="2024-03-25T15:54:44.287000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<status status="PASS" start="2024-03-25T15:54:36.709000" elapsed="7.578000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.287000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:31.872000" elapsed="12.415000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:31.871000" elapsed="12.416000"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.291000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.294000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.294000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.290000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.294000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.294000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.295000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.295000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.289000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-25T15:54:44.295000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.289000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-25T15:54:44.289000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.298000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.329000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.329000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.297000" elapsed="0.033000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.331000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.330000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.331000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.331000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.296000" elapsed="0.036000"/>
</kw>
<msg time="2024-03-25T15:54:44.332000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.296000" elapsed="0.036000"/>
</kw>
<msg time="2024-03-25T15:54:44.332000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.296000" elapsed="0.036000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.333000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.333000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.333000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.333000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.332000" elapsed="0.002000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-25T15:54:44.296000" elapsed="0.038000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.335000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.334000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.340000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.355000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.355000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.337000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.356000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.356000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.357000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.357000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.337000" elapsed="0.021000"/>
</kw>
<msg time="2024-03-25T15:54:44.358000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.336000" elapsed="0.022000"/>
</kw>
<msg time="2024-03-25T15:54:44.358000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.336000" elapsed="0.022000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.358000" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.358000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.359000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.359000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.358000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-03-25T15:54:44.335000" elapsed="0.024000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.360000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.359000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.363000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.376000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.376000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.362000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.377000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.377000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.378000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.378000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.361000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.378000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.361000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.379000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.361000" elapsed="0.018000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.379000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.379000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.379000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.379000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.379000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:44.360000" elapsed="0.020000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.380000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.380000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.384000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.398000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.398000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.382000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.399000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.398000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.400000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.399000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.382000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-25T15:54:44.400000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.382000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-25T15:54:44.400000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.381000" elapsed="0.019000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.401000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.400000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.401000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.401000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.400000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:44.381000" elapsed="0.020000"/>
</kw>
<arg>${SUMMARY_URL}?path=/</arg>
<status status="PASS" start="2024-03-25T15:54:44.288000" elapsed="0.113000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:44.288000" elapsed="0.114000"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.406000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.408000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.408000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.404000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.409000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.409000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.410000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.409000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.404000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-25T15:54:44.410000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.404000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-25T15:54:44.403000" elapsed="0.007000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.413000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.435000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.435000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.412000" elapsed="0.024000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.437000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.436000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.437000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.437000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.411000" elapsed="0.027000"/>
</kw>
<msg time="2024-03-25T15:54:44.438000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.411000" elapsed="0.027000"/>
</kw>
<msg time="2024-03-25T15:54:44.438000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.411000" elapsed="0.027000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.439000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.438000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.439000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.439000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.438000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-25T15:54:44.410000" elapsed="0.030000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.440000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.440000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.444000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.458000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.458000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.442000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.459000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.458000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.459000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.459000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.442000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-25T15:54:44.460000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.441000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-25T15:54:44.460000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.441000" elapsed="0.019000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.461000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.460000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.461000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.461000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.460000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-03-25T15:54:44.440000" elapsed="0.021000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.462000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.461000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.465000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.479000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.479000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.463000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.480000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.479000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.480000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.480000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.463000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-25T15:54:44.481000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.463000" elapsed="0.018000"/>
</kw>
<msg time="2024-03-25T15:54:44.481000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.462000" elapsed="0.019000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.481000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.481000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.482000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.482000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.481000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:44.462000" elapsed="0.020000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.482000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.482000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.486000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.500000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.500000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.484000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.501000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.500000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.501000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.501000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.484000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.501000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.484000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.502000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.483000" elapsed="0.019000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.502000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.502000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.502000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.502000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.502000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:44.483000" elapsed="0.020000"/>
</kw>
<arg>${DISK_USAGE_URL}?path=/</arg>
<status status="PASS" start="2024-03-25T15:54:44.403000" elapsed="0.100000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:44.402000" elapsed="0.101000"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.507000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.509000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.510000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.506000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.510000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.510000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.511000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.510000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.505000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-25T15:54:44.511000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.505000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-25T15:54:44.504000" elapsed="0.007000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.514000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.537000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.537000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.513000" elapsed="0.024000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.538000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.537000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.538000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.538000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.512000" elapsed="0.027000"/>
</kw>
<msg time="2024-03-25T15:54:44.539000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.512000" elapsed="0.027000"/>
</kw>
<msg time="2024-03-25T15:54:44.539000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.512000" elapsed="0.027000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.539000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.539000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.540000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.540000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.539000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-25T15:54:44.511000" elapsed="0.029000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.541000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.540000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.544000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.561000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.561000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.542000" elapsed="0.019000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.562000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.561000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.562000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.562000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.542000" elapsed="0.020000"/>
</kw>
<msg time="2024-03-25T15:54:44.563000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.542000" elapsed="0.021000"/>
</kw>
<msg time="2024-03-25T15:54:44.563000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.542000" elapsed="0.021000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.563000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.563000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.563000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.563000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.563000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-03-25T15:54:44.541000" elapsed="0.023000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.564000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.564000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.568000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.583000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.583000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.566000" elapsed="0.017000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.584000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.584000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.585000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.584000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.566000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-25T15:54:44.585000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.566000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-25T15:54:44.585000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.565000" elapsed="0.020000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.586000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.585000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.586000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.586000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.585000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:44.565000" elapsed="0.021000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.587000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.586000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.590000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.605000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.605000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.589000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.606000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.606000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.607000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.607000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.588000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-25T15:54:44.607000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.588000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-25T15:54:44.608000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.588000" elapsed="0.020000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.608000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.608000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.608000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.608000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.608000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:44.587000" elapsed="0.022000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<status status="PASS" start="2024-03-25T15:54:44.504000" elapsed="0.105000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:44.503000" elapsed="0.106000"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.613000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.616000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.616000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.611000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.617000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.616000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.617000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.617000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.611000" elapsed="0.007000"/>
</kw>
<msg time="2024-03-25T15:54:44.618000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.611000" elapsed="0.007000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-03-25T15:54:44.610000" elapsed="0.008000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.622000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.639000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.639000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.620000" elapsed="0.019000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.640000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.640000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.641000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.641000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.620000" elapsed="0.021000"/>
</kw>
<msg time="2024-03-25T15:54:44.641000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.619000" elapsed="0.022000"/>
</kw>
<msg time="2024-03-25T15:54:44.641000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.619000" elapsed="0.022000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.642000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.642000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.642000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.642000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.642000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-03-25T15:54:44.618000" elapsed="0.025000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.643000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.643000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.647000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.660000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.660000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.645000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.661000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.660000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.661000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.661000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.645000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.662000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.645000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.662000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.644000" elapsed="0.018000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.662000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.662000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.663000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.663000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.662000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-03-25T15:54:44.644000" elapsed="0.019000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.664000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.663000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.667000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.680000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.680000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.665000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.681000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.680000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.681000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.681000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.665000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.682000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.665000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.682000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.664000" elapsed="0.018000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.683000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.682000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.683000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.683000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.682000" elapsed="0.002000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:44.664000" elapsed="0.020000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:54:44.684000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.684000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.688000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.701000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.701000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.686000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.703000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.702000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.703000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.703000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.686000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.703000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.685000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-25T15:54:44.704000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.685000" elapsed="0.019000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.704000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-25T15:54:44.704000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.704000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-03-25T15:54:44.704000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-03-25T15:54:44.704000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-03-25T15:54:44.685000" elapsed="0.020000"/>
</kw>
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<status status="PASS" start="2024-03-25T15:54:44.610000" elapsed="0.095000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:44.609000" elapsed="0.096000"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.710000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.723000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.723000" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.708000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.724000" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.723000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.725000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.724000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.708000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.725000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.708000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.725000" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.708000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.725000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:54:44.726000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-25T15:54:44.707000" elapsed="0.019000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-25T15:54:44.707000" elapsed="0.019000"/>
</kw>
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<status status="PASS" start="2024-03-25T15:54:44.706000" elapsed="0.020000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:44.706000" elapsed="0.020000"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:44.732000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ghzpb 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:44.744000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:44.744000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:44.730000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.745000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:44.745000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.746000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:44.746000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:44.730000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:44.746000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:44.729000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:44.747000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:44.729000" elapsed="0.018000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-25T15:54:44.747000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-25T15:54:44.747000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:44.747000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-03-25T15:54:44.728000" elapsed="0.019000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:54:54.752000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ghzpb 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:54:54.764000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:54:54.764000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:54:54.750000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:54:54.765000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:54:54.764000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:54:54.766000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:54:54.765000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:54:54.750000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:54:54.766000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:54:54.749000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:54:54.766000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:54:54.749000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-25T15:54:54.767000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-25T15:54:54.767000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:54:54.767000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-03-25T15:54:54.748000" elapsed="0.019000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:04.772000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ghzpb 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:04.784000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:04.784000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:04.770000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:04.785000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:04.785000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:04.786000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:04.785000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:04.769000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:55:04.786000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:04.769000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:55:04.786000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:55:04.769000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-25T15:55:04.787000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-25T15:55:04.787000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:55:04.787000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-03-25T15:55:04.768000" elapsed="0.019000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:14.791000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ghzpb 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:14.803000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:14.803000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:14.790000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:14.804000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:14.804000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:14.805000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:14.804000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:14.789000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:55:14.805000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:14.789000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:55:14.805000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:55:14.789000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-03-25T15:55:14.806000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-03-25T15:55:14.805000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-25T15:55:14.806000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-03-25T15:55:14.788000" elapsed="0.018000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:24.811000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ghzpb 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:24.833000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:24.833000" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ghzpb","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:24.809000" elapsed="0.024000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.834000" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ghzpb","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1711382068646,"modificationTime":1711382068646,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-ghzpb"},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:24.834000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.835000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:24.835000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:24.808000" elapsed="0.027000"/>
</kw>
<msg time="2024-03-25T15:55:24.835000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:24.808000" elapsed="0.027000"/>
</kw>
<msg time="2024-03-25T15:55:24.836000" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ghzpb","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:55:24.808000" elapsed="0.028000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.836000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.836000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-25T15:55:24.807000" elapsed="0.030000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-25T15:54:44.728000" elapsed="40.109000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<status status="PASS" start="2024-03-25T15:54:44.728000" elapsed="40.109000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:54:44.727000" elapsed="40.110000"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:24.842000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ghzpb/buc-knxrx 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:24.862000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:24.862000" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-knxrx","quotaInBytes":-1,"quotaInNamespa...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:24.841000" elapsed="0.021000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.863000" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-knxrx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1711382071792,"modificationTime":1711382071792,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-ghzpb","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:24.862000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.863000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:24.863000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:24.840000" elapsed="0.024000"/>
</kw>
<msg time="2024-03-25T15:55:24.864000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:24.840000" elapsed="0.024000"/>
</kw>
<msg time="2024-03-25T15:55:24.864000" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-knxrx","quotaInBytes":-1,"quotaInNamespa...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:55:24.840000" elapsed="0.024000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.864000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.865000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-25T15:55:24.839000" elapsed="0.026000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-25T15:55:24.839000" elapsed="0.026000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<status status="PASS" start="2024-03-25T15:55:24.838000" elapsed="0.027000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:55:24.837000" elapsed="0.028000"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:24.870000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ghzpb/buc-knxrx/file1 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:24.901000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:24.901000" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:24.869000" elapsed="0.032000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.902000" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1711382074910,"modificationTime":1711382076214,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-ghzpb","bucketName":"buc-knxrx","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":2,"localID":113750153625600012},"blockCommitSequenceId":16,"containerID":2,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":16,"containerID":2,"localID":113750153625600012}]},"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":2,"localID":113750153625600012},"blockCommitSequenceId":16,"containerID":2,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":16,"containerID":2,"localID":113750153625600012}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":2,"localID":113750153625600012},"blockCommitSequenceId":16,"containerID":2,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":16,"containerID":2,"localID":113750153625600012}]],"locationListCount":1,"locationList":[{"blockID":{"containerBlockID":{"containerID":2,"localID":113750153625600012},"blockCommitSequenceId":16,"containerID":2,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":16,"containerID":2,"localID":113750153625600012}]}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:24.901000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.902000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:24.902000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:24.869000" elapsed="0.034000"/>
</kw>
<msg time="2024-03-25T15:55:24.903000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:24.868000" elapsed="0.035000"/>
</kw>
<msg time="2024-03-25T15:55:24.903000" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:55:24.868000" elapsed="0.035000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.903000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.904000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-25T15:55:24.868000" elapsed="0.036000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-25T15:55:24.867000" elapsed="0.037000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<status status="PASS" start="2024-03-25T15:55:24.867000" elapsed="0.037000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:55:24.866000" elapsed="0.038000"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:55:24.905000" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:24.911000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ghzpb/buc-knxrx/dir1/dir2 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:24.926000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:24.927000" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:24.909000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.927000" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1711382079862,"modificationTime":1711382079862,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:24.927000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.928000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:24.928000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:24.909000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-25T15:55:24.928000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:24.909000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-25T15:55:24.929000" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:55:24.908000" elapsed="0.021000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.929000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.929000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-25T15:55:24.907000" elapsed="0.022000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-25T15:55:24.907000" elapsed="0.023000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<status status="PASS" start="2024-03-25T15:55:24.906000" elapsed="0.024000"/>
</kw>
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:55:24.906000" elapsed="0.024000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:55:24.905000" elapsed="0.025000"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:24.935000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-ghzpb/buc-knxrx&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:24.948000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:24.948000" level="INFO">${output} = {"status":"OK","path":"/vol-ghzpb/buc-knxrx","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ghzpb/buc-knxrx/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:24.934000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.949000" level="INFO">{"status":"OK","path":"/vol-ghzpb/buc-knxrx","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ghzpb/buc-knxrx/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:24.948000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.949000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:24.949000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:24.933000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:55:24.950000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:24.933000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:55:24.950000" level="INFO">${result} = {"status":"OK","path":"/vol-ghzpb/buc-knxrx","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ghzpb/buc-knxrx/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:55:24.933000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.950000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.950000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-25T15:55:24.932000" elapsed="0.019000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-25T15:55:24.932000" elapsed="0.019000"/>
</kw>
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<status status="PASS" start="2024-03-25T15:55:24.931000" elapsed="0.020000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:55:24.931000" elapsed="0.020000"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:24.956000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ghzpb 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:24.969000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:24.969000" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:24.955000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.970000" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:24.969000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.970000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:24.970000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:24.954000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:55:24.970000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:24.954000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:55:24.971000" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:55:24.954000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.971000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.971000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-25T15:55:24.953000" elapsed="0.019000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-25T15:55:24.953000" elapsed="0.019000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<status status="PASS" start="2024-03-25T15:55:24.952000" elapsed="0.020000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:55:24.952000" elapsed="0.020000"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:24.977000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ghzpb/buc-knxrx 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:24.989000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:24.989000" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:24.976000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.990000" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:24.990000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:24.991000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:24.990000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:24.975000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:55:24.991000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:24.975000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:55:24.991000" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:55:24.975000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.991000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:24.992000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-25T15:55:24.974000" elapsed="0.018000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-25T15:55:24.974000" elapsed="0.018000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<status status="PASS" start="2024-03-25T15:55:24.973000" elapsed="0.019000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:55:24.973000" elapsed="0.020000"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:24.998000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:25.010000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:25.010000" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:24.996000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:25.011000" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:25.011000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:25.012000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:25.012000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:24.996000" elapsed="0.016000"/>
</kw>
<msg time="2024-03-25T15:55:25.012000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:24.995000" elapsed="0.017000"/>
</kw>
<msg time="2024-03-25T15:55:25.012000" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-03-25T15:55:24.995000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:25.013000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:25.013000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-03-25T15:55:24.995000" elapsed="0.019000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-25T15:55:24.994000" elapsed="0.020000"/>
</kw>
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<status status="PASS" start="2024-03-25T15:55:24.994000" elapsed="0.020000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:55:24.993000" elapsed="0.021000"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" start="2024-03-25T15:54:25.650000" elapsed="59.365000"/>
</suite>
<status status="PASS" start="2024-03-25T15:53:09.513000" elapsed="135.504000"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:27.195000" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:30.058000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:30.058000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:27.193000" elapsed="2.865000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:30.059000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:30.059000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:30.060000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:30.059000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:27.192000" elapsed="2.868000"/>
</kw>
<msg time="2024-03-25T15:55:30.060000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:27.192000" elapsed="2.868000"/>
</kw>
<msg time="2024-03-25T15:55:30.060000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<status status="PASS" start="2024-03-25T15:55:27.191000" elapsed="2.869000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:30.060000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:30.063000" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:33.089000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:33.089000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:30.062000" elapsed="3.027000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:33.090000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:33.089000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:33.090000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:33.090000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:30.061000" elapsed="3.030000"/>
</kw>
<msg time="2024-03-25T15:55:33.091000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:30.061000" elapsed="3.030000"/>
</kw>
<msg time="2024-03-25T15:55:33.091000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<status status="PASS" start="2024-03-25T15:55:30.061000" elapsed="3.030000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:33.091000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:33.094000" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:55:37.890000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:55:37.890000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:33.092000" elapsed="4.798000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:55:37.891000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:55:37.891000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:55:37.892000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:55:37.892000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:33.092000" elapsed="4.800000"/>
</kw>
<msg time="2024-03-25T15:55:37.892000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:33.092000" elapsed="4.800000"/>
</kw>
<msg time="2024-03-25T15:55:37.892000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<status status="PASS" start="2024-03-25T15:55:33.091000" elapsed="4.801000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:55:37.892000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:55:27.190000" elapsed="10.703000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-03-25T15:55:27.146000" elapsed="10.748000"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" owner="String">
<msg time="2024-03-25T15:55:44.349000" level="INFO">${random} = 03958</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-03-25T15:55:44.349000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:55:44.353000" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-03958 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:56:39.796000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:56:39.796000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:55:44.351000" elapsed="55.445000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:56:39.797000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:56:39.796000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:56:39.797000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:56:39.797000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:55:44.350000" elapsed="55.447000"/>
</kw>
<msg time="2024-03-25T15:56:39.797000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:55:44.350000" elapsed="55.447000"/>
</kw>
<msg time="2024-03-25T15:56:39.798000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<status status="PASS" start="2024-03-25T15:55:44.349000" elapsed="55.449000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:56:39.798000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:55:44.348000" elapsed="55.450000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-03-25T15:55:44.299000" elapsed="55.500000"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" owner="String">
<msg time="2024-03-25T15:57:07.294000" level="INFO">${random} = 88189</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-03-25T15:57:07.294000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:57:07.298000" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-88189 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:57:12.065000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:57:12.065000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:57:07.296000" elapsed="4.769000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:57:12.066000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:57:12.065000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:57:12.067000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:57:12.066000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:57:07.296000" elapsed="4.771000"/>
</kw>
<msg time="2024-03-25T15:57:12.067000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:57:07.295000" elapsed="4.772000"/>
</kw>
<msg time="2024-03-25T15:57:12.067000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<status status="PASS" start="2024-03-25T15:57:07.295000" elapsed="4.772000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:57:12.067000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:57:07.293000" elapsed="4.775000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-03-25T15:57:07.252000" elapsed="4.817000"/>
</suite>
<status status="PASS" elapsed="233.674000"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
