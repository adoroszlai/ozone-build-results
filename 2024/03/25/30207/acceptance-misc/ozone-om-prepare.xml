<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0 (Python 3.8.10 on linux)" generated="2024-03-25T15:51:37.688660" rpa="false" schemaversion="5">
<suite id="s1" name="ozone-om-prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:45:56.584000" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:46:05.471000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:46:05.471000" level="INFO">${output} = 2024-03-25 15:45:57,865 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:45:57,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:45:56.582000" elapsed="8.889000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:46:05.472000" level="INFO">2024-03-25 15:45:57,865 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:45:57,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-03-25 15:45:57,967 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-03-25 15:45:58,058 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2024-03-25 15:45:58,099 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-03-25 15:45:58,224 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2024-03-25 15:45:58,639 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2024-03-25 15:45:58,771 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2024-03-25 15:45:59,099 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-03-25 15:45:59,370 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-03-25 15:45:59,543 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-03-25 15:46:00,100 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2024-03-25 15:46:01,101 [Thread-3] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2024-03-25 15:46:02,102 [Thread-3] INFO freon.ProgressBar: Progress: 37.00 % (37 out of 100)
2024-03-25 15:46:03,102 [Thread-3] INFO freon.ProgressBar: Progress: 61.00 % (61 out of 100)
2024-03-25 15:46:04,106 [Thread-3] INFO freon.ProgressBar: Progress: 87.00 % (87 out of 100)
2024-03-25 15:46:05,107 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2024-03-25 15:46:05,136 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=29.183359, max=1148.122556, mean=56.35288109376552, stddev=110.52542586562596, median=41.401228, p75=46.743202, p95=72.152028, p98=189.380896, p99=211.426171, p999=1148.122556, mean_rate=15.878228950135936, m1=16.2, m5=16.2, m15=16.2, rate_unit=events/second, duration_unit=milliseconds
2024-03-25 15:46:05,137 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2024-03-25 15:46:05,137 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-03-25 15:46:05,137 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:46:05.472000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:46:05.472000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:46:05.472000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:45:56.582000" elapsed="8.891000"/>
</kw>
<msg time="2024-03-25T15:46:05.473000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:45:56.582000" elapsed="8.891000"/>
</kw>
<msg time="2024-03-25T15:46:05.473000" level="INFO">${result} = 2024-03-25 15:45:57,865 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-03-25 15:45:57,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-03-25T15:45:56.581000" elapsed="8.892000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:46:05.473000" elapsed="0.001000"/>
</kw>
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<status status="PASS" start="2024-03-25T15:45:56.580000" elapsed="8.894000"/>
</kw>
<kw name="Generate Random String" owner="String">
<msg time="2024-03-25T15:46:05.474000" level="INFO">${random} = 70350</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-03-25T15:46:05.474000" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-25T15:46:05.475000" level="INFO">${volume_name} = 70350-volume-for-prepare</msg>
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-25T15:46:05.474000" elapsed="0.001000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-25T15:46:05.476000" level="INFO">${bucket_name} = 70350-bucket-for-prepare</msg>
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-25T15:46:05.475000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:46:05.479000" level="INFO">Running command 'ozone sh volume create /70350-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:46:07.469000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:46:07.469000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:46:05.477000" elapsed="1.992000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:46:07.470000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:46:07.470000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:46:07.471000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:46:07.470000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:46:05.477000" elapsed="1.994000"/>
</kw>
<msg time="2024-03-25T15:46:07.471000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:46:05.477000" elapsed="1.994000"/>
</kw>
<arg>ozone sh volume create /${volume_name}</arg>
<status status="PASS" start="2024-03-25T15:46:05.476000" elapsed="1.995000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:46:07.474000" level="INFO">Running command 'ozone sh bucket create /70350-volume-for-prepare/70350-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:46:09.506000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:46:09.506000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:46:07.472000" elapsed="2.034000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:46:09.507000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:46:09.507000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:46:09.508000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:46:09.507000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:46:07.472000" elapsed="2.036000"/>
</kw>
<msg time="2024-03-25T15:46:09.508000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:46:07.472000" elapsed="2.036000"/>
</kw>
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<status status="PASS" start="2024-03-25T15:46:07.471000" elapsed="2.037000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:46:09.510000" level="INFO">Running command 'ozone sh key put /70350-volume-for-prepare/70350-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:46:12.951000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:46:12.951000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:46:09.509000" elapsed="3.442000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:46:12.952000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:46:12.951000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:46:12.952000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:46:12.952000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:46:09.509000" elapsed="3.444000"/>
</kw>
<msg time="2024-03-25T15:46:12.953000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:46:09.509000" elapsed="3.444000"/>
</kw>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<status status="PASS" start="2024-03-25T15:46:09.508000" elapsed="3.445000"/>
</kw>
<status status="PASS" start="2024-03-25T15:45:56.579000" elapsed="16.374000"/>
</kw>
<test id="s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:46:12.954000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:46:12.958000" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:51:12.954000" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="FAIL" start="2024-03-25T15:46:12.956000" elapsed="299.998000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-03-25T15:51:12.955000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2024-03-25T15:51:12.955000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="FAIL" start="2024-03-25T15:46:12.956000" elapsed="299.999000"/>
</kw>
<msg time="2024-03-25T15:51:12.955000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="FAIL" start="2024-03-25T15:46:12.955000" elapsed="300.000000"/>
</kw>
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<status status="FAIL" start="2024-03-25T15:46:12.955000" elapsed="300.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-03-25T15:51:12.956000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" start="2024-03-25T15:46:12.953000" elapsed="300.003000">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:51:12.957000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:51:12.961000" level="INFO">Running command 'ozone sh key info /70350-volume-for-prepare/70350-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:51:15.093000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-25T15:51:15.094000" level="INFO">${output} = {
  "volumeName" : "70350-volume-for-prepare",
  "bucketName" : "70350-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2024-03-25T15:46:11.541Z",
  "modificati...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:51:12.959000" elapsed="2.135000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:51:15.094000" level="INFO">{
  "volumeName" : "70350-volume-for-prepare",
  "bucketName" : "70350-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2024-03-25T15:46:11.541Z",
  "modificationTime" : "2024-03-25T15:46:12.602Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 113750153625600101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:51:15.094000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:51:15.095000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:51:15.095000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-25T15:51:12.959000" elapsed="2.136000"/>
</kw>
<msg time="2024-03-25T15:51:15.095000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-25T15:51:12.959000" elapsed="2.136000"/>
</kw>
<msg time="2024-03-25T15:51:15.096000" level="INFO">${result} = {
  "volumeName" : "70350-volume-for-prepare",
  "bucketName" : "70350-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2024-03-25T15:46:11.541Z",
  "modificati...</msg>
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<status status="PASS" start="2024-03-25T15:51:12.958000" elapsed="2.138000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:51:15.096000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:51:12.957000" elapsed="2.139000"/>
</test>
<test id="s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-25T15:51:15.097000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:51:15.100000" level="INFO">Running command 'ozone sh key put /70350-volume-for-prepare/70350-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:51:16.996000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-25T15:51:16.996000" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:51:15.098000" elapsed="1.898000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:51:16.997000" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:51:16.997000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:51:16.998000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:51:16.997000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-25T15:51:16.998000" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<status status="PASS" start="2024-03-25T15:51:15.098000" elapsed="1.900000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-25T15:51:16.998000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-25T15:51:17" level="INFO">Running command 'ozone sh key info /70350-volume-for-prepare/70350-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg time="2024-03-25T15:51:18.873000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-25T15:51:18.873000" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-25T15:51:16.999000" elapsed="1.874000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-25T15:51:18.874000" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-25T15:51:18.874000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-25T15:51:18.875000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-25T15:51:18.874000" elapsed="0.001000"/>
</kw>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<status status="PASS" start="2024-03-25T15:51:16.998000" elapsed="1.877000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-25T15:51:15.097000" elapsed="3.778000"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="FAIL" start="2024-03-25T15:45:56.528000" elapsed="322.348000"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
