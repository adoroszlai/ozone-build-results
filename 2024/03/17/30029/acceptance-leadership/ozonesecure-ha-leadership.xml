<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0 (Python 3.8.10 on linux)" generated="2024-03-17T21:17:37.503620" rpa="false" schemaversion="5">
<suite id="s1" name="ozonesecure-ha-leadership">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-03-17T21:13:40.917000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:13:40.921000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:13:40.924000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:13:40.924000" level="INFO">${output} = s3g</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:13:40.919000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:13:40.925000" level="INFO">s3g</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:13:40.924000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:13:40.925000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:13:40.925000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:13:40.919000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-17T21:13:40.925000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:13:40.918000" elapsed="0.008000"/>
</kw>
<msg time="2024-03-17T21:13:40.926000" level="INFO">${instance} = s3g</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-03-17T21:13:40.918000" elapsed="0.008000"/>
</kw>
<msg time="2024-03-17T21:13:40.926000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-03-17T21:13:40.918000" elapsed="0.008000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-17T21:13:40.926000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-17T21:13:40.926000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:13:40.930000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:13:40.961000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:13:40.961000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:13:40.928000" elapsed="0.033000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:13:40.961000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:13:40.961000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:13:40.962000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:13:40.962000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:13:40.928000" elapsed="0.034000"/>
</kw>
<msg time="2024-03-17T21:13:40.962000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:13:40.927000" elapsed="0.035000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-03-17T21:13:40.927000" elapsed="0.035000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-17T21:13:40.927000" elapsed="0.035000"/>
</kw>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<status status="PASS" start="2024-03-17T21:13:40.916000" elapsed="0.046000"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" start="2024-03-17T21:13:40.916000" elapsed="0.047000"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" start="2024-03-17T21:13:40.870000" elapsed="0.094000"/>
</suite>
<suite id="s1-s2" name="Scmrole" source="/opt/hadoop/smoketest/admincli/scmrole.robot">
<test id="s1-s2-t1" name="Run scm roles" line="26">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:13:44.312000" level="INFO">Running command 'ozone admin scm roles 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:13:47.805000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:13:47.805000" level="INFO">${output} = scm2.org:9894:FOLLOWER:bc8face4-a88e-4dad-80a7-cbc2cbdbfc8c:172.25.0.117
scm1.org:9894:LEADER:88a1b1ad-7f0b-4624-8dc7-b8e39b1438d5:172.25.0.116
scm3.org:9894:FOLLOWER:85a06bb8-4f5d-4147-b2ff-98c392e75...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:13:44.311000" elapsed="3.494000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:13:47.806000" level="INFO">scm2.org:9894:FOLLOWER:bc8face4-a88e-4dad-80a7-cbc2cbdbfc8c:172.25.0.117
scm1.org:9894:LEADER:88a1b1ad-7f0b-4624-8dc7-b8e39b1438d5:172.25.0.116
scm3.org:9894:FOLLOWER:85a06bb8-4f5d-4147-b2ff-98c392e75303:172.25.0.118</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:13:47.805000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:13:47.806000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:13:47.806000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:13:44.310000" elapsed="3.497000"/>
</kw>
<msg time="2024-03-17T21:13:47.807000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:13:44.310000" elapsed="3.497000"/>
</kw>
<msg time="2024-03-17T21:13:47.807000" level="INFO">${output} = scm2.org:9894:FOLLOWER:bc8face4-a88e-4dad-80a7-cbc2cbdbfc8c:172.25.0.117
scm1.org:9894:LEADER:88a1b1ad-7f0b-4624-8dc7-b8e39b1438d5:172.25.0.116
scm3.org:9894:FOLLOWER:85a06bb8-4f5d-4147-b2ff-98c392e75...</msg>
<var>${output}</var>
<arg>ozone admin scm roles</arg>
<status status="PASS" start="2024-03-17T21:13:44.310000" elapsed="3.497000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>[scm:9894(:LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-17T21:13:47.807000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:13:44.309000" elapsed="3.499000"/>
</test>
<test id="s1-s2-t2" name="List scm roles as JSON" line="30">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:13:47.811000" level="INFO">Running command 'ozone admin scm roles --json 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:13:51.377000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:13:51.377000" level="INFO">${output} = {
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "88a1b1ad-7f0b-4624-8dc7-b8e39b1438d5",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "addr...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:13:47.810000" elapsed="3.567000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:13:51.378000" level="INFO">{
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "88a1b1ad-7f0b-4624-8dc7-b8e39b1438d5",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "address" : "scm3.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "85a06bb8-4f5d-4147-b2ff-98c392e75303",
    "InetAddress" : "172.25.0.118"
  },
  "scm2.org" : {
    "address" : "scm2.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "bc8face4-a88e-4dad-80a7-cbc2cbdbfc8c",
    "InetAddress" : "172.25.0.117"
  }
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:13:51.378000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:13:51.379000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:13:51.378000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:13:47.809000" elapsed="3.570000"/>
</kw>
<msg time="2024-03-17T21:13:51.379000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:13:47.809000" elapsed="3.570000"/>
</kw>
<msg time="2024-03-17T21:13:51.379000" level="INFO">${output} = {
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "88a1b1ad-7f0b-4624-8dc7-b8e39b1438d5",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "addr...</msg>
<var>${output}</var>
<arg>ozone admin scm roles --json</arg>
<status status="PASS" start="2024-03-17T21:13:47.809000" elapsed="3.571000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:13:51.383000" level="INFO">Running command 'echo '{
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "88a1b1ad-7f0b-4624-8dc7-b8e39b1438d5",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "address" : "scm3.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "85a06bb8-4f5d-4147-b2ff-98c392e75303",
    "InetAddress" : "172.25.0.118"
  },
  "scm2.org" : {
    "address" : "scm2.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "bc8face4-a88e-4dad-80a7-cbc2cbdbfc8c",
    "InetAddress" : "172.25.0.117"
  }
}' | jq -r '.[] | select(.raftPeerRole == "LEADER")' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:13:51.410000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:13:51.410000" level="INFO">${output} = {
  "address": "scm1.org:9894",
  "raftPeerRole": "LEADER",
  "ID": "88a1b1ad-7f0b-4624-8dc7-b8e39b1438d5",
  "InetAddress": "172.25.0.116"
}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:13:51.381000" elapsed="0.029000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:13:51.411000" level="INFO">{
  "address": "scm1.org:9894",
  "raftPeerRole": "LEADER",
  "ID": "88a1b1ad-7f0b-4624-8dc7-b8e39b1438d5",
  "InetAddress": "172.25.0.116"
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:13:51.411000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:13:51.412000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:13:51.411000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:13:51.381000" elapsed="0.031000"/>
</kw>
<msg time="2024-03-17T21:13:51.412000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:13:51.380000" elapsed="0.032000"/>
</kw>
<msg time="2024-03-17T21:13:51.412000" level="INFO">${leader} = {
  "address": "scm1.org:9894",
  "raftPeerRole": "LEADER",
  "ID": "88a1b1ad-7f0b-4624-8dc7-b8e39b1438d5",
  "InetAddress": "172.25.0.116"
}</msg>
<var>${leader}</var>
<arg>echo '${output}' | jq -r '.[] | select(.raftPeerRole == "LEADER")'</arg>
<status status="PASS" start="2024-03-17T21:13:51.380000" elapsed="0.032000"/>
</kw>
<kw name="Should Not Be Equal" owner="BuiltIn">
<arg>${leader}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" start="2024-03-17T21:13:51.412000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:13:47.808000" elapsed="3.605000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-03-17T21:13:44.265000" elapsed="7.149000"/>
</suite>
<suite id="s1-s3" name="Om-Fetch-Key" source="/opt/hadoop/smoketest/omha/om-fetch-key.robot">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-03-17T21:13:54.723000" elapsed="0.001000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:13:54.727000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:13:54.729000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:13:54.729000" level="INFO">${output} = s3g</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:13:54.725000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:13:54.730000" level="INFO">s3g</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:13:54.729000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:13:54.730000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:13:54.730000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:13:54.725000" elapsed="0.005000"/>
</kw>
<msg time="2024-03-17T21:13:54.730000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:13:54.724000" elapsed="0.007000"/>
</kw>
<msg time="2024-03-17T21:13:54.731000" level="INFO">${instance} = s3g</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-03-17T21:13:54.724000" elapsed="0.007000"/>
</kw>
<msg time="2024-03-17T21:13:54.731000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-03-17T21:13:54.724000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-17T21:13:54.731000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-17T21:13:54.731000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:13:54.734000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:13:54.764000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:13:54.764000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:13:54.733000" elapsed="0.031000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:13:54.765000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:13:54.765000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:13:54.765000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:13:54.765000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:13:54.732000" elapsed="0.034000"/>
</kw>
<msg time="2024-03-17T21:13:54.766000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:13:54.732000" elapsed="0.034000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-03-17T21:13:54.732000" elapsed="0.034000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-17T21:13:54.731000" elapsed="0.035000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-03-17T21:13:54.723000" elapsed="0.043000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-17T21:13:54.722000" elapsed="0.044000"/>
</kw>
<test id="s1-s3-t1" name="Fetch Key with Valid ServiceID Specified" line="31">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:13:54.769000" level="INFO">Running command 'ozone admin om fetch-key --service-id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:13:58.602000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:13:58.602000" level="INFO">${output} = Current Secret Key ID: 9b1883b1-4f59-44ae-a78e-df6eb632792e</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:13:54.768000" elapsed="3.834000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:13:58.603000" level="INFO">Current Secret Key ID: 9b1883b1-4f59-44ae-a78e-df6eb632792e</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:13:58.602000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:13:58.603000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:13:58.603000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:13:54.768000" elapsed="3.836000"/>
</kw>
<msg time="2024-03-17T21:13:58.604000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:13:54.767000" elapsed="3.837000"/>
</kw>
<msg time="2024-03-17T21:13:58.604000" level="INFO">${result} = Current Secret Key ID: 9b1883b1-4f59-44ae-a78e-df6eb632792e</msg>
<var>${result}</var>
<arg>ozone admin om fetch-key --service-id=omservice</arg>
<status status="PASS" start="2024-03-17T21:13:54.767000" elapsed="3.837000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Current Secret Key ID</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:13:58.604000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:13:54.766000" elapsed="3.839000"/>
</test>
<test id="s1-s3-t2" name="Fetch Key with Multiple ServiceIDs, Valid ServiceID Specified" line="35">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:13:58.608000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om fetch-key --service-id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:02.117000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:02.117000" level="INFO">${output} = Current Secret Key ID: 9b1883b1-4f59-44ae-a78e-df6eb632792e</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:13:58.607000" elapsed="3.510000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:02.118000" level="INFO">Current Secret Key ID: 9b1883b1-4f59-44ae-a78e-df6eb632792e</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:02.117000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:02.119000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:02.118000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:13:58.607000" elapsed="3.512000"/>
</kw>
<msg time="2024-03-17T21:14:02.119000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:13:58.606000" elapsed="3.513000"/>
</kw>
<msg time="2024-03-17T21:14:02.119000" level="INFO">${result} = Current Secret Key ID: 9b1883b1-4f59-44ae-a78e-df6eb632792e</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om fetch-key --service-id=omservice</arg>
<status status="PASS" start="2024-03-17T21:13:58.606000" elapsed="3.513000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Current Secret Key ID</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:14:02.119000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:13:58.605000" elapsed="3.515000"/>
</test>
<test id="s1-s3-t3" name="Fetch Key with Multiple ServiceIDs, Unconfigured ServiceID Specified" line="39">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:02.123000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om fetch-key --service-id=omservice3 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:04.513000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:14:04.513000" level="INFO">${output} = This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are [omservice, omservic...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:02.121000" elapsed="2.392000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:04.514000" level="INFO">This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are [omservice, omservice2]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:04.513000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:14:04.514000" level="INFO">${result} = This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are [omservice, omservic...</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om fetch-key --service-id=omservice3</arg>
<status status="PASS" start="2024-03-17T21:14:02.121000" elapsed="2.393000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Service ID specified does not match</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:14:04.514000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:14:02.120000" elapsed="2.395000"/>
</test>
<test id="s1-s3-t4" name="Fetch Key with Multiple ServiceIDs, Invalid ServiceID Specified" line="43">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:04.518000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om fetch-key --service-id=omservice2 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:07.320000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:14:07.320000" level="INFO">${output} = Could not find any configured addresses for OM. Please configure the system with ozone.om.address</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:04.517000" elapsed="2.803000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:07.321000" level="INFO">Could not find any configured addresses for OM. Please configure the system with ozone.om.address</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:07.320000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:14:07.321000" level="INFO">${result} = Could not find any configured addresses for OM. Please configure the system with ozone.om.address</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om fetch-key --service-id=omservice2</arg>
<status status="PASS" start="2024-03-17T21:14:04.516000" elapsed="2.805000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Could not find any configured addresses for OM.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:14:07.321000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:14:04.515000" elapsed="2.807000"/>
</test>
<test id="s1-s3-t5" name="Fetch Key without OM Service ID" line="47">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:07.326000" level="INFO">Running command 'ozone admin om fetch-key 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:10.883000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:10.883000" level="INFO">${output} = Current Secret Key ID: 9b1883b1-4f59-44ae-a78e-df6eb632792e</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:07.324000" elapsed="3.559000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:10.884000" level="INFO">Current Secret Key ID: 9b1883b1-4f59-44ae-a78e-df6eb632792e</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:10.884000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:10.885000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:10.885000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:07.324000" elapsed="3.561000"/>
</kw>
<msg time="2024-03-17T21:14:10.886000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:07.323000" elapsed="3.563000"/>
</kw>
<msg time="2024-03-17T21:14:10.886000" level="INFO">${result} = Current Secret Key ID: 9b1883b1-4f59-44ae-a78e-df6eb632792e</msg>
<var>${result}</var>
<arg>ozone admin om fetch-key</arg>
<status status="PASS" start="2024-03-17T21:14:07.323000" elapsed="3.563000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Current Secret Key ID</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:14:10.886000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:14:07.322000" elapsed="3.565000"/>
</test>
<test id="s1-s3-t6" name="Fetch Key with Multiple ServiceIDs, No ServiceID Specified" line="51">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:10.890000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,ozone1 om fetch-key 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:13.218000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:14:13.218000" level="INFO">${output} = There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:10.888000" elapsed="2.330000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:13.219000" level="INFO">There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:13.219000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:14:13.220000" level="INFO">${result} = There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,ozone1 om fetch-key</arg>
<status status="PASS" start="2024-03-17T21:14:10.888000" elapsed="2.332000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>no Ozone Manager service ID specified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:14:13.220000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:14:10.887000" elapsed="2.333000"/>
</test>
<doc>Smoke test for om fetch-key</doc>
<status status="PASS" start="2024-03-17T21:13:54.677000" elapsed="18.545000"/>
</suite>
<suite id="s1-s4" name="Om-Roles" source="/opt/hadoop/smoketest/omha/om-roles.robot">
<test id="s1-s4-t1" name="List om roles with OM service ID passed" line="33">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-03-17T21:14:16.662000" elapsed="0.001000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:16.666000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:16.668000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:16.668000" level="INFO">${output} = s3g</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:16.664000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:16.669000" level="INFO">s3g</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:16.669000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:16.669000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:16.669000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:16.664000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-17T21:14:16.670000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:16.663000" elapsed="0.007000"/>
</kw>
<msg time="2024-03-17T21:14:16.670000" level="INFO">${instance} = s3g</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-03-17T21:14:16.663000" elapsed="0.007000"/>
</kw>
<msg time="2024-03-17T21:14:16.670000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-03-17T21:14:16.663000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-17T21:14:16.671000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-17T21:14:16.670000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:16.674000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:16.705000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:16.705000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:16.673000" elapsed="0.032000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:16.706000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:16.706000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:16.707000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:16.706000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:16.672000" elapsed="0.035000"/>
</kw>
<msg time="2024-03-17T21:14:16.707000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:16.672000" elapsed="0.035000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-03-17T21:14:16.671000" elapsed="0.036000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-17T21:14:16.671000" elapsed="0.036000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-03-17T21:14:16.662000" elapsed="0.045000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-17T21:14:16.661000" elapsed="0.046000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:16.710000" level="INFO">Running command 'ozone admin om roles --service-id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:20.703000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:20.703000" level="INFO">${output} = om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:16.709000" elapsed="3.994000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:20.704000" level="INFO">om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:20.703000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:20.705000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:20.704000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:16.708000" elapsed="3.997000"/>
</kw>
<msg time="2024-03-17T21:14:20.705000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:16.708000" elapsed="3.997000"/>
</kw>
<msg time="2024-03-17T21:14:20.705000" level="INFO">${output_with_id_passed} = om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<var>${output_with_id_passed}</var>
<arg>ozone admin om roles --service-id=omservice</arg>
<status status="PASS" start="2024-03-17T21:14:16.708000" elapsed="3.997000"/>
</kw>
<kw name="Assert Leader Present">
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>[om (: LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-17T21:14:20.706000" elapsed="0.000000"/>
</kw>
<arg>${output_with_id_passed}</arg>
<status status="PASS" start="2024-03-17T21:14:20.705000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:20.709000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om roles --service-id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:24.582000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:24.582000" level="INFO">${output} = om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:20.708000" elapsed="3.874000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:24.583000" level="INFO">om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:24.582000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:24.584000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:24.583000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:20.707000" elapsed="3.877000"/>
</kw>
<msg time="2024-03-17T21:14:24.584000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:20.707000" elapsed="3.877000"/>
</kw>
<msg time="2024-03-17T21:14:24.584000" level="INFO">${output_with_id_passed} = om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<var>${output_with_id_passed}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om roles --service-id=omservice</arg>
<status status="PASS" start="2024-03-17T21:14:20.707000" elapsed="3.877000"/>
</kw>
<kw name="Assert Leader Present">
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>[om (: LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-17T21:14:24.585000" elapsed="0.000000"/>
</kw>
<arg>${output_with_id_passed}</arg>
<status status="PASS" start="2024-03-17T21:14:24.584000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:14:16.660000" elapsed="7.925000"/>
</test>
<test id="s1-s4-t2" name="List om roles without OM service ID passed" line="39">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-03-17T21:14:24.587000" elapsed="0.001000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:24.591000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:24.593000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:24.593000" level="INFO">${output} = s3g</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:24.589000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:24.594000" level="INFO">s3g</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:24.594000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:24.595000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:24.594000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:24.589000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-17T21:14:24.595000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:24.589000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-17T21:14:24.595000" level="INFO">${instance} = s3g</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-03-17T21:14:24.588000" elapsed="0.007000"/>
</kw>
<msg time="2024-03-17T21:14:24.595000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-03-17T21:14:24.588000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-17T21:14:24.596000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-17T21:14:24.596000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:24.599000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:24.622000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:24.622000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:24.598000" elapsed="0.024000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:24.623000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:24.623000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:24.624000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:24.623000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:24.597000" elapsed="0.027000"/>
</kw>
<msg time="2024-03-17T21:14:24.624000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:24.597000" elapsed="0.027000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-03-17T21:14:24.596000" elapsed="0.028000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-17T21:14:24.596000" elapsed="0.028000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-03-17T21:14:24.587000" elapsed="0.037000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-17T21:14:24.587000" elapsed="0.037000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:24.627000" level="INFO">Running command 'ozone admin om roles 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:28.358000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:28.358000" level="INFO">${output} = om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:24.626000" elapsed="3.732000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:28.360000" level="INFO">om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:28.359000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:28.360000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:28.360000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:24.625000" elapsed="3.736000"/>
</kw>
<msg time="2024-03-17T21:14:28.361000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:24.625000" elapsed="3.736000"/>
</kw>
<msg time="2024-03-17T21:14:28.361000" level="INFO">${output_without_id_passed} = om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<var>${output_without_id_passed}</var>
<arg>ozone admin om roles</arg>
<status status="PASS" start="2024-03-17T21:14:24.625000" elapsed="3.736000"/>
</kw>
<kw name="Assert Leader Present">
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>[om (: LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-03-17T21:14:28.362000" elapsed="0.000000"/>
</kw>
<arg>${output_without_id_passed}</arg>
<status status="PASS" start="2024-03-17T21:14:28.361000" elapsed="0.001000"/>
</kw>
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:28.365000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om roles 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:30.812000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:14:30.813000" level="INFO">${output} = There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:28.363000" elapsed="2.450000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:30.814000" level="INFO">There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:30.813000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:14:30.814000" level="INFO">${output_without_id_passed} = There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<var>${output_without_id_passed}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om roles</arg>
<status status="PASS" start="2024-03-17T21:14:28.363000" elapsed="2.451000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output_without_id_passed}</arg>
<arg>no Ozone Manager service ID specified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:14:30.814000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:14:24.586000" elapsed="6.229000"/>
</test>
<test id="s1-s4-t3" name="List om roles as JSON with OM service ID passed" line="45">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-03-17T21:14:30.817000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:30.821000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:30.824000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:30.824000" level="INFO">${output} = s3g</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:30.819000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:30.825000" level="INFO">s3g</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:30.824000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:30.825000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:30.825000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:30.818000" elapsed="0.008000"/>
</kw>
<msg time="2024-03-17T21:14:30.826000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:30.818000" elapsed="0.008000"/>
</kw>
<msg time="2024-03-17T21:14:30.826000" level="INFO">${instance} = s3g</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-03-17T21:14:30.817000" elapsed="0.009000"/>
</kw>
<msg time="2024-03-17T21:14:30.826000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-03-17T21:14:30.817000" elapsed="0.009000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-17T21:14:30.827000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-17T21:14:30.826000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:30.830000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:30.851000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:30.851000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:30.828000" elapsed="0.023000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:30.852000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:30.851000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:30.852000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:30.852000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:30.828000" elapsed="0.025000"/>
</kw>
<msg time="2024-03-17T21:14:30.853000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:30.827000" elapsed="0.026000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-03-17T21:14:30.827000" elapsed="0.026000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-17T21:14:30.827000" elapsed="0.026000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-03-17T21:14:30.816000" elapsed="0.037000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-17T21:14:30.816000" elapsed="0.037000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:30.856000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:34.526000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:34.526000" level="INFO">${output} = [ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:30.854000" elapsed="3.672000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:34.527000" level="INFO">[ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "hostname" : "om3"
  }
} ]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:34.526000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:34.528000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:34.527000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:30.854000" elapsed="3.674000"/>
</kw>
<msg time="2024-03-17T21:14:34.528000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:30.854000" elapsed="3.674000"/>
</kw>
<msg time="2024-03-17T21:14:34.528000" level="INFO">${output_with_id_passed} = [ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "...</msg>
<var>${output_with_id_passed}</var>
<arg>ozone admin om roles --service-id=omservice --json</arg>
<status status="PASS" start="2024-03-17T21:14:30.853000" elapsed="3.675000"/>
</kw>
<kw name="Assert Leader Present in JSON">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:34.532000" level="INFO">Running command 'echo '[ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "hostname" : "om3"
  }
} ]' | jq '.[] | select(.[] | .serverRole == "LEADER")' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:34.559000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:34.559000" level="INFO">${output} = {
  "om3": {
    "serverRole": "LEADER",
    "hostname": "om3"
  }
}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:34.530000" elapsed="0.029000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:34.560000" level="INFO">{
  "om3": {
    "serverRole": "LEADER",
    "hostname": "om3"
  }
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:34.559000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:34.560000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:34.560000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:34.530000" elapsed="0.031000"/>
</kw>
<msg time="2024-03-17T21:14:34.561000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:34.529000" elapsed="0.032000"/>
</kw>
<msg time="2024-03-17T21:14:34.561000" level="INFO">${leader} = {
  "om3": {
    "serverRole": "LEADER",
    "hostname": "om3"
  }
}</msg>
<var>${leader}</var>
<arg>echo '${output}' | jq '.[] | select(.[] | .serverRole == "LEADER")'</arg>
<status status="PASS" start="2024-03-17T21:14:34.529000" elapsed="0.032000"/>
</kw>
<kw name="Should Not Be Equal" owner="BuiltIn">
<arg>${leader}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" start="2024-03-17T21:14:34.561000" elapsed="0.002000"/>
</kw>
<arg>${output_with_id_passed}</arg>
<status status="PASS" start="2024-03-17T21:14:34.528000" elapsed="0.035000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:34.567000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om roles --service-id=omservice --json 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:38.579000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:38.579000" level="INFO">${output} = [ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:34.565000" elapsed="4.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:38.580000" level="INFO">[ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "hostname" : "om3"
  }
} ]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:38.580000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:38.581000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:38.580000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:34.564000" elapsed="4.017000"/>
</kw>
<msg time="2024-03-17T21:14:38.582000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:34.564000" elapsed="4.018000"/>
</kw>
<msg time="2024-03-17T21:14:38.582000" level="INFO">${output_with_id_passed} = [ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "...</msg>
<var>${output_with_id_passed}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om roles --service-id=omservice --json</arg>
<status status="PASS" start="2024-03-17T21:14:34.563000" elapsed="4.019000"/>
</kw>
<kw name="Assert Leader Present in JSON">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:38.585000" level="INFO">Running command 'echo '[ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "hostname" : "om3"
  }
} ]' | jq '.[] | select(.[] | .serverRole == "LEADER")' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:38.612000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:38.612000" level="INFO">${output} = {
  "om3": {
    "serverRole": "LEADER",
    "hostname": "om3"
  }
}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:38.584000" elapsed="0.028000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:38.613000" level="INFO">{
  "om3": {
    "serverRole": "LEADER",
    "hostname": "om3"
  }
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:38.612000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:38.613000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:38.613000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:38.583000" elapsed="0.030000"/>
</kw>
<msg time="2024-03-17T21:14:38.614000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:38.583000" elapsed="0.031000"/>
</kw>
<msg time="2024-03-17T21:14:38.614000" level="INFO">${leader} = {
  "om3": {
    "serverRole": "LEADER",
    "hostname": "om3"
  }
}</msg>
<var>${leader}</var>
<arg>echo '${output}' | jq '.[] | select(.[] | .serverRole == "LEADER")'</arg>
<status status="PASS" start="2024-03-17T21:14:38.582000" elapsed="0.032000"/>
</kw>
<kw name="Should Not Be Equal" owner="BuiltIn">
<arg>${leader}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" start="2024-03-17T21:14:38.614000" elapsed="0.001000"/>
</kw>
<arg>${output_with_id_passed}</arg>
<status status="PASS" start="2024-03-17T21:14:38.582000" elapsed="0.033000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:14:30.815000" elapsed="7.800000"/>
</test>
<test id="s1-s4-t4" name="List om roles as JSON without OM service ID passed" line="51">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-03-17T21:14:38.617000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:38.620000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:38.622000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:38.622000" level="INFO">${output} = s3g</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:38.619000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:38.623000" level="INFO">s3g</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:38.623000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:38.624000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:38.623000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:38.619000" elapsed="0.005000"/>
</kw>
<msg time="2024-03-17T21:14:38.624000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:38.618000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-17T21:14:38.624000" level="INFO">${instance} = s3g</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-03-17T21:14:38.618000" elapsed="0.006000"/>
</kw>
<msg time="2024-03-17T21:14:38.624000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-03-17T21:14:38.618000" elapsed="0.006000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-17T21:14:38.625000" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-17T21:14:38.625000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:38.628000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:38.644000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:38.644000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:38.626000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:38.644000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:38.644000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:38.645000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:38.645000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:38.626000" elapsed="0.019000"/>
</kw>
<msg time="2024-03-17T21:14:38.645000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:38.626000" elapsed="0.019000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-03-17T21:14:38.625000" elapsed="0.020000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-17T21:14:38.625000" elapsed="0.020000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-03-17T21:14:38.617000" elapsed="0.028000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-17T21:14:38.616000" elapsed="0.029000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:38.648000" level="INFO">Running command 'ozone admin om roles --json 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:42.584000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:42.584000" level="INFO">${output} = [ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:38.647000" elapsed="3.937000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:42.585000" level="INFO">[ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "hostname" : "om3"
  }
} ]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:42.584000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:42.585000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:42.585000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:38.646000" elapsed="3.940000"/>
</kw>
<msg time="2024-03-17T21:14:42.586000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:38.646000" elapsed="3.940000"/>
</kw>
<msg time="2024-03-17T21:14:42.586000" level="INFO">${output_without_id_passed} = [ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "...</msg>
<var>${output_without_id_passed}</var>
<arg>ozone admin om roles --json</arg>
<status status="PASS" start="2024-03-17T21:14:38.646000" elapsed="3.940000"/>
</kw>
<kw name="Assert Leader Present in JSON">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:42.590000" level="INFO">Running command 'echo '[ {
  "om1" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om1"
  }
}, {
  "om2" : {
    "serverRole" : "FOLLOWER",
    "hostname" : "om2"
  }
}, {
  "om3" : {
    "serverRole" : "LEADER",
    "hostname" : "om3"
  }
} ]' | jq '.[] | select(.[] | .serverRole == "LEADER")' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:42.620000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:42.620000" level="INFO">${output} = {
  "om3": {
    "serverRole": "LEADER",
    "hostname": "om3"
  }
}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:42.588000" elapsed="0.032000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:42.621000" level="INFO">{
  "om3": {
    "serverRole": "LEADER",
    "hostname": "om3"
  }
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:42.621000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:42.622000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:42.621000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:42.587000" elapsed="0.035000"/>
</kw>
<msg time="2024-03-17T21:14:42.622000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:42.587000" elapsed="0.035000"/>
</kw>
<msg time="2024-03-17T21:14:42.622000" level="INFO">${leader} = {
  "om3": {
    "serverRole": "LEADER",
    "hostname": "om3"
  }
}</msg>
<var>${leader}</var>
<arg>echo '${output}' | jq '.[] | select(.[] | .serverRole == "LEADER")'</arg>
<status status="PASS" start="2024-03-17T21:14:42.587000" elapsed="0.035000"/>
</kw>
<kw name="Should Not Be Equal" owner="BuiltIn">
<arg>${leader}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" start="2024-03-17T21:14:42.623000" elapsed="0.000000"/>
</kw>
<arg>${output_without_id_passed}</arg>
<status status="PASS" start="2024-03-17T21:14:42.586000" elapsed="0.038000"/>
</kw>
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:42.626000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om roles --json 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:44.933000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:14:44.933000" level="INFO">${output} = There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:42.624000" elapsed="2.309000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:44.934000" level="INFO">There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:44.933000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:14:44.934000" level="INFO">${output_without_id_passed} = There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<var>${output_without_id_passed}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om roles --json</arg>
<status status="PASS" start="2024-03-17T21:14:42.624000" elapsed="2.310000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output_without_id_passed}</arg>
<arg>no Ozone Manager service ID specified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:14:44.934000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:14:38.616000" elapsed="6.319000"/>
</test>
<doc>Smoke test for listing om roles.</doc>
<status status="PASS" start="2024-03-17T21:14:16.614000" elapsed="28.322000"/>
</suite>
<suite id="s1-s5" name="Om-Leader-Transfer" source="/opt/hadoop/smoketest/omha/om-leader-transfer.robot">
<test id="s1-s5-t1" name="Transfer Leadership for OM with Valid ServiceID Specified" line="52">
<kw name="Get OM Leader and One Follower Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:48.335000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:14:52.354000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:14:52.354000" level="INFO">${output} = om3
om1
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:48.333000" elapsed="4.021000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:14:52.355000" level="INFO">om3
om1
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:14:52.354000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:14:52.355000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:14:52.355000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:48.333000" elapsed="4.023000"/>
</kw>
<msg time="2024-03-17T21:14:52.356000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:48.333000" elapsed="4.023000"/>
</kw>
<msg time="2024-03-17T21:14:52.356000" level="INFO">${result} = om3
om1
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:14:48.332000" elapsed="4.024000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:14:52.356000" level="INFO">${leader} = om3</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:14:52.356000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:14:52.357000" level="INFO">${follower1} = om1</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:14:52.357000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:14:52.357000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:14:52.357000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:14:52.358000" level="INFO">${result} = ['om3', 'om1', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:14:48.332000" elapsed="4.026000"/>
</kw>
<msg time="2024-03-17T21:14:52.358000" level="INFO">${leaderOM} = om3</msg>
<msg time="2024-03-17T21:14:52.358000" level="INFO">${followerOM} = om1</msg>
<var>${leaderOM}</var>
<var>${followerOM}</var>
<status status="PASS" start="2024-03-17T21:14:48.332000" elapsed="4.026000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:14:52.361000" level="INFO">Running command 'ozone admin om transfer --service-id=omservice -n om1 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:07.057000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:15:07.057000" level="INFO">${output} = Transfer leadership successfully to om1.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:14:52.360000" elapsed="14.697000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:07.058000" level="INFO">Transfer leadership successfully to om1.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:07.058000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:15:07.059000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:15:07.058000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:14:52.359000" elapsed="14.700000"/>
</kw>
<msg time="2024-03-17T21:15:07.059000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:14:52.359000" elapsed="14.700000"/>
</kw>
<msg time="2024-03-17T21:15:07.059000" level="INFO">${result} = Transfer leadership successfully to om1.</msg>
<var>${result}</var>
<arg>ozone admin om transfer --service-id=omservice -n ${followerOM}</arg>
<status status="PASS" start="2024-03-17T21:14:52.358000" elapsed="14.701000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:15:07.059000" elapsed="0.001000"/>
</kw>
<kw name="Assert OM leader Role Transitions">
<kw name="Get OM Leader Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:07.064000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:11.181000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:15:11.181000" level="INFO">${output} = om1
om3
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:07.062000" elapsed="4.119000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:11.182000" level="INFO">om1
om3
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:11.182000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:15:11.183000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:15:11.183000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:15:07.062000" elapsed="4.121000"/>
</kw>
<msg time="2024-03-17T21:15:11.183000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:15:07.061000" elapsed="4.122000"/>
</kw>
<msg time="2024-03-17T21:15:11.184000" level="INFO">${result} = om1
om3
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:15:07.061000" elapsed="4.123000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:11.184000" level="INFO">${leader} = om1</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:11.184000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:11.185000" level="INFO">${follower1} = om3</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:11.184000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:11.185000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:11.185000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:15:11.185000" level="INFO">${result} = ['om1', 'om3', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:15:07.061000" elapsed="4.124000"/>
</kw>
<msg time="2024-03-17T21:15:11.186000" level="INFO">${newLeaderOM} = om1</msg>
<var>${newLeaderOM}</var>
<status status="PASS" start="2024-03-17T21:15:07.060000" elapsed="4.126000"/>
</kw>
<kw name="Should Not Be Equal" owner="BuiltIn">
<arg>${leaderOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" start="2024-03-17T21:15:11.186000" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${followerOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-03-17T21:15:11.187000" elapsed="0.000000"/>
</kw>
<arg>'${isEqualCheck}' == 'true'</arg>
<arg>Should be Equal</arg>
<arg>${followerOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-17T21:15:11.186000" elapsed="0.001000"/>
</kw>
<arg>${leaderOM}</arg>
<arg>${followerOM}</arg>
<arg>true</arg>
<status status="PASS" start="2024-03-17T21:15:07.060000" elapsed="4.127000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:14:48.331000" elapsed="22.856000"/>
</test>
<test id="s1-s5-t2" name="Transfer Leadership for OM with Multiple ServiceIDs, Valid ServiceID Specified" line="62">
<kw name="Get OM Leader and One Follower Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:11.192000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:15.102000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:15:15.102000" level="INFO">${output} = om1
om3
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:11.190000" elapsed="3.912000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:15.103000" level="INFO">om1
om3
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:15.103000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:15:15.104000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:15:15.104000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:15:11.190000" elapsed="3.914000"/>
</kw>
<msg time="2024-03-17T21:15:15.104000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:15:11.189000" elapsed="3.915000"/>
</kw>
<msg time="2024-03-17T21:15:15.105000" level="INFO">${result} = om1
om3
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:15:11.189000" elapsed="3.916000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:15.105000" level="INFO">${leader} = om1</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:15.105000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:15.106000" level="INFO">${follower1} = om3</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:15.105000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:15.106000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:15.106000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:15:15.106000" level="INFO">${result} = ['om1', 'om3', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:15:11.189000" elapsed="3.917000"/>
</kw>
<msg time="2024-03-17T21:15:15.107000" level="INFO">${leaderOM} = om1</msg>
<msg time="2024-03-17T21:15:15.107000" level="INFO">${followerOM} = om3</msg>
<var>${leaderOM}</var>
<var>${followerOM}</var>
<status status="PASS" start="2024-03-17T21:15:11.188000" elapsed="3.919000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:15.110000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice -n om3 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:25.512000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:15:25.512000" level="INFO">${output} = Transfer leadership successfully to om3.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:15.108000" elapsed="10.404000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:25.513000" level="INFO">Transfer leadership successfully to om3.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:25.513000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:15:25.514000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:15:25.513000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:15:15.108000" elapsed="10.406000"/>
</kw>
<msg time="2024-03-17T21:15:25.514000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:15:15.107000" elapsed="10.407000"/>
</kw>
<msg time="2024-03-17T21:15:25.514000" level="INFO">${result} = Transfer leadership successfully to om3.</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice -n ${followerOM}</arg>
<status status="PASS" start="2024-03-17T21:15:15.107000" elapsed="10.407000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:15:25.515000" elapsed="0.000000"/>
</kw>
<kw name="Assert OM leader Role Transitions">
<kw name="Get OM Leader Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:25.520000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:29.339000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:15:29.339000" level="INFO">${output} = om3
om1
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:25.518000" elapsed="3.821000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:29.340000" level="INFO">om3
om1
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:29.340000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:15:29.341000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:15:29.341000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:15:25.518000" elapsed="3.823000"/>
</kw>
<msg time="2024-03-17T21:15:29.341000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:15:25.518000" elapsed="3.823000"/>
</kw>
<msg time="2024-03-17T21:15:29.341000" level="INFO">${result} = om3
om1
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:15:25.517000" elapsed="3.825000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:29.342000" level="INFO">${leader} = om3</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:29.342000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:29.342000" level="INFO">${follower1} = om1</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:29.342000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:29.343000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:29.343000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:15:29.343000" level="INFO">${result} = ['om3', 'om1', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:15:25.516000" elapsed="3.827000"/>
</kw>
<msg time="2024-03-17T21:15:29.343000" level="INFO">${newLeaderOM} = om3</msg>
<var>${newLeaderOM}</var>
<status status="PASS" start="2024-03-17T21:15:25.516000" elapsed="3.827000"/>
</kw>
<kw name="Should Not Be Equal" owner="BuiltIn">
<arg>${leaderOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" start="2024-03-17T21:15:29.344000" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${followerOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-03-17T21:15:29.344000" elapsed="0.001000"/>
</kw>
<arg>'${isEqualCheck}' == 'true'</arg>
<arg>Should be Equal</arg>
<arg>${followerOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-17T21:15:29.344000" elapsed="0.001000"/>
</kw>
<arg>${leaderOM}</arg>
<arg>${followerOM}</arg>
<arg>true</arg>
<status status="PASS" start="2024-03-17T21:15:25.515000" elapsed="3.830000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:15:11.188000" elapsed="18.157000"/>
</test>
<test id="s1-s5-t3" name="Transfer Leadership for OM with Multiple ServiceIDs, Unconfigured ServiceID Specified" line="72">
<kw name="Get One OM Follower Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:29.350000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:33.051000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:15:33.051000" level="INFO">${output} = om3
om1
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:29.348000" elapsed="3.703000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:33.052000" level="INFO">om3
om1
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:33.051000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:15:33.052000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:15:33.052000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:15:29.348000" elapsed="3.705000"/>
</kw>
<msg time="2024-03-17T21:15:33.053000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:15:29.348000" elapsed="3.705000"/>
</kw>
<msg time="2024-03-17T21:15:33.053000" level="INFO">${result} = om3
om1
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:15:29.347000" elapsed="3.706000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:33.054000" level="INFO">${leader} = om3</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:33.053000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:33.054000" level="INFO">${follower1} = om1</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:33.054000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:33.054000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:33.054000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:15:33.055000" level="INFO">${result} = ['om3', 'om1', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:15:29.347000" elapsed="3.708000"/>
</kw>
<msg time="2024-03-17T21:15:33.055000" level="INFO">${followerOM} = om1</msg>
<var>${followerOM}</var>
<status status="PASS" start="2024-03-17T21:15:29.346000" elapsed="3.709000"/>
</kw>
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:33.057000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice3 -n om1 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:35.524000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:15:35.525000" level="INFO">${output} = This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are [omservice, omservic...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:33.056000" elapsed="2.469000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:35.525000" level="INFO">This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are [omservice, omservice2]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:35.525000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:15:35.526000" level="INFO">${result} = This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are [omservice, omservic...</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice3 -n ${followerOM}</arg>
<status status="PASS" start="2024-03-17T21:15:33.055000" elapsed="2.471000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Service ID specified does not match</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:15:35.526000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:15:29.346000" elapsed="6.181000"/>
</test>
<test id="s1-s5-t4" name="Transfer Leadership for OM with Multiple ServiceIDs, Invalid ServiceID Specified" line="80">
<kw name="Get One OM Follower Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:35.532000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:39.156000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:15:39.156000" level="INFO">${output} = om3
om1
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:35.530000" elapsed="3.626000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:39.157000" level="INFO">om3
om1
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:39.156000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:15:39.158000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:15:39.157000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:15:35.529000" elapsed="3.629000"/>
</kw>
<msg time="2024-03-17T21:15:39.158000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:15:35.529000" elapsed="3.629000"/>
</kw>
<msg time="2024-03-17T21:15:39.158000" level="INFO">${result} = om3
om1
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:15:35.529000" elapsed="3.629000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:39.159000" level="INFO">${leader} = om3</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:39.158000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:39.159000" level="INFO">${follower1} = om1</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:39.159000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:39.160000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:39.159000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:15:39.160000" level="INFO">${result} = ['om3', 'om1', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:15:35.528000" elapsed="3.632000"/>
</kw>
<msg time="2024-03-17T21:15:39.160000" level="INFO">${followerOM} = om1</msg>
<var>${followerOM}</var>
<status status="PASS" start="2024-03-17T21:15:35.528000" elapsed="3.632000"/>
</kw>
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:39.162000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice2 -n om1 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:41.718000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:15:41.718000" level="INFO">${output} = Could not find any configured addresses for OM. Please configure the system with ozone.om.address</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:39.161000" elapsed="2.557000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:41.719000" level="INFO">Could not find any configured addresses for OM. Please configure the system with ozone.om.address</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:41.718000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:15:41.719000" level="INFO">${result} = Could not find any configured addresses for OM. Please configure the system with ozone.om.address</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice2 -n ${followerOM}</arg>
<status status="PASS" start="2024-03-17T21:15:39.160000" elapsed="2.559000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Could not find any configured addresses for OM.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:15:41.719000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:15:35.527000" elapsed="6.193000"/>
</test>
<test id="s1-s5-t5" name="Transfer Leadership for OM without ServiceID specified" line="88">
<kw name="Get OM Leader and One Follower Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:41.725000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:45.225000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:15:45.225000" level="INFO">${output} = om3
om1
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:41.723000" elapsed="3.502000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:45.227000" level="INFO">om3
om1
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:45.226000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:15:45.228000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:15:45.227000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:15:41.723000" elapsed="3.505000"/>
</kw>
<msg time="2024-03-17T21:15:45.228000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:15:41.722000" elapsed="3.506000"/>
</kw>
<msg time="2024-03-17T21:15:45.228000" level="INFO">${result} = om3
om1
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:15:41.722000" elapsed="3.506000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:45.229000" level="INFO">${leader} = om3</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:45.228000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:45.229000" level="INFO">${follower1} = om1</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:45.229000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:15:45.230000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:15:45.229000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:15:45.230000" level="INFO">${result} = ['om3', 'om1', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:15:41.722000" elapsed="3.508000"/>
</kw>
<msg time="2024-03-17T21:15:45.230000" level="INFO">${leaderOM} = om3</msg>
<msg time="2024-03-17T21:15:45.230000" level="INFO">${followerOM} = om1</msg>
<var>${leaderOM}</var>
<var>${followerOM}</var>
<status status="PASS" start="2024-03-17T21:15:41.721000" elapsed="3.509000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:45.234000" level="INFO">Running command 'ozone admin om transfer -n om1 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:15:57.232000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:15:57.232000" level="INFO">${output} = Transfer leadership successfully to om1.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:45.232000" elapsed="12.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:15:57.233000" level="INFO">Transfer leadership successfully to om1.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:15:57.233000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:15:57.234000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:15:57.233000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:15:45.231000" elapsed="12.003000"/>
</kw>
<msg time="2024-03-17T21:15:57.234000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:15:45.231000" elapsed="12.003000"/>
</kw>
<msg time="2024-03-17T21:15:57.234000" level="INFO">${result} = Transfer leadership successfully to om1.</msg>
<var>${result}</var>
<arg>ozone admin om transfer -n ${followerOM}</arg>
<status status="PASS" start="2024-03-17T21:15:45.231000" elapsed="12.004000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:15:57.235000" elapsed="0.000000"/>
</kw>
<kw name="Assert OM leader Role Transitions">
<kw name="Get OM Leader Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:15:57.239000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:01.060000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:16:01.060000" level="INFO">${output} = om1
om3
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:15:57.237000" elapsed="3.823000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:01.061000" level="INFO">om1
om3
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:01.061000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:16:01.062000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:16:01.062000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:15:57.237000" elapsed="3.825000"/>
</kw>
<msg time="2024-03-17T21:16:01.062000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:15:57.237000" elapsed="3.826000"/>
</kw>
<msg time="2024-03-17T21:16:01.063000" level="INFO">${result} = om1
om3
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:15:57.236000" elapsed="3.827000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:01.063000" level="INFO">${leader} = om1</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:01.063000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:01.064000" level="INFO">${follower1} = om3</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:01.063000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:01.064000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:01.064000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:16:01.065000" level="INFO">${result} = ['om1', 'om3', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:15:57.236000" elapsed="3.829000"/>
</kw>
<msg time="2024-03-17T21:16:01.065000" level="INFO">${newLeaderOM} = om1</msg>
<var>${newLeaderOM}</var>
<status status="PASS" start="2024-03-17T21:15:57.236000" elapsed="3.829000"/>
</kw>
<kw name="Should Not Be Equal" owner="BuiltIn">
<arg>${leaderOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" start="2024-03-17T21:16:01.065000" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${followerOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-03-17T21:16:01.066000" elapsed="0.000000"/>
</kw>
<arg>'${isEqualCheck}' == 'true'</arg>
<arg>Should be Equal</arg>
<arg>${followerOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-17T21:16:01.066000" elapsed="0.000000"/>
</kw>
<arg>${leaderOM}</arg>
<arg>${followerOM}</arg>
<arg>true</arg>
<status status="PASS" start="2024-03-17T21:15:57.235000" elapsed="3.831000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:15:41.721000" elapsed="19.346000"/>
</test>
<test id="s1-s5-t6" name="Transfer Leadership for OM with Multiple ServiceIDs, No ServiceID Specified" line="98">
<kw name="Get One OM Follower Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:01.072000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:05.062000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:16:05.062000" level="INFO">${output} = om1
om3
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:01.070000" elapsed="3.992000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:05.063000" level="INFO">om1
om3
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:05.062000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:16:05.064000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:16:05.063000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:16:01.069000" elapsed="3.995000"/>
</kw>
<msg time="2024-03-17T21:16:05.064000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:16:01.069000" elapsed="3.995000"/>
</kw>
<msg time="2024-03-17T21:16:05.064000" level="INFO">${result} = om1
om3
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:16:01.069000" elapsed="3.995000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:05.065000" level="INFO">${leader} = om1</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:05.064000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:05.066000" level="INFO">${follower1} = om3</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:05.065000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:05.066000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:05.066000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:16:05.066000" level="INFO">${result} = ['om1', 'om3', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:16:01.069000" elapsed="3.997000"/>
</kw>
<msg time="2024-03-17T21:16:05.067000" level="INFO">${followerOM} = om3</msg>
<var>${followerOM}</var>
<status status="PASS" start="2024-03-17T21:16:01.068000" elapsed="3.999000"/>
</kw>
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:05.069000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,ozone1 om transfer -n om3 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:07.606000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:16:07.606000" level="INFO">${output} = There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:05.067000" elapsed="2.539000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:07.607000" level="INFO">There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:07.606000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:16:07.607000" level="INFO">${result} = There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,ozone1 om transfer -n ${followerOM}</arg>
<status status="PASS" start="2024-03-17T21:16:05.067000" elapsed="2.540000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>no Ozone Manager service ID specified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:16:07.607000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:16:01.067000" elapsed="6.541000"/>
</test>
<test id="s1-s5-t7" name="Transfer Leadership for OM randomly with Valid ServiceID Specified" line="106">
<kw name="Get OM Leader Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:07.613000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:11.664000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:16:11.664000" level="INFO">${output} = om1
om3
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:07.611000" elapsed="4.053000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:11.665000" level="INFO">om1
om3
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:11.664000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:16:11.665000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:16:11.665000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:16:07.611000" elapsed="4.054000"/>
</kw>
<msg time="2024-03-17T21:16:11.665000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:16:07.610000" elapsed="4.056000"/>
</kw>
<msg time="2024-03-17T21:16:11.666000" level="INFO">${result} = om1
om3
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:16:07.610000" elapsed="4.056000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:11.666000" level="INFO">${leader} = om1</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:11.666000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:11.667000" level="INFO">${follower1} = om3</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:11.666000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:11.667000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:11.667000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:16:11.667000" level="INFO">${result} = ['om1', 'om3', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:16:07.610000" elapsed="4.057000"/>
</kw>
<msg time="2024-03-17T21:16:11.668000" level="INFO">${leaderOM} = om1</msg>
<var>${leaderOM}</var>
<status status="PASS" start="2024-03-17T21:16:07.609000" elapsed="4.059000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:11.671000" level="INFO">Running command 'ozone admin om transfer --service-id=omservice -r 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:23.398000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:16:23.398000" level="INFO">${output} = om1@group-D66704EFC61C: Failed to transfer leadership to om3 (the current leader is null): TIMED_OUT(60s)</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:11.669000" elapsed="11.729000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:23.399000" level="INFO">om1@group-D66704EFC61C: Failed to transfer leadership to om3 (the current leader is null): TIMED_OUT(60s)</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:23.399000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:16:23.400000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-03-17T21:16:23.400000" level="FAIL">255 != 0</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2024-03-17T21:16:23.400000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="FAIL" start="2024-03-17T21:16:11.668000" elapsed="11.733000"/>
</kw>
<msg time="2024-03-17T21:16:23.401000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="FAIL" start="2024-03-17T21:16:11.668000" elapsed="11.733000"/>
</kw>
<var>${result}</var>
<arg>ozone admin om transfer --service-id=omservice -r</arg>
<status status="FAIL" start="2024-03-17T21:16:11.668000" elapsed="11.733000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-03-17T21:16:23.401000" elapsed="0.000000"/>
</kw>
<kw name="Assert OM leader Role Transitions">
<arg>${leaderOM}</arg>
<arg>""</arg>
<arg>false</arg>
<status status="NOT RUN" start="2024-03-17T21:16:23.401000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" start="2024-03-17T21:16:07.608000" elapsed="15.794000">255 != 0</status>
</test>
<test id="s1-s5-t8" name="Transfer Leadership for OM randomly with Multiple ServiceIDs, Valid ServiceID Specified" line="115">
<kw name="Get OM Leader Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:23.408000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:27.364000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:16:27.364000" level="INFO">${output} = om3
om1
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:23.406000" elapsed="3.958000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:27.365000" level="INFO">om3
om1
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:27.365000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:16:27.366000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:16:27.366000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:16:23.405000" elapsed="3.961000"/>
</kw>
<msg time="2024-03-17T21:16:27.366000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:16:23.405000" elapsed="3.961000"/>
</kw>
<msg time="2024-03-17T21:16:27.367000" level="INFO">${result} = om3
om1
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:16:23.404000" elapsed="3.963000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:27.367000" level="INFO">${leader} = om3</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:27.367000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:27.368000" level="INFO">${follower1} = om1</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:27.367000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:27.368000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:27.368000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:16:27.368000" level="INFO">${result} = ['om3', 'om1', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:16:23.404000" elapsed="3.964000"/>
</kw>
<msg time="2024-03-17T21:16:27.368000" level="INFO">${leaderOM} = om3</msg>
<var>${leaderOM}</var>
<status status="PASS" start="2024-03-17T21:16:23.403000" elapsed="3.966000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:27.372000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice -r 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:40.826000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:16:40.826000" level="INFO">${output} = Transfer leadership successfully to random node.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:27.370000" elapsed="13.456000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:40.827000" level="INFO">Transfer leadership successfully to random node.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:40.826000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:16:40.828000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:16:40.827000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:16:27.369000" elapsed="13.459000"/>
</kw>
<msg time="2024-03-17T21:16:40.828000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:16:27.369000" elapsed="13.459000"/>
</kw>
<msg time="2024-03-17T21:16:40.828000" level="INFO">${result} = Transfer leadership successfully to random node.</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice -r</arg>
<status status="PASS" start="2024-03-17T21:16:27.369000" elapsed="13.459000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:16:40.828000" elapsed="0.001000"/>
</kw>
<kw name="Assert OM leader Role Transitions">
<kw name="Get OM Leader Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:40.833000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:44.854000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:16:44.854000" level="INFO">${output} = om1
om3
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:40.831000" elapsed="4.023000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:44.855000" level="INFO">om1
om3
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:44.855000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:16:44.856000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:16:44.855000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:16:40.831000" elapsed="4.025000"/>
</kw>
<msg time="2024-03-17T21:16:44.856000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:16:40.830000" elapsed="4.026000"/>
</kw>
<msg time="2024-03-17T21:16:44.856000" level="INFO">${result} = om1
om3
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:16:40.830000" elapsed="4.026000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:44.857000" level="INFO">${leader} = om1</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:44.857000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:44.857000" level="INFO">${follower1} = om3</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:44.857000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:44.858000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:44.858000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:16:44.858000" level="INFO">${result} = ['om1', 'om3', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:16:40.830000" elapsed="4.028000"/>
</kw>
<msg time="2024-03-17T21:16:44.858000" level="INFO">${newLeaderOM} = om1</msg>
<var>${newLeaderOM}</var>
<status status="PASS" start="2024-03-17T21:16:40.829000" elapsed="4.029000"/>
</kw>
<kw name="Should Not Be Equal" owner="BuiltIn">
<arg>${leaderOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" start="2024-03-17T21:16:44.858000" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${isEqualCheck}' == 'true'</arg>
<arg>Should be Equal</arg>
<arg>${followerOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-17T21:16:44.859000" elapsed="0.000000"/>
</kw>
<arg>${leaderOM}</arg>
<arg>""</arg>
<arg>false</arg>
<status status="PASS" start="2024-03-17T21:16:40.829000" elapsed="4.030000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:16:23.402000" elapsed="21.458000"/>
</test>
<test id="s1-s5-t9" name="Transfer Leadership for OM randomly with Multiple ServiceIDs, Unconfigured ServiceID Specified" line="125">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:44.863000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice3 -r 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:47.339000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:16:47.339000" level="INFO">${output} = This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are [omservice, omservic...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:44.861000" elapsed="2.478000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:47.340000" level="INFO">This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are [omservice, omservice2]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:47.339000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:16:47.340000" level="INFO">${result} = This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are [omservice, omservic...</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice3 -r</arg>
<status status="PASS" start="2024-03-17T21:16:44.861000" elapsed="2.479000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Service ID specified does not match</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:16:47.340000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:16:44.860000" elapsed="2.481000"/>
</test>
<test id="s1-s5-t10" name="Transfer Leadership for OM randomly with Multiple ServiceIDs, Invalid ServiceID Specified" line="130">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:47.344000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice2 -r 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:50.060000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:16:50.060000" level="INFO">${output} = Could not find any configured addresses for OM. Please configure the system with ozone.om.address</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:47.343000" elapsed="2.717000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:50.061000" level="INFO">Could not find any configured addresses for OM. Please configure the system with ozone.om.address</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:50.061000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:16:50.062000" level="INFO">${result} = Could not find any configured addresses for OM. Please configure the system with ozone.om.address</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,omservice2 om transfer --service-id=omservice2 -r</arg>
<status status="PASS" start="2024-03-17T21:16:47.342000" elapsed="2.720000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Could not find any configured addresses for OM.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:16:50.062000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:16:47.341000" elapsed="2.721000"/>
</test>
<test id="s1-s5-t11" name="Transfer Leadership for OM randomly without ServiceID specified" line="136">
<kw name="Get OM Leader Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:50.067000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:16:53.838000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:16:53.838000" level="INFO">${output} = om1
om3
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:50.065000" elapsed="3.774000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:16:53.839000" level="INFO">om1
om3
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:16:53.839000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:16:53.840000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:16:53.840000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:16:50.065000" elapsed="3.775000"/>
</kw>
<msg time="2024-03-17T21:16:53.840000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:16:50.065000" elapsed="3.775000"/>
</kw>
<msg time="2024-03-17T21:16:53.841000" level="INFO">${result} = om1
om3
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:16:50.064000" elapsed="3.777000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:53.841000" level="INFO">${leader} = om1</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:53.841000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:53.842000" level="INFO">${follower1} = om3</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:53.841000" elapsed="0.001000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:16:53.842000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:16:53.842000" elapsed="0.000000"/>
</kw>
<msg time="2024-03-17T21:16:53.842000" level="INFO">${result} = ['om1', 'om3', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:16:50.064000" elapsed="3.778000"/>
</kw>
<msg time="2024-03-17T21:16:53.843000" level="INFO">${leaderOM} = om1</msg>
<var>${leaderOM}</var>
<status status="PASS" start="2024-03-17T21:16:50.064000" elapsed="3.779000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:16:53.846000" level="INFO">Running command 'ozone admin om transfer -r 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:17:07.018000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:17:07.018000" level="INFO">${output} = Transfer leadership successfully to random node.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:16:53.844000" elapsed="13.174000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:17:07.019000" level="INFO">Transfer leadership successfully to random node.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:17:07.019000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:17:07.020000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:17:07.019000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:16:53.843000" elapsed="13.177000"/>
</kw>
<msg time="2024-03-17T21:17:07.020000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:16:53.843000" elapsed="13.177000"/>
</kw>
<msg time="2024-03-17T21:17:07.020000" level="INFO">${result} = Transfer leadership successfully to random node.</msg>
<var>${result}</var>
<arg>ozone admin om transfer -r</arg>
<status status="PASS" start="2024-03-17T21:16:53.843000" elapsed="13.177000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:17:07.021000" elapsed="0.000000"/>
</kw>
<kw name="Assert OM leader Role Transitions">
<kw name="Get OM Leader Node">
<kw name="Get OM Nodes">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:17:07.025000" level="INFO">Running command 'ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]' 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:17:10.780000" level="INFO">${rc} = 0</msg>
<msg time="2024-03-17T21:17:10.780000" level="INFO">${output} = om3
om1
om2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:17:07.023000" elapsed="3.757000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:17:10.781000" level="INFO">om3
om1
om2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:17:10.781000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-17T21:17:10.782000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-17T21:17:10.781000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-03-17T21:17:07.023000" elapsed="3.759000"/>
</kw>
<msg time="2024-03-17T21:17:10.782000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-03-17T21:17:07.022000" elapsed="3.760000"/>
</kw>
<msg time="2024-03-17T21:17:10.782000" level="INFO">${result} = om3
om1
om2</msg>
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice --json | jq -r '[.[] | .[] | select(.serverRole == "LEADER") | .hostname], [.[] | .[] | select(.serverRole == "FOLLOWER") | .hostname] | .[]'</arg>
<status status="PASS" start="2024-03-17T21:17:07.022000" elapsed="3.760000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:17:10.783000" level="INFO">${leader} = om3</msg>
<var>${leader}</var>
<arg>${result}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:17:10.783000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:17:10.783000" level="INFO">${follower1} = om1</msg>
<var>${follower1}</var>
<arg>${result}</arg>
<arg>1</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:17:10.783000" elapsed="0.000000"/>
</kw>
<kw name="Get Line" owner="String">
<msg time="2024-03-17T21:17:10.784000" level="INFO">${follower2} = om2</msg>
<var>${follower2}</var>
<arg>${result}</arg>
<arg>2</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<status status="PASS" start="2024-03-17T21:17:10.783000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:17:10.784000" level="INFO">${result} = ['om3', 'om1', 'om2']</msg>
<var>${result}</var>
<status status="PASS" start="2024-03-17T21:17:07.022000" elapsed="3.762000"/>
</kw>
<msg time="2024-03-17T21:17:10.784000" level="INFO">${newLeaderOM} = om3</msg>
<var>${newLeaderOM}</var>
<status status="PASS" start="2024-03-17T21:17:07.021000" elapsed="3.763000"/>
</kw>
<kw name="Should Not Be Equal" owner="BuiltIn">
<arg>${leaderOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" start="2024-03-17T21:17:10.784000" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${isEqualCheck}' == 'true'</arg>
<arg>Should be Equal</arg>
<arg>${followerOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-03-17T21:17:10.785000" elapsed="0.000000"/>
</kw>
<arg>${leaderOM}</arg>
<arg>""</arg>
<arg>false</arg>
<status status="PASS" start="2024-03-17T21:17:07.021000" elapsed="3.764000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:16:50.063000" elapsed="20.722000"/>
</test>
<test id="s1-s5-t12" name="Transfer Leadership for OM randomly with Multiple ServiceIDs, No ServiceID Specified" line="146">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-03-17T21:17:10.789000" level="INFO">Running command 'ozone admin --set=ozone.om.service.ids=omservice,ozone1 om transfer -r 2&gt;&amp;1'.</msg>
<msg time="2024-03-17T21:17:13.181000" level="INFO">${rc} = 255</msg>
<msg time="2024-03-17T21:17:13.181000" level="INFO">${output} = There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-03-17T21:17:10.787000" elapsed="2.395000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-17T21:17:13.183000" level="INFO">There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-17T21:17:13.182000" elapsed="0.001000"/>
</kw>
<msg time="2024-03-17T21:17:13.183000" level="INFO">${result} = There is no Ozone Manager service ID specified, but there are either zero, or more than one service IDconfigured.</msg>
<var>${result}</var>
<arg>ozone admin --set=ozone.om.service.ids=omservice,ozone1 om transfer -r</arg>
<status status="PASS" start="2024-03-17T21:17:10.787000" elapsed="2.396000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>no Ozone Manager service ID specified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-17T21:17:13.183000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-03-17T21:17:10.786000" elapsed="2.398000"/>
</test>
<doc>Smoketest for OM leader transfer</doc>
<status status="FAIL" start="2024-03-17T21:14:48.290000" elapsed="144.895000"/>
</suite>
<status status="FAIL" elapsed="199.005000"/>
</suite>
<statistics>
<total>
<stat pass="24" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="24" fail="1" skip="0" id="s1" name="ozonesecure-ha-leadership">ozonesecure-ha-leadership</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-leadership.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Scmrole">ozonesecure-ha-leadership.Scmrole</stat>
<stat pass="6" fail="0" skip="0" id="s1-s3" name="Om-Fetch-Key">ozonesecure-ha-leadership.Om-Fetch-Key</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4" name="Om-Roles">ozonesecure-ha-leadership.Om-Roles</stat>
<stat pass="11" fail="1" skip="0" id="s1-s5" name="Om-Leader-Transfer">ozonesecure-ha-leadership.Om-Leader-Transfer</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
