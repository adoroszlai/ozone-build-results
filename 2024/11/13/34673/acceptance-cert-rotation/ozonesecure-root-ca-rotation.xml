<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.18 on linux)" generated="20241113 15:52:53.149" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241113 15:49:48.949" endtime="20241113 15:49:48.949"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:49:48.953" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:49:48.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:49:48.957" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241113 15:49:48.951" endtime="20241113 15:49:48.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:49:48.957" level="INFO">scm</msg>
<status status="PASS" starttime="20241113 15:49:48.957" endtime="20241113 15:49:48.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:49:48.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:49:48.957" endtime="20241113 15:49:48.958"/>
</kw>
<status status="PASS" starttime="20241113 15:49:48.950" endtime="20241113 15:49:48.958"/>
</kw>
<msg timestamp="20241113 15:49:48.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:49:48.950" endtime="20241113 15:49:48.958"/>
</kw>
<msg timestamp="20241113 15:49:48.958" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241113 15:49:48.950" endtime="20241113 15:49:48.958"/>
</kw>
<msg timestamp="20241113 15:49:48.958" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241113 15:49:48.949" endtime="20241113 15:49:48.958"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241113 15:49:48.959" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241113 15:49:48.958" endtime="20241113 15:49:48.959"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:49:48.962" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:49:49.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:49:49.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:49:48.960" endtime="20241113 15:49:49.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:49:49.002" level="INFO"/>
<status status="PASS" starttime="20241113 15:49:49.002" endtime="20241113 15:49:49.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:49:49.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:49:49.002" endtime="20241113 15:49:49.003"/>
</kw>
<status status="PASS" starttime="20241113 15:49:48.960" endtime="20241113 15:49:49.003"/>
</kw>
<msg timestamp="20241113 15:49:49.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:49:48.959" endtime="20241113 15:49:49.003"/>
</kw>
<status status="PASS" starttime="20241113 15:49:48.959" endtime="20241113 15:49:49.003"/>
</kw>
<status status="PASS" starttime="20241113 15:49:48.959" endtime="20241113 15:49:49.003"/>
</kw>
<status status="PASS" starttime="20241113 15:49:48.948" endtime="20241113 15:49:49.003"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241113 15:49:48.948" endtime="20241113 15:49:49.003"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20241113 15:49:48.914" endtime="20241113 15:49:49.004"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241113 15:50:37.850" endtime="20241113 15:50:37.851"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:50:37.854" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:50:37.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:50:37.858" level="INFO">${output} = dn</msg>
<status status="PASS" starttime="20241113 15:50:37.852" endtime="20241113 15:50:37.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:50:37.859" level="INFO">dn</msg>
<status status="PASS" starttime="20241113 15:50:37.859" endtime="20241113 15:50:37.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:50:37.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:50:37.859" endtime="20241113 15:50:37.859"/>
</kw>
<status status="PASS" starttime="20241113 15:50:37.851" endtime="20241113 15:50:37.860"/>
</kw>
<msg timestamp="20241113 15:50:37.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:50:37.851" endtime="20241113 15:50:37.860"/>
</kw>
<msg timestamp="20241113 15:50:37.860" level="INFO">${instance} = dn</msg>
<status status="PASS" starttime="20241113 15:50:37.851" endtime="20241113 15:50:37.860"/>
</kw>
<msg timestamp="20241113 15:50:37.860" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241113 15:50:37.851" endtime="20241113 15:50:37.860"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241113 15:50:37.860" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241113 15:50:37.860" endtime="20241113 15:50:37.860"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:50:37.863" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/dn@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:50:37.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:50:37.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:37.862" endtime="20241113 15:50:37.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:50:37.933" level="INFO"/>
<status status="PASS" starttime="20241113 15:50:37.932" endtime="20241113 15:50:37.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:50:37.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:50:37.933" endtime="20241113 15:50:37.933"/>
</kw>
<status status="PASS" starttime="20241113 15:50:37.861" endtime="20241113 15:50:37.934"/>
</kw>
<msg timestamp="20241113 15:50:37.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:50:37.861" endtime="20241113 15:50:37.934"/>
</kw>
<status status="PASS" starttime="20241113 15:50:37.861" endtime="20241113 15:50:37.934"/>
</kw>
<status status="PASS" starttime="20241113 15:50:37.861" endtime="20241113 15:50:37.934"/>
</kw>
<status status="PASS" starttime="20241113 15:50:37.850" endtime="20241113 15:50:37.934"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241113 15:50:37.849" endtime="20241113 15:50:37.934"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20241113 15:50:37.815" endtime="20241113 15:50:37.935"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241113 15:50:41.716" endtime="20241113 15:50:41.716"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:50:41.720" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:50:41.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:50:41.723" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20241113 15:50:41.718" endtime="20241113 15:50:41.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:50:41.724" level="INFO">om</msg>
<status status="PASS" starttime="20241113 15:50:41.723" endtime="20241113 15:50:41.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:50:41.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:50:41.724" endtime="20241113 15:50:41.724"/>
</kw>
<status status="PASS" starttime="20241113 15:50:41.717" endtime="20241113 15:50:41.724"/>
</kw>
<msg timestamp="20241113 15:50:41.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:50:41.717" endtime="20241113 15:50:41.725"/>
</kw>
<msg timestamp="20241113 15:50:41.725" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20241113 15:50:41.717" endtime="20241113 15:50:41.725"/>
</kw>
<msg timestamp="20241113 15:50:41.725" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241113 15:50:41.717" endtime="20241113 15:50:41.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241113 15:50:41.725" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241113 15:50:41.725" endtime="20241113 15:50:41.725"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:50:41.728" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:50:41.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:50:41.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:41.726" endtime="20241113 15:50:41.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:50:41.768" level="INFO"/>
<status status="PASS" starttime="20241113 15:50:41.768" endtime="20241113 15:50:41.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:50:41.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:50:41.768" endtime="20241113 15:50:41.769"/>
</kw>
<status status="PASS" starttime="20241113 15:50:41.726" endtime="20241113 15:50:41.769"/>
</kw>
<msg timestamp="20241113 15:50:41.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:50:41.726" endtime="20241113 15:50:41.769"/>
</kw>
<status status="PASS" starttime="20241113 15:50:41.726" endtime="20241113 15:50:41.769"/>
</kw>
<status status="PASS" starttime="20241113 15:50:41.725" endtime="20241113 15:50:41.769"/>
</kw>
<status status="PASS" starttime="20241113 15:50:41.716" endtime="20241113 15:50:41.769"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241113 15:50:41.715" endtime="20241113 15:50:41.769"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20241113 15:50:41.682" endtime="20241113 15:50:41.770"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s4-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:50:45.052" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:50:48.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:50:48.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:45.050" endtime="20241113 15:50:48.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:50:48.683" level="INFO"/>
<status status="PASS" starttime="20241113 15:50:48.683" endtime="20241113 15:50:48.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:50:48.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:50:48.683" endtime="20241113 15:50:48.684"/>
</kw>
<status status="PASS" starttime="20241113 15:50:45.049" endtime="20241113 15:50:48.684"/>
</kw>
<msg timestamp="20241113 15:50:48.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:50:45.049" endtime="20241113 15:50:48.684"/>
</kw>
<msg timestamp="20241113 15:50:48.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:45.049" endtime="20241113 15:50:48.684"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241113 15:50:48.684" endtime="20241113 15:50:48.684"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:50:48.687" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:50:52.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:50:52.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:48.685" endtime="20241113 15:50:52.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:50:52.082" level="INFO"/>
<status status="PASS" starttime="20241113 15:50:52.081" endtime="20241113 15:50:52.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:50:52.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:50:52.082" endtime="20241113 15:50:52.083"/>
</kw>
<status status="PASS" starttime="20241113 15:50:48.685" endtime="20241113 15:50:52.083"/>
</kw>
<msg timestamp="20241113 15:50:52.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:50:48.685" endtime="20241113 15:50:52.083"/>
</kw>
<msg timestamp="20241113 15:50:52.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:48.684" endtime="20241113 15:50:52.083"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241113 15:50:52.083" endtime="20241113 15:50:52.083"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241113 15:50:45.048" endtime="20241113 15:50:52.084"/>
</test>
<test id="s1-s4-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:50:52.087" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241113 15:50:52.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:50:52.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:52.085" endtime="20241113 15:50:52.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:50:52.090" level="INFO"/>
<status status="PASS" starttime="20241113 15:50:52.090" endtime="20241113 15:50:52.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:50:52.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:50:52.090" endtime="20241113 15:50:52.091"/>
</kw>
<status status="PASS" starttime="20241113 15:50:52.085" endtime="20241113 15:50:52.091"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:50:52.094" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:50:58.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:50:58.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:52.092" endtime="20241113 15:50:58.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:50:58.817" level="INFO"/>
<status status="PASS" starttime="20241113 15:50:58.817" endtime="20241113 15:50:58.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:50:58.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:50:58.817" endtime="20241113 15:50:58.818"/>
</kw>
<status status="PASS" starttime="20241113 15:50:52.092" endtime="20241113 15:50:58.818"/>
</kw>
<msg timestamp="20241113 15:50:58.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:50:52.091" endtime="20241113 15:50:58.818"/>
</kw>
<msg timestamp="20241113 15:50:58.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:52.091" endtime="20241113 15:50:58.818"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241113 15:50:58.818" endtime="20241113 15:50:58.818"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:50:58.821" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:50:58.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:50:58.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:58.819" endtime="20241113 15:50:58.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:50:58.825" level="INFO"/>
<status status="PASS" starttime="20241113 15:50:58.824" endtime="20241113 15:50:58.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:50:58.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:50:58.825" endtime="20241113 15:50:58.825"/>
</kw>
<status status="PASS" starttime="20241113 15:50:58.819" endtime="20241113 15:50:58.825"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241113 15:50:52.084" endtime="20241113 15:50:58.826"/>
</test>
<test id="s1-s4-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241113 15:50:58.827" level="INFO">${random} = 13903</msg>
<status status="PASS" starttime="20241113 15:50:58.826" endtime="20241113 15:50:58.827"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:50:58.829" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-13903 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:51:04.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:51:04.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:58.828" endtime="20241113 15:51:04.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:51:04.211" level="INFO"/>
<status status="PASS" starttime="20241113 15:51:04.210" endtime="20241113 15:51:04.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:51:04.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:51:04.211" endtime="20241113 15:51:04.211"/>
</kw>
<status status="PASS" starttime="20241113 15:50:58.827" endtime="20241113 15:51:04.211"/>
</kw>
<msg timestamp="20241113 15:51:04.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:50:58.827" endtime="20241113 15:51:04.211"/>
</kw>
<msg timestamp="20241113 15:51:04.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:50:58.827" endtime="20241113 15:51:04.211"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241113 15:51:04.212" endtime="20241113 15:51:04.212"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:51:04.214" level="INFO">Running command 'cat /tmp/key-13903 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:51:04.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:51:04.217" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241113 15:51:04.212" endtime="20241113 15:51:04.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:51:04.218" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241113 15:51:04.218" endtime="20241113 15:51:04.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:51:04.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:51:04.218" endtime="20241113 15:51:04.218"/>
</kw>
<msg timestamp="20241113 15:51:04.218" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241113 15:51:04.212" endtime="20241113 15:51:04.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241113 15:51:04.219" endtime="20241113 15:51:04.219"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:51:04.221" level="INFO">Running command 'rm /tmp/key-13903 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:51:04.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:51:04.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:51:04.219" endtime="20241113 15:51:04.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:51:04.225" level="INFO"/>
<status status="PASS" starttime="20241113 15:51:04.224" endtime="20241113 15:51:04.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:51:04.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:51:04.225" endtime="20241113 15:51:04.225"/>
</kw>
<status status="PASS" starttime="20241113 15:51:04.219" endtime="20241113 15:51:04.225"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241113 15:50:58.826" endtime="20241113 15:51:04.226"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20241113 15:50:45.015" endtime="20241113 15:51:04.226"/>
</suite>
<suite id="s1-s5" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s5-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:52:19.246" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:52:23.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:52:23.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:19.244" endtime="20241113 15:52:23.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:52:23.291" level="INFO"/>
<status status="PASS" starttime="20241113 15:52:23.290" endtime="20241113 15:52:23.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:52:23.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:52:23.291" endtime="20241113 15:52:23.291"/>
</kw>
<status status="PASS" starttime="20241113 15:52:19.243" endtime="20241113 15:52:23.292"/>
</kw>
<msg timestamp="20241113 15:52:23.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:52:19.243" endtime="20241113 15:52:23.292"/>
</kw>
<msg timestamp="20241113 15:52:23.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:19.242" endtime="20241113 15:52:23.292"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241113 15:52:23.292" endtime="20241113 15:52:23.292"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:52:23.298" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:52:27.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:52:27.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:23.294" endtime="20241113 15:52:27.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:52:27.247" level="INFO"/>
<status status="PASS" starttime="20241113 15:52:27.247" endtime="20241113 15:52:27.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:52:27.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:52:27.247" endtime="20241113 15:52:27.248"/>
</kw>
<status status="PASS" starttime="20241113 15:52:23.294" endtime="20241113 15:52:27.248"/>
</kw>
<msg timestamp="20241113 15:52:27.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:52:23.293" endtime="20241113 15:52:27.248"/>
</kw>
<msg timestamp="20241113 15:52:27.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:23.293" endtime="20241113 15:52:27.248"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241113 15:52:27.248" endtime="20241113 15:52:27.248"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241113 15:52:19.242" endtime="20241113 15:52:27.248"/>
</test>
<test id="s1-s5-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:52:27.252" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241113 15:52:27.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:52:27.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:27.250" endtime="20241113 15:52:27.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:52:27.255" level="INFO"/>
<status status="PASS" starttime="20241113 15:52:27.254" endtime="20241113 15:52:27.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:52:27.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:52:27.255" endtime="20241113 15:52:27.255"/>
</kw>
<status status="PASS" starttime="20241113 15:52:27.250" endtime="20241113 15:52:27.256"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:52:27.259" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:52:33.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:52:33.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:27.257" endtime="20241113 15:52:33.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:52:33.128" level="INFO"/>
<status status="PASS" starttime="20241113 15:52:33.128" endtime="20241113 15:52:33.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:52:33.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:52:33.129" endtime="20241113 15:52:33.129"/>
</kw>
<status status="PASS" starttime="20241113 15:52:27.256" endtime="20241113 15:52:33.129"/>
</kw>
<msg timestamp="20241113 15:52:33.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:52:27.256" endtime="20241113 15:52:33.129"/>
</kw>
<msg timestamp="20241113 15:52:33.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:27.256" endtime="20241113 15:52:33.130"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241113 15:52:33.130" endtime="20241113 15:52:33.130"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:52:33.132" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:52:33.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:52:33.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:33.130" endtime="20241113 15:52:33.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:52:33.137" level="INFO"/>
<status status="PASS" starttime="20241113 15:52:33.136" endtime="20241113 15:52:33.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:52:33.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:52:33.137" endtime="20241113 15:52:33.137"/>
</kw>
<status status="PASS" starttime="20241113 15:52:33.130" endtime="20241113 15:52:33.138"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241113 15:52:27.249" endtime="20241113 15:52:33.138"/>
</test>
<test id="s1-s5-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241113 15:52:33.139" level="INFO">${random} = 60637</msg>
<status status="PASS" starttime="20241113 15:52:33.139" endtime="20241113 15:52:33.139"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:52:33.142" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-60637 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:52:39.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:52:39.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:33.140" endtime="20241113 15:52:39.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:52:39.397" level="INFO"/>
<status status="PASS" starttime="20241113 15:52:39.397" endtime="20241113 15:52:39.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:52:39.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:52:39.397" endtime="20241113 15:52:39.398"/>
</kw>
<status status="PASS" starttime="20241113 15:52:33.140" endtime="20241113 15:52:39.398"/>
</kw>
<msg timestamp="20241113 15:52:39.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:52:33.139" endtime="20241113 15:52:39.398"/>
</kw>
<msg timestamp="20241113 15:52:39.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:33.139" endtime="20241113 15:52:39.398"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241113 15:52:39.398" endtime="20241113 15:52:39.399"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:52:39.402" level="INFO">Running command 'cat /tmp/key-60637 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:52:39.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:52:39.405" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241113 15:52:39.399" endtime="20241113 15:52:39.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:52:39.406" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241113 15:52:39.406" endtime="20241113 15:52:39.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:52:39.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:52:39.406" endtime="20241113 15:52:39.407"/>
</kw>
<msg timestamp="20241113 15:52:39.407" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241113 15:52:39.399" endtime="20241113 15:52:39.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241113 15:52:39.407" endtime="20241113 15:52:39.407"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:52:39.411" level="INFO">Running command 'rm /tmp/key-60637 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:52:39.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:52:39.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241113 15:52:39.408" endtime="20241113 15:52:39.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:52:39.415" level="INFO"/>
<status status="PASS" starttime="20241113 15:52:39.415" endtime="20241113 15:52:39.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:52:39.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:52:39.415" endtime="20241113 15:52:39.416"/>
</kw>
<status status="PASS" starttime="20241113 15:52:39.407" endtime="20241113 15:52:39.416"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241113 15:52:33.138" endtime="20241113 15:52:39.416"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20241113 15:52:19.206" endtime="20241113 15:52:39.417"/>
</suite>
<suite id="s1-s6" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s6-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241113 15:52:40.026" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20241113 15:52:40.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20241113 15:52:40.325" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20241113 15:52:40.024" endtime="20241113 15:52:40.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:52:40.327" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20241113 15:52:40.326" endtime="20241113 15:52:40.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241113 15:52:40.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241113 15:52:40.327" endtime="20241113 15:52:40.327"/>
</kw>
<status status="PASS" starttime="20241113 15:52:40.023" endtime="20241113 15:52:40.328"/>
</kw>
<msg timestamp="20241113 15:52:40.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241113 15:52:40.023" endtime="20241113 15:52:40.328"/>
</kw>
<msg timestamp="20241113 15:52:40.328" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20241113 15:52:40.023" endtime="20241113 15:52:40.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241113 15:52:40.329" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20241113 15:52:40.328" endtime="20241113 15:52:40.329"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20241113 15:52:40.329" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20241113 15:52:40.329" endtime="20241113 15:52:40.329"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20241113 15:52:40.331" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20241113 15:52:40.329" endtime="20241113 15:52:40.331"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20241113 15:52:40.331" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20241113 15:52:40.331" endtime="20241113 15:52:40.331"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20241113 15:52:40.332" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20241113 15:52:40.331" endtime="20241113 15:52:40.332"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20241113 15:52:40.333" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20241113 15:52:40.332" endtime="20241113 15:52:40.333"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241113 15:52:40.333" endtime="20241113 15:52:40.333"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241113 15:52:40.022" endtime="20241113 15:52:40.334"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241113 15:52:39.986" endtime="20241113 15:52:40.335"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="40069"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
