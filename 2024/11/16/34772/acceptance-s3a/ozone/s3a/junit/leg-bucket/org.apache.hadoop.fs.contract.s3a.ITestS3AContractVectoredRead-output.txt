2024-11-16 17:23:44,185 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:44,457 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:23:44,462 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:23:44,474 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:44,477 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:44,540 [setup] WARN  impl.MetricsConfig (MetricsConfig.java:loadFirst(136)) - Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
2024-11-16 17:23:44,653 [setup] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:getMetricsSystem(250)) - Metrics system inited org.apache.hadoop.metrics2.impl.MetricsSystemImpl@59611c3c
2024-11-16 17:23:44,661 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:23:44,662 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:23:44,663 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:23:44,664 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:23:44,664 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:23:44,665 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:23:44,666 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:23:44,669 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:23:44,670 [setup] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:23:44,673 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:23:44,678 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:44,678 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:44,678 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:23:44,678 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:23:44,679 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:23:44,687 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:23:44,687 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:23:44,687 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:23:44,688 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:23:44,863 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402]
2024-11-16 17:23:44,863 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402]
2024-11-16 17:23:44,875 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:23:45,013 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:23:45,014 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:23:45,014 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:23:45,014 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:23:45,014 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:23:45,017 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:23:45,018 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:45,094 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:23:45,096 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:23:45,114 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:23:45,115 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:23:45,289 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:23:45,291 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:23:45,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:23:45,294 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:23:45,300 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:23:45,301 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:23:45,305 [setup] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:23:45,305 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:23:45,307 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:23:45,308 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:23:45,311 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:23:45,313 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:23:45,315 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:23:45,316 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:23:45,318 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:23:45,319 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:23:45,352 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402], delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_list_located_status=0) (multipart_upload_list.failures=0) (op_list_status.failures=0) (stream_read_close_operations=0) (object_put_bytes=0) (multipart_upload_part_put=0) (op_glob_status=0) (stream_write_total_data=0) (committer_load_single_pending_file.failures=0) (audit_access_check_failure=0) (committer_materialize_file.failures=0) (committer_stage_file_upload=0) (multipart_upload_started=0) (op_exists=0) (audit_request_execution=0) (committer_commit_job.failures=0) (action_executor_acquired.failures=0) (op_create=0) (object_continue_list_request.failures=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_abort_under_path_invoked=0) (delegation_tokens_issued.failures=0) (op_list_files=0) (op_get_delegation_token.failures=0) (committer_magic_marker_put=0) (committer_materialize_file=0) (object_delete_objects=0) (stream_read_operations_incomplete=0) (stream_read_total_bytes=0) (committer_commits_created=0) (stream_read_version_mismatches=0) (stream_read_closed=0) (op_is_file=0) (files_created=0) (op_xattr_list=0) (stream_read_bytes_discarded_in_close=0) (store_io_throttled=0) (stream_read_fully_operations=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=0) (object_multipart_aborted=0) (op_xattr_get_named_map.failures=0) (stream_read_vectored_incoming_ranges=0) (committer_bytes_committed=0) (committer_magic_marker_put.failures=0) (op_mkdirs.failures=0) (multipart_upload_list=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (action_http_get_request=0) (ignored_errors=0) (stream_write_block_uploads=0) (op_rename.failures=0) (multipart_upload_completed=0) (op_hflush=0) (directories_created=0) (object_continue_list_request=0) (multipart_upload_part_put_bytes=0) (stream_write_total_time=0) (stream_write_queue_duration.failures=0) (op_xattr_get_map.failures=0) (multipart_upload_aborted=0) (object_list_request=0) (object_put_request_completed=0) (op_open=0) (stream_read_vectored_operations=0) (op_createfile.failures=0) (stream_write_block_uploads_aborted=0) (stream_write_exceptions=0) (op_exists.failures=0) (committer_magic_files_created=0) (op_createfile=0) (audit_failure=0) (files_delete_rejected=0) (op_get_file_status.failures=0) (multipart_instantiated=0) (files_copied=0) (stream_read_unbuffered=0) (fake_directories_created=0) (audit_span_creation=1) (action_http_get_request.failures=0) (object_metadata_request=0) (store_io_retry=0) (stream_read_seek_policy_changed=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_map=0) (op_abort=0) (op_create_non_recursive=0) (object_put_request=0) (op_xattr_get_named.failures=0) (store_io_request=0) (op_create.failures=0) (op_openfile=0) (committer_bytes_uploaded=0) (object_put_request.failures=0) (op_delete.failures=0) (stream_aborted=0) (op_rename=0) (stream_read_operations=0) (op_get_file_checksum.failures=0) (object_bulk_delete_request=0) (stream_read_seek_operations=0) (stream_write_bytes=0) (stream_read_bytes=0) (stream_read_remote_stream_aborted=0) (object_delete_request.failures=0) (op_get_delegation_token=0) (action_http_head_request=0) (stream_write_queue_duration=0) (committer_stage_file_upload.failures=0) (op_copy_from_local_file.failures=0) (committer_commits_reverted=0) (committer_load_single_pending_file=0) (op_xattr_get_named_map=0) (op_is_file.failures=0) (op_is_directory.failures=0) (op_delete=0) (op_hsync=0) (stream_write_block_uploads_committed=0) (object_select_requests=0) (action_executor_acquired=0) (op_xattr_get_named=0) (directories_deleted=0) (committer_tasks_failed=0) (committer_commits_aborted=0) (store_exists_probe=0) (op_copy_from_local_file=0) (stream_read_seek_forward_operations=0) (store_exists_probe.failures=0) (object_multipart_aborted.failures=0) (committer_jobs_completed=0) (committer_commits.failures=0) (op_list_status=0) (op_list_files.failures=0) (object_delete_request=0) (fake_directories_deleted=0) (op_get_content_summary=0) (op_get_file_status=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (op_get_content_summary.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_drain=0) (op_abort.failures=0) (stream_read_seek_bytes_skipped=0) (op_mkdirs=0) (delegation_tokens_issued=0) (files_copied_bytes=0) (action_http_head_request.failures=0) (action_file_opened.failures=0) (op_xattr_list.failures=0) (op_glob_status.failures=0) (committer_commits_completed=0) (object_bulk_delete_request.failures=0) (object_copy_requests=0) (stream_read_bytes_discarded_in_abort=0) (op_is_directory=0) (files_deleted=0) (committer_commit_job=0) (op_access.failures=0) (committer_jobs_failed=0) (committer_tasks_completed=0) (object_multipart_initiated.failures=0) (stream_read_seek_backward_operations=0) (object_list_request.failures=0) (stream_read_vectored_combined_ranges=0) (op_access=0) (op_get_file_checksum=0) (stream_read_opened=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0));
minimums=((op_xattr_list.min=-1) (op_abort.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_get_delegation_token.failures.min=-1) (delegation_tokens_issued.min=-1) (object_list_request.min=-1) (op_createfile.failures.min=-1) (op_access.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (object_continue_list_request.min=-1) (op_is_directory.failures.min=-1) (committer_magic_marker_put.min=-1) (op_list_files.min=-1) (op_exists.min=-1) (op_access.failures.min=-1) (object_bulk_delete_request.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_delete.failures.min=-1) (op_mkdirs.min=-1) (stream_write_queue_duration.failures.min=-1) (op_delete.min=-1) (object_delete_request.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_create.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_drain.min=-1) (op_createfile.min=-1) (op_copy_from_local_file.failures.min=-1) (object_put_request.min=-1) (op_rename.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_get_request.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_materialize_file.min=-1) (op_get_file_status.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_status.min=-1) (op_mkdirs.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named.min=-1) (op_create.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_glob_status.min=-1) (op_get_delegation_token.min=-1) (op_is_file.failures.min=-1) (action_file_opened.failures.min=-1) (op_list_files.failures.min=-1) (store_exists_probe.min=-1) (action_http_head_request.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.min=-1) (stream_write_queue_duration.min=-1) (multipart_upload_list.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_exists.failures.min=-1) (op_glob_status.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_get_map.min=-1) (op_abort.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=-1));
maximums=((committer_commit_job.failures.max=-1) (op_mkdirs.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_status.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_directory.failures.max=-1) (multipart_upload_list.max=-1) (op_get_delegation_token.max=-1) (op_is_file.max=-1) (op_glob_status.max=-1) (object_bulk_delete_request.failures.max=-1) (object_bulk_delete_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_list.max=-1) (stream_read_remote_stream_aborted.max=-1) (delegation_tokens_issued.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (store_exists_probe.max=-1) (op_get_file_status.failures.max=-1) (op_create.max=-1) (object_list_request.max=-1) (object_delete_request.max=-1) (object_continue_list_request.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.max=-1) (op_is_directory.max=-1) (op_createfile.failures.max=-1) (op_rename.max=-1) (object_multipart_aborted.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_content_summary.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named_map.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (op_list_status.max=-1) (op_createfile.max=-1) (op_delete.max=-1) (op_abort.failures.max=-1) (action_http_head_request.max=-1) (action_http_get_request.failures.max=-1) (object_list_request.failures.max=-1) (op_abort.max=-1) (op_get_file_checksum.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_access.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (store_exists_probe.failures.max=-1) (op_rename.failures.max=-1) (op_exists.max=-1) (op_mkdirs.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_commit_job.max=-1) (op_delete.failures.max=-1) (committer_materialize_file.max=-1) (op_get_content_summary.failures.max=-1) (op_access.max=-1) (op_copy_from_local_file.max=-1) (op_list_files.max=-1) (op_list_files.failures.max=-1) (action_file_opened.max=-1) (action_http_get_request.max=-1) (committer_magic_marker_put.max=-1) (object_delete_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_status.failures.max=-1) (op_create.failures.max=-1) (action_file_opened.failures.max=-1) (object_put_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_initiated.max=-1));
means=((op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:45,362 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:45,362 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:45,363 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:45,365 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:45,365 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:45,367 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000005 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000005&t0=16&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=16&ts=1731777825360
2024-11-16 17:23:45,378 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:23:45,395 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.017s
2024-11-16 17:23:45,396 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:23:45,396 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:23:45,533 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.168s
2024-11-16 17:23:45,533 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:45,534 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:45,534 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:45,536 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:45,537 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000005 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000005&t0=16&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=16&ts=1731777825360
2024-11-16 17:23:45,548 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:45,549 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:45,551 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:45,551 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:45,552 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000005 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000005&t0=16&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=16&ts=1731777825360
2024-11-16 17:23:45,623 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:45,624 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:45,624 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.075s
2024-11-16 17:23:45,624 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:45,629 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:45,629 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:45,629 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:45,629 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:45,629 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000006 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000006&t0=16&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=16&ts=1731777825627
2024-11-16 17:23:45,640 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:23:45,640 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:45,646 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:45,671 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15032464581928037479.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:45,676 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15032464581928037479.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated=0) (op_abort=0) (stream_write_block_uploads=0) (action_executor_acquired=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (op_hsync=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (object_put_request=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15032464581928037479.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:45,676 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:45,676 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:45,677 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15032464581928037479.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:45,684 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:45,686 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:45,687 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:45,687 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:45,688 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000006 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000006&t0=16&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=31&ts=1731777825627
2024-11-16 17:23:45,730 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:45,731 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:45,732 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.046s
2024-11-16 17:23:45,733 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15032464581928037479.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:45,734 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15032464581928037479.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:45,734 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15032464581928037479.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:45,735 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:45,736 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:45,746 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (stream_write_bytes=65536) (op_abort.failures=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (op_abort=0) (object_multipart_initiated=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (op_hsync=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=42) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=42) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=42, mean=42.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:45,748 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:45,749 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:23:45,749 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:23:45,753 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:45,753 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:45,762 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:23:45,762 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:23:45,762 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:23:45,762 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:23:45,763 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:23:45,763 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:23:45,763 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:23:45,763 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:23:45,763 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:23:45,763 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:23:45,764 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='8aba040f-f272-49ea-9c59-c1f268e3bb50', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:45,764 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='8aba040f-f272-49ea-9c59-c1f268e3bb50', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:45,764 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='8aba040f-f272-49ea-9c59-c1f268e3bb50', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:23:45,764 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:23:45,765 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:23:45,765 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:23:45,765 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:23:45,766 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:23:45,766 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:23:45,766 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5a9d0c87]
2024-11-16 17:23:45,766 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5a9d0c87]
2024-11-16 17:23:45,766 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:23:45,767 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:23:45,767 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:23:45,767 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:23:45,767 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:23:45,767 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:23:45,767 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:23:45,768 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:45,768 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:23:45,768 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:23:45,768 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:23:45,768 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:23:45,771 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:23:45,771 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:23:45,771 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:23:45,771 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:23:45,771 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:23:45,772 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:23:45,772 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:23:45,772 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:23:45,772 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:23:45,772 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:23:45,772 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:23:45,772 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:23:45,773 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:23:45,773 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:23:45,773 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:23:45,773 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:23:45,778 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:45,779 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:45,779 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:45,779 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 8aba040f-f272-49ea-9c59-c1f268e3bb50-00000009 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/8aba040f-f272-49ea-9c59-c1f268e3bb50-00000009/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=8aba040f-f272-49ea-9c59-c1f268e3bb50-00000009&t0=16&fs=8aba040f-f272-49ea-9c59-c1f268e3bb50&t1=16&ts=1731777825778
2024-11-16 17:23:45,780 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:23:45,780 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:23:45,780 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:23:45,780 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:23:45,789 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:45,791 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:45,794 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:45,825 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_read_block_read=0) (stream_read_vectored_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_incoming_ranges=0) (action_executor_acquired=0) (action_file_opened.failures=0) (stream_read_exceptions=0) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_combined_ranges=0) (stream_read_prefetch_operations=0) (action_file_opened=1) (stream_read_total_bytes=0) (stream_read_fully_operations=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_opened=0) (action_http_get_request.failures=0) (action_http_get_request=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_unbuffered=0) (stream_read_seek_operations=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=13) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((action_http_get_request.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=13) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=13, mean=13.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:45,831 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:23:45,833 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:23:45,833 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:45,833 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@51e44a6b[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:23:45,833 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:45,833 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics2-leg-bucket
2024-11-16 17:23:45,834 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:23:45,834 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5a9d0c87] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:45,834 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5a9d0c87] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:45,842 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_write_bytes=0) (committer_commit_job=0) (action_executor_acquired.failures=0) (files_delete_rejected=0) (op_get_content_summary.failures=0) (action_http_head_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_get_file_status=0) (action_file_opened=1) (op_hsync=0) (object_delete_request.failures=0) (object_continue_list_request.failures=0) (committer_commits_reverted=0) (stream_read_vectored_combined_ranges=0) (op_xattr_list.failures=0) (committer_jobs_completed=0) (multipart_upload_abort_under_path_invoked=0) (committer_magic_marker_put.failures=0) (object_metadata_request=1) (action_executor_acquired=0) (object_list_request.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (op_access.failures=0) (stream_read_seek_forward_operations=0) (action_http_get_request=0) (object_select_requests=0) (op_list_located_status=0) (stream_read_closed=0) (committer_materialize_file=0) (committer_stage_file_upload=0) (delegation_tokens_issued.failures=0) (object_delete_objects=0) (audit_request_execution=1) (object_put_bytes=0) (op_is_file.failures=0) (multipart_upload_list.failures=0) (committer_tasks_completed=0) (object_bulk_delete_request.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (op_get_file_status.failures=0) (committer_jobs_failed=0) (store_exists_probe=0) (stream_read_bytes_discarded_in_close=0) (stream_read_exceptions=0) (op_list_files.failures=0) (op_delete=0) (store_exists_probe.failures=0) (op_exists.failures=0) (op_openfile=0) (object_put_request.failures=0) (op_xattr_get_map.failures=0) (op_is_directory=0) (op_glob_status.failures=0) (op_mkdirs.failures=0) (committer_commits_completed=0) (multipart_instantiated=0) (stream_write_block_uploads=0) (store_io_retry=0) (object_put_request=0) (stream_read_unbuffered=0) (stream_write_queue_duration.failures=0) (op_get_content_summary=0) (multipart_upload_part_put_bytes=0) (store_io_throttled=0) (op_xattr_get_named_map.failures=0) (committer_magic_marker_put=0) (op_abort=0) (object_multipart_initiated=0) (op_createfile.failures=0) (committer_commits.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_continue_list_request=0) (op_get_file_checksum=0) (committer_load_single_pending_file.failures=0) (object_copy_requests=0) (files_copied_bytes=0) (committer_magic_files_created=0) (stream_read_opened=0) (stream_read_remote_stream_drain=0) (op_access=0) (committer_bytes_committed=0) (audit_span_creation=2) (stream_read_remote_stream_aborted=0) (committer_bytes_uploaded=0) (op_get_delegation_token.failures=0) (op_mkdirs=0) (stream_write_total_data=0) (op_create_non_recursive=0) (committer_tasks_failed=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (op_copy_from_local_file.failures=0) (directories_created=0) (store_io_request=1) (op_delete.failures=0) (committer_commits_created=0) (multipart_upload_completed=0) (op_hflush=0) (stream_read_total_bytes=0) (op_get_file_checksum.failures=0) (files_deleted=0) (stream_read_seek_bytes_discarded=0) (files_copied=0) (op_is_file=0) (op_xattr_get_named_map=0) (stream_read_bytes_discarded_in_abort=0) (object_multipart_aborted.failures=0) (stream_read_fully_operations=0) (op_xattr_get_named=0) (stream_aborted=0) (op_open=1) (stream_write_block_uploads_committed=0) (ignored_errors=0) (stream_read_seek_backward_operations=0) (fake_directories_created=0) (object_list_request=0) (committer_materialize_file.failures=0) (stream_read_seek_bytes_skipped=0) (object_delete_request=0) (audit_access_check_failure=0) (multipart_upload_list=0) (action_http_head_request=1) (op_rename.failures=0) (op_list_status=0) (stream_read_vectored_operations=0) (fake_directories_deleted=0) (action_file_opened.failures=0) (multipart_upload_aborted=0) (op_xattr_get_named.failures=0) (stream_read_operations_incomplete=0) (op_list_status.failures=0) (op_create=0) (op_glob_status=0) (stream_read_operations=0) (op_xattr_list=0) (stream_read_close_operations=1) (multipart_upload_started=0) (delegation_tokens_issued=0) (directories_deleted=0) (op_list_files=0) (object_bulk_delete_request=0) (op_rename=0) (stream_read_vectored_incoming_ranges=0) (op_exists=0) (stream_read_vectored_read_bytes_discarded=0) (action_http_get_request.failures=0) (object_multipart_initiated.failures=0) (op_get_delegation_token=0) (committer_commit_job.failures=0) (stream_read_version_mismatches=0) (stream_write_exceptions_completing_upload=0) (op_createfile=0) (op_create.failures=0) (stream_write_queue_duration=0) (op_is_directory.failures=0) (object_put_request_completed=0) (committer_load_single_pending_file=0) (audit_failure=0) (op_xattr_get_map=0) (committer_commits_aborted=0) (stream_read_seek_operations=0) (files_created=0) (stream_read_bytes=0) (committer_stage_file_upload.failures=0) (stream_write_total_time=0) (op_copy_from_local_file=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_list.failures.min=-1) (stream_write_queue_duration.min=-1) (op_abort.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.min=13) (op_create.min=-1) (op_rename.min=-1) (action_http_head_request.failures.min=-1) (op_createfile.min=-1) (op_access.min=-1) (op_delete.failures.min=-1) (op_is_file.min=-1) (op_glob_status.min=-1) (op_rename.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_http_get_request.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.failures.min=-1) (committer_materialize_file.min=-1) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_list_files.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_files.failures.min=-1) (object_continue_list_request.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (op_xattr_get_map.min=-1) (stream_write_queue_duration.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_status.min=-1) (op_delete.min=-1) (delegation_tokens_issued.min=-1) (object_delete_request.min=-1) (op_xattr_get_named.min=-1) (op_glob_status.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_status.min=-1) (multipart_upload_list.min=-1) (object_multipart_initiated.min=-1) (op_create.failures.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_delegation_token.min=-1) (action_http_get_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_exists.min=-1) (op_mkdirs.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.failures.min=-1) (op_is_directory.min=-1) (delegation_tokens_issued.failures.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.min=-1) (store_exists_probe.min=-1) (op_createfile.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_list.min=-1) (op_access.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=10) (object_list_request.min=-1) (op_get_content_summary.min=-1));
maximums=((action_executor_acquired.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_map.max=-1) (object_put_request.failures.max=-1) (op_exists.failures.max=-1) (op_get_delegation_token.max=-1) (op_mkdirs.max=-1) (op_rename.max=-1) (committer_stage_file_upload.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.max=-1) (object_delete_request.max=-1) (op_create.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_file.max=-1) (op_get_file_status.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_content_summary.max=-1) (op_glob_status.max=-1) (op_list_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.failures.max=-1) (committer_stage_file_upload.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (op_exists.max=-1) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.max=13) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_list.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_put_request.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (action_file_opened.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_delete.failures.max=-1) (op_is_file.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_commit_job.failures.max=-1) (op_abort.max=-1) (op_list_files.max=-1) (op_xattr_list.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_materialize_file.max=-1) (op_delete.max=-1) (op_create.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_bulk_delete_request.max=-1) (op_is_directory.failures.max=-1) (op_is_directory.max=-1) (action_http_head_request.max=10) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_list_request.max=-1) (object_multipart_initiated.max=-1) (op_copy_from_local_file.failures.max=-1) (op_copy_from_local_file.max=-1) (op_createfile.failures.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.failures.max=-1) (object_delete_request.failures.max=-1) (op_access.max=-1) (committer_load_single_pending_file.max=-1) (object_continue_list_request.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.max=-1) (op_list_files.failures.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=13, mean=13.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=10, mean=10.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:45,844 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:45,844 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:45,844 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:45,845 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010&t0=16&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=16&ts=1731777825843
2024-11-16 17:23:45,850 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:45,850 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:45,850 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010&t0=16&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=16&ts=1731777825843
2024-11-16 17:23:45,861 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:23:45,861 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:45,861 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:45,861 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:45,861 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:45,863 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:45,863 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:45,863 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:45,863 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:45,863 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:45,864 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:45,864 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:45,866 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:45,867 [s3a-transfer-leg-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:45,867 [s3a-transfer-leg-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:45,868 [s3a-transfer-leg-bucket-unbounded-pool2-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [35] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010&t0=16&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=35&ts=1731777825843
2024-11-16 17:23:45,878 [s3a-transfer-leg-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:23:45,878 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:23:45,878 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:45,879 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:45,879 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:45,879 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777825724; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:45,879 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:45,881 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:45,883 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:45,884 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:45,886 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:45,886 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:45,887 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:45,890 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:45,890 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:45,890 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:45,893 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:45,894 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:45,898 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010&t0=16&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=36&ts=1731777825843
2024-11-16 17:23:45,910 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:23:45,910 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.020s
2024-11-16 17:23:45,910 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.020s
2024-11-16 17:23:45,910 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:45,911 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:45,911 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:45,911 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:45,911 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:45,911 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:45,912 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000010&t0=16&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=36&ts=1731777825843
2024-11-16 17:23:45,920 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:45,920 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:23:45,920 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:23:45,920 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.034s
2024-11-16 17:23:45,920 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.034s
2024-11-16 17:23:45,921 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.058s
2024-11-16 17:23:45,921 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:45,921 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:45,926 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:45,953 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_copy_from_local_file=0) (op_delete=1) (directories_created=1) (action_executor_acquired.failures=0) (committer_load_single_pending_file.failures=0) (op_list_located_status=0) (op_get_delegation_token=0) (multipart_upload_list=0) (op_xattr_list=0) (stream_read_seek_forward_operations=0) (files_deleted=1) (audit_failure=0) (committer_commits_completed=0) (op_list_status=0) (op_list_files.failures=0) (op_glob_status=0) (committer_magic_marker_put=0) (op_create.failures=0) (object_continue_list_request.failures=0) (op_delete.failures=0) (op_exists=0) (op_is_file.failures=0) (stream_read_closed=0) (object_multipart_initiated.failures=0) (stream_read_vectored_operations=0) (object_delete_objects=2) (stream_read_vectored_combined_ranges=0) (committer_commits_aborted=0) (object_put_bytes=65536) (op_xattr_get_map=0) (committer_bytes_uploaded=0) (op_create=1) (object_multipart_initiated=0) (stream_read_operations=0) (object_bulk_delete_request.failures=0) (action_http_head_request=2) (stream_read_total_bytes=0) (stream_read_opened=0) (stream_write_bytes=65536) (op_is_directory=0) (op_open=0) (committer_tasks_failed=0) (object_continue_list_request=0) (op_glob_status.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=0) (object_list_request=4) (stream_read_fully_operations=0) (object_delete_request=0) (stream_read_bytes=0) (audit_span_creation=4) (committer_magic_marker_put.failures=0) (op_xattr_get_named.failures=0) (op_hsync=0) (committer_magic_files_created=0) (op_create_non_recursive=0) (committer_commits_created=0) (op_abort=0) (op_get_delegation_token.failures=0) (multipart_instantiated=0) (committer_materialize_file.failures=0) (action_http_get_request=0) (multipart_upload_part_put_bytes=0) (committer_jobs_failed=0) (committer_commit_job=0) (op_access.failures=0) (committer_commits.failures=0) (stream_read_bytes_discarded_in_close=0) (fake_directories_deleted=1) (committer_commits_reverted=0) (op_xattr_get_named_map=0) (op_xattr_get_named_map.failures=0) (object_bulk_delete_request=2) (stream_read_unbuffered=0) (delegation_tokens_issued=0) (files_delete_rejected=0) (object_delete_request.failures=0) (op_access=0) (op_get_file_checksum.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_hflush=0) (stream_write_total_data=131072) (op_is_directory.failures=0) (object_select_requests=0) (ignored_errors=0) (op_get_file_status.failures=0) (object_put_request=2) (op_createfile.failures=0) (op_get_content_summary.failures=0) (multipart_upload_completed=0) (op_get_content_summary=0) (action_file_opened=0) (object_put_request.failures=0) (store_io_throttled=0) (multipart_upload_part_put=0) (committer_stage_file_upload=0) (op_list_files=0) (op_exists.failures=0) (object_multipart_aborted.failures=0) (stream_read_seek_operations=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_bytes_discarded=0) (stream_write_exceptions_completing_upload=0) (action_http_head_request.failures=0) (op_createfile=0) (op_list_status.failures=0) (stream_read_operations_incomplete=0) (op_get_file_status=0) (files_copied_bytes=0) (multipart_upload_aborted=0) (action_executor_acquired=0) (object_metadata_request=2) (directories_deleted=0) (stream_write_block_uploads=1) (op_copy_from_local_file.failures=0) (store_io_retry=0) (committer_load_single_pending_file=0) (stream_read_version_mismatches=0) (op_xattr_get_named=0) (fake_directories_created=0) (op_openfile=0) (multipart_upload_list.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_vectored_read_bytes_discarded=0) (audit_request_execution=10) (object_put_request_completed=2) (committer_stage_file_upload.failures=0) (store_exists_probe=0) (files_copied=0) (committer_commit_job.failures=0) (stream_read_vectored_incoming_ranges=0) (object_list_request.failures=0) (store_io_request=10) (stream_read_exceptions=0) (stream_write_block_uploads_committed=0) (op_rename=0) (stream_write_exceptions=0) (op_rename.failures=0) (op_abort.failures=0) (multipart_upload_started=0) (stream_write_total_time=0) (op_get_file_checksum=0) (files_created=1) (store_exists_probe.failures=0) (stream_write_queue_duration.failures=0) (op_mkdirs=1) (op_xattr_get_map.failures=0) (object_multipart_aborted=0) (committer_jobs_completed=0) (stream_read_remote_stream_drain.failures=0) (committer_tasks_completed=0) (action_http_get_request.failures=0) (op_mkdirs.failures=0) (audit_access_check_failure=0) (stream_write_block_uploads_aborted=0) (op_xattr_list.failures=0) (stream_aborted=0) (stream_read_close_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted.failures=0) (delegation_tokens_issued.failures=0) (committer_materialize_file=0) (action_file_opened.failures=0) (object_copy_requests=0) (stream_read_remote_stream_drain=0) (op_is_file=0) (stream_write_queue_duration=0) (committer_bytes_committed=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_materialize_file.min=-1) (action_http_get_request.failures.min=-1) (object_put_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_mkdirs.min=263) (action_http_head_request.failures.min=-1) (op_createfile.min=-1) (op_exists.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_put_request.min=42) (delegation_tokens_issued.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_create.min=45) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.min=-1) (op_delete.failures.min=-1) (op_rename.failures.min=-1) (op_create.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_head_request.min=6) (object_continue_list_request.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_glob_status.min=-1) (op_abort.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_checksum.min=-1) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_file.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_status.failures.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.min=-1) (op_access.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_file.failures.min=-1) (op_list_files.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_list.min=-1) (committer_load_single_pending_file.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_status.min=-1) (stream_read_remote_stream_drain.min=-1) (op_delete.min=58) (op_xattr_get_named_map.failures.min=-1) (committer_commit_job.failures.min=-1) (op_access.min=-1) (object_multipart_aborted.min=-1) (store_exists_probe.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_abort.failures.min=-1) (op_is_directory.min=-1) (op_is_directory.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_stage_file_upload.min=-1) (op_glob_status.failures.min=-1) (committer_magic_marker_put.min=-1) (op_createfile.failures.min=-1) (action_executor_acquired.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.min=-1) (action_executor_acquired.failures.min=-1) (object_delete_request.min=-1) (op_list_status.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (object_list_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.min=-1) (op_list_files.failures.min=-1) (object_list_request.min=9) (delegation_tokens_issued.min=-1) (object_bulk_delete_request.min=9) (action_http_get_request.min=-1) (op_exists.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.failures.min=-1) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.failures.min=-1));
maximums=((committer_commit_job.failures.max=-1) (op_get_file_status.max=-1) (action_http_get_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_list.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.max=-1) (action_file_opened.failures.max=-1) (op_copy_from_local_file.max=-1) (op_exists.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_put_request.max=71) (object_delete_request.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.max=-1) (committer_materialize_file.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_files.max=-1) (committer_commit_job.max=-1) (action_executor_acquired.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_aborted.max=-1) (op_delete.max=58) (op_get_content_summary.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_create.failures.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (op_xattr_get_named.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_mkdirs.failures.max=-1) (action_http_head_request.max=11) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.max=-1) (op_get_delegation_token.failures.max=-1) (op_abort.failures.max=-1) (op_glob_status.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_get_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_map.max=-1) (object_multipart_aborted.failures.max=-1) (op_list_status.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.max=263) (op_delete.failures.max=-1) (op_rename.failures.max=-1) (object_multipart_initiated.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_map.failures.max=-1) (object_continue_list_request.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named_map.failures.max=-1) (delegation_tokens_issued.max=-1) (object_list_request.max=167) (op_exists.max=-1) (object_bulk_delete_request.max=12) (op_glob_status.failures.max=-1) (object_delete_request.max=-1) (op_is_directory.failures.max=-1) (op_is_directory.max=-1) (op_access.max=-1) (committer_magic_marker_put.max=-1) (op_create.max=45) (object_list_request.failures.max=-1) (op_list_files.failures.max=-1) (op_access.failures.max=-1) (op_list_status.failures.max=-1) (op_rename.max=-1) (op_createfile.max=-1) (action_http_head_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.max=-1) (object_continue_list_request.failures.max=-1) (op_is_file.failures.max=-1));
means=((op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=1, sum=58, mean=58.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=1, sum=45, mean=45.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=1, sum=263, mean=263.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=2, sum=21, mean=10.5000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=2, sum=17, mean=8.5000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=2, sum=113, mean=56.5000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=4, sum=198, mean=49.5000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:45,955 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:45,955 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:45,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:45,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:45,956 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:45,956 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000011 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000011&t0=37&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=37&ts=1731777825954
2024-11-16 17:23:45,965 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:23:45,966 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:45,966 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:45,966 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:45,966 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:45,967 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000011 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000011&t0=37&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=37&ts=1731777825954
2024-11-16 17:23:45,973 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:45,973 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:45,974 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:45,975 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:45,975 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000011 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000011&t0=37&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=37&ts=1731777825954
2024-11-16 17:23:45,986 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:45,987 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:45,987 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.014s
2024-11-16 17:23:45,987 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:45,989 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:45,989 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:45,990 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:45,990 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:45,991 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000012 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000012&t0=37&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=37&ts=1731777825988
2024-11-16 17:23:46,001 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:23:46,001 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,001 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:46,004 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-155174026983858009.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:46,007 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-155174026983858009.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed=0) (object_put_request=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (op_abort.failures=0) (committer_magic_marker_put=0) (op_hflush=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (object_put_request.failures=0) (action_executor_acquired=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-155174026983858009.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,007 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:46,007 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:46,007 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-155174026983858009.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:46,009 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:46,009 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:46,010 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:46,010 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:46,010 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000012 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000012&t0=37&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=38&ts=1731777825988
2024-11-16 17:23:46,039 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:46,039 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:46,039 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.030s
2024-11-16 17:23:46,039 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-155174026983858009.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:46,039 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-155174026983858009.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,040 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-155174026983858009.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,040 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:46,040 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:46,043 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (op_abort=0) (op_hsync=0) (action_executor_acquired=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (object_multipart_aborted.failures=0) (object_put_request=1) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (stream_write_total_data=65536) (committer_magic_marker_put=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=29) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=29) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=29, mean=29.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:46,046 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:46,047 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:23:46,047 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:23:46,050 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:46,050 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:46,059 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:23:46,059 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:23:46,060 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:23:46,060 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:23:46,060 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:23:46,060 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:23:46,060 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:23:46,060 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:23:46,060 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:23:46,062 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:23:46,063 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='d7c7b982-c287-4d09-b6d0-178bce214714', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:46,063 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='d7c7b982-c287-4d09-b6d0-178bce214714', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:46,063 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='d7c7b982-c287-4d09-b6d0-178bce214714', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:23:46,063 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:23:46,063 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:23:46,066 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:23:46,066 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:23:46,066 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:23:46,066 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:23:46,067 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@318d0c73]
2024-11-16 17:23:46,067 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@318d0c73]
2024-11-16 17:23:46,067 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:23:46,067 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:23:46,068 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:23:46,068 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:23:46,068 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:23:46,068 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:23:46,068 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:23:46,069 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:46,069 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:23:46,069 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:23:46,070 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:23:46,070 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:23:46,072 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:23:46,072 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:23:46,072 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:23:46,072 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:23:46,072 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:23:46,072 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:23:46,072 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:23:46,073 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:23:46,074 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:23:46,074 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:23:46,074 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:23:46,074 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:23:46,074 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:23:46,074 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:23:46,074 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:23:46,074 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:23:46,078 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:46,079 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,079 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:46,079 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] d7c7b982-c287-4d09-b6d0-178bce214714-00000015 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/d7c7b982-c287-4d09-b6d0-178bce214714-00000015/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=d7c7b982-c287-4d09-b6d0-178bce214714-00000015&t0=37&fs=d7c7b982-c287-4d09-b6d0-178bce214714&t1=37&ts=1731777826078
2024-11-16 17:23:46,080 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:23:46,080 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:23:46,080 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:23:46,081 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:23:46,086 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:46,086 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:46,087 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:46,089 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened=1) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=0) (stream_read_bytes=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (action_file_opened.failures=0) (stream_read_total_bytes=0) (stream_read_vectored_incoming_ranges=0) (stream_read_exceptions=0) (stream_read_operations=0) (stream_read_closed=0) (stream_read_fully_operations=0) (stream_read_block_acquire_read=0) (stream_read_opened=0) (stream_read_close_operations=1) (action_http_get_request=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_operations_incomplete=0) (action_executor_acquired=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_block_read=0) (stream_read_unbuffered=0) (stream_read_vectored_combined_ranges=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_file_opened.min=8) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=8) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:46,092 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:23:46,092 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:23:46,092 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:46,093 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@58f8fbd[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:23:46,093 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:46,093 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics3-leg-bucket
2024-11-16 17:23:46,093 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:23:46,093 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@318d0c73] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:46,094 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@318d0c73] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:46,099 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_xattr_get_map.failures=0) (op_get_file_checksum.failures=0) (stream_read_vectored_incoming_ranges=0) (delegation_tokens_issued=0) (audit_access_check_failure=0) (committer_jobs_failed=0) (op_list_files.failures=0) (committer_commits_created=0) (files_delete_rejected=0) (op_abort.failures=0) (op_create.failures=0) (op_get_content_summary.failures=0) (object_bulk_delete_request.failures=0) (op_copy_from_local_file.failures=0) (op_list_status.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (stream_read_vectored_operations=0) (audit_request_execution=1) (object_delete_request=0) (committer_tasks_failed=0) (op_delete=0) (ignored_errors=0) (stream_read_operations=0) (multipart_upload_started=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (op_abort=0) (op_is_directory=0) (object_multipart_initiated=0) (multipart_upload_abort_under_path_invoked=0) (object_delete_request.failures=0) (stream_read_version_mismatches=0) (op_xattr_get_named.failures=0) (committer_materialize_file=0) (committer_commit_job.failures=0) (stream_write_block_uploads=0) (op_mkdirs=0) (stream_read_bytes_backwards_on_seek=0) (op_get_file_checksum=0) (op_list_files=0) (op_open=1) (op_xattr_get_named_map.failures=0) (stream_read_remote_stream_aborted=0) (store_exists_probe.failures=0) (op_get_file_status.failures=0) (action_http_get_request.failures=0) (committer_commits_aborted=0) (committer_bytes_committed=0) (committer_load_single_pending_file.failures=0) (object_multipart_aborted=0) (op_is_file.failures=0) (stream_write_total_time=0) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (op_glob_status.failures=0) (op_list_status=0) (op_mkdirs.failures=0) (op_glob_status=0) (stream_read_seek_forward_operations=0) (op_list_located_status=0) (stream_read_seek_operations=0) (stream_write_total_data=0) (fake_directories_created=0) (committer_materialize_file.failures=0) (directories_created=0) (object_put_bytes=0) (op_rename=0) (multipart_upload_list=0) (object_copy_requests=0) (audit_failure=0) (files_deleted=0) (stream_read_bytes=0) (stream_write_block_uploads_committed=0) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted.failures=0) (committer_load_single_pending_file=0) (op_is_directory.failures=0) (stream_write_queue_duration.failures=0) (op_createfile.failures=0) (op_hsync=0) (action_file_opened.failures=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (committer_bytes_uploaded=0) (object_continue_list_request=0) (committer_commits_reverted=0) (op_get_delegation_token.failures=0) (store_exists_probe=0) (multipart_upload_part_put=0) (directories_deleted=0) (op_xattr_get_named_map=0) (action_http_head_request.failures=0) (multipart_upload_part_put_bytes=0) (object_list_request.failures=0) (store_io_throttled=0) (stream_read_seek_bytes_discarded=0) (committer_jobs_completed=0) (stream_read_exceptions=0) (object_metadata_request=1) (object_multipart_aborted.failures=0) (op_xattr_list.failures=0) (op_xattr_get_named=0) (action_file_opened=1) (op_xattr_get_map=0) (object_continue_list_request.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=0) (committer_stage_file_upload=0) (stream_read_remote_stream_drain.failures=0) (op_delete.failures=0) (multipart_instantiated=0) (op_create=0) (files_created=0) (delegation_tokens_issued.failures=0) (committer_magic_files_created=0) (stream_read_seek_policy_changed=1) (op_is_file=0) (op_rename.failures=0) (object_put_request=0) (object_delete_objects=0) (op_exists.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (action_http_get_request=0) (object_list_request=0) (op_access.failures=0) (stream_read_vectored_combined_ranges=0) (op_copy_from_local_file=0) (op_get_content_summary=0) (committer_commits_completed=0) (stream_read_closed=0) (stream_read_remote_stream_drain=0) (fake_directories_deleted=0) (multipart_upload_aborted=0) (op_hflush=0) (object_put_request_completed=0) (action_http_head_request=1) (op_xattr_list=0) (stream_read_operations_incomplete=0) (object_select_requests=0) (stream_read_fully_operations=0) (op_createfile=0) (op_create_non_recursive=0) (committer_tasks_completed=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=0) (audit_span_creation=2) (op_openfile=0) (files_copied=0) (committer_stage_file_upload.failures=0) (op_get_file_status=0) (stream_write_bytes=0) (committer_commits.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (object_bulk_delete_request=0) (files_copied_bytes=0) (multipart_upload_list.failures=0) (store_io_retry=0) (op_exists=0) (committer_commit_job=0) (op_get_delegation_token=0) (stream_write_block_uploads_aborted=0) (stream_read_total_bytes=0) (store_io_request=1) (op_access=0));
gauges=((stream_write_block_uploads_pending=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.min=-1) (action_http_get_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_delegation_token.min=-1) (op_list_status.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.min=-1) (action_file_opened.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.failures.min=-1) (store_exists_probe.min=-1) (op_list_files.min=-1) (stream_write_queue_duration.min=-1) (op_rename.failures.min=-1) (multipart_upload_list.min=-1) (committer_commit_job.failures.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.min=-1) (op_get_content_summary.failures.min=-1) (op_glob_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_mkdirs.failures.min=-1) (op_delete.min=-1) (op_xattr_get_map.failures.min=-1) (action_file_opened.min=8) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (object_delete_request.min=-1) (op_rename.min=-1) (committer_materialize_file.failures.min=-1) (op_mkdirs.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_put_request.min=-1) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_bulk_delete_request.min=-1) (delegation_tokens_issued.failures.min=-1) (object_continue_list_request.min=-1) (object_multipart_initiated.failures.min=-1) (op_exists.min=-1) (action_http_get_request.min=-1) (op_xattr_list.failures.min=-1) (op_delete.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_list.min=-1) (object_list_request.failures.min=-1) (object_put_request.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_list_request.min=-1) (object_delete_request.failures.min=-1) (op_list_status.min=-1) (action_http_head_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_list_files.failures.min=-1) (op_create.min=-1) (op_abort.failures.min=-1) (op_createfile.min=-1) (action_http_head_request.min=7) (op_get_delegation_token.failures.min=-1) (op_get_file_status.min=-1) (op_glob_status.min=-1) (op_xattr_get_named.failures.min=-1) (op_create.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_access.min=-1) (stream_read_remote_stream_drain.min=-1) (op_xattr_get_named_map.min=-1) (op_is_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_map.min=-1) (op_access.failures.min=-1));
maximums=((op_get_content_summary.max=-1) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_head_request.max=7) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_checksum.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_aborted.max=-1) (object_list_request.max=-1) (object_multipart_initiated.max=-1) (op_get_file_checksum.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_status.max=-1) (op_glob_status.max=-1) (op_get_delegation_token.max=-1) (store_exists_probe.max=-1) (op_list_files.max=-1) (op_xattr_get_named_map.max=-1) (op_is_file.failures.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_xattr_list.max=-1) (action_http_get_request.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_file_status.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_rename.failures.max=-1) (op_get_delegation_token.failures.max=-1) (multipart_upload_list.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_mkdirs.max=-1) (committer_load_single_pending_file.max=-1) (op_rename.max=-1) (op_is_directory.failures.max=-1) (op_createfile.max=-1) (op_create.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_abort.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_put_request.max=-1) (object_bulk_delete_request.max=-1) (op_is_file.max=-1) (op_create.max=-1) (object_continue_list_request.failures.max=-1) (object_list_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_is_directory.max=-1) (object_delete_request.failures.max=-1) (delegation_tokens_issued.max=-1) (action_file_opened.max=8) (committer_materialize_file.max=-1) (op_copy_from_local_file.max=-1) (op_access.max=-1) (op_exists.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.max=-1) (committer_commit_job.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.failures.max=-1) (object_delete_request.max=-1) (action_file_opened.failures.max=-1) (op_abort.failures.max=-1) (op_access.failures.max=-1) (op_delete.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.max=-1));
means=((op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=7, mean=7.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:46,100 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:46,100 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,100 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:46,101 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016&t0=37&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=37&ts=1731777826100
2024-11-16 17:23:46,105 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,105 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,106 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016&t0=37&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=37&ts=1731777826100
2024-11-16 17:23:46,114 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:23:46,115 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:46,115 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:46,115 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:46,116 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:46,116 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:46,116 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:46,116 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:46,118 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:46,119 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:46,119 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:46,119 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:46,120 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:46,121 [s3a-transfer-leg-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:46,121 [s3a-transfer-leg-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,121 [s3a-transfer-leg-bucket-unbounded-pool2-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [40] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016&t0=37&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=40&ts=1731777826100
2024-11-16 17:23:46,130 [s3a-transfer-leg-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:23:46,131 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:23:46,131 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:46,131 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:46,131 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:46,132 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777826035; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:46,132 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:46,132 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:46,132 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:46,133 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:46,133 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:46,133 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:46,134 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:46,134 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:46,134 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:46,134 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:46,134 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:46,134 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:46,134 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016&t0=37&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=41&ts=1731777826100
2024-11-16 17:23:46,142 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:46,144 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:23:46,145 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:23:46,145 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:46,145 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:46,145 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:46,145 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:46,145 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:46,146 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:46,146 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000016&t0=37&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=41&ts=1731777826100
2024-11-16 17:23:46,157 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:23:46,158 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:23:46,158 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:23:46,159 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.026s
2024-11-16 17:23:46,160 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.026s
2024-11-16 17:23:46,160 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.042s
2024-11-16 17:23:46,160 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:46,160 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:46,162 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:46,175 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_list_status.failures=0) (multipart_upload_part_put_bytes=0) (op_list_status=0) (directories_deleted=0) (op_create_non_recursive=0) (op_xattr_get_named_map=0) (op_delete.failures=0) (files_delete_rejected=0) (op_xattr_get_named_map.failures=0) (op_get_file_checksum.failures=0) (stream_read_seek_operations=0) (op_rename.failures=0) (action_http_head_request.failures=0) (op_is_file=0) (files_deleted=2) (op_xattr_get_named=0) (op_copy_from_local_file=0) (committer_magic_marker_put=0) (stream_read_seek_bytes_skipped=0) (op_xattr_get_named.failures=0) (op_hsync=0) (action_http_head_request=4) (op_rename=0) (op_xattr_list=0) (op_abort=0) (object_delete_request.failures=0) (op_list_located_status=0) (object_bulk_delete_request=4) (stream_aborted=0) (stream_write_block_uploads=2) (action_file_opened.failures=0) (op_is_file.failures=0) (op_mkdirs=2) (stream_read_seek_bytes_discarded=0) (object_continue_list_request.failures=0) (stream_write_block_uploads_aborted=0) (fake_directories_deleted=2) (delegation_tokens_issued.failures=0) (op_createfile.failures=0) (committer_magic_marker_put.failures=0) (op_xattr_get_map.failures=0) (fake_directories_created=0) (audit_failure=0) (op_get_file_checksum=0) (op_hflush=0) (op_get_delegation_token.failures=0) (stream_write_total_data=262144) (stream_read_remote_stream_aborted=0) (multipart_instantiated=0) (stream_read_vectored_incoming_ranges=0) (multipart_upload_aborted=0) (committer_commits_aborted=0) (op_get_file_status.failures=0) (object_multipart_initiated.failures=0) (op_createfile=0) (stream_read_opened=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (stream_read_remote_stream_drain=0) (committer_commit_job.failures=0) (object_multipart_aborted.failures=0) (committer_stage_file_upload.failures=0) (directories_created=2) (object_put_bytes=131072) (object_put_request.failures=0) (committer_tasks_failed=0) (object_multipart_initiated=0) (files_copied_bytes=0) (op_delete=2) (object_select_requests=0) (store_exists_probe.failures=0) (stream_read_unbuffered=0) (action_file_opened=0) (committer_commit_job=0) (stream_read_operations=0) (committer_tasks_completed=0) (committer_commits_completed=0) (stream_read_total_bytes=0) (store_exists_probe=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_backward_operations=0) (op_abort.failures=0) (stream_read_closed=0) (object_metadata_request=4) (stream_read_bytes_discarded_in_abort=0) (object_put_request=4) (object_put_request_completed=4) (op_get_content_summary.failures=0) (audit_access_check_failure=0) (committer_materialize_file=0) (op_get_file_status=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=0) (op_openfile=0) (stream_read_seek_policy_changed=0) (op_glob_status.failures=0) (op_access=0) (multipart_upload_started=0) (stream_read_remote_stream_drain.failures=0) (object_list_request.failures=0) (object_continue_list_request=0) (op_is_directory=0) (op_exists.failures=0) (object_list_request=8) (action_http_get_request=0) (store_io_request=20) (object_delete_objects=4) (op_xattr_list.failures=0) (stream_read_vectored_operations=0) (op_get_delegation_token=0) (op_exists=0) (stream_write_queue_duration.failures=0) (op_copy_from_local_file.failures=0) (files_copied=0) (committer_commits.failures=0) (action_http_get_request.failures=0) (stream_read_fully_operations=0) (op_open=0) (op_create=2) (stream_read_seek_forward_operations=0) (committer_bytes_committed=0) (stream_write_exceptions_completing_upload=0) (committer_load_single_pending_file.failures=0) (store_io_retry=0) (stream_write_block_uploads_committed=0) (multipart_upload_list.failures=0) (stream_write_exceptions=0) (op_list_files=0) (stream_read_remote_stream_aborted.failures=0) (store_io_throttled=0) (files_created=2) (op_access.failures=0) (op_create.failures=0) (committer_materialize_file.failures=0) (committer_jobs_completed=0) (object_multipart_aborted=0) (stream_read_version_mismatches=0) (stream_read_vectored_combined_ranges=0) (stream_read_operations_incomplete=0) (op_xattr_get_map=0) (op_list_files.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_write_bytes=131072) (action_executor_acquired.failures=0) (multipart_upload_list=0) (stream_read_bytes_discarded_in_close=0) (committer_commits_created=0) (committer_stage_file_upload=0) (audit_request_execution=20) (delegation_tokens_issued=0) (committer_load_single_pending_file=0) (op_glob_status=0) (committer_jobs_failed=0) (stream_read_close_operations=0) (committer_magic_files_created=0) (op_get_content_summary=0) (multipart_upload_part_put=0) (ignored_errors=0) (committer_bytes_uploaded=0) (committer_commits_reverted=0) (op_mkdirs.failures=0) (object_copy_requests=0) (audit_span_creation=7) (op_is_directory.failures=0) (object_bulk_delete_request.failures=0) (object_delete_request=0) (multipart_upload_completed=0) (stream_read_exceptions=0));
gauges=((stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=2) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((object_delete_request.failures.min=-1) (op_list_files.min=-1) (op_create.failures.min=-1) (committer_commit_job.failures.min=-1) (delegation_tokens_issued.min=-1) (op_createfile.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.min=-1) (multipart_upload_list.min=-1) (action_http_head_request.failures.min=-1) (op_abort.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_rename.failures.min=-1) (op_xattr_get_map.min=-1) (op_is_directory.failures.min=-1) (op_access.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_is_file.failures.min=-1) (op_list_status.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_map.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_glob_status.failures.min=-1) (op_get_content_summary.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (op_mkdirs.failures.min=-1) (object_delete_request.min=-1) (object_continue_list_request.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_commit_job.min=-1) (object_bulk_delete_request.failures.min=-1) (object_put_request.min=29) (object_multipart_aborted.min=-1) (delegation_tokens_issued.failures.min=-1) (action_file_opened.min=-1) (action_http_head_request.min=5) (op_glob_status.min=-1) (store_exists_probe.failures.min=-1) (op_list_status.failures.min=-1) (op_is_directory.min=-1) (object_put_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_mkdirs.min=33) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (object_list_request.min=8) (store_exists_probe.min=-1) (op_delete.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.failures.min=-1) (committer_materialize_file.min=-1) (op_get_file_status.min=-1) (op_xattr_list.failures.min=-1) (action_http_get_request.min=-1) (op_rename.min=-1) (action_file_opened.failures.min=-1) (op_exists.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_access.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_file.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_status.failures.min=-1) (op_createfile.min=-1) (object_bulk_delete_request.min=8) (op_exists.failures.min=-1) (op_create.min=15) (op_copy_from_local_file.min=-1) (op_xattr_get_named.min=-1) (op_delete.min=44));
maximums=((op_is_file.failures.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_copy_from_local_file.max=-1) (action_http_get_request.max=-1) (delegation_tokens_issued.failures.max=-1) (op_abort.failures.max=-1) (committer_commit_job.failures.max=-1) (op_create.max=45) (op_list_status.max=-1) (op_mkdirs.max=263) (object_continue_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.failures.max=-1) (object_bulk_delete_request.max=12) (op_xattr_get_named.max=-1) (op_get_file_checksum.max=-1) (op_exists.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_list.max=-1) (action_http_get_request.failures.max=-1) (op_list_files.max=-1) (stream_write_queue_duration.failures.max=-1) (multipart_upload_list.max=-1) (delegation_tokens_issued.max=-1) (op_delete.failures.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (op_abort.max=-1) (object_delete_request.max=-1) (op_xattr_get_map.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_rename.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_file_status.max=-1) (op_get_delegation_token.max=-1) (committer_stage_file_upload.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_list.failures.max=-1) (action_executor_acquired.max=-1) (op_exists.failures.max=-1) (op_get_content_summary.max=-1) (committer_materialize_file.max=-1) (op_mkdirs.failures.max=-1) (committer_commit_job.max=-1) (object_list_request.max=167) (op_is_directory.max=-1) (op_is_directory.failures.max=-1) (op_createfile.max=-1) (object_multipart_aborted.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_rename.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_access.max=-1) (stream_write_queue_duration.max=-1) (object_put_request.max=71) (op_xattr_get_named.failures.max=-1) (store_exists_probe.max=-1) (multipart_upload_list.failures.max=-1) (op_access.failures.max=-1) (action_http_head_request.max=11) (object_continue_list_request.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_glob_status.failures.max=-1) (action_file_opened.max=-1) (object_multipart_initiated.max=-1) (op_glob_status.max=-1) (op_delete.max=58) (committer_load_single_pending_file.max=-1) (op_get_file_status.failures.max=-1) (op_create.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_http_head_request.failures.max=-1) (object_put_request.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=8, sum=234, mean=29.2500)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=4, sum=28, mean=7.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=2, sum=296, mean=148.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=4, sum=153, mean=38.2500)) (object_bulk_delete_request.mean=(samples=4, sum=40, mean=10.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=2, sum=102, mean=51.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=2, sum=60, mean=30.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:46,176 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:46,177 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:46,177 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,177 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,177 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,178 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000017 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000017&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=42&ts=1731777826176
2024-11-16 17:23:46,186 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:23:46,187 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:46,187 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:46,188 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,188 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:46,189 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000017 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000017&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=42&ts=1731777826176
2024-11-16 17:23:46,194 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:46,194 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:46,195 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:46,195 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:46,196 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000017 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000017&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=42&ts=1731777826176
2024-11-16 17:23:46,219 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:46,219 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:46,219 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.025s
2024-11-16 17:23:46,219 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:46,220 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:46,220 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,220 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,221 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,221 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000018 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000018&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=42&ts=1731777826220
2024-11-16 17:23:46,231 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:23:46,232 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,232 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:46,233 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15402248406668484267.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:46,236 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15402248406668484267.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_total_data=0) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (object_put_request.failures=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (op_hsync=0) (stream_write_block_uploads=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (op_abort=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15402248406668484267.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,236 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:46,237 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:46,237 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15402248406668484267.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:46,249 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:46,251 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:46,252 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:46,252 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:46,252 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000018 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000018&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=43&ts=1731777826220
2024-11-16 17:23:46,280 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:46,280 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:46,281 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.030s
2024-11-16 17:23:46,282 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15402248406668484267.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:46,282 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15402248406668484267.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,282 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15402248406668484267.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,282 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:46,283 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:46,284 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (op_abort=0) (object_put_request.failures=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (op_abort.failures=0) (multipart_upload_completed=0) (op_hflush=0) (op_hsync=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (object_put_request=1) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=28) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=28) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=28, mean=28.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:46,285 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:46,287 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:46,288 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,288 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:46,289 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000019 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000019/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000019&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=42&ts=1731777826287
2024-11-16 17:23:46,293 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:46,294 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:46,294 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:46,294 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:46,296 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:46,297 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:46,297 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:46,297 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,302 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:23:46,304 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,304 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_incoming_ranges=2) (stream_read_prefetch_operations.failures=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes=0) (stream_read_opened=0) (action_executor_acquired=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read=0) (stream_read_operations=0) (stream_read_close_operations=1) (stream_read_seek_policy_changed=1) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_prefetch_operations=0) (stream_read_block_read.failures=0) (stream_read_vectored_operations=1) (stream_read_exceptions=0) (stream_read_unbuffered=0) (stream_read_closed=0) (stream_read_total_bytes=0) (action_file_opened=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_skipped=0) (stream_aborted=0) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=6) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=6) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:46,310 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:46,310 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,310 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:46,310 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000020 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000020&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=42&ts=1731777826309
2024-11-16 17:23:46,315 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:46,315 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:46,315 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:46,315 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:46,315 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:46,315 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:46,317 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:46,318 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,319 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:46,320 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:46,320 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000020 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000020&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=45&ts=1731777826309
2024-11-16 17:23:46,335 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:23:46,336 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:46,337 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,338 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (stream_read_operations_incomplete=0) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_bytes=150) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=10) (stream_read_fully_operations=0) (stream_aborted=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations=0) (stream_read_block_read=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=1) (stream_read_seek_backward_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_incoming_ranges=2) (stream_read_closed=0) (stream_read_opened=0) (stream_read_version_mismatches=0) (stream_read_unbuffered=0) (action_executor_acquired.failures=0) (stream_read_total_bytes=150) (stream_read_vectored_operations=1) (stream_read_exceptions=0) (action_http_get_request=1));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_http_get_request.min=16) (action_file_opened.min=5) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=16) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=5) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=16, mean=16.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:46,341 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:46,341 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,341 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:46,342 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=42&ts=1731777826340
2024-11-16 17:23:46,346 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,347 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,347 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=42&ts=1731777826340
2024-11-16 17:23:46,357 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:23:46,358 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:46,358 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:46,359 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:46,359 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:46,360 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:46,360 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:46,361 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:46,361 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:46,362 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:46,362 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:46,363 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:46,364 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:46,364 [s3a-transfer-leg-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:46,365 [s3a-transfer-leg-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,365 [s3a-transfer-leg-bucket-unbounded-pool2-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [46] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=46&ts=1731777826340
2024-11-16 17:23:46,372 [s3a-transfer-leg-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:46,373 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:23:46,374 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:46,374 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:46,375 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:46,375 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777826277; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:46,375 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:46,375 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:46,375 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:46,376 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:46,377 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:46,378 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:46,378 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:46,378 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:46,378 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:46,378 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:46,378 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:46,379 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:46,379 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=47&ts=1731777826340
2024-11-16 17:23:46,390 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:23:46,390 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:23:46,391 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:23:46,391 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:46,391 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:46,391 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:46,391 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:46,392 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:46,392 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:46,392 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000021&t0=42&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=47&ts=1731777826340
2024-11-16 17:23:46,401 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:46,401 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:23:46,401 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:23:46,402 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.024s
2024-11-16 17:23:46,402 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:23:46,402 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.041s
2024-11-16 17:23:46,402 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:46,402 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:46,406 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:46,425 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((files_created=3) (committer_tasks_completed=0) (op_exists=0) (op_hsync=0) (object_delete_request.failures=0) (committer_magic_files_created=0) (object_delete_objects=6) (delegation_tokens_issued=0) (stream_read_unbuffered=0) (committer_commit_job=0) (stream_read_vectored_incoming_ranges=4) (op_abort=0) (op_delete=3) (stream_read_remote_stream_aborted=0) (audit_span_creation=12) (stream_read_version_mismatches=0) (op_glob_status=0) (action_http_get_request.failures=0) (op_list_located_status=0) (stream_write_queue_duration.failures=0) (directories_deleted=0) (audit_failure=0) (stream_read_fully_operations=0) (committer_magic_marker_put=0) (stream_read_vectored_combined_ranges=2) (audit_request_execution=33) (stream_read_seek_operations=0) (multipart_instantiated=0) (object_multipart_aborted=0) (op_xattr_get_named=0) (op_createfile=0) (stream_write_queue_duration=0) (stream_write_block_uploads_committed=0) (op_copy_from_local_file.failures=0) (object_put_request.failures=0) (action_file_opened.failures=0) (multipart_upload_abort_under_path_invoked=0) (store_io_retry=0) (op_open=2) (committer_materialize_file=0) (op_get_file_status.failures=0) (op_abort.failures=0) (committer_commits.failures=0) (op_is_directory=0) (committer_commits_reverted=0) (object_multipart_initiated.failures=0) (op_list_status=0) (committer_stage_file_upload.failures=0) (multipart_upload_aborted=0) (op_rename=0) (action_executor_acquired.failures=0) (action_http_head_request=8) (stream_write_block_uploads=3) (op_access=0) (op_get_file_status=0) (stream_read_operations_incomplete=0) (stream_write_exceptions=0) (store_io_throttled=0) (op_copy_from_local_file=0) (op_create_non_recursive=0) (stream_read_close_operations=2) (files_delete_rejected=0) (object_continue_list_request.failures=0) (committer_commits_aborted=0) (committer_stage_file_upload=0) (committer_jobs_completed=0) (op_is_file.failures=0) (action_executor_acquired=0) (stream_read_vectored_operations=2) (committer_commit_job.failures=0) (action_http_head_request.failures=0) (stream_write_total_data=393216) (op_get_delegation_token.failures=0) (files_deleted=3) (committer_tasks_failed=0) (action_http_get_request=1) (op_delete.failures=0) (op_is_file=0) (op_get_delegation_token=0) (committer_bytes_uploaded=0) (stream_read_remote_stream_drain=0) (op_xattr_get_named_map.failures=0) (committer_jobs_failed=0) (op_get_content_summary.failures=0) (stream_read_seek_bytes_discarded=0) (committer_bytes_committed=0) (op_xattr_list.failures=0) (object_metadata_request=8) (op_create.failures=0) (multipart_upload_completed=0) (op_xattr_get_map=0) (fake_directories_created=0) (files_copied_bytes=0) (stream_read_seek_forward_operations=0) (op_glob_status.failures=0) (object_bulk_delete_request.failures=0) (stream_read_remote_stream_drain.failures=0) (delegation_tokens_issued.failures=0) (committer_materialize_file.failures=0) (object_put_request_completed=6) (stream_read_bytes=150) (stream_write_total_time=0) (op_get_file_checksum.failures=0) (op_hflush=0) (stream_read_seek_policy_changed=2) (object_continue_list_request=0) (op_create=3) (op_xattr_get_named_map=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=10) (object_list_request.failures=0) (multipart_upload_list.failures=0) (op_mkdirs.failures=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_abort=0) (fake_directories_deleted=3) (op_rename.failures=0) (committer_load_single_pending_file.failures=0) (op_access.failures=0) (committer_commits_created=0) (op_is_directory.failures=0) (multipart_upload_list=0) (stream_aborted=0) (object_list_request=12) (audit_access_check_failure=0) (action_file_opened=2) (object_select_requests=0) (store_exists_probe=0) (committer_magic_marker_put.failures=0) (directories_created=3) (stream_read_closed=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_part_put_bytes=0) (op_list_files.failures=0) (op_createfile.failures=0) (op_mkdirs=3) (stream_read_total_bytes=150) (op_openfile=0) (op_list_files=0) (stream_write_bytes=196608) (object_bulk_delete_request=6) (stream_read_opened=0) (object_put_request=6) (op_xattr_get_named.failures=0) (object_multipart_aborted.failures=0) (object_copy_requests=0) (files_copied=0) (op_get_file_checksum=0) (ignored_errors=0) (op_xattr_get_map.failures=0) (stream_write_block_uploads_aborted=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (op_list_status.failures=0) (op_exists.failures=0) (stream_read_operations=0) (op_get_content_summary=0) (object_multipart_initiated=0) (object_put_bytes=196608) (committer_load_single_pending_file=0) (committer_commits_completed=0) (object_delete_request=0) (store_io_request=33) (op_xattr_list=0) (store_exists_probe.failures=0) (multipart_upload_started=0) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=3) (object_put_request_active=0));
minimums=((op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_list.failures.min=-1) (store_exists_probe.failures.min=-1) (object_list_request.min=7) (object_put_request.min=28) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_drain.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_create.min=14) (op_get_content_summary.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.min=-1) (op_create.failures.min=-1) (multipart_upload_list.min=-1) (action_http_get_request.min=16) (object_bulk_delete_request.min=8) (committer_commit_job.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_list.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_file.failures.min=-1) (object_delete_request.min=-1) (op_list_files.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_delegation_token.min=-1) (op_createfile.min=-1) (op_is_file.min=-1) (op_get_file_checksum.failures.min=-1) (committer_materialize_file.min=-1) (multipart_upload_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_stage_file_upload.min=-1) (op_rename.min=-1) (op_get_file_checksum.min=-1) (op_abort.failures.min=-1) (op_exists.min=-1) (op_xattr_get_map.min=-1) (op_glob_status.failures.min=-1) (store_exists_probe.min=-1) (action_file_opened.min=5) (action_http_head_request.failures.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_access.min=-1) (op_get_delegation_token.failures.min=-1) (op_copy_from_local_file.min=-1) (action_http_head_request.min=5) (op_list_status.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (op_rename.failures.min=-1) (op_xattr_get_named_map.min=-1) (delegation_tokens_issued.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_directory.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.failures.min=-1) (op_glob_status.min=-1) (op_get_file_status.min=-1) (op_exists.failures.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.failures.min=-1) (object_delete_request.failures.min=-1) (op_list_files.failures.min=-1) (op_delete.min=42) (object_continue_list_request.min=-1) (op_createfile.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_commit_job.min=-1) (op_get_file_status.failures.min=-1) (op_mkdirs.min=33) (stream_write_queue_duration.min=-1));
maximums=((committer_materialize_file.max=-1) (action_file_opened.max=6) (op_mkdirs.failures.max=-1) (op_mkdirs.max=263) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.max=12) (object_bulk_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_list_request.failures.max=-1) (op_is_directory.max=-1) (op_abort.max=-1) (op_xattr_get_map.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_create.failures.max=-1) (op_list_status.failures.max=-1) (object_delete_request.failures.max=-1) (op_createfile.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.max=-1) (op_createfile.failures.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=16) (multipart_upload_list.max=-1) (op_get_delegation_token.max=-1) (op_xattr_list.failures.max=-1) (action_http_head_request.failures.max=-1) (op_list_files.failures.max=-1) (op_list_status.max=-1) (op_xattr_get_map.max=-1) (op_abort.failures.max=-1) (op_access.failures.max=-1) (op_is_file.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_directory.failures.max=-1) (object_continue_list_request.max=-1) (action_http_get_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_http_head_request.max=11) (stream_read_remote_stream_aborted.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_glob_status.max=-1) (object_multipart_initiated.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_executor_acquired.max=-1) (op_get_file_status.failures.max=-1) (op_rename.max=-1) (object_multipart_initiated.max=-1) (action_file_opened.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.max=45) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_continue_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_exists.max=-1) (object_put_request.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_aborted.max=-1) (op_delete.max=58) (op_exists.failures.max=-1) (action_executor_acquired.failures.max=-1) (store_exists_probe.max=-1) (op_is_file.failures.max=-1) (op_get_file_checksum.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_list.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named.failures.max=-1) (store_exists_probe.failures.max=-1) (object_list_request.max=167) (op_get_content_summary.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_put_request.max=71) (op_access.max=-1) (op_delete.failures.max=-1) (op_get_file_status.max=-1) (committer_stage_file_upload.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=12, sum=269, mean=22.4167)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=6, sum=204, mean=34.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=11, mean=5.5000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=16, mean=16.0000)) (op_create.mean=(samples=3, sum=74, mean=24.6667)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=6, sum=60, mean=10.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=3, sum=144, mean=48.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=3, sum=339, mean=113.0000)) (action_http_head_request.mean=(samples=8, sum=49, mean=6.1250)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:46,425 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:46,426 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:46,426 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,426 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,426 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,427 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000022 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000022&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=48&ts=1731777826425
2024-11-16 17:23:46,438 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:23:46,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:46,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:46,439 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,439 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:46,439 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000022 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000022&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=48&ts=1731777826425
2024-11-16 17:23:46,443 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:46,444 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:46,444 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:46,444 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:46,444 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000022 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000022&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=48&ts=1731777826425
2024-11-16 17:23:46,459 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:46,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:46,460 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:23:46,461 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:46,462 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:46,462 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,462 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,463 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,463 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000023 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000023&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=48&ts=1731777826461
2024-11-16 17:23:46,473 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:23:46,473 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,474 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:46,475 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582465426942434097.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:46,478 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582465426942434097.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (stream_write_total_time=0) (op_hsync=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (stream_write_total_data=0) (op_abort.failures=0) (op_abort=0) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (object_put_request=0) (action_executor_acquired=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582465426942434097.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,478 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:46,479 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:46,479 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582465426942434097.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:46,480 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:46,481 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:46,481 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:46,482 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:46,483 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [49] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000023 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000023&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=49&ts=1731777826461
2024-11-16 17:23:46,511 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:46,512 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:46,513 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.031s
2024-11-16 17:23:46,513 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582465426942434097.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:46,514 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582465426942434097.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,514 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582465426942434097.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,514 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:46,515 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:46,517 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (op_abort=0) (object_put_request=1) (object_multipart_aborted.failures=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (op_hsync=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (op_hflush=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=29) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((object_put_request.max=29) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=29, mean=29.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:46,518 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:46,519 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:46,520 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,520 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:46,520 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000024 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000024&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=48&ts=1731777826519
2024-11-16 17:23:46,530 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:46,530 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:46,531 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:46,531 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:46,532 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:46,532 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:46,542 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:46,545 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((action_executor_acquired.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_operations=0) (stream_read_fully_operations=0) (stream_read_block_acquire_read=0) (action_file_opened=1) (stream_read_block_read.failures=0) (stream_read_operations=0) (action_http_get_request.failures=0) (stream_read_total_bytes=0) (stream_read_seek_backward_operations=0) (action_executor_acquired=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (stream_read_bytes=0) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_combined_ranges=1) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_close_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=1) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=0) (stream_read_vectored_incoming_ranges=2) (stream_read_remote_stream_aborted.failures=0) (stream_read_prefetch_operations=0) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_opened=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_read_closed=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_operations=1));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=11) (action_http_get_request.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=11) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=11, mean=11.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:46,546 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:23:46,547 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,547 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:23:46,548 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,549 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:46,549 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,550 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:46,550 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:46,551 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:46,552 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,552 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:46,553 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:46,554 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000024 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000024&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=51&ts=1731777826519
2024-11-16 17:23:46,575 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:23:46,576 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:46,577 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,577 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (action_file_opened.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=2) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=2) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_closed=0) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_unbuffered=1) (stream_aborted=0) (stream_read_block_read.failures=0) (action_executor_acquired=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request.failures=0) (stream_read_bytes=150) (stream_read_block_read=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=4) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (action_http_get_request=1) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1) (stream_read_fully_operations=0) (stream_read_seek_policy_changed=2) (stream_read_remote_stream_drain=0) (stream_read_vectored_read_bytes_discarded=10) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_total_bytes=150) (stream_read_opened=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=1) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=11) (action_http_get_request.min=23) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=11) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=23) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=11, mean=11.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=23, mean=23.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:46,580 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:46,580 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,580 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:46,580 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=48&ts=1731777826579
2024-11-16 17:23:46,585 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,586 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,586 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=48&ts=1731777826579
2024-11-16 17:23:46,600 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:23:46,600 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:46,601 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:46,601 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:46,602 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:46,602 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:46,603 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:46,603 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:46,604 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:46,604 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:46,605 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:46,605 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:46,610 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:46,612 [s3a-transfer-leg-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:46,613 [s3a-transfer-leg-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,614 [s3a-transfer-leg-bucket-unbounded-pool2-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [52] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=52&ts=1731777826579
2024-11-16 17:23:46,628 [s3a-transfer-leg-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:23:46,628 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.018s
2024-11-16 17:23:46,629 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:46,629 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:46,629 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:46,630 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777826508; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:46,630 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:46,630 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:46,630 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:46,631 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:46,632 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:46,632 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:46,633 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:46,633 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:46,633 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:46,633 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:46,633 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:46,634 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:46,634 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=53&ts=1731777826579
2024-11-16 17:23:46,643 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:46,643 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:23:46,643 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:23:46,644 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:46,644 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:46,644 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:46,644 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:46,644 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:46,644 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:46,644 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000025&t0=48&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=53&ts=1731777826579
2024-11-16 17:23:46,653 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:46,654 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:23:46,654 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:23:46,655 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:23:46,655 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:23:46,656 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.052s
2024-11-16 17:23:46,656 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:46,656 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:46,659 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:46,678 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 4], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_io_throttled=0) (delegation_tokens_issued.failures=0) (stream_read_bytes=300) (op_delete.failures=0) (store_exists_probe.failures=0) (op_access=0) (op_list_status=0) (multipart_upload_started=0) (stream_write_total_time=0) (op_list_status.failures=0) (stream_read_remote_stream_drain=0) (op_exists=0) (op_get_delegation_token.failures=0) (stream_write_bytes=262144) (multipart_upload_completed=0) (committer_commits_aborted=0) (stream_write_block_uploads_committed=0) (op_is_directory=0) (action_file_opened=3) (object_list_request.failures=0) (ignored_errors=0) (op_is_file=0) (object_delete_request.failures=0) (op_xattr_get_map.failures=0) (op_xattr_get_named.failures=0) (op_hflush=0) (stream_read_seek_policy_changed=4) (committer_jobs_completed=0) (multipart_upload_list=0) (audit_failure=0) (stream_write_block_uploads=4) (committer_jobs_failed=0) (stream_write_exceptions=0) (op_createfile.failures=0) (object_multipart_initiated.failures=0) (committer_stage_file_upload.failures=0) (committer_magic_marker_put.failures=0) (object_list_request=16) (committer_magic_files_created=0) (object_put_request_completed=8) (op_createfile=0) (op_xattr_get_named=0) (multipart_upload_aborted=0) (stream_read_opened=0) (committer_load_single_pending_file.failures=0) (op_create_non_recursive=0) (stream_read_vectored_combined_ranges=4) (op_xattr_get_named_map=0) (object_bulk_delete_request.failures=0) (stream_aborted=0) (delegation_tokens_issued=0) (stream_read_fully_operations=0) (audit_span_creation=16) (op_list_located_status=0) (action_http_head_request=11) (committer_load_single_pending_file=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_map=0) (op_is_file.failures=0) (action_executor_acquired=0) (files_delete_rejected=0) (stream_read_operations=0) (stream_read_seek_forward_operations=0) (op_create=4) (audit_request_execution=45) (op_open=3) (action_http_get_request.failures=0) (op_mkdirs.failures=0) (op_abort=0) (op_xattr_list.failures=0) (committer_bytes_uploaded=0) (op_openfile=0) (stream_write_block_uploads_aborted=0) (action_http_get_request=2) (op_xattr_get_named_map.failures=0) (stream_read_close_operations=3) (object_put_request=8) (committer_tasks_failed=0) (committer_tasks_completed=0) (object_multipart_aborted=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (op_rename=0) (op_copy_from_local_file.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_write_queue_duration.failures=0) (audit_access_check_failure=0) (action_file_opened.failures=0) (object_copy_requests=0) (directories_deleted=0) (stream_read_unbuffered=1) (stream_read_seek_bytes_discarded=0) (op_delete=4) (object_bulk_delete_request=8) (files_copied=0) (stream_read_vectored_operations=4) (op_is_directory.failures=0) (committer_commits_created=0) (multipart_upload_abort_under_path_invoked=0) (committer_commit_job=0) (stream_read_operations_incomplete=0) (committer_magic_marker_put=0) (committer_commits_reverted=0) (op_get_file_status=0) (object_metadata_request=11) (op_access.failures=0) (object_continue_list_request.failures=0) (committer_stage_file_upload=0) (multipart_upload_part_put_bytes=0) (directories_created=4) (stream_read_bytes_discarded_in_abort=0) (op_glob_status=0) (op_create.failures=0) (store_io_request=45) (committer_commits_completed=0) (op_abort.failures=0) (op_xattr_list=0) (committer_materialize_file=0) (multipart_upload_part_put=0) (stream_read_seek_bytes_skipped=0) (op_get_content_summary.failures=0) (store_io_retry=0) (op_glob_status.failures=0) (files_deleted=4) (stream_read_total_bytes=300) (stream_read_version_mismatches=0) (fake_directories_deleted=4) (op_get_file_checksum.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_discarded_in_close=0) (object_multipart_initiated=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=20) (op_get_file_status.failures=0) (op_get_file_checksum=0) (stream_read_exceptions=0) (object_delete_request=0) (files_copied_bytes=0) (stream_write_queue_duration=0) (object_put_bytes=262144) (op_exists.failures=0) (object_select_requests=0) (committer_commits.failures=0) (action_executor_acquired.failures=0) (op_list_files.failures=0) (op_get_delegation_token=0) (store_exists_probe=0) (committer_bytes_committed=0) (multipart_instantiated=0) (stream_read_closed=0) (fake_directories_created=0) (files_created=4) (op_rename.failures=0) (multipart_upload_list.failures=0) (object_delete_objects=8) (stream_read_seek_operations=0) (action_http_head_request.failures=0) (op_hsync=0) (op_get_content_summary=0) (committer_materialize_file.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_incoming_ranges=8) (op_mkdirs=4) (object_continue_list_request=0) (op_copy_from_local_file=0) (committer_commit_job.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_list_files=0) (stream_write_total_data=524288));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=4) (client_side_encryption_enabled=0));
minimums=((op_glob_status.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_directory.min=-1) (op_get_file_status.min=-1) (object_put_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_directory.failures.min=-1) (op_is_file.failures.min=-1) (op_rename.failures.min=-1) (op_abort.min=-1) (committer_materialize_file.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_createfile.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_file.min=-1) (stream_write_queue_duration.min=-1) (op_exists.failures.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.min=-1) (store_exists_probe.min=-1) (committer_load_single_pending_file.min=-1) (op_mkdirs.min=33) (committer_magic_marker_put.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_put_request.min=29) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_rename.min=-1) (action_file_opened.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.min=8) (delegation_tokens_issued.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named.min=-1) (op_delete.min=42) (op_access.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.min=-1) (stream_read_remote_stream_drain.min=-1) (object_multipart_aborted.min=-1) (op_list_files.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_files.failures.min=-1) (op_access.failures.min=-1) (op_delete.failures.min=-1) (action_http_get_request.min=23) (op_get_file_checksum.failures.min=-1) (committer_commit_job.failures.min=-1) (object_continue_list_request.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_checksum.min=-1) (action_file_opened.min=11) (object_list_request.min=7) (op_glob_status.failures.min=-1) (committer_commit_job.min=-1) (committer_load_single_pending_file.failures.min=-1) (delegation_tokens_issued.min=-1) (action_executor_acquired.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_map.min=-1) (object_delete_request.min=-1) (action_executor_acquired.failures.min=-1) (op_create.failures.min=-1) (multipart_upload_list.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_head_request.min=4) (object_delete_request.failures.min=-1) (op_exists.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_create.min=14));
maximums=((op_get_content_summary.max=-1) (op_is_directory.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.max=-1) (store_exists_probe.failures.max=-1) (op_access.max=-1) (action_http_get_request.max=23) (object_continue_list_request.max=-1) (stream_write_queue_duration.failures.max=-1) (action_executor_acquired.max=-1) (op_delete.failures.max=-1) (op_glob_status.max=-1) (object_bulk_delete_request.max=12) (committer_load_single_pending_file.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.max=-1) (op_list_status.failures.max=-1) (object_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_commit_job.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.max=-1) (committer_magic_marker_put.max=-1) (op_copy_from_local_file.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_list.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_createfile.max=-1) (op_abort.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_status.failures.max=-1) (op_glob_status.failures.max=-1) (op_exists.failures.max=-1) (action_file_opened.max=11) (op_xattr_get_named_map.max=-1) (op_is_file.failures.max=-1) (object_put_request.max=71) (op_delete.max=58) (object_multipart_aborted.failures.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_materialize_file.max=-1) (op_access.failures.max=-1) (op_create.failures.max=-1) (committer_commit_job.failures.max=-1) (op_mkdirs.max=263) (op_exists.max=-1) (op_get_file_status.max=-1) (op_get_file_checksum.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_head_request.max=11) (object_delete_request.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_delegation_token.max=-1) (object_bulk_delete_request.failures.max=-1) (op_create.max=45) (object_list_request.max=167) (op_is_file.max=-1) (delegation_tokens_issued.max=-1) (object_put_request.failures.max=-1) (op_rename.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_createfile.failures.max=-1) (op_rename.max=-1));
means=((committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=8, sum=248, mean=31.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=4, sum=375, mean=93.7500)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=4, sum=198, mean=49.5000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=11, sum=68, mean=6.1818)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=39, mean=19.5000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=8, sum=78, mean=9.7500)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=4, sum=88, mean=22.0000)) (object_list_request.mean=(samples=16, sum=319, mean=19.9375)) (action_file_opened.mean=(samples=3, sum=22, mean=7.3333)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:46,679 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:46,679 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:46,679 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,679 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,679 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,680 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000026 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000026&t0=54&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=54&ts=1731777826679
2024-11-16 17:23:46,687 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:46,687 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:46,687 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:46,688 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,688 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:46,688 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000026 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000026&t0=54&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=54&ts=1731777826679
2024-11-16 17:23:46,691 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:46,692 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:46,692 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:46,692 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:46,692 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000026 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000026&t0=54&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=54&ts=1731777826679
2024-11-16 17:23:46,703 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:46,703 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:46,703 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:23:46,703 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:46,704 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:46,704 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,705 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,705 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,705 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000027 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000027&t0=54&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=54&ts=1731777826704
2024-11-16 17:23:46,712 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:46,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,713 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:46,714 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15568301062507248075.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:46,715 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15568301062507248075.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (object_multipart_initiated=0) (op_abort.failures=0) (op_hsync=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (op_hflush=0) (stream_write_total_data=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (op_abort=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15568301062507248075.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,716 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:46,716 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:46,716 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15568301062507248075.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:46,725 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:46,726 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:46,726 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:46,726 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:46,727 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [55] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000027 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000027&t0=54&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=55&ts=1731777826704
2024-11-16 17:23:46,755 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:46,755 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:46,755 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.029s
2024-11-16 17:23:46,756 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15568301062507248075.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:46,756 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15568301062507248075.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,756 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15568301062507248075.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:46,756 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:46,757 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:46,758 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put=0) (stream_write_bytes=65536) (object_put_request.failures=0) (op_hsync=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (object_put_request=1) (committer_magic_marker_put=0) (op_abort.failures=0) (action_executor_acquired=0) (object_multipart_initiated=0) (stream_write_total_data=65536) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (stream_write_total_time=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (op_abort=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=27) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=27) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:46,759 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:46,759 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:23:46,760 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:23:46,763 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:46,765 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:46,770 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:23:46,772 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:23:46,772 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:23:46,773 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:23:46,773 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:23:46,774 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:23:46,774 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:23:46,775 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:23:46,776 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:23:46,776 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:23:46,777 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='e0480695-7738-4031-b89e-78aacf9d9c20', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:46,778 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='e0480695-7738-4031-b89e-78aacf9d9c20', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:46,778 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='e0480695-7738-4031-b89e-78aacf9d9c20', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:23:46,779 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:23:46,779 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:23:46,780 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:23:46,781 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:23:46,782 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:23:46,782 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:23:46,783 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4e324197]
2024-11-16 17:23:46,783 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4e324197]
2024-11-16 17:23:46,784 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:23:46,784 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:23:46,785 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:23:46,785 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:23:46,786 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:23:46,786 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:23:46,787 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:23:46,787 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:46,788 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:23:46,788 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:23:46,788 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:23:46,789 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:23:46,792 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:23:46,793 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:23:46,793 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:23:46,793 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:23:46,794 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:23:46,794 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:23:46,795 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:23:46,795 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:23:46,796 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:23:46,796 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:23:46,797 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:23:46,797 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:23:46,798 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:23:46,798 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:23:46,799 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:23:46,799 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:23:46,800 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:46,801 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:46,801 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:46,802 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] e0480695-7738-4031-b89e-78aacf9d9c20-00000030 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/e0480695-7738-4031-b89e-78aacf9d9c20-00000030/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=e0480695-7738-4031-b89e-78aacf9d9c20-00000030&t0=54&fs=e0480695-7738-4031-b89e-78aacf9d9c20&t1=54&ts=1731777826800
2024-11-16 17:23:46,803 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:23:46,806 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.003s
2024-11-16 17:23:46,806 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:23:46,807 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:23:46,815 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:46,817 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777826000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:23:46,821 [s3a-transfer-leg-bucket-unbounded-pool9-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:46,821 [s3a-transfer-leg-bucket-unbounded-pool9-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:46,822 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:23:46,822 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:46,823 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:46,828 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:23:46,829 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,829 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:46,829 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:46,830 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [58] e0480695-7738-4031-b89e-78aacf9d9c20-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/e0480695-7738-4031-b89e-78aacf9d9c20-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=100-1099&id=e0480695-7738-4031-b89e-78aacf9d9c20-00000031&t0=57&fs=e0480695-7738-4031-b89e-78aacf9d9c20&t1=58&ts=1731777826821
2024-11-16 17:23:46,829 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:23:46,831 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:46,831 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:46,834 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:23:46,834 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,835 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:46,835 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:46,835 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [60] e0480695-7738-4031-b89e-78aacf9d9c20-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/e0480695-7738-4031-b89e-78aacf9d9c20-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=100-1099&id=e0480695-7738-4031-b89e-78aacf9d9c20-00000031&t0=57&fs=e0480695-7738-4031-b89e-78aacf9d9c20&t1=60&ts=1731777826821
2024-11-16 17:23:46,855 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.026s
2024-11-16 17:23:46,856 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,857 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:23:46,858 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:46,868 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_aborted=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations=0) (stream_read_remote_stream_drain=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_block_read.failures=0) (action_http_get_request.failures=0) (stream_read_vectored_incoming_ranges=4) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_unbuffered=0) (stream_read_vectored_operations=2) (stream_read_block_read=0) (stream_read_seek_operations=0) (stream_read_total_bytes=2000) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_bytes=2000) (stream_read_operations_incomplete=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_close=0) (action_http_get_request=2) (stream_read_vectored_combined_ranges=2));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=23) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (action_file_opened.max=0) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=27) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=50, mean=25.0000)));

2024-11-16 17:23:46,874 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:23:46,877 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:23:46,877 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:46,878 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@46b9ee43[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:23:46,878 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:46,879 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics4-leg-bucket
2024-11-16 17:23:46,879 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:23:46,880 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4e324197] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:46,880 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4e324197] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:46,883 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((object_delete_request=0) (stream_write_queue_duration.failures=0) (stream_read_vectored_combined_ranges=2) (op_list_status=0) (files_copied_bytes=0) (committer_bytes_uploaded=0) (directories_deleted=0) (fake_directories_created=0) (object_delete_request.failures=0) (stream_read_total_bytes=2000) (op_get_content_summary.failures=0) (op_hsync=0) (directories_created=0) (op_xattr_get_named_map.failures=0) (committer_materialize_file=0) (op_is_file=0) (object_put_request_completed=0) (stream_read_vectored_operations=2) (object_metadata_request=1) (stream_read_remote_stream_aborted=0) (committer_stage_file_upload=0) (object_multipart_aborted=0) (stream_read_exceptions=0) (stream_write_exceptions=0) (op_xattr_get_map.failures=0) (stream_write_exceptions_completing_upload=0) (op_delete.failures=0) (action_executor_acquired.failures=0) (op_get_file_checksum=0) (stream_read_vectored_read_bytes_discarded=0) (object_put_bytes=0) (op_is_file.failures=0) (op_is_directory.failures=0) (audit_request_execution=3) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_close=0) (committer_magic_marker_put.failures=0) (stream_read_bytes=2000) (committer_commit_job.failures=0) (committer_bytes_committed=0) (stream_read_seek_forward_operations=0) (delegation_tokens_issued.failures=0) (audit_failure=0) (committer_jobs_failed=0) (stream_aborted=0) (stream_read_close_operations=1) (committer_load_single_pending_file.failures=0) (op_list_status.failures=0) (committer_stage_file_upload.failures=0) (op_openfile=0) (op_get_delegation_token=0) (op_createfile.failures=0) (stream_read_seek_operations=0) (stream_write_block_uploads_aborted=0) (op_abort=0) (audit_access_check_failure=0) (committer_commits.failures=0) (stream_read_closed=0) (object_continue_list_request.failures=0) (op_xattr_get_named.failures=0) (op_list_located_status=0) (op_xattr_list=0) (object_list_request=0) (object_bulk_delete_request.failures=0) (object_put_request.failures=0) (object_bulk_delete_request=0) (stream_read_operations_incomplete=0) (op_exists=0) (op_xattr_get_named_map=0) (action_http_head_request.failures=0) (multipart_upload_list=0) (store_exists_probe.failures=0) (object_continue_list_request=0) (committer_commits_completed=0) (op_exists.failures=0) (multipart_upload_part_put=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_opened=0) (op_access=0) (object_delete_objects=0) (store_exists_probe=0) (action_http_get_request=2) (object_put_request=0) (op_mkdirs=0) (committer_magic_marker_put=0) (store_io_retry=0) (op_delete=0) (multipart_upload_started=0) (op_xattr_get_map=0) (op_createfile=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (stream_write_block_uploads=0) (op_xattr_get_named=0) (multipart_upload_aborted=0) (stream_read_seek_bytes_skipped=0) (committer_tasks_completed=0) (multipart_upload_completed=0) (files_created=0) (op_get_file_status.failures=0) (op_list_files=0) (op_create=0) (committer_tasks_failed=0) (files_copied=0) (committer_jobs_completed=0) (op_rename=0) (committer_magic_files_created=0) (action_http_get_request.failures=0) (files_deleted=0) (op_create_non_recursive=0) (files_delete_rejected=0) (object_list_request.failures=0) (op_get_file_status=1) (op_glob_status=0) (object_multipart_aborted.failures=0) (op_get_content_summary=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0) (op_list_files.failures=0) (store_io_throttled=0) (action_http_head_request=1) (op_get_delegation_token.failures=0) (action_file_opened=1) (store_io_request=3) (stream_write_total_data=0) (object_multipart_initiated=0) (stream_read_seek_backward_operations=0) (committer_commits_created=0) (multipart_upload_list.failures=0) (op_is_directory=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_total_time=0) (op_open=1) (audit_span_creation=3) (stream_read_seek_policy_changed=1) (committer_commit_job=0) (ignored_errors=0) (stream_read_remote_stream_aborted.failures=0) (op_abort.failures=0) (stream_read_version_mismatches=0) (stream_read_unbuffered=0) (multipart_upload_part_put_bytes=0) (op_hflush=0) (op_copy_from_local_file.failures=0) (committer_commits_aborted=0) (op_get_file_checksum.failures=0) (stream_write_bytes=0) (stream_read_remote_stream_drain.failures=0) (object_select_requests=0) (op_mkdirs.failures=0) (op_access.failures=0) (object_copy_requests=0) (op_xattr_list.failures=0) (fake_directories_deleted=0) (stream_write_block_uploads_committed=0) (committer_load_single_pending_file=0) (op_glob_status.failures=0) (committer_commits_reverted=0) (stream_read_operations=0) (multipart_instantiated=0) (committer_materialize_file.failures=0) (stream_write_queue_duration=0) (stream_read_fully_operations=0) (op_rename.failures=0) (delegation_tokens_issued=0) (op_create.failures=0) (stream_read_vectored_incoming_ranges=4) (op_copy_from_local_file=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0));
minimums=((committer_stage_file_upload.min=-1) (object_multipart_initiated.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_list.min=-1) (op_create.min=-1) (op_get_file_status.failures.min=-1) (committer_commit_job.min=-1) (op_rename.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_status.min=-1) (committer_load_single_pending_file.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_status.min=15) (committer_stage_file_upload.failures.min=-1) (action_http_get_request.min=23) (object_put_request.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (object_list_request.min=-1) (action_executor_acquired.min=-1) (store_exists_probe.min=-1) (op_xattr_get_named.min=-1) (op_exists.min=-1) (action_http_get_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_mkdirs.min=-1) (op_exists.failures.min=-1) (op_delete.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named.failures.min=-1) (object_put_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.failures.min=-1) (action_file_opened.failures.min=-1) (op_create.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_delegation_token.min=-1) (action_file_opened.min=0) (object_continue_list_request.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.min=-1) (op_get_delegation_token.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_access.min=-1) (op_xattr_get_map.failures.min=-1) (op_createfile.failures.min=-1) (op_get_content_summary.failures.min=-1) (store_exists_probe.failures.min=-1) (op_delete.failures.min=-1) (op_glob_status.failures.min=-1) (op_is_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_directory.min=-1) (op_access.failures.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.failures.min=-1) (object_delete_request.min=-1) (committer_materialize_file.min=-1) (op_glob_status.min=-1) (op_list_files.failures.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (multipart_upload_list.min=-1) (op_xattr_list.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.min=14) (object_multipart_aborted.failures.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_is_file.min=-1) (object_delete_request.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_abort.min=-1) (object_bulk_delete_request.min=-1));
maximums=((op_xattr_list.failures.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.failures.max=-1) (op_exists.max=-1) (store_exists_probe.max=-1) (op_xattr_list.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.max=-1) (op_access.failures.max=-1) (op_mkdirs.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_exists.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.failures.max=-1) (op_is_directory.failures.max=-1) (op_is_directory.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_abort.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_content_summary.max=-1) (op_list_files.failures.max=-1) (op_list_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_create.max=-1) (committer_materialize_file.max=-1) (op_abort.max=-1) (multipart_upload_list.failures.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_commit_job.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.max=-1) (object_delete_request.max=-1) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_create.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_put_request.failures.max=-1) (op_rename.failures.max=-1) (op_get_file_status.max=15) (object_delete_request.failures.max=-1) (object_put_request.max=-1) (committer_commit_job.max=-1) (op_xattr_get_map.max=-1) (op_is_file.max=-1) (action_http_head_request.failures.max=-1) (op_delete.failures.max=-1) (op_delete.max=-1) (object_multipart_aborted.max=-1) (store_exists_probe.failures.max=-1) (action_file_opened.max=0) (object_bulk_delete_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_access.max=-1) (object_multipart_initiated.max=-1) (action_file_opened.failures.max=-1) (object_list_request.max=-1) (op_list_status.failures.max=-1) (op_copy_from_local_file.max=-1) (op_glob_status.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_file_checksum.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_http_head_request.max=14) (multipart_upload_list.max=-1) (op_is_file.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_drain.max=-1) (op_list_files.max=-1) (action_http_get_request.max=27) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_list_request.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=50, mean=25.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=15, mean=15.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=14, mean=14.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:46,885 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:46,886 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,886 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:46,887 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032&t0=54&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=54&ts=1731777826885
2024-11-16 17:23:46,893 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,893 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,893 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032&t0=54&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=54&ts=1731777826885
2024-11-16 17:23:46,901 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:46,901 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:46,901 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:46,901 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:46,901 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:46,901 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:46,901 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:46,901 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:46,902 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:46,902 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:46,902 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:46,902 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:46,904 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:46,904 [s3a-transfer-leg-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:46,904 [s3a-transfer-leg-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,905 [s3a-transfer-leg-bucket-unbounded-pool2-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [62] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032&t0=54&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=62&ts=1731777826885
2024-11-16 17:23:46,911 [s3a-transfer-leg-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:46,911 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:23:46,911 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:46,911 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:46,912 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:46,912 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777826750; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:46,912 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:46,912 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:46,912 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:46,913 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:46,914 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:46,915 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:46,915 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:46,915 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:46,915 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:46,916 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:46,916 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:46,916 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:46,916 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032&t0=54&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=63&ts=1731777826885
2024-11-16 17:23:46,925 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:46,925 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:23:46,926 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:23:46,926 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:46,926 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:46,926 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:46,926 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:46,927 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:46,927 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:46,927 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000032&t0=54&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=63&ts=1731777826885
2024-11-16 17:23:46,935 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:46,935 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:23:46,935 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:23:46,935 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:23:46,936 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.022s
2024-11-16 17:23:46,936 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:23:46,936 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:46,937 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:46,938 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:46,951 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 5, active threads = 0, queued tasks = 0, completed tasks = 5], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_get_map.failures=0) (committer_magic_marker_put.failures=0) (stream_read_total_bytes=300) (store_io_throttled=0) (audit_failure=0) (committer_jobs_failed=0) (op_create.failures=0) (stream_read_seek_operations=0) (op_abort.failures=0) (committer_jobs_completed=0) (op_create=5) (stream_read_remote_stream_drain=0) (op_glob_status.failures=0) (stream_read_version_mismatches=0) (stream_read_fully_operations=0) (delegation_tokens_issued=0) (committer_commits_created=0) (op_get_delegation_token.failures=0) (object_put_request_completed=10) (files_created=5) (op_abort=0) (object_put_request=10) (committer_bytes_committed=0) (multipart_instantiated=0) (stream_read_remote_stream_drain.failures=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (op_is_file.failures=0) (committer_commits_aborted=0) (op_xattr_get_named=0) (multipart_upload_aborted=0) (op_list_located_status=0) (committer_commits.failures=0) (op_xattr_get_map=0) (op_get_file_checksum.failures=0) (object_list_request.failures=0) (stream_read_seek_bytes_skipped=0) (object_delete_request=0) (action_file_opened.failures=0) (object_delete_objects=10) (committer_magic_files_created=0) (committer_commit_job=0) (object_bulk_delete_request=10) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named_map.failures=0) (op_hflush=0) (object_select_requests=0) (op_glob_status=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=20) (files_copied=0) (action_http_head_request.failures=0) (object_multipart_aborted.failures=0) (fake_directories_deleted=5) (object_delete_request.failures=0) (op_is_directory.failures=0) (directories_created=5) (op_mkdirs.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_access=0) (committer_tasks_failed=0) (object_continue_list_request.failures=0) (stream_read_bytes_discarded_in_close=0) (op_xattr_get_named_map=0) (action_executor_acquired=0) (object_put_request.failures=0) (object_copy_requests=0) (committer_commit_job.failures=0) (stream_read_closed=0) (op_list_status=0) (op_hsync=0) (stream_read_operations_incomplete=0) (stream_write_block_uploads_committed=0) (op_exists=0) (stream_write_queue_duration.failures=0) (stream_aborted=0) (fake_directories_created=0) (op_copy_from_local_file=0) (multipart_upload_list=0) (multipart_upload_started=0) (stream_read_vectored_operations=4) (op_is_directory=0) (files_copied_bytes=0) (files_deleted=5) (multipart_upload_list.failures=0) (object_continue_list_request=0) (stream_read_opened=0) (committer_commits_completed=0) (stream_read_unbuffered=1) (stream_read_close_operations=3) (op_delete=5) (op_get_content_summary.failures=0) (action_executor_acquired.failures=0) (op_is_file=0) (op_open=3) (multipart_upload_abort_under_path_invoked=0) (stream_write_block_uploads_aborted=0) (op_access.failures=0) (stream_write_bytes=327680) (multipart_upload_completed=0) (stream_write_total_data=655360) (op_xattr_get_named.failures=0) (op_create_non_recursive=0) (committer_commits_reverted=0) (stream_read_vectored_incoming_ranges=8) (stream_read_bytes=300) (committer_stage_file_upload.failures=0) (delegation_tokens_issued.failures=0) (op_get_file_status.failures=0) (audit_span_creation=19) (op_get_file_status=0) (directories_deleted=0) (committer_bytes_uploaded=0) (store_exists_probe=0) (committer_materialize_file=0) (op_rename=0) (committer_tasks_completed=0) (op_get_delegation_token=0) (committer_load_single_pending_file.failures=0) (op_mkdirs=5) (stream_read_operations=0) (op_delete.failures=0) (op_xattr_list=0) (object_bulk_delete_request.failures=0) (multipart_upload_part_put_bytes=0) (op_openfile=0) (committer_materialize_file.failures=0) (stream_write_block_uploads=5) (stream_read_vectored_combined_ranges=4) (object_metadata_request=13) (multipart_upload_part_put=0) (store_io_request=55) (op_xattr_list.failures=0) (op_rename.failures=0) (object_multipart_initiated.failures=0) (object_put_bytes=327680) (object_multipart_initiated=0) (stream_write_exceptions=0) (files_delete_rejected=0) (committer_load_single_pending_file=0) (stream_read_exceptions=0) (op_copy_from_local_file.failures=0) (committer_stage_file_upload=0) (action_http_head_request=13) (audit_request_execution=55) (stream_write_exceptions_completing_upload=0) (ignored_errors=0) (store_io_retry=0) (stream_read_seek_policy_changed=4) (op_createfile.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request=2) (object_multipart_aborted=0) (action_file_opened=3) (op_list_status.failures=0) (op_get_file_checksum=0) (op_list_files=0) (op_get_content_summary=0) (audit_access_check_failure=0) (op_exists.failures=0) (object_list_request=20) (stream_read_remote_stream_aborted=0) (op_list_files.failures=0) (store_exists_probe.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_createfile=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=5) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((op_abort.failures.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_status.min=-1) (op_list_status.failures.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_http_get_request.min=23) (object_list_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (op_is_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_is_directory.min=-1) (object_put_request.min=27) (op_xattr_list.failures.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_access.min=-1) (op_rename.min=-1) (object_delete_request.min=-1) (stream_read_remote_stream_drain.min=-1) (committer_materialize_file.min=-1) (op_createfile.failures.min=-1) (op_mkdirs.failures.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_checksum.min=-1) (object_continue_list_request.failures.min=-1) (committer_commit_job.min=-1) (object_continue_list_request.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (op_get_file_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (store_exists_probe.min=-1) (object_list_request.min=6) (object_bulk_delete_request.min=8) (op_get_content_summary.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_delete.min=36) (multipart_upload_list.min=-1) (action_http_head_request.min=3) (object_multipart_aborted.min=-1) (op_abort.min=-1) (op_rename.failures.min=-1) (op_get_file_status.min=-1) (op_get_file_checksum.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.failures.min=-1) (op_is_directory.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_files.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_http_head_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_delegation_token.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_files.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_list.min=-1) (op_glob_status.min=-1) (op_exists.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_create.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_write_queue_duration.min=-1) (op_exists.min=-1) (delegation_tokens_issued.min=-1) (op_create.min=10) (action_file_opened.min=11) (committer_stage_file_upload.min=-1) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_map.min=-1) (op_mkdirs.min=25) (object_multipart_initiated.min=-1) (op_xattr_get_named.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (op_create.max=45) (op_delete.failures.max=-1) (action_http_get_request.failures.max=-1) (op_delete.max=58) (op_createfile.max=-1) (op_glob_status.max=-1) (op_get_delegation_token.max=-1) (op_get_content_summary.max=-1) (op_mkdirs.max=263) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (store_exists_probe.max=-1) (committer_commit_job.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_list.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_list_request.failures.max=-1) (object_continue_list_request.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (op_rename.failures.max=-1) (op_exists.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.max=-1) (op_access.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_file_status.max=-1) (op_xattr_list.failures.max=-1) (committer_materialize_file.max=-1) (op_is_file.max=-1) (committer_stage_file_upload.max=-1) (op_access.failures.max=-1) (object_delete_request.failures.max=-1) (op_is_directory.max=-1) (op_copy_from_local_file.failures.max=-1) (object_list_request.max=167) (op_xattr_get_map.max=-1) (op_get_delegation_token.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_createfile.failures.max=-1) (object_delete_request.max=-1) (action_http_head_request.failures.max=-1) (op_exists.failures.max=-1) (op_glob_status.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_is_file.failures.max=-1) (op_list_status.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_head_request.max=11) (op_list_files.max=-1) (op_list_files.failures.max=-1) (action_http_get_request.max=23) (op_create.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=71) (committer_load_single_pending_file.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.max=12) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_list.max=-1) (action_file_opened.max=11) (op_is_directory.failures.max=-1) (op_abort.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named.max=-1) (object_multipart_initiated.max=-1) (committer_materialize_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_list_status.max=-1) (op_get_content_summary.failures.max=-1) (op_rename.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named_map.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=10, sum=286, mean=28.6000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=5, sum=234, mean=46.8000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=10, sum=95, mean=9.5000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=20, sum=348, mean=17.4000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=39, mean=19.5000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=5, sum=400, mean=80.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=13, sum=78, mean=6.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=5, sum=98, mean=19.6000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=22, mean=7.3333)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:46,952 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:46,952 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:46,952 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,952 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:46,953 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:46,953 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000033 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000033&t0=64&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=64&ts=1731777826952
2024-11-16 17:23:46,959 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:46,960 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:46,960 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:46,960 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:46,960 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:46,960 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000033 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000033&t0=64&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=64&ts=1731777826952
2024-11-16 17:23:46,963 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:46,964 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:46,964 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:46,964 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:46,964 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000033 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000033&t0=64&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=64&ts=1731777826952
2024-11-16 17:23:46,983 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:46,984 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:46,984 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.020s
2024-11-16 17:23:46,984 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:46,999 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:46,999 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,000 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,000 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,001 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000034 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000034&t0=64&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=64&ts=1731777826984
2024-11-16 17:23:47,010 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:23:47,011 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,011 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:47,013 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18016403183843730809.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:47,016 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18016403183843730809.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (object_put_request=0) (object_put_request.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_total_data=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (op_hsync=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (object_multipart_aborted=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18016403183843730809.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,016 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:47,017 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:47,017 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18016403183843730809.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:47,022 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:47,022 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:47,023 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:47,024 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:47,024 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000034 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000034&t0=64&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=65&ts=1731777826984
2024-11-16 17:23:47,050 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:47,050 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:47,051 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.029s
2024-11-16 17:23:47,051 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18016403183843730809.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:47,051 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18016403183843730809.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,051 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18016403183843730809.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,051 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:47,052 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:47,054 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_bytes=65536) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (op_abort=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (object_put_request=1) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (op_abort.failures=0) (stream_write_total_data=65536) (op_hflush=0) (op_hsync=0) (stream_write_total_time=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=26) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=26) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=26, mean=26.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:47,054 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:47,055 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:23:47,055 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:23:47,057 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:47,057 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:47,060 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:23:47,061 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:23:47,061 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:23:47,062 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:23:47,062 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:23:47,063 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:23:47,063 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:23:47,064 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:23:47,064 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:23:47,064 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:23:47,065 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='422ca1ac-e350-4d50-af15-a3ad3ddaca25', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:47,066 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='422ca1ac-e350-4d50-af15-a3ad3ddaca25', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:47,066 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='422ca1ac-e350-4d50-af15-a3ad3ddaca25', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:23:47,066 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:23:47,067 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:23:47,068 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:23:47,068 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:23:47,068 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:23:47,069 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:23:47,069 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7674189b]
2024-11-16 17:23:47,070 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7674189b]
2024-11-16 17:23:47,070 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:23:47,071 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:23:47,071 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:23:47,072 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:23:47,072 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:23:47,073 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:23:47,073 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:23:47,073 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:47,074 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:23:47,074 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:23:47,074 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:23:47,075 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:23:47,077 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:23:47,077 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:23:47,078 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:23:47,078 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:23:47,078 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:23:47,079 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:23:47,079 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:23:47,079 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:23:47,079 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:23:47,080 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:23:47,080 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:23:47,081 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:23:47,081 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:23:47,081 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:23:47,081 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:23:47,082 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:23:47,082 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:47,083 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,083 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:47,084 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000037 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000037/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000037&t0=64&fs=422ca1ac-e350-4d50-af15-a3ad3ddaca25&t1=64&ts=1731777827082
2024-11-16 17:23:47,084 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:23:47,084 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:23:47,084 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:23:47,085 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:23:47,094 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:47,095 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777827000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:23:47,097 [s3a-transfer-leg-bucket-unbounded-pool11-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:47,097 [s3a-transfer-leg-bucket-unbounded-pool11-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,097 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:47,098 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:47,098 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:23:47,098 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,098 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,098 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:47,098 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [68] 422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=1947-2046&id=422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000038&t0=67&fs=422ca1ac-e350-4d50-af15-a3ad3ddaca25&t1=68&ts=1731777827097
2024-11-16 17:23:47,105 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,105 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,105 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:47,106 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [69] 422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=8192-14435&id=422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000038&t0=67&fs=422ca1ac-e350-4d50-af15-a3ad3ddaca25&t1=69&ts=1731777827097
2024-11-16 17:23:47,107 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:47,114 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,114 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,117 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:47,118 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [71] 422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=40960-41983&id=422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000038&t0=67&fs=422ca1ac-e350-4d50-af15-a3ad3ddaca25&t1=71&ts=1731777827097
2024-11-16 17:23:47,130 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.032s
2024-11-16 17:23:47,130 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,133 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.028s
2024-11-16 17:23:47,133 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:23:47,137 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:23:47,137 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,137 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:23:47,141 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,141 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=17));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=32));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=77, mean=25.6667)));

2024-11-16 17:23:47,142 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations=0) (stream_aborted=0) (stream_read_close_operations=1) (action_executor_acquired.failures=0) (stream_read_seek_bytes_skipped=0) (action_http_get_request=3) (stream_read_block_acquire_read=0) (stream_read_vectored_operations=1) (stream_read_bytes=1424) (stream_read_seek_operations=0) (action_file_opened.failures=0) (stream_read_vectored_combined_ranges=3) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_bytes_backwards_on_seek=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (stream_read_closed=0) (stream_read_seek_backward_operations=0) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (stream_read_block_read=0) (stream_read_total_bytes=1424) (stream_read_remote_stream_drain=0) (stream_read_vectored_incoming_ranges=5) (stream_read_version_mismatches=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request.failures=0) (stream_read_seek_policy_changed=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=0) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=17) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((action_http_get_request.max=32) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=0) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=77, mean=25.6667)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:47,145 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777827000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:23:47,146 [s3a-transfer-leg-bucket-unbounded-pool11-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:47,147 [s3a-transfer-leg-bucket-unbounded-pool11-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,148 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:47,149 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:23:47,149 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,150 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=10240-65535&id=422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039&t0=74&fs=422ca1ac-e350-4d50-af15-a3ad3ddaca25&t1=64&ts=1731777827146
2024-11-16 17:23:47,175 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.027s
2024-11-16 17:23:47,177 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:47,178 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:23:47,179 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:47,179 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:23:47,180 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:23:47,182 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:23:47,182 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,184 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://leg-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:23:47,184 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:23:47,185 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,185 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=8192-8291&id=422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039&t0=74&fs=422ca1ac-e350-4d50-af15-a3ad3ddaca25&t1=64&ts=1731777827146
2024-11-16 17:23:47,200 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.021s
2024-11-16 17:23:47,201 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:47,201 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:47,202 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:47,202 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:23:47,202 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:23:47,203 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:47,203 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:23:47,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,205 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=14336-14435&id=422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039&t0=74&fs=422ca1ac-e350-4d50-af15-a3ad3ddaca25&t1=64&ts=1731777827146
2024-11-16 17:23:47,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.017s
2024-11-16 17:23:47,220 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:47,220 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:47,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:47,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:23:47,222 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:23:47,222 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:47,223 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:23:47,223 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,224 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=1947-2046&id=422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039&t0=74&fs=422ca1ac-e350-4d50-af15-a3ad3ddaca25&t1=64&ts=1731777827146
2024-11-16 17:23:47,252 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.031s
2024-11-16 17:23:47,252 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:47,253 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:23:47,253 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:47,254 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:23:47,254 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:23:47,255 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:47,255 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:23:47,256 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,256 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=40960-41983&id=422ca1ac-e350-4d50-af15-a3ad3ddaca25-00000039&t0=74&fs=422ca1ac-e350-4d50-af15-a3ad3ddaca25&t1=64&ts=1731777827146
2024-11-16 17:23:47,271 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.018s
2024-11-16 17:23:47,271 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:47,272 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:23:47,277 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=14)
(stream_read_remote_stream_aborted.min=3)
(stream_read_remote_stream_drain.min=1));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=28)
(stream_read_remote_stream_aborted.max=3)
(stream_read_remote_stream_drain.max=1));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=98, mean=19.6000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)));

2024-11-16 17:23:47,278 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:23:47,278 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:23:47,279 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:47,280 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_version_mismatches=0) (stream_read_block_read.failures=0) (stream_read_seek_forward_operations=2) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain=4) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_aborted=1) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_operations=0) (action_http_get_request.failures=0) (stream_read_close_operations=1) (stream_read_fully_operations=5) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_block_acquire_read.failures=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=44957) (stream_read_total_bytes=1424) (stream_read_bytes_discarded_in_close=0) (action_http_get_request=5) (stream_read_seek_operations=4) (stream_read_block_read=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_operations=5) (stream_read_bytes=1424) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired.failures=0) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=14637) (stream_read_opened=5) (action_executor_acquired=0) (stream_read_closed=4) (stream_read_seek_policy_changed=2) (stream_read_block_acquire_read=0) (stream_read_vectored_combined_ranges=0) (stream_read_exceptions=0) (stream_aborted=1) (stream_read_seek_backward_operations=2));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=1));
minimums=((stream_read_remote_stream_aborted.min=3) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=0) (action_http_get_request.min=14) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_block_acquire_read.min=-1));
maximums=((stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=3) (action_http_get_request.max=28) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_drain.max=1) (action_executor_acquired.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=98, mean=19.6000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:47,291 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:23:47,293 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:23:47,294 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:47,295 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@46131d30[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:23:47,295 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:47,295 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics5-leg-bucket
2024-11-16 17:23:47,296 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:23:47,296 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7674189b] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:47,297 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7674189b] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:47,299 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_xattr_get_named_map.failures=0) (object_bulk_delete_request=0) (op_exists=0) (op_get_content_summary=0) (audit_failure=0) (delegation_tokens_issued.failures=0) (op_get_file_checksum.failures=0) (audit_access_check_failure=0) (op_xattr_list=0) (directories_deleted=0) (op_get_delegation_token=0) (action_http_get_request=8) (committer_materialize_file=0) (stream_read_remote_stream_aborted.failures=0) (object_put_request=0) (committer_jobs_failed=0) (object_multipart_aborted.failures=0) (op_is_file=0) (object_multipart_initiated.failures=0) (op_glob_status.failures=0) (stream_read_opened=5) (object_continue_list_request=0) (stream_write_queue_duration.failures=0) (op_abort.failures=0) (multipart_upload_part_put_bytes=0) (object_multipart_initiated=0) (store_exists_probe=0) (committer_commits_completed=0) (op_access=0) (stream_read_vectored_incoming_ranges=5) (op_get_content_summary.failures=0) (op_access.failures=0) (stream_read_vectored_operations=1) (committer_tasks_completed=0) (committer_magic_marker_put=0) (committer_commits.failures=0) (op_create_non_recursive=0) (audit_span_creation=4) (multipart_upload_started=0) (committer_commit_job.failures=0) (ignored_errors=0) (stream_read_exceptions=0) (committer_load_single_pending_file=0) (stream_aborted=1) (object_list_request.failures=0) (store_io_retry=0) (stream_read_seek_forward_operations=2) (committer_stage_file_upload.failures=0) (committer_commits_reverted=0) (op_get_file_status=1) (op_list_status.failures=0) (op_mkdirs=0) (committer_tasks_failed=0) (stream_write_total_data=0) (object_delete_request=0) (stream_read_operations=5) (object_delete_objects=0) (committer_jobs_completed=0) (action_executor_acquired=0) (op_list_files.failures=0) (object_continue_list_request.failures=0) (op_list_status=0) (op_createfile.failures=0) (action_http_head_request.failures=0) (committer_magic_files_created=0) (object_put_request_completed=0) (op_mkdirs.failures=0) (store_io_throttled=0) (op_xattr_list.failures=0) (store_io_request=9) (stream_write_bytes=0) (stream_read_fully_operations=5) (stream_read_bytes_discarded_in_close=0) (files_copied=0) (op_xattr_get_map=0) (op_glob_status=0) (committer_materialize_file.failures=0) (stream_read_seek_operations=4) (multipart_upload_list=0) (stream_write_total_time=0) (object_metadata_request=1) (committer_load_single_pending_file.failures=0) (directories_created=0) (multipart_upload_part_put=0) (audit_request_execution=9) (op_hflush=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_bytes=2848) (op_xattr_get_named.failures=0) (op_create.failures=0) (fake_directories_created=0) (op_xattr_get_named=0) (multipart_upload_list.failures=0) (action_executor_acquired.failures=0) (action_http_head_request=1) (op_get_file_checksum=0) (stream_read_seek_backward_operations=2) (stream_read_vectored_combined_ranges=3) (op_get_delegation_token.failures=0) (multipart_instantiated=0) (stream_write_block_uploads_committed=0) (object_bulk_delete_request.failures=0) (committer_bytes_uploaded=0) (stream_read_seek_bytes_skipped=44957) (op_createfile=0) (stream_write_block_uploads=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (delegation_tokens_issued=0) (op_is_directory.failures=0) (files_delete_rejected=0) (stream_read_bytes_backwards_on_seek=14637) (store_exists_probe.failures=0) (op_create=0) (op_rename.failures=0) (stream_read_total_bytes=2848) (op_is_directory=0) (committer_commit_job=0) (op_get_file_status.failures=0) (object_list_request=0) (object_copy_requests=0) (multipart_upload_abort_under_path_invoked=0) (fake_directories_deleted=0) (stream_read_closed=4) (op_copy_from_local_file.failures=0) (op_delete.failures=0) (stream_read_remote_stream_aborted=1) (op_abort=0) (files_copied_bytes=0) (files_deleted=0) (object_multipart_aborted=0) (multipart_upload_aborted=0) (object_put_request.failures=0) (op_is_file.failures=0) (stream_read_version_mismatches=0) (object_delete_request.failures=0) (object_put_bytes=0) (stream_read_operations_incomplete=0) (action_http_get_request.failures=0) (op_hsync=0) (stream_read_close_operations=2) (op_rename=0) (action_file_opened=2) (stream_read_bytes_discarded_in_abort=55196) (action_file_opened.failures=0) (object_select_requests=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (files_created=0) (stream_read_remote_stream_drain.failures=0) (stream_write_queue_duration=0) (committer_commits_aborted=0) (op_xattr_get_named_map=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (op_list_files=0) (op_delete=0) (op_exists.failures=0) (stream_write_block_uploads_aborted=0) (committer_stage_file_upload=0) (stream_read_remote_stream_drain=4) (op_list_located_status=0) (committer_commits_created=0) (op_xattr_get_map.failures=0) (stream_read_seek_policy_changed=3) (committer_bytes_committed=0) (op_open=2) (op_openfile=0) (op_copy_from_local_file=0));
gauges=((stream_write_block_uploads_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0));
minimums=((op_abort.failures.min=-1) (object_list_request.min=-1) (op_get_content_summary.min=-1) (object_bulk_delete_request.min=-1) (committer_materialize_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (store_exists_probe.min=-1) (op_glob_status.failures.min=-1) (action_http_get_request.min=14) (stream_write_queue_duration.failures.min=-1) (op_rename.min=-1) (op_get_delegation_token.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=0) (op_xattr_get_named_map.min=-1) (op_is_directory.failures.min=-1) (object_delete_request.min=-1) (op_get_file_checksum.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.min=11) (op_create.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_file.failures.min=-1) (op_list_status.min=-1) (op_copy_from_local_file.min=-1) (action_executor_acquired.failures.min=-1) (op_create.min=-1) (op_xattr_list.min=-1) (object_multipart_aborted.min=-1) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (op_delete.min=-1) (op_exists.min=-1) (op_createfile.min=-1) (op_get_file_status.min=13) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.min=-1) (object_list_request.failures.min=-1) (committer_commit_job.min=-1) (object_put_request.failures.min=-1) (multipart_upload_list.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.failures.min=-1) (op_mkdirs.min=-1) (object_put_request.min=-1) (object_delete_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_rename.failures.min=-1) (op_is_directory.min=-1) (committer_stage_file_upload.min=-1) (op_access.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_map.min=-1) (action_http_head_request.failures.min=-1) (op_delete.failures.min=-1) (delegation_tokens_issued.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_aborted.min=3) (op_exists.failures.min=-1) (op_list_files.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_glob_status.min=-1) (committer_commit_job.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_access.failures.min=-1) (object_continue_list_request.min=-1) (op_mkdirs.failures.min=-1) (stream_write_queue_duration.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_load_single_pending_file.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (op_is_directory.max=-1) (op_delete.max=-1) (op_xattr_get_map.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_rename.max=-1) (op_glob_status.failures.max=-1) (op_xattr_list.failures.max=-1) (op_rename.failures.max=-1) (op_list_status.max=-1) (multipart_upload_list.failures.max=-1) (action_file_opened.max=0) (op_get_file_status.max=13) (op_xattr_get_named_map.failures.max=-1) (op_abort.max=-1) (op_mkdirs.failures.max=-1) (action_http_get_request.max=32) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_file_opened.failures.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.max=-1) (op_copy_from_local_file.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_delete_request.max=-1) (op_get_file_status.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_status.failures.max=-1) (op_exists.failures.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.max=-1) (committer_materialize_file.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.max=-1) (committer_load_single_pending_file.max=-1) (delegation_tokens_issued.failures.max=-1) (op_is_file.max=-1) (op_createfile.failures.max=-1) (op_list_files.failures.max=-1) (committer_stage_file_upload.max=-1) (op_abort.failures.max=-1) (op_glob_status.max=-1) (op_exists.max=-1) (object_put_request.max=-1) (op_is_file.failures.max=-1) (op_access.failures.max=-1) (op_list_files.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named.max=-1) (op_create.max=-1) (action_http_head_request.max=11) (store_exists_probe.failures.max=-1) (object_list_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_put_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.max=-1) (object_continue_list_request.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.max=-1) (object_list_request.max=-1) (store_exists_probe.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.max=-1) (committer_magic_marker_put.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_list.max=-1) (op_create.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_delegation_token.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (op_access.max=-1) (stream_read_remote_stream_aborted.max=3));
means=((multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=11, mean=11.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=13, mean=13.0000)) (action_http_get_request.mean=(samples=8, sum=175, mean=21.8750)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:47,301 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:47,302 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,302 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:47,303 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040&t0=64&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=64&ts=1731777827301
2024-11-16 17:23:47,308 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,308 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,309 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040&t0=64&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=64&ts=1731777827301
2024-11-16 17:23:47,321 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:23:47,321 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:47,322 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:47,322 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:47,323 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:47,323 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:47,324 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:47,324 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:47,325 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:47,325 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:47,326 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:47,326 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:47,329 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:47,330 [s3a-transfer-leg-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:47,330 [s3a-transfer-leg-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,330 [s3a-transfer-leg-bucket-unbounded-pool2-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [76] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040&t0=64&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=76&ts=1731777827301
2024-11-16 17:23:47,343 [s3a-transfer-leg-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:23:47,343 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.014s
2024-11-16 17:23:47,344 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:47,344 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:47,345 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:47,345 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777827047; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:47,346 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:47,346 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:47,347 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:47,347 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:47,349 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:47,349 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:47,350 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:47,350 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:47,350 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:47,350 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:47,350 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:47,350 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:47,350 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040&t0=64&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=77&ts=1731777827301
2024-11-16 17:23:47,358 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:47,359 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:23:47,359 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:23:47,360 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:47,360 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:47,361 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:47,361 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:47,362 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:47,362 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:47,363 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000040&t0=64&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=77&ts=1731777827301
2024-11-16 17:23:47,371 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:47,372 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:23:47,372 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:23:47,373 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.024s
2024-11-16 17:23:47,373 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.024s
2024-11-16 17:23:47,373 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.048s
2024-11-16 17:23:47,373 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:47,374 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:47,376 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:47,393 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 6, active threads = 0, queued tasks = 0, completed tasks = 6], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_incoming_ranges=8) (committer_commits_completed=0) (ignored_errors=0) (directories_created=6) (multipart_upload_list=0) (stream_read_closed=0) (action_executor_acquired.failures=0) (op_get_delegation_token.failures=0) (committer_jobs_failed=0) (stream_read_vectored_read_bytes_discarded=20) (action_http_get_request=2) (object_bulk_delete_request=12) (op_rename.failures=0) (audit_failure=0) (object_put_request_completed=12) (op_xattr_get_named=0) (op_createfile.failures=0) (stream_read_version_mismatches=0) (op_is_file=0) (op_access.failures=0) (stream_read_vectored_combined_ranges=4) (op_abort.failures=0) (op_delete=6) (object_list_request=24) (op_abort=0) (committer_bytes_committed=0) (committer_commits.failures=0) (stream_write_block_uploads_committed=0) (object_delete_objects=12) (delegation_tokens_issued=0) (committer_materialize_file=0) (object_delete_request=0) (op_is_file.failures=0) (multipart_upload_aborted=0) (stream_read_bytes_discarded_in_abort=0) (op_list_status.failures=0) (stream_read_bytes_discarded_in_close=0) (op_xattr_list.failures=0) (stream_write_bytes=393216) (object_continue_list_request.failures=0) (committer_magic_marker_put=0) (committer_commit_job.failures=0) (op_exists.failures=0) (committer_commits_reverted=0) (committer_commits_aborted=0) (stream_read_total_bytes=300) (op_list_status=0) (stream_read_seek_policy_changed=4) (op_xattr_list=0) (files_delete_rejected=0) (fake_directories_deleted=6) (stream_write_total_data=786432) (stream_read_remote_stream_aborted=0) (files_copied=0) (op_get_file_checksum=0) (store_exists_probe=0) (stream_write_exceptions_completing_upload=0) (op_create=6) (op_create.failures=0) (op_is_directory=0) (stream_write_exceptions=0) (multipart_upload_started=0) (op_list_located_status=0) (committer_commit_job=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (committer_jobs_completed=0) (committer_stage_file_upload=0) (op_get_content_summary=0) (op_createfile=0) (stream_read_remote_stream_drain.failures=0) (op_xattr_get_named.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_vectored_operations=4) (stream_read_close_operations=3) (multipart_instantiated=0) (stream_write_block_uploads=6) (stream_read_seek_bytes_skipped=0) (op_delete.failures=0) (object_multipart_aborted.failures=0) (op_exists=0) (op_mkdirs=6) (committer_commits_created=0) (op_get_file_status=0) (op_copy_from_local_file=0) (object_copy_requests=0) (multipart_upload_part_put_bytes=0) (stream_read_remote_stream_drain=0) (object_multipart_aborted=0) (op_get_file_status.failures=0) (op_xattr_get_named_map=0) (op_xattr_get_named_map.failures=0) (object_multipart_initiated.failures=0) (store_io_retry=0) (stream_write_queue_duration=0) (files_deleted=6) (object_select_requests=0) (stream_write_block_uploads_aborted=0) (committer_tasks_completed=0) (action_file_opened.failures=0) (audit_span_creation=22) (object_put_request.failures=0) (op_copy_from_local_file.failures=0) (op_get_content_summary.failures=0) (committer_materialize_file.failures=0) (delegation_tokens_issued.failures=0) (op_access=0) (object_delete_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_opened=0) (audit_request_execution=65) (directories_deleted=0) (multipart_upload_completed=0) (stream_read_operations=0) (object_metadata_request=15) (store_io_request=65) (committer_bytes_uploaded=0) (action_file_opened=3) (op_rename=0) (op_openfile=0) (object_bulk_delete_request.failures=0) (op_xattr_get_map=0) (committer_load_single_pending_file=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_fully_operations=0) (action_http_head_request=15) (fake_directories_created=0) (stream_read_seek_backward_operations=0) (multipart_upload_list.failures=0) (object_put_bytes=393216) (op_get_file_checksum.failures=0) (action_executor_acquired=0) (stream_read_exceptions=0) (files_created=6) (op_glob_status.failures=0) (op_hsync=0) (op_xattr_get_map.failures=0) (audit_access_check_failure=0) (stream_read_seek_operations=0) (op_list_files.failures=0) (committer_magic_marker_put.failures=0) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (op_hflush=0) (committer_stage_file_upload.failures=0) (op_is_directory.failures=0) (stream_read_unbuffered=1) (action_http_get_request.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_put_request=12) (action_http_head_request.failures=0) (multipart_upload_part_put=0) (op_open=3) (stream_write_queue_duration.failures=0) (op_get_delegation_token=0) (op_glob_status=0) (files_copied_bytes=0) (op_mkdirs.failures=0) (stream_read_operations_incomplete=0) (store_io_throttled=0) (op_create_non_recursive=0) (committer_magic_files_created=0) (committer_tasks_failed=0) (op_list_files=0) (object_list_request.failures=0) (store_exists_probe.failures=0) (stream_read_bytes=300) (object_continue_list_request=0));
gauges=((stream_write_block_uploads_pending=6) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0));
minimums=((object_multipart_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (op_abort.min=-1) (action_file_opened.min=11) (object_continue_list_request.min=-1) (delegation_tokens_issued.failures.min=-1) (object_list_request.min=6) (store_exists_probe.failures.min=-1) (action_http_head_request.failures.min=-1) (object_list_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_is_directory.min=-1) (op_create.failures.min=-1) (op_rename.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_put_request.min=26) (stream_write_queue_duration.failures.min=-1) (op_access.min=-1) (op_is_file.failures.min=-1) (object_delete_request.min=-1) (op_rename.min=-1) (action_executor_acquired.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.min=-1) (op_createfile.min=-1) (action_http_get_request.min=23) (stream_write_queue_duration.min=-1) (op_list_files.failures.min=-1) (multipart_upload_list.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_list_status.min=-1) (op_get_file_checksum.failures.min=-1) (op_create.min=10) (op_glob_status.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.failures.min=-1) (op_access.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_bulk_delete_request.min=8) (op_copy_from_local_file.min=-1) (op_mkdirs.min=25) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.min=-1) (op_exists.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_drain.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_commit_job.min=-1) (object_bulk_delete_request.failures.min=-1) (op_createfile.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_get_map.min=-1) (object_put_request.failures.min=-1) (committer_materialize_file.min=-1) (op_glob_status.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_head_request.min=3) (op_get_delegation_token.min=-1) (committer_load_single_pending_file.min=-1) (op_mkdirs.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_status.min=-1) (op_is_file.min=-1) (op_list_files.min=-1) (op_is_directory.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_delete.min=36) (store_exists_probe.min=-1) (op_get_file_status.failures.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_content_summary.min=-1) (object_delete_request.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((op_list_status.max=-1) (multipart_upload_list.max=-1) (op_list_files.max=-1) (op_mkdirs.max=263) (object_multipart_initiated.failures.max=-1) (op_get_file_status.failures.max=-1) (object_multipart_initiated.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_get_request.max=23) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_directory.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_is_directory.max=-1) (op_access.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named.max=-1) (op_exists.failures.max=-1) (op_glob_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.max=-1) (op_delete.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_delegation_token.max=-1) (store_exists_probe.max=-1) (multipart_upload_list.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (action_http_head_request.max=11) (op_create.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_delete.max=58) (stream_read_remote_stream_aborted.max=-1) (delegation_tokens_issued.failures.max=-1) (op_rename.failures.max=-1) (action_file_opened.failures.max=-1) (object_multipart_aborted.max=-1) (op_create.max=45) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_drain.max=-1) (delegation_tokens_issued.max=-1) (action_http_get_request.failures.max=-1) (op_is_file.max=-1) (op_glob_status.max=-1) (object_delete_request.max=-1) (action_file_opened.max=11) (op_list_files.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named_map.max=-1) (op_access.failures.max=-1) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_head_request.failures.max=-1) (op_is_file.failures.max=-1) (committer_commit_job.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_createfile.max=-1) (op_rename.max=-1) (action_executor_acquired.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.max=12) (object_list_request.max=167) (op_list_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_materialize_file.max=-1) (object_put_request.failures.max=-1) (op_xattr_list.max=-1) (object_delete_request.failures.max=-1) (object_put_request.max=71) (op_get_file_status.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_copy_from_local_file.max=-1) (stream_write_queue_duration.max=-1) (object_continue_list_request.max=-1) (op_exists.max=-1) (op_xattr_list.failures.max=-1) (committer_commit_job.max=-1));
means=((op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=24, sum=386, mean=16.0833)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=39, mean=19.5000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=6, sum=113, mean=18.8333)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=6, sum=432, mean=72.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=12, sum=331, mean=27.5833)) (object_bulk_delete_request.mean=(samples=12, sum=111, mean=9.2500)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=6, sum=285, mean=47.5000)) (action_http_head_request.mean=(samples=15, sum=87, mean=5.8000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=22, mean=7.3333)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:47,394 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:47,394 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:47,394 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,394 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,394 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,394 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000041 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000041&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=78&ts=1731777827393
2024-11-16 17:23:47,401 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:47,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:47,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:47,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:47,401 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000041 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000041&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=78&ts=1731777827393
2024-11-16 17:23:47,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:47,405 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:47,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:47,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:47,405 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000041 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000041&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=78&ts=1731777827393
2024-11-16 17:23:47,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:47,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:47,415 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:23:47,415 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:47,416 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:47,416 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,416 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,416 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,416 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000042 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000042&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=78&ts=1731777827416
2024-11-16 17:23:47,422 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:47,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,424 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:47,424 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2456740477702161057.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:47,426 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2456740477702161057.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (op_abort=0) (object_put_request.failures=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (op_abort.failures=0) (stream_write_total_data=0) (object_multipart_initiated=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2456740477702161057.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,426 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:47,426 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:47,426 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2456740477702161057.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:47,426 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:47,426 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:47,427 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:47,427 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:47,427 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000042 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000042&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=79&ts=1731777827416
2024-11-16 17:23:47,450 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:47,450 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:47,451 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.025s
2024-11-16 17:23:47,451 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2456740477702161057.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:47,451 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2456740477702161057.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,451 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2456740477702161057.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,451 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:47,451 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:47,453 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (object_put_request.failures=0) (object_put_request=1) (op_hflush=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (stream_write_total_time=0) (object_multipart_aborted=0) (op_abort=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (op_hsync=0) (stream_write_block_uploads=1) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=23) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=23) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=23, mean=23.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:47,453 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:47,454 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:47,454 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,454 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:47,454 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000043 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000043&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=78&ts=1731777827454
2024-11-16 17:23:47,458 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:47,458 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:47,458 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,458 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:47,458 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:47,458 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:47,465 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:47,465 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,465 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:47,465 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,465 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:23:47,465 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:47,465 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,466 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000043&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=80&ts=1731777827454
2024-11-16 17:23:47,466 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-65535&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000043&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=78&ts=1731777827454
2024-11-16 17:23:47,478 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.013s
2024-11-16 17:23:47,478 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:47,479 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:23:47,482 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:23:47,482 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:47,483 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:23:47,483 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:23:47,483 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:23:47,483 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7443 bytes
2024-11-16 17:23:47,483 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:47,483 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:47,484 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:47,484 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8741 bytes
2024-11-16 17:23:47,484 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:23:47,484 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:47,485 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_incoming_ranges=2) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request.failures=0) (stream_read_total_bytes=65686) (stream_read_close_operations=1) (stream_read_remote_stream_drain=1) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_forward_operations=0) (stream_read_opened=1) (stream_read_remote_stream_aborted.failures=0) (action_file_opened=1) (stream_read_block_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations=1) (stream_read_bytes_discarded_in_close=65336) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (action_executor_acquired=0) (stream_read_prefetch_operations=0) (stream_read_closed=1) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (action_http_get_request=2) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_vectored_read_bytes_discarded=10) (action_file_opened.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=350) (stream_read_vectored_combined_ranges=1) (stream_read_fully_operations=0) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=1));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=1) (action_executor_acquired.min=-1) (action_http_get_request.min=12) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=4));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=4) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=17) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (action_http_get_request.mean=(samples=2, sum=29, mean=14.5000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:47,487 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:47,490 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,490 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:47,490 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=78&ts=1731777827487
2024-11-16 17:23:47,493 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,496 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,496 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,496 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=78&ts=1731777827487
2024-11-16 17:23:47,509 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:23:47,512 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:47,512 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:47,512 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:47,512 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:47,512 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:47,513 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:47,513 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:47,513 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:47,513 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:47,513 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:47,513 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:47,514 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:47,515 [s3a-transfer-leg-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:47,515 [s3a-transfer-leg-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,515 [s3a-transfer-leg-bucket-unbounded-pool2-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [81] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=81&ts=1731777827487
2024-11-16 17:23:47,522 [s3a-transfer-leg-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:47,523 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:23:47,523 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:47,524 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:47,524 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:47,524 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777827445; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:47,524 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:47,524 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:47,524 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:47,524 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:47,525 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:47,525 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:47,526 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:47,526 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:47,526 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:47,526 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:47,526 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:47,527 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:47,527 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=82&ts=1731777827487
2024-11-16 17:23:47,535 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:47,535 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:23:47,535 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:23:47,535 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:47,535 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:47,535 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:47,535 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:47,535 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:47,536 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:47,536 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000044&t0=78&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=82&ts=1731777827487
2024-11-16 17:23:47,542 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:47,542 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:47,542 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:47,542 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:23:47,542 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:23:47,543 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.030s
2024-11-16 17:23:47,543 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:47,543 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:47,544 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:47,557 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 7, active threads = 0, queued tasks = 0, completed tasks = 7], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_delete_request=0) (op_get_content_summary.failures=0) (directories_deleted=0) (object_list_request.failures=0) (op_hsync=0) (op_openfile=0) (stream_read_vectored_operations=5) (committer_commits_created=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_total_data=917504) (committer_magic_marker_put.failures=0) (committer_commits_aborted=0) (object_select_requests=0) (committer_materialize_file=0) (op_xattr_get_named_map.failures=0) (multipart_upload_aborted=0) (stream_read_fully_operations=0) (stream_read_unbuffered=1) (stream_read_seek_operations=0) (op_createfile=0) (op_get_file_checksum.failures=0) (committer_load_single_pending_file=0) (stream_write_block_uploads_aborted=0) (op_get_file_status=0) (multipart_upload_list=0) (op_is_file.failures=0) (op_get_file_status.failures=0) (files_copied=0) (object_multipart_aborted.failures=0) (op_is_directory=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (op_list_files.failures=0) (stream_read_total_bytes=65986) (op_rename.failures=0) (op_glob_status.failures=0) (multipart_upload_part_put_bytes=0) (audit_request_execution=78) (op_xattr_list.failures=0) (stream_read_vectored_incoming_ranges=10) (committer_commit_job.failures=0) (op_mkdirs.failures=0) (op_create=7) (op_abort.failures=0) (committer_jobs_completed=0) (stream_read_remote_stream_aborted.failures=0) (op_create.failures=0) (fake_directories_deleted=7) (op_access.failures=0) (committer_stage_file_upload.failures=0) (object_bulk_delete_request.failures=0) (op_xattr_get_map=0) (stream_read_version_mismatches=0) (committer_bytes_uploaded=0) (op_get_delegation_token=0) (op_exists.failures=0) (files_copied_bytes=0) (action_executor_acquired=0) (stream_write_bytes=458752) (op_get_delegation_token.failures=0) (op_createfile.failures=0) (stream_write_queue_duration=0) (store_exists_probe.failures=0) (op_copy_from_local_file=0) (op_hflush=0) (committer_magic_files_created=0) (object_copy_requests=0) (stream_write_exceptions_completing_upload=0) (committer_bytes_committed=0) (files_deleted=7) (files_created=7) (op_list_located_status=0) (action_file_opened.failures=0) (op_is_file=0) (object_multipart_aborted=0) (object_put_request=14) (stream_read_operations=1) (action_http_get_request=4) (stream_read_seek_policy_changed=5) (stream_read_vectored_read_bytes_discarded=30) (committer_stage_file_upload=0) (op_mkdirs=7) (delegation_tokens_issued.failures=0) (directories_created=7) (object_continue_list_request=0) (object_put_request_completed=14) (committer_tasks_completed=0) (committer_commits_reverted=0) (action_http_head_request=18) (object_put_request.failures=0) (stream_read_bytes=650) (stream_write_exceptions=0) (store_exists_probe=0) (stream_read_opened=1) (stream_read_vectored_combined_ranges=5) (multipart_upload_list.failures=0) (stream_read_operations_incomplete=0) (op_list_files=0) (action_file_opened=4) (object_multipart_initiated.failures=0) (op_exists=0) (store_io_request=78) (op_get_content_summary=0) (op_rename=0) (committer_jobs_failed=0) (object_continue_list_request.failures=0) (op_is_directory.failures=0) (object_delete_objects=14) (stream_read_bytes_discarded_in_close=65336) (committer_materialize_file.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired.failures=0) (committer_commit_job=0) (multipart_upload_completed=0) (multipart_upload_started=0) (stream_read_remote_stream_drain.failures=0) (object_list_request=28) (committer_tasks_failed=0) (object_metadata_request=18) (stream_write_block_uploads_committed=0) (op_xattr_list=0) (stream_read_seek_forward_operations=0) (committer_load_single_pending_file.failures=0) (op_xattr_get_map.failures=0) (op_create_non_recursive=0) (delegation_tokens_issued=0) (fake_directories_created=0) (store_io_retry=0) (object_multipart_initiated=0) (object_bulk_delete_request=14) (stream_read_seek_backward_operations=0) (action_http_head_request.failures=0) (audit_failure=0) (ignored_errors=0) (audit_access_check_failure=0) (op_delete=7) (stream_read_closed=1) (action_http_get_request.failures=0) (op_list_status.failures=0) (op_xattr_get_named_map=0) (op_xattr_get_named.failures=0) (op_glob_status=0) (op_xattr_get_named=0) (stream_read_seek_bytes_discarded=0) (store_io_throttled=0) (stream_write_queue_duration.failures=0) (committer_commits.failures=0) (stream_read_close_operations=4) (op_open=4) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_part_put=0) (object_put_bytes=458752) (committer_commits_completed=0) (stream_read_remote_stream_aborted=0) (op_list_status=0) (op_delete.failures=0) (stream_read_remote_stream_drain=1) (stream_read_exceptions=0) (stream_aborted=0) (op_get_file_checksum=0) (files_delete_rejected=0) (op_copy_from_local_file.failures=0) (audit_span_creation=26) (stream_write_block_uploads=7) (op_access=0) (multipart_instantiated=0) (op_abort=0) (object_delete_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=7));
minimums=((store_exists_probe.failures.min=-1) (action_http_get_request.failures.min=-1) (op_access.failures.min=-1) (op_is_file.failures.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.min=-1) (op_rename.min=-1) (delegation_tokens_issued.min=-1) (committer_materialize_file.min=-1) (op_abort.failures.min=-1) (op_list_files.min=-1) (object_put_request.min=23) (committer_commit_job.min=-1) (action_http_get_request.min=12) (op_get_file_checksum.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.min=21) (op_get_file_checksum.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_map.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_list.failures.min=-1) (store_exists_probe.min=-1) (committer_materialize_file.failures.min=-1) (op_is_directory.min=-1) (op_exists.min=-1) (committer_stage_file_upload.min=-1) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_status.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.min=3) (op_create.min=9) (object_continue_list_request.failures.min=-1) (op_list_status.failures.min=-1) (object_put_request.failures.min=-1) (op_list_files.failures.min=-1) (op_delete.failures.min=-1) (object_delete_request.min=-1) (action_executor_acquired.failures.min=-1) (object_continue_list_request.min=-1) (op_createfile.min=-1) (op_xattr_get_map.failures.min=-1) (op_create.failures.min=-1) (op_list_status.min=-1) (action_http_head_request.failures.min=-1) (object_list_request.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_list.min=-1) (op_mkdirs.failures.min=-1) (op_get_delegation_token.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_content_summary.min=-1) (committer_load_single_pending_file.min=-1) (stream_write_queue_duration.failures.min=-1) (multipart_upload_list.min=-1) (op_access.min=-1) (op_get_file_status.failures.min=-1) (op_rename.failures.min=-1) (committer_magic_marker_put.min=-1) (op_glob_status.min=-1) (op_abort.min=-1) (op_glob_status.failures.min=-1) (object_delete_request.failures.min=-1) (object_bulk_delete_request.min=6) (object_multipart_initiated.failures.min=-1) (object_list_request.min=6) (op_exists.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_delete.min=31) (delegation_tokens_issued.failures.min=-1) (action_file_opened.min=4) (committer_commit_job.failures.min=-1));
maximums=((op_delete.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_initiated.failures.max=-1) (op_is_directory.max=-1) (committer_commit_job.failures.max=-1) (op_delete.max=58) (store_exists_probe.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_list_files.failures.max=-1) (op_access.failures.max=-1) (op_is_file.failures.max=-1) (object_put_request.max=71) (action_http_get_request.failures.max=-1) (op_xattr_list.max=-1) (object_multipart_aborted.max=-1) (committer_commit_job.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.failures.max=-1) (op_createfile.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named_map.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_stage_file_upload.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=11) (op_copy_from_local_file.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.max=11) (committer_load_single_pending_file.failures.max=-1) (op_list_files.max=-1) (op_rename.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (op_exists.failures.max=-1) (action_http_get_request.max=23) (op_is_file.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.max=12) (op_create.max=45) (op_glob_status.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_drain.max=1) (op_exists.max=-1) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named.max=-1) (op_copy_from_local_file.max=-1) (action_http_head_request.failures.max=-1) (op_get_file_status.max=-1) (delegation_tokens_issued.max=-1) (op_get_delegation_token.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_map.max=-1) (op_access.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_status.failures.max=-1) (op_mkdirs.max=263) (object_continue_list_request.failures.max=-1) (op_is_directory.failures.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_rename.failures.max=-1) (op_create.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_list.failures.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_checksum.max=-1) (op_glob_status.failures.max=-1) (object_list_request.max=167) (object_delete_request.max=-1));
means=((op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=7, sum=316, mean=45.1429)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=68, mean=17.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=14, sum=364, mean=26.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (action_http_head_request.mean=(samples=18, sum=101, mean=5.6111)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=7, sum=453, mean=64.7143)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=4, sum=26, mean=6.5000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=28, sum=419, mean=14.9643)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=7, sum=122, mean=17.4286)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=14, sum=125, mean=8.9286)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:47,558 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:47,558 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:47,558 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,559 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,559 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,559 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000045 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000045&t0=83&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=83&ts=1731777827558
2024-11-16 17:23:47,566 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:47,566 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:47,567 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:47,567 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,567 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:47,567 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000045 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000045&t0=83&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=83&ts=1731777827558
2024-11-16 17:23:47,571 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:47,571 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:47,571 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:47,571 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:47,571 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000045 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000045&t0=83&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=83&ts=1731777827558
2024-11-16 17:23:47,582 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:47,582 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:47,583 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.012s
2024-11-16 17:23:47,583 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:47,583 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:47,583 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,583 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,583 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,584 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000046 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000046&t0=83&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=83&ts=1731777827583
2024-11-16 17:23:47,591 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:47,591 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,591 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:47,592 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15871969250339610009.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:47,593 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15871969250339610009.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (stream_write_bytes=65536) (object_put_request=0) (stream_write_block_uploads=0) (multipart_upload_completed=0) (op_hsync=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (committer_magic_marker_put=0) (op_abort.failures=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (op_abort=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15871969250339610009.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,593 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:47,593 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:47,593 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15871969250339610009.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:47,593 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:47,593 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:47,594 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:47,594 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:47,594 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000046 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000046&t0=83&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=84&ts=1731777827583
2024-11-16 17:23:47,619 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:47,619 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:47,619 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.026s
2024-11-16 17:23:47,620 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15871969250339610009.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:47,620 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15871969250339610009.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,620 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15871969250339610009.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,620 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:47,620 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:47,623 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (object_put_request=1) (stream_write_bytes=65536) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (op_abort.failures=0) (action_executor_acquired=0) (op_abort=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (stream_write_exceptions=0) (stream_write_total_time=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=25) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=25) (object_multipart_aborted.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:47,624 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:47,626 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:47,626 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,627 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:47,627 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [85] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000047 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000047/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000047&t0=85&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=85&ts=1731777827625
2024-11-16 17:23:47,632 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:47,632 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:47,633 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,634 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:23:47,635 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=0) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_vectored_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_unbuffered=0) (action_file_opened.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_forward_operations=0) (stream_read_block_read.failures=0) (stream_read_total_bytes=0) (stream_read_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_closed=0) (stream_read_opened=0) (action_executor_acquired.failures=0) (stream_read_block_read=0) (action_file_opened=1) (stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_fully_operations=0) (action_http_get_request=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=6) (action_http_get_request.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=6) (stream_read_block_acquire_read.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:47,637 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:47,637 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,637 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:47,637 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048&t0=83&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=83&ts=1731777827637
2024-11-16 17:23:47,643 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,643 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,644 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048&t0=83&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=83&ts=1731777827637
2024-11-16 17:23:47,655 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:23:47,655 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:47,655 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:47,655 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:47,655 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:47,655 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:47,655 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:47,655 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:47,655 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:47,655 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:47,656 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:47,656 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:47,656 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:47,656 [s3a-transfer-leg-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:47,656 [s3a-transfer-leg-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,656 [s3a-transfer-leg-bucket-unbounded-pool2-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [86] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048&t0=83&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=86&ts=1731777827637
2024-11-16 17:23:47,663 [s3a-transfer-leg-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:47,663 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:23:47,663 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:47,664 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:47,664 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:47,664 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777827616; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:47,664 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:47,664 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:47,664 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:47,665 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:47,665 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:47,665 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:47,665 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:47,665 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:47,665 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:47,665 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:47,665 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:47,665 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:47,666 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048&t0=83&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=87&ts=1731777827637
2024-11-16 17:23:47,675 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:23:47,675 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:23:47,675 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:23:47,675 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:47,675 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:47,675 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:47,675 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:47,675 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:47,675 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:47,675 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000048&t0=83&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=87&ts=1731777827637
2024-11-16 17:23:47,681 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:47,681 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:47,681 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:23:47,681 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.016s
2024-11-16 17:23:47,681 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.016s
2024-11-16 17:23:47,681 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.026s
2024-11-16 17:23:47,681 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:47,681 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:47,682 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:47,693 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_fully_operations=0) (op_list_status=0) (stream_write_total_time=0) (op_createfile.failures=0) (op_mkdirs.failures=0) (stream_read_seek_operations=0) (op_xattr_get_named=0) (op_mkdirs=8) (multipart_upload_part_put=0) (store_exists_probe=0) (committer_commits_created=0) (object_delete_request.failures=0) (op_hflush=0) (op_get_delegation_token.failures=0) (committer_load_single_pending_file=0) (object_bulk_delete_request=16) (op_get_content_summary=0) (stream_write_bytes=524288) (op_is_directory.failures=0) (op_copy_from_local_file.failures=0) (store_io_request=89) (object_copy_requests=0) (stream_read_unbuffered=1) (op_get_file_checksum=0) (committer_materialize_file=0) (op_delete.failures=0) (object_delete_objects=16) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=1) (files_deleted=8) (op_xattr_get_named_map.failures=0) (op_xattr_get_map=0) (op_xattr_get_named.failures=0) (op_open=5) (store_io_throttled=0) (object_continue_list_request.failures=0) (multipart_upload_started=0) (stream_write_block_uploads_aborted=0) (committer_commits.failures=0) (stream_write_block_uploads_committed=0) (stream_read_closed=1) (committer_jobs_completed=0) (action_http_get_request.failures=0) (object_multipart_aborted.failures=0) (stream_read_operations=1) (op_get_content_summary.failures=0) (committer_commits_reverted=0) (action_executor_acquired.failures=0) (op_get_file_checksum.failures=0) (multipart_upload_list=0) (object_delete_request=0) (stream_read_bytes_discarded_in_close=65336) (files_created=8) (op_access=0) (object_multipart_aborted=0) (files_copied=0) (op_abort.failures=0) (stream_read_operations_incomplete=0) (object_multipart_initiated.failures=0) (action_http_head_request=21) (files_copied_bytes=0) (object_multipart_initiated=0) (stream_read_remote_stream_aborted=0) (store_exists_probe.failures=0) (committer_stage_file_upload.failures=0) (fake_directories_created=0) (op_list_files=0) (stream_read_remote_stream_drain.failures=0) (stream_write_total_data=1048576) (op_is_directory=0) (op_exists=0) (multipart_upload_abort_under_path_invoked=0) (committer_bytes_uploaded=0) (op_get_file_status=0) (delegation_tokens_issued=0) (stream_read_seek_bytes_discarded=0) (op_copy_from_local_file=0) (audit_access_check_failure=0) (op_exists.failures=0) (op_get_file_status.failures=0) (op_rename=0) (object_put_request_completed=16) (stream_read_total_bytes=65986) (committer_materialize_file.failures=0) (stream_read_seek_bytes_skipped=0) (op_is_file.failures=0) (op_hsync=0) (audit_span_creation=30) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_aborted=0) (op_xattr_get_named_map=0) (directories_created=8) (multipart_instantiated=0) (object_select_requests=0) (object_continue_list_request=0) (action_file_opened.failures=0) (files_delete_rejected=0) (action_file_opened=5) (fake_directories_deleted=8) (multipart_upload_part_put_bytes=0) (op_create_non_recursive=0) (op_glob_status.failures=0) (op_glob_status=0) (op_list_files.failures=0) (stream_read_seek_backward_operations=0) (store_io_retry=0) (object_put_request=16) (committer_commit_job.failures=0) (committer_commit_job=0) (committer_tasks_failed=0) (op_xattr_get_map.failures=0) (delegation_tokens_issued.failures=0) (committer_load_single_pending_file.failures=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (object_list_request.failures=0) (op_access.failures=0) (action_executor_acquired=0) (audit_failure=0) (committer_stage_file_upload=0) (audit_request_execution=89) (multipart_upload_list.failures=0) (op_list_status.failures=0) (committer_commits_completed=0) (committer_jobs_failed=0) (stream_read_close_operations=5) (stream_read_seek_forward_operations=0) (ignored_errors=0) (stream_read_vectored_incoming_ranges=10) (op_is_file=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_combined_ranges=5) (multipart_upload_completed=0) (object_put_bytes=524288) (object_list_request=32) (stream_write_exceptions_completing_upload=0) (directories_deleted=0) (stream_write_block_uploads=8) (op_rename.failures=0) (stream_write_queue_duration=0) (op_create=8) (committer_commits_aborted=0) (op_get_delegation_token=0) (op_xattr_list.failures=0) (op_openfile=0) (stream_aborted=0) (op_list_located_status=0) (committer_magic_files_created=0) (object_metadata_request=21) (stream_read_opened=1) (stream_read_vectored_read_bytes_discarded=30) (op_abort=0) (op_createfile=0) (op_xattr_list=0) (stream_read_seek_policy_changed=6) (op_delete=8) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_operations=5) (stream_read_version_mismatches=0) (committer_bytes_committed=0) (committer_tasks_completed=0) (committer_magic_marker_put=0) (action_http_get_request=4) (stream_read_exceptions=0) (stream_write_exceptions=0) (stream_read_bytes=650) (stream_write_queue_duration.failures=0) (op_create.failures=0) (action_http_head_request.failures=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=8) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (client_side_encryption_enabled=0));
minimums=((op_get_file_checksum.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_status.min=-1) (committer_materialize_file.failures.min=-1) (op_glob_status.min=-1) (committer_stage_file_upload.failures.min=-1) (object_bulk_delete_request.min=6) (store_exists_probe.min=-1) (object_multipart_initiated.failures.min=-1) (action_file_opened.failures.min=-1) (committer_commit_job.min=-1) (object_multipart_aborted.failures.min=-1) (op_create.failures.min=-1) (action_file_opened.min=6) (op_rename.min=-1) (multipart_upload_list.min=-1) (delegation_tokens_issued.min=-1) (committer_commit_job.failures.min=-1) (op_list_files.min=-1) (op_is_file.min=-1) (multipart_upload_list.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_checksum.min=-1) (op_get_delegation_token.min=-1) (action_http_get_request.min=12) (op_get_content_summary.min=-1) (object_multipart_initiated.min=-1) (op_is_directory.min=-1) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_map.failures.min=-1) (stream_read_remote_stream_drain.min=1) (action_http_head_request.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_file.failures.min=-1) (op_create.min=9) (op_rename.failures.min=-1) (op_xattr_get_map.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_delete_request.failures.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_delete.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_list.min=-1) (object_put_request.min=25) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_mkdirs.min=21) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.failures.min=-1) (committer_materialize_file.min=-1) (object_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_abort.failures.min=-1) (op_list_status.failures.min=-1) (op_list_status.min=-1) (op_access.min=-1) (op_createfile.min=-1) (op_glob_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.failures.min=-1) (object_multipart_aborted.min=-1) (committer_stage_file_upload.min=-1) (object_delete_request.min=-1) (object_continue_list_request.min=-1) (op_delete.min=26) (action_http_head_request.min=3) (op_abort.min=-1) (op_exists.min=-1) (object_list_request.min=6) (stream_write_queue_duration.failures.min=-1) (op_get_content_summary.failures.min=-1));
maximums=((object_continue_list_request.max=-1) (object_delete_request.max=-1) (committer_magic_marker_put.failures.max=-1) (op_copy_from_local_file.max=-1) (op_abort.max=-1) (committer_commit_job.max=-1) (op_mkdirs.max=263) (object_list_request.failures.max=-1) (multipart_upload_list.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.max=23) (committer_load_single_pending_file.max=-1) (op_is_directory.failures.max=-1) (op_exists.max=-1) (op_get_file_checksum.failures.max=-1) (op_rename.max=-1) (op_xattr_get_named.failures.max=-1) (op_createfile.max=-1) (op_is_file.max=-1) (object_continue_list_request.failures.max=-1) (op_access.max=-1) (action_executor_acquired.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_content_summary.max=-1) (object_list_request.max=167) (stream_read_remote_stream_aborted.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.failures.max=-1) (op_access.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_map.max=-1) (action_http_head_request.failures.max=-1) (action_http_get_request.failures.max=-1) (op_exists.failures.max=-1) (action_file_opened.max=11) (stream_read_remote_stream_drain.max=1) (op_xattr_list.failures.max=-1) (op_delete.failures.max=-1) (stream_write_queue_duration.max=-1) (op_rename.failures.max=-1) (committer_commit_job.failures.max=-1) (action_http_head_request.max=11) (op_list_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_list.max=-1) (op_glob_status.max=-1) (object_put_request.max=71) (op_list_files.max=-1) (op_is_directory.max=-1) (store_exists_probe.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_checksum.max=-1) (object_put_request.failures.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_content_summary.failures.max=-1) (action_file_opened.failures.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_status.max=-1) (committer_load_single_pending_file.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_stage_file_upload.max=-1) (op_delete.max=58) (op_createfile.failures.max=-1) (op_abort.failures.max=-1) (delegation_tokens_issued.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_bulk_delete_request.max=12) (action_executor_acquired.failures.max=-1) (op_list_status.max=-1) (op_create.max=45) (op_glob_status.failures.max=-1));
means=((op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=16, sum=400, mean=25.0000)) (object_bulk_delete_request.mean=(samples=16, sum=141, mean=8.8125)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=5, sum=32, mean=6.4000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=32, sum=452, mean=14.1250)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=21, sum=115, mean=5.4762)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=8, sum=478, mean=59.7500)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=8, sum=342, mean=42.7500)) (op_create.mean=(samples=8, sum=131, mean=16.3750)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=68, mean=17.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:47,694 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:47,694 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:47,694 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,694 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,694 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,694 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000049 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000049&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=88&ts=1731777827694
2024-11-16 17:23:47,700 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:47,701 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:47,701 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:47,702 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,702 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:47,702 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000049 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000049&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=88&ts=1731777827694
2024-11-16 17:23:47,705 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:47,705 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:47,705 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:47,706 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:47,706 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000049 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000049&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=88&ts=1731777827694
2024-11-16 17:23:47,715 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:47,715 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:47,715 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:23:47,715 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:47,717 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:47,717 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,717 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,717 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,717 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000050 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000050&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=88&ts=1731777827716
2024-11-16 17:23:47,724 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:47,725 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,725 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:47,726 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1046469895456056898.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:47,726 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1046469895456056898.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_bytes=65536) (object_multipart_initiated=0) (op_abort=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (stream_write_total_data=0) (object_put_request.failures=0) (op_abort.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (op_hflush=0) (multipart_upload_completed.failures=0) (object_put_request=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1));
maximums=((op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1046469895456056898.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,727 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:47,727 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:47,727 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1046469895456056898.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:47,733 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:47,733 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:47,734 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:47,734 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:47,735 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000050 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000050&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=89&ts=1731777827716
2024-11-16 17:23:47,755 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:47,756 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:47,756 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.023s
2024-11-16 17:23:47,756 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1046469895456056898.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:47,756 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1046469895456056898.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,756 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1046469895456056898.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,756 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:47,757 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:47,758 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (op_hflush=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (op_abort.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (object_put_request=1) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (op_abort=0) (stream_write_total_data=65536) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (op_hsync=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.min=20) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=20) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=20, mean=20.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:47,759 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:47,760 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:47,760 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,761 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:47,761 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000051 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000051&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=88&ts=1731777827760
2024-11-16 17:23:47,765 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:47,766 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:47,767 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,767 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:23:47,768 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:47,768 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:23:47,773 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:23:47,773 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,774 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,774 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:47,775 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000051 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-999&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000051&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=90&ts=1731777827760
2024-11-16 17:23:47,786 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:23:47,787 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,789 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain=0) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=0) (action_http_get_request=1) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_policy_changed=1) (stream_read_block_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request.failures=0) (stream_read_total_bytes=1000) (stream_read_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_fully_operations=0) (stream_read_close_operations=1) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_operations=1) (action_executor_acquired.failures=0) (action_executor_acquired=0) (stream_aborted=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_vectored_incoming_ranges=10) (stream_read_bytes=1000) (stream_read_block_read=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=13) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=6));
maximums=((action_file_opened.max=6) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=13) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=13, mean=13.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:47,790 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:47,790 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,790 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:47,790 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=88&ts=1731777827789
2024-11-16 17:23:47,794 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,794 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,794 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=88&ts=1731777827789
2024-11-16 17:23:47,800 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:47,800 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:47,800 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:47,800 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:47,800 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:47,800 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:47,800 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:47,800 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:47,801 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:47,801 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:47,801 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:47,801 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:47,801 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:47,802 [s3a-transfer-leg-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:47,802 [s3a-transfer-leg-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,802 [s3a-transfer-leg-bucket-unbounded-pool2-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [91] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=91&ts=1731777827789
2024-11-16 17:23:47,808 [s3a-transfer-leg-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:47,808 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:23:47,809 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:47,809 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:47,809 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:47,809 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777827751; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:47,809 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:47,810 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:47,810 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:47,810 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:47,810 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:47,811 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:47,811 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:47,811 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:47,811 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:47,811 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:47,811 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:47,811 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:47,812 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=92&ts=1731777827789
2024-11-16 17:23:47,818 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:23:47,818 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:47,818 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:23:47,818 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:47,818 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:47,819 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:47,819 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:47,819 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:47,819 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:47,819 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000052&t0=88&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=92&ts=1731777827789
2024-11-16 17:23:47,824 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:47,824 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:47,824 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:23:47,824 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.013s
2024-11-16 17:23:47,825 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:23:47,825 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.025s
2024-11-16 17:23:47,825 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:47,825 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:47,826 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:47,840 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 10, active threads = 0, queued tasks = 0, completed tasks = 10], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_rename.failures=0) (op_xattr_get_named_map.failures=0) (op_get_delegation_token=0) (committer_jobs_completed=0) (delegation_tokens_issued.failures=0) (op_delete.failures=0) (op_get_file_checksum=0) (object_multipart_aborted.failures=0) (stream_write_bytes=589824) (object_list_request.failures=0) (committer_bytes_committed=0) (op_glob_status=0) (store_io_request=101) (op_list_files=0) (op_abort=0) (action_http_get_request.failures=0) (op_createfile=0) (committer_commit_job.failures=0) (stream_read_seek_bytes_skipped=0) (op_xattr_get_named=0) (op_get_file_checksum.failures=0) (store_exists_probe=0) (committer_commits_completed=0) (op_is_directory=0) (ignored_errors=0) (op_list_located_status=0) (audit_request_execution=101) (multipart_upload_list.failures=0) (stream_read_bytes=1650) (stream_read_remote_stream_aborted=0) (op_copy_from_local_file.failures=0) (op_xattr_get_map=0) (multipart_upload_part_put_bytes=0) (op_get_content_summary.failures=0) (multipart_upload_list=0) (object_delete_request=0) (stream_read_remote_stream_drain=1) (committer_stage_file_upload.failures=0) (committer_stage_file_upload=0) (action_http_head_request.failures=0) (op_list_status=0) (action_file_opened.failures=0) (op_xattr_get_named.failures=0) (op_access=0) (stream_read_close_operations=6) (op_get_file_status=0) (files_created=9) (object_multipart_initiated.failures=0) (stream_write_block_uploads_aborted=0) (committer_commits_created=0) (multipart_upload_started=0) (action_executor_acquired.failures=0) (committer_magic_files_created=0) (op_get_file_status.failures=0) (op_hflush=0) (multipart_instantiated=0) (files_delete_rejected=0) (op_exists=0) (action_http_head_request=24) (stream_read_total_bytes=66986) (committer_commit_job=0) (op_openfile=0) (object_delete_objects=18) (stream_read_unbuffered=1) (stream_read_opened=1) (stream_write_queue_duration.failures=0) (stream_read_operations_incomplete=0) (object_bulk_delete_request=18) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_close=65336) (audit_failure=0) (multipart_upload_part_put=0) (op_abort.failures=0) (op_glob_status.failures=0) (files_copied_bytes=0) (stream_write_total_time=0) (op_get_delegation_token.failures=0) (store_io_retry=0) (op_open=6) (op_list_files.failures=0) (op_exists.failures=0) (action_executor_acquired=0) (committer_tasks_completed=0) (object_copy_requests=0) (object_bulk_delete_request.failures=0) (object_list_request=36) (files_deleted=9) (op_is_file.failures=0) (object_continue_list_request=0) (object_put_request=18) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (directories_deleted=0) (audit_span_creation=34) (op_access.failures=0) (stream_read_remote_stream_drain.failures=0) (object_put_bytes=589824) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_completed=0) (op_xattr_get_map.failures=0) (stream_write_exceptions=0) (directories_created=9) (op_xattr_get_named_map=0) (store_exists_probe.failures=0) (committer_jobs_failed=0) (op_delete=9) (op_get_content_summary=0) (committer_commits_reverted=0) (store_io_throttled=0) (stream_read_vectored_incoming_ranges=20) (stream_read_seek_policy_changed=7) (stream_read_bytes_discarded_in_abort=0) (op_create=9) (stream_aborted=0) (committer_load_single_pending_file=0) (committer_materialize_file=0) (object_multipart_aborted=0) (op_create_non_recursive=0) (op_mkdirs=9) (files_copied=0) (stream_write_total_data=1179648) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (stream_read_closed=1) (stream_write_block_uploads=9) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=30) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (action_file_opened=6) (stream_read_bytes_backwards_on_seek=0) (object_delete_request.failures=0) (object_put_request.failures=0) (op_is_file=0) (stream_read_vectored_combined_ranges=6) (committer_magic_marker_put=0) (multipart_upload_aborted=0) (fake_directories_deleted=9) (committer_materialize_file.failures=0) (op_create.failures=0) (stream_read_vectored_operations=6) (delegation_tokens_issued=0) (stream_read_seek_backward_operations=0) (op_copy_from_local_file=0) (multipart_upload_abort_under_path_invoked=0) (action_http_get_request=5) (object_continue_list_request.failures=0) (op_xattr_list.failures=0) (committer_commits_aborted=0) (op_mkdirs.failures=0) (op_xattr_list=0) (object_metadata_request=24) (committer_bytes_uploaded=0) (committer_commits.failures=0) (op_is_directory.failures=0) (stream_write_block_uploads_committed=0) (op_rename=0) (object_put_request_completed=18) (object_select_requests=0) (committer_load_single_pending_file.failures=0) (op_createfile.failures=0) (committer_tasks_failed=0) (stream_read_fully_operations=0) (fake_directories_created=0) (stream_read_version_mismatches=0) (op_list_status.failures=0) (audit_access_check_failure=0) (stream_read_operations=1) (op_hsync=0));
gauges=((object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=9));
minimums=((op_create.min=9) (op_xattr_get_map.min=-1) (object_multipart_aborted.min=-1) (committer_materialize_file.failures.min=-1) (op_abort.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.min=-1) (op_exists.failures.min=-1) (op_delete.min=25) (object_put_request.failures.min=-1) (op_rename.failures.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.min=-1) (action_file_opened.min=6) (op_get_content_summary.failures.min=-1) (op_xattr_list.min=-1) (op_get_file_checksum.min=-1) (op_is_file.min=-1) (object_put_request.min=20) (op_createfile.min=-1) (op_rename.min=-1) (multipart_upload_list.failures.min=-1) (object_bulk_delete_request.min=5) (object_list_request.failures.min=-1) (op_is_directory.min=-1) (op_list_status.failures.min=-1) (action_http_head_request.min=3) (op_get_delegation_token.min=-1) (committer_commit_job.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_file.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_named_map.failures.min=-1) (store_exists_probe.min=-1) (multipart_upload_list.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_files.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (action_http_get_request.min=13) (op_list_files.failures.min=-1) (op_xattr_get_map.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_copy_from_local_file.min=-1) (stream_read_remote_stream_drain.min=1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_status.min=-1) (committer_load_single_pending_file.min=-1) (stream_write_queue_duration.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.failures.min=-1) (object_list_request.min=6) (op_get_file_status.min=-1) (op_get_file_status.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_mkdirs.failures.min=-1) (op_exists.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_head_request.failures.min=-1) (op_mkdirs.min=21) (op_access.min=-1) (store_exists_probe.failures.min=-1) (object_continue_list_request.min=-1) (op_create.failures.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((op_glob_status.max=-1) (object_continue_list_request.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_delegation_token.max=-1) (op_createfile.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_list_files.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_rename.max=-1) (multipart_upload_list.max=-1) (op_get_file_checksum.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_create.failures.max=-1) (op_exists.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_materialize_file.max=-1) (object_put_request.max=71) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_status.failures.max=-1) (object_list_request.max=167) (delegation_tokens_issued.max=-1) (committer_magic_marker_put.max=-1) (op_list_files.max=-1) (op_glob_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_file.failures.max=-1) (action_file_opened.failures.max=-1) (op_access.max=-1) (op_mkdirs.failures.max=-1) (op_delete.failures.max=-1) (op_list_status.max=-1) (action_http_get_request.max=23) (stream_write_queue_duration.failures.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_aborted.max=-1) (object_list_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_get_content_summary.max=-1) (action_file_opened.max=11) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_is_directory.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_mkdirs.max=263) (action_http_head_request.max=11) (op_abort.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_checksum.max=-1) (object_delete_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.max=-1) (object_multipart_initiated.max=-1) (store_exists_probe.max=-1) (op_createfile.failures.max=-1) (op_abort.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_drain.max=1) (committer_commit_job.max=-1) (op_create.max=45) (op_access.failures.max=-1) (committer_commit_job.failures.max=-1) (op_delete.max=58) (op_get_file_status.max=-1) (op_get_content_summary.failures.max=-1) (action_http_get_request.failures.max=-1) (object_bulk_delete_request.max=12) (op_exists.failures.max=-1) (op_is_file.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.failures.max=-1) (op_rename.failures.max=-1) (committer_stage_file_upload.max=-1) (action_executor_acquired.max=-1) (multipart_upload_list.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_list.max=-1));
means=((op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=9, sum=140, mean=15.5556)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=9, sum=367, mean=40.7778)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=6, sum=38, mean=6.3333)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=81, mean=16.2000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=24, sum=125, mean=5.2083)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=18, sum=152, mean=8.4444)) (op_mkdirs.mean=(samples=9, sum=499, mean=55.4444)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=36, sum=477, mean=13.2500)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=18, sum=428, mean=23.7778)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:47,841 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:47,841 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:47,841 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,842 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,842 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,842 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000053 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000053&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=93&ts=1731777827841
2024-11-16 17:23:47,848 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:47,848 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:47,849 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:47,849 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,850 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:47,850 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000053 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000053&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=93&ts=1731777827841
2024-11-16 17:23:47,854 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:47,855 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:47,855 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:47,855 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:47,855 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000053 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000053&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=93&ts=1731777827841
2024-11-16 17:23:47,863 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:47,864 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:47,864 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:23:47,864 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:47,864 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:47,865 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,865 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,865 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,865 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000054 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000054&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=93&ts=1731777827864
2024-11-16 17:23:47,870 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:47,870 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,871 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:47,871 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17464544719603496056.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:47,872 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17464544719603496056.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (op_hsync=0) (object_put_request.failures=0) (op_abort=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (object_put_request=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (op_hflush=0) (stream_write_queue_duration=0) (stream_write_block_uploads=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1));
maximums=((action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17464544719603496056.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,873 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:47,873 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:47,874 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17464544719603496056.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:47,874 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:47,874 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:47,875 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:47,875 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:47,875 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000054 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000054&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=94&ts=1731777827864
2024-11-16 17:23:47,894 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:47,894 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:47,894 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.020s
2024-11-16 17:23:47,896 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17464544719603496056.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:47,896 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17464544719603496056.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,896 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17464544719603496056.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:47,896 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:47,896 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:47,897 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (op_hflush=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (object_put_request.failures=0) (op_hsync=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (op_abort.failures=0) (object_put_request=1) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=19) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=19) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=19, mean=19.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:47,898 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:47,898 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:47,899 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:47,899 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:47,899 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000055 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000055/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000055&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=93&ts=1731777827898
2024-11-16 17:23:47,906 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:47,906 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777827000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:23:47,908 [s3a-transfer-leg-bucket-unbounded-pool2-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:47,908 [s3a-transfer-leg-bucket-unbounded-pool2-t11] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,909 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:47,909 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:47,910 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:23:47,910 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,911 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,912 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:47,912 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=1947-2046&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000056&t0=95&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=96&ts=1731777827908
2024-11-16 17:23:47,913 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:47,913 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,913 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,913 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:47,913 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=40960-41983&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000056&t0=95&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=98&ts=1731777827908
2024-11-16 17:23:47,915 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,915 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:47,915 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:47,915 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=8192-14435&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000056&t0=95&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=97&ts=1731777827908
2024-11-16 17:23:47,934 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:23:47,934 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:23:47,934 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:23:47,934 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,936 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.023s
2024-11-16 17:23:47,937 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,937 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.025s
2024-11-16 17:23:47,938 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:47,941 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_operations=1) (stream_read_close_operations=1) (stream_read_remote_stream_aborted=0) (stream_read_block_read=0) (stream_read_opened=0) (action_http_get_request.failures=0) (stream_read_block_read.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain.failures=0) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_operations=0) (stream_read_prefetch_operations=0) (stream_read_fully_operations=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=5) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=1424) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_read_unbuffered=0) (stream_read_seek_backward_operations=0) (stream_read_bytes=1424) (action_http_get_request=3) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=3) (stream_read_block_acquire_read.failures=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=19) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=26) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=68, mean=22.6667)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:47,942 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:47,942 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:47,943 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:47,943 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=93&ts=1731777827942
2024-11-16 17:23:47,946 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:47,946 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,947 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=93&ts=1731777827942
2024-11-16 17:23:47,952 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:47,952 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:47,952 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:47,952 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:47,952 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:47,952 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:47,954 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:47,954 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:47,954 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:47,955 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:47,955 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:47,955 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:47,955 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:47,955 [s3a-transfer-leg-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:47,955 [s3a-transfer-leg-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:47,955 [s3a-transfer-leg-bucket-unbounded-pool2-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [99] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=99&ts=1731777827942
2024-11-16 17:23:47,962 [s3a-transfer-leg-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:47,962 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:23:47,962 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:47,962 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:47,962 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:47,962 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777827891; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:47,962 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:47,962 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:47,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:47,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:47,964 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:47,964 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:47,964 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:47,964 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:47,964 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:47,964 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:47,964 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:47,964 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:47,965 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=100&ts=1731777827942
2024-11-16 17:23:47,975 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:23:47,975 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:23:47,975 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:23:47,975 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:47,975 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:47,975 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:47,976 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:47,976 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:47,976 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:47,976 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000057&t0=93&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=100&ts=1731777827942
2024-11-16 17:23:47,987 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:23:47,988 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:23:47,988 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:23:47,988 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.024s
2024-11-16 17:23:47,988 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.024s
2024-11-16 17:23:47,988 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:23:47,988 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:47,988 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:47,990 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:48,001 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 12], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_magic_marker_put=0) (action_http_head_request.failures=0) (object_delete_request.failures=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (op_open=7) (stream_write_queue_duration=0) (op_get_file_checksum.failures=0) (object_multipart_initiated.failures=0) (files_deleted=10) (stream_write_total_time=0) (stream_read_exceptions=0) (object_continue_list_request=0) (store_exists_probe=0) (stream_read_remote_stream_drain.failures=0) (stream_read_fully_operations=0) (object_metadata_request=27) (action_file_opened.failures=0) (stream_write_exceptions=0) (op_list_status.failures=0) (directories_deleted=0) (stream_read_closed=1) (files_copied_bytes=0) (op_xattr_get_named_map=0) (op_exists=0) (audit_access_check_failure=0) (files_delete_rejected=0) (op_xattr_list=0) (multipart_upload_abort_under_path_invoked=0) (op_get_file_checksum=0) (directories_created=10) (stream_read_seek_forward_operations=0) (committer_commits_completed=0) (stream_read_operations=1) (op_openfile=0) (op_list_located_status=0) (action_http_get_request.failures=0) (stream_aborted=0) (stream_read_vectored_incoming_ranges=25) (op_get_delegation_token.failures=0) (op_create.failures=0) (object_continue_list_request.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_opened=1) (stream_read_seek_backward_operations=0) (stream_read_close_operations=7) (op_xattr_get_map.failures=0) (store_exists_probe.failures=0) (audit_span_creation=39) (op_get_content_summary.failures=0) (object_copy_requests=0) (stream_read_vectored_combined_ranges=9) (op_list_files=0) (op_create=10) (committer_jobs_completed=0) (op_create_non_recursive=0) (stream_write_queue_duration.failures=0) (audit_failure=0) (multipart_instantiated=0) (multipart_upload_part_put=0) (stream_write_block_uploads_committed=0) (action_executor_acquired=0) (object_multipart_initiated=0) (committer_materialize_file.failures=0) (delegation_tokens_issued.failures=0) (op_createfile=0) (op_is_file=0) (op_hsync=0) (action_executor_acquired.failures=0) (store_io_request=115) (object_delete_request=0) (op_xattr_list.failures=0) (op_glob_status.failures=0) (fake_directories_created=0) (delegation_tokens_issued=0) (stream_write_block_uploads_aborted=0) (committer_stage_file_upload.failures=0) (committer_commits_aborted=0) (op_access=0) (stream_write_total_data=1310720) (op_delete=10) (stream_read_seek_policy_changed=8) (op_delete.failures=0) (object_put_request=20) (multipart_upload_part_put_bytes=0) (action_file_opened=7) (committer_load_single_pending_file.failures=0) (action_http_head_request=27) (op_access.failures=0) (committer_commit_job.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_is_file.failures=0) (object_bulk_delete_request=20) (op_hflush=0) (op_createfile.failures=0) (store_io_throttled=0) (op_glob_status=0) (stream_read_operations_incomplete=0) (op_xattr_get_named_map.failures=0) (files_copied=0) (committer_magic_files_created=0) (multipart_upload_aborted=0) (committer_commits.failures=0) (object_list_request=40) (op_rename=0) (ignored_errors=0) (op_get_file_status=1) (stream_read_bytes_discarded_in_close=65336) (stream_write_bytes=655360) (committer_commit_job=0) (multipart_upload_list=0) (op_xattr_get_named.failures=0) (op_list_status=0) (stream_read_seek_operations=0) (committer_commits_reverted=0) (committer_load_single_pending_file=0) (op_xattr_get_named=0) (committer_tasks_completed=0) (committer_jobs_failed=0) (audit_request_execution=115) (op_copy_from_local_file.failures=0) (store_io_retry=0) (stream_write_exceptions_completing_upload=0) (op_is_directory=0) (multipart_upload_started=0) (op_get_file_status.failures=0) (stream_read_vectored_read_bytes_discarded=5974) (files_created=10) (stream_read_total_bytes=68410) (op_get_delegation_token=0) (op_exists.failures=0) (committer_stage_file_upload=0) (object_put_request_completed=20) (object_multipart_aborted.failures=0) (op_rename.failures=0) (stream_read_unbuffered=1) (object_delete_objects=20) (object_multipart_aborted=0) (fake_directories_deleted=10) (multipart_upload_list.failures=0) (stream_read_remote_stream_drain=1) (committer_commits_created=0) (stream_read_version_mismatches=0) (object_bulk_delete_request.failures=0) (object_put_bytes=655360) (action_http_get_request=8) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted.failures=0) (committer_tasks_failed=0) (op_get_content_summary=0) (stream_write_block_uploads=10) (stream_read_remote_stream_aborted=0) (op_list_files.failures=0) (op_mkdirs=10) (committer_bytes_uploaded=0) (multipart_upload_completed=0) (stream_read_bytes_backwards_on_seek=0) (op_mkdirs.failures=0) (op_abort=0) (op_is_directory.failures=0) (op_abort.failures=0) (committer_bytes_committed=0) (stream_read_bytes=3074) (object_list_request.failures=0) (committer_materialize_file=0) (object_select_requests=0) (op_copy_from_local_file=0) (op_xattr_get_map=0) (stream_read_vectored_operations=7));
gauges=((stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=10));
minimums=((op_get_file_checksum.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_delete_request.failures.min=-1) (op_glob_status.min=-1) (op_exists.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_access.min=-1) (op_xattr_get_map.min=-1) (op_createfile.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.failures.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_delete.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_status.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_list.min=-1) (op_get_file_checksum.failures.min=-1) (op_access.failures.min=-1) (op_rename.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.failures.min=-1) (op_glob_status.failures.min=-1) (op_abort.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=19) (op_mkdirs.failures.min=-1) (action_executor_acquired.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_commit_job.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_list.min=-1) (op_list_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_abort.failures.min=-1) (committer_materialize_file.min=-1) (op_create.min=8) (action_executor_acquired.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.failures.min=-1) (op_mkdirs.min=21) (op_createfile.min=-1) (op_xattr_get_named.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.min=-1) (object_delete_request.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_write_queue_duration.min=-1) (op_exists.failures.min=-1) (op_list_files.failures.min=-1) (object_bulk_delete_request.min=5) (op_get_file_status.min=8) (object_continue_list_request.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_rename.min=-1) (object_put_request.min=19) (action_file_opened.min=0) (op_xattr_get_named_map.failures.min=-1) (store_exists_probe.min=-1) (op_delete.min=25) (action_http_get_request.failures.min=-1) (op_create.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_list_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_is_file.min=-1) (action_http_head_request.min=3) (action_http_head_request.failures.min=-1) (op_is_directory.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_delegation_token.min=-1) (object_list_request.min=5) (op_copy_from_local_file.min=-1) (op_is_directory.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1));
maximums=((object_list_request.failures.max=-1) (object_put_request.max=71) (committer_load_single_pending_file.max=-1) (op_createfile.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_access.max=-1) (multipart_upload_list.failures.max=-1) (op_delete.failures.max=-1) (op_get_content_summary.max=-1) (op_rename.failures.max=-1) (op_is_file.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.max=-1) (action_http_get_request.max=26) (object_continue_list_request.failures.max=-1) (object_put_request.failures.max=-1) (op_create.max=45) (op_mkdirs.max=263) (op_is_file.failures.max=-1) (object_multipart_aborted.max=-1) (object_bulk_delete_request.max=12) (op_list_status.failures.max=-1) (object_multipart_initiated.max=-1) (action_http_head_request.max=11) (op_list_files.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_abort.max=-1) (op_copy_from_local_file.max=-1) (op_abort.failures.max=-1) (op_mkdirs.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_file_opened.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_status.max=8) (object_list_request.max=167) (object_delete_request.max=-1) (action_file_opened.max=11) (op_rename.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_checksum.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_checksum.failures.max=-1) (store_exists_probe.max=-1) (op_get_file_status.failures.max=-1) (op_create.failures.max=-1) (op_glob_status.max=-1) (committer_magic_marker_put.failures.max=-1) (op_exists.max=-1) (op_list_status.max=-1) (delegation_tokens_issued.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_list.failures.max=-1) (op_exists.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=1) (committer_commit_job.max=-1) (op_createfile.max=-1) (op_is_directory.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_map.failures.max=-1) (op_delete.max=58) (op_list_files.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.failures.max=-1) (op_access.failures.max=-1));
means=((object_put_request.mean=(samples=20, sum=455, mean=22.7500)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=7, sum=38, mean=5.4286)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=10, sum=148, mean=14.8000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=27, sum=139, mean=5.1481)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=149, mean=18.6250)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=10, sum=403, mean=40.3000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=40, sum=501, mean=12.5250)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=20, sum=174, mean=8.7000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=10, sum=522, mean=52.2000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:48,002 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:48,002 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,002 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,002 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,002 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,002 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000058 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000058&t0=101&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=101&ts=1731777828001
2024-11-16 17:23:48,012 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:23:48,012 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,012 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,012 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,012 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,013 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000058 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000058&t0=101&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=101&ts=1731777828001
2024-11-16 17:23:48,016 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,016 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:48,016 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:48,016 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:48,017 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000058 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000058&t0=101&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=101&ts=1731777828001
2024-11-16 17:23:48,034 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:48,035 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:48,035 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.019s
2024-11-16 17:23:48,035 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:48,035 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,036 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,036 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,036 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,036 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000059 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000059&t0=101&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=101&ts=1731777828035
2024-11-16 17:23:48,051 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:23:48,051 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,052 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:48,053 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-282609336377085593.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:48,054 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-282609336377085593.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_bytes=65536) (stream_write_queue_duration=0) (object_put_request.failures=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (op_abort=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (object_put_request=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (multipart_upload_part_put=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1));
maximums=((multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-282609336377085593.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,055 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,055 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:48,056 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-282609336377085593.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:48,057 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:48,057 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:48,058 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:48,058 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:48,059 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000059 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000059&t0=101&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=102&ts=1731777828035
2024-11-16 17:23:48,082 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:48,082 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:48,082 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.025s
2024-11-16 17:23:48,083 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-282609336377085593.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:48,083 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-282609336377085593.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,083 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-282609336377085593.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,083 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:48,084 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,084 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (multipart_upload_completed=0) (op_abort.failures=0) (object_multipart_initiated=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (object_put_request=1) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (op_hsync=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_hflush=0) (op_abort=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.min=23) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1));
maximums=((op_abort.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=23) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=23, mean=23.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:48,085 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:48,086 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,087 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,087 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:48,088 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [103] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000060 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000060/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000060&t0=103&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=103&ts=1731777828086
2024-11-16 17:23:48,092 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:48,093 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:48,094 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,094 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:23:48,094 [JUnit-testEOFRanges[Buffer type : direct]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,095 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_incoming_ranges=0) (action_executor_acquired.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_block_acquire_read.failures=0) (stream_read_total_bytes=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes=0) (stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_seek_bytes_discarded=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_operations=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_fully_operations=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (action_file_opened=1) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_block_read=0) (stream_read_remote_stream_drain=0) (stream_read_closed=0) (stream_read_exceptions=0) (stream_read_operations_incomplete=0) (stream_read_opened=0) (action_http_get_request.failures=0) (action_http_get_request=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=7) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=7) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:48,096 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:48,096 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,096 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,097 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061&t0=101&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=101&ts=1731777828096
2024-11-16 17:23:48,102 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,102 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,102 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061&t0=101&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=101&ts=1731777828096
2024-11-16 17:23:48,109 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:48,110 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:48,110 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:48,110 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:48,110 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:48,110 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:48,110 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:48,110 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:48,111 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:48,111 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:48,111 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:48,112 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:48,117 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:48,118 [s3a-transfer-leg-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:48,118 [s3a-transfer-leg-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,122 [s3a-transfer-leg-bucket-unbounded-pool2-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [104] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061&t0=101&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=104&ts=1731777828096
2024-11-16 17:23:48,139 [s3a-transfer-leg-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.021s
2024-11-16 17:23:48,139 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.022s
2024-11-16 17:23:48,139 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:48,140 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:48,140 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:48,140 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777828079; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:48,140 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:48,140 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:48,140 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:48,140 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:48,141 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:48,141 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:48,141 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:48,141 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:48,141 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,142 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,142 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:48,142 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,142 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061&t0=101&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=105&ts=1731777828096
2024-11-16 17:23:48,150 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:48,150 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:23:48,150 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:23:48,150 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:48,151 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:48,151 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,151 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,151 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:48,151 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,151 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000061&t0=101&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=105&ts=1731777828096
2024-11-16 17:23:48,159 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:48,159 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:48,159 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:23:48,159 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.018s
2024-11-16 17:23:48,159 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:23:48,159 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.048s
2024-11-16 17:23:48,159 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:48,159 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:48,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:48,177 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 14, active threads = 0, queued tasks = 0, completed tasks = 14], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_magic_marker_put=0) (op_create=11) (stream_read_vectored_read_bytes_discarded=5974) (op_exists=0) (audit_request_execution=126) (op_xattr_get_named=0) (op_exists.failures=0) (fake_directories_deleted=11) (op_access.failures=0) (stream_write_bytes=720896) (stream_write_block_uploads_committed=0) (stream_write_block_uploads=11) (op_xattr_get_named_map.failures=0) (stream_read_remote_stream_drain=1) (committer_stage_file_upload.failures=0) (action_executor_acquired=0) (op_hsync=0) (committer_bytes_committed=0) (store_io_request=126) (object_multipart_aborted.failures=0) (delegation_tokens_issued.failures=0) (committer_magic_marker_put.failures=0) (op_xattr_get_map.failures=0) (object_bulk_delete_request.failures=0) (stream_read_seek_forward_operations=0) (object_put_request.failures=0) (op_delete=11) (fake_directories_created=0) (op_list_located_status=0) (object_multipart_initiated=0) (stream_read_opened=1) (multipart_upload_started=0) (op_list_status.failures=0) (op_abort.failures=0) (committer_commits_aborted=0) (op_is_directory=0) (op_abort=0) (op_xattr_list.failures=0) (op_get_content_summary=0) (committer_tasks_completed=0) (stream_read_seek_bytes_skipped=0) (files_delete_rejected=0) (audit_failure=0) (op_createfile.failures=0) (multipart_upload_aborted=0) (stream_read_unbuffered=1) (op_mkdirs=11) (multipart_upload_part_put_bytes=0) (op_list_status=0) (stream_read_total_bytes=68410) (committer_commit_job.failures=0) (object_select_requests=0) (op_mkdirs.failures=0) (action_http_head_request.failures=0) (stream_read_version_mismatches=0) (committer_stage_file_upload=0) (committer_load_single_pending_file.failures=0) (committer_commits_created=0) (stream_write_total_time=0) (stream_read_bytes_backwards_on_seek=0) (op_createfile=0) (committer_jobs_completed=0) (stream_read_close_operations=8) (op_access=0) (stream_aborted=0) (op_get_file_checksum.failures=0) (object_continue_list_request.failures=0) (directories_created=11) (stream_read_operations_incomplete=0) (op_get_file_status.failures=0) (committer_load_single_pending_file=0) (multipart_upload_list=0) (stream_write_exceptions=0) (stream_read_exceptions=0) (store_io_throttled=0) (op_create.failures=0) (stream_read_operations=1) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named_map=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_incoming_ranges=25) (op_list_files=0) (action_http_get_request.failures=0) (object_put_request_completed=22) (stream_read_closed=1) (op_hflush=0) (committer_magic_files_created=0) (committer_commits_completed=0) (multipart_instantiated=0) (committer_commit_job=0) (op_get_content_summary.failures=0) (ignored_errors=0) (stream_write_queue_duration.failures=0) (op_openfile=0) (op_copy_from_local_file.failures=0) (op_create_non_recursive=0) (op_is_directory.failures=0) (op_get_delegation_token.failures=0) (op_xattr_get_named.failures=0) (op_is_file=0) (committer_commits_reverted=0) (stream_read_seek_bytes_discarded=0) (object_delete_request=0) (object_copy_requests=0) (op_rename.failures=0) (object_metadata_request=30) (object_put_request=22) (object_list_request.failures=0) (op_xattr_get_map=0) (action_http_head_request=30) (stream_read_remote_stream_aborted.failures=0) (action_file_opened=8) (op_glob_status=0) (op_get_file_status=1) (stream_read_bytes_discarded_in_close=65336) (multipart_upload_completed=0) (audit_access_check_failure=0) (store_exists_probe=0) (files_copied=0) (stream_write_block_uploads_aborted=0) (stream_read_bytes=3074) (stream_read_seek_operations=0) (audit_span_creation=43) (committer_tasks_failed=0) (op_rename=0) (op_xattr_list=0) (committer_commits.failures=0) (object_multipart_initiated.failures=0) (store_exists_probe.failures=0) (delegation_tokens_issued=0) (action_http_get_request=8) (op_glob_status.failures=0) (stream_read_remote_stream_aborted=0) (op_copy_from_local_file=0) (object_delete_request.failures=0) (committer_materialize_file.failures=0) (op_get_delegation_token=0) (files_created=11) (object_delete_objects=22) (multipart_upload_part_put=0) (store_io_retry=0) (op_is_file.failures=0) (committer_bytes_uploaded=0) (op_delete.failures=0) (files_copied_bytes=0) (files_deleted=11) (stream_read_vectored_combined_ranges=9) (stream_read_vectored_operations=7) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_abort=0) (op_list_files.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_open=8) (stream_write_queue_duration=0) (committer_materialize_file=0) (object_continue_list_request=0) (stream_read_fully_operations=0) (object_list_request=44) (object_bulk_delete_request=22) (stream_read_seek_policy_changed=9) (stream_write_total_data=1441792) (stream_read_remote_stream_drain.failures=0) (object_put_bytes=720896) (multipart_upload_list.failures=0) (directories_deleted=0) (action_file_opened.failures=0) (op_get_file_checksum=0));
gauges=((stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=11));
minimums=((delegation_tokens_issued.failures.min=-1) (action_http_head_request.min=3) (committer_magic_marker_put.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_exists.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_get_request.min=19) (op_abort.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_create.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_list.failures.min=-1) (op_abort.failures.min=-1) (op_is_file.failures.min=-1) (object_delete_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_access.failures.min=-1) (object_delete_request.min=-1) (action_file_opened.min=7) (op_createfile.min=-1) (op_get_delegation_token.failures.min=-1) (op_create.min=8) (op_list_files.failures.min=-1) (op_copy_from_local_file.min=-1) (op_glob_status.min=-1) (op_glob_status.failures.min=-1) (committer_materialize_file.min=-1) (object_put_request.min=23) (op_delete.failures.min=-1) (object_bulk_delete_request.min=5) (op_delete.min=25) (op_access.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_drain.min=1) (stream_write_queue_duration.failures.min=-1) (op_rename.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_status.failures.min=-1) (op_list_status.min=-1) (op_get_file_checksum.failures.min=-1) (op_mkdirs.failures.min=-1) (op_is_file.min=-1) (object_put_request.failures.min=-1) (op_get_file_status.min=8) (action_executor_acquired.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.failures.min=-1) (op_exists.min=-1) (op_list_files.min=-1) (op_xattr_get_named.min=-1) (committer_stage_file_upload.min=-1) (delegation_tokens_issued.min=-1) (op_mkdirs.min=21) (store_exists_probe.min=-1) (object_list_request.min=5) (committer_load_single_pending_file.min=-1) (action_http_head_request.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_map.failures.min=-1) (object_list_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_list.min=-1) (op_get_delegation_token.min=-1) (op_createfile.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_content_summary.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_checksum.min=-1) (committer_commit_job.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named_map.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.failures.min=-1) (object_continue_list_request.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.min=-1));
maximums=((op_get_delegation_token.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (op_is_file.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_is_directory.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (op_access.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_file_checksum.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (stream_write_queue_duration.max=-1) (object_put_request.max=71) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_createfile.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_get_request.failures.max=-1) (op_abort.max=-1) (action_http_get_request.max=26) (op_rename.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.max=8) (op_glob_status.failures.max=-1) (op_create.max=45) (op_glob_status.max=-1) (committer_stage_file_upload.failures.max=-1) (object_bulk_delete_request.max=12) (op_delete.max=58) (committer_commit_job.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_delete.failures.max=-1) (object_list_request.max=167) (store_exists_probe.max=-1) (object_delete_request.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_map.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_initiated.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.failures.max=-1) (op_is_file.max=-1) (action_file_opened.max=11) (op_list_status.max=-1) (op_copy_from_local_file.failures.max=-1) (delegation_tokens_issued.max=-1) (object_put_request.failures.max=-1) (op_access.failures.max=-1) (multipart_upload_list.max=-1) (op_list_files.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_exists.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.failures.max=-1) (committer_materialize_file.max=-1) (op_mkdirs.max=263) (op_list_files.max=-1) (action_http_head_request.max=11) (object_bulk_delete_request.failures.max=-1) (op_get_content_summary.max=-1) (object_continue_list_request.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_mkdirs.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_commit_job.max=-1));
means=((store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=11, sum=555, mean=50.4545)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=30, sum=154, mean=5.1333)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=22, sum=190, mean=8.6364)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=8, sum=45, mean=5.6250)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=44, sum=554, mean=12.5909)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=149, mean=18.6250)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=11, sum=452, mean=41.0909)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=22, sum=496, mean=22.5455)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=11, sum=166, mean=15.0909)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:48,178 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:48,178 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,178 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,179 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,179 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,180 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000062 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000062&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=106&ts=1731777828178
2024-11-16 17:23:48,186 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:48,186 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,186 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,187 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,187 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,187 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000062 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000062&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=106&ts=1731777828178
2024-11-16 17:23:48,190 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,190 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:48,190 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:48,190 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:48,191 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000062 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000062&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=106&ts=1731777828178
2024-11-16 17:23:48,199 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:48,199 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:48,199 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:23:48,200 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:48,200 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,200 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,201 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,201 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,202 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000063 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000063&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=106&ts=1731777828200
2024-11-16 17:23:48,218 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:23:48,219 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,219 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:48,219 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13037957043433912376.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:48,220 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13037957043433912376.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=0) (op_abort.failures=0) (object_multipart_initiated=0) (object_put_request.failures=0) (op_hflush=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (op_abort=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13037957043433912376.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,220 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,220 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:48,220 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13037957043433912376.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:48,221 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:48,221 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:48,221 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:48,221 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:48,221 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000063 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000063&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=107&ts=1731777828200
2024-11-16 17:23:48,242 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:48,242 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:48,242 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.021s
2024-11-16 17:23:48,257 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13037957043433912376.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:48,257 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13037957043433912376.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,257 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13037957043433912376.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,257 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:48,257 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,259 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (op_hsync=0) (op_abort=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (stream_write_total_data=65536) (committer_magic_marker_put=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (op_hflush=0) (object_put_request=1) (stream_write_queue_duration=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=21) (action_executor_acquired.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (object_put_request.max=21) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1));
means=((object_put_request.mean=(samples=1, sum=21, mean=21.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:48,259 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:48,260 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,260 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,260 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:48,260 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000064 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000064&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=106&ts=1731777828260
2024-11-16 17:23:48,270 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:48,270 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:48,271 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,271 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:48,272 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:23:48,272 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,273 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-65535&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000064&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=106&ts=1731777828260
2024-11-16 17:23:48,290 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.019s
2024-11-16 17:23:48,290 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:48,290 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:48,290 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:48,290 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:48,290 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:48,291 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:48,291 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,291 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,291 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:48,292 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000064&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=108&ts=1731777828260
2024-11-16 17:23:48,302 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:23:48,302 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:48,303 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,305 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:23:48,305 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:23:48,305 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:23:48,306 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7439 bytes
2024-11-16 17:23:48,306 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:48,306 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:48,306 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:48,306 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8745 bytes
2024-11-16 17:23:48,306 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:23:48,306 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:48,306 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=350) (stream_read_vectored_read_bytes_discarded=10) (stream_read_seek_forward_operations=0) (action_executor_acquired=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_aborted=0) (stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain=1) (stream_read_version_mismatches=0) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_closed=1) (stream_read_close_operations=1) (stream_read_seek_operations=0) (stream_read_unbuffered=0) (action_file_opened=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_exceptions=0) (stream_read_total_bytes=65686) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_block_read.failures=0) (stream_read_vectored_operations=1) (action_http_get_request=2) (stream_read_bytes_discarded_in_close=65336) (stream_read_opened=1) (stream_read_vectored_incoming_ranges=2) (stream_read_prefetch_operations=0) (action_executor_acquired.failures=0) (stream_read_operations=1) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.min=10) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=11));
maximums=((action_http_get_request.failures.max=-1) (action_http_get_request.max=17) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=10) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=28, mean=14.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:48,307 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:48,307 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,307 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,307 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=106&ts=1731777828307
2024-11-16 17:23:48,310 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,311 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,311 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=106&ts=1731777828307
2024-11-16 17:23:48,318 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:48,319 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:48,319 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:48,319 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:48,320 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:48,320 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:48,320 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:48,320 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:48,320 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:48,320 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:48,320 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:48,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:48,321 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:48,321 [s3a-transfer-leg-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:48,321 [s3a-transfer-leg-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,321 [s3a-transfer-leg-bucket-unbounded-pool2-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [109] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=109&ts=1731777828307
2024-11-16 17:23:48,326 [s3a-transfer-leg-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:48,327 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:48,327 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:48,327 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:48,327 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:48,327 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777828239; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:48,327 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:48,327 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:48,327 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:48,328 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:48,329 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:48,329 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:48,329 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:48,329 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:48,329 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,329 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,329 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:48,330 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,330 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=110&ts=1731777828307
2024-11-16 17:23:48,337 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:23:48,337 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:48,337 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:23:48,337 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:48,337 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:48,337 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,337 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,337 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:48,337 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,338 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000065&t0=106&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=110&ts=1731777828307
2024-11-16 17:23:48,345 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:48,345 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:48,346 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:23:48,346 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:23:48,346 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:23:48,347 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.027s
2024-11-16 17:23:48,347 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:48,347 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:48,348 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:48,360 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 15, active threads = 0, queued tasks = 0, completed tasks = 15], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_delete_request.failures=0) (op_mkdirs=12) (action_http_get_request.failures=0) (committer_commits_created=0) (delegation_tokens_issued=0) (action_http_get_request=10) (op_xattr_get_named=0) (op_get_content_summary=0) (op_rename=0) (op_openfile=0) (stream_read_total_bytes=134096) (action_http_head_request=33) (stream_read_exceptions=0) (op_get_delegation_token=0) (op_glob_status.failures=0) (committer_commits_aborted=0) (stream_read_vectored_read_bytes_discarded=5984) (stream_read_remote_stream_aborted=0) (op_list_status.failures=0) (op_xattr_get_map=0) (op_list_files=0) (op_list_located_status=0) (op_is_file=0) (object_delete_request=0) (directories_created=12) (committer_commit_job=0) (stream_read_unbuffered=1) (committer_magic_marker_put.failures=0) (op_xattr_get_named.failures=0) (object_select_requests=0) (fake_directories_deleted=12) (object_continue_list_request.failures=0) (stream_write_total_time=0) (op_is_directory=0) (op_create_non_recursive=0) (committer_load_single_pending_file.failures=0) (committer_commits_reverted=0) (stream_read_bytes_discarded_in_close=130672) (committer_bytes_committed=0) (committer_jobs_failed=0) (op_hflush=0) (object_multipart_aborted.failures=0) (op_glob_status=0) (delegation_tokens_issued.failures=0) (object_put_request=24) (files_delete_rejected=0) (fake_directories_created=0) (action_file_opened=9) (stream_read_seek_backward_operations=0) (op_get_delegation_token.failures=0) (op_create=12) (committer_commit_job.failures=0) (object_put_bytes=786432) (object_list_request.failures=0) (op_copy_from_local_file.failures=0) (stream_read_seek_operations=0) (op_createfile=0) (audit_failure=0) (stream_write_queue_duration=0) (op_abort.failures=0) (action_http_head_request.failures=0) (op_createfile.failures=0) (committer_tasks_failed=0) (op_list_files.failures=0) (stream_write_block_uploads_committed=0) (op_delete.failures=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain.failures=0) (op_is_file.failures=0) (op_abort=0) (committer_load_single_pending_file=0) (committer_materialize_file=0) (stream_read_fully_operations=0) (op_list_status=0) (op_access=0) (object_continue_list_request=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (multipart_upload_part_put_bytes=0) (object_list_request=48) (committer_commits.failures=0) (op_exists=0) (object_put_request.failures=0) (stream_write_total_data=1572864) (multipart_upload_abort_under_path_invoked=0) (stream_read_remote_stream_drain=2) (op_xattr_get_named_map.failures=0) (stream_read_opened=2) (stream_read_seek_forward_operations=0) (stream_read_operations_incomplete=0) (op_delete=12) (files_copied_bytes=0) (op_access.failures=0) (stream_read_vectored_incoming_ranges=27) (stream_write_bytes=786432) (stream_write_block_uploads=12) (action_executor_acquired=0) (op_hsync=0) (op_exists.failures=0) (op_xattr_get_map.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=3424) (op_create.failures=0) (store_exists_probe=0) (audit_request_execution=139) (op_xattr_get_named_map=0) (committer_bytes_uploaded=0) (files_created=12) (stream_write_block_uploads_aborted=0) (object_multipart_initiated.failures=0) (object_bulk_delete_request=24) (op_xattr_list.failures=0) (multipart_upload_list=0) (multipart_upload_list.failures=0) (multipart_upload_part_put=0) (stream_read_closed=2) (committer_materialize_file.failures=0) (object_delete_objects=24) (stream_read_vectored_combined_ranges=10) (stream_read_operations=2) (stream_read_close_operations=9) (action_file_opened.failures=0) (committer_commits_completed=0) (files_copied=0) (multipart_upload_aborted=0) (store_io_request=139) (stream_read_remote_stream_aborted.failures=0) (committer_magic_files_created=0) (committer_jobs_completed=0) (stream_read_seek_bytes_discarded=0) (op_open=9) (stream_write_queue_duration.failures=0) (op_get_file_status=1) (op_is_directory.failures=0) (stream_write_exceptions_completing_upload=0) (store_io_throttled=0) (stream_read_version_mismatches=0) (committer_tasks_completed=0) (files_deleted=12) (op_get_file_checksum=0) (committer_magic_marker_put=0) (committer_stage_file_upload=0) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_completed=0) (committer_stage_file_upload.failures=0) (stream_write_exceptions=0) (object_bulk_delete_request.failures=0) (ignored_errors=0) (stream_aborted=0) (store_io_retry=0) (multipart_upload_started=0) (object_copy_requests=0) (store_exists_probe.failures=0) (op_copy_from_local_file=0) (action_executor_acquired.failures=0) (object_put_request_completed=24) (op_xattr_list=0) (directories_deleted=0) (stream_read_vectored_operations=8) (op_rename.failures=0) (multipart_instantiated=0) (audit_access_check_failure=0) (stream_read_seek_policy_changed=10) (op_get_content_summary.failures=0) (stream_read_seek_bytes_skipped=0) (op_get_file_status.failures=0) (object_metadata_request=33) (audit_span_creation=47) (op_get_file_checksum.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=12) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0));
minimums=((op_list_files.failures.min=-1) (committer_commit_job.min=-1) (action_executor_acquired.min=-1) (op_list_files.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_copy_from_local_file.min=-1) (object_continue_list_request.min=-1) (op_is_file.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.min=-1) (delegation_tokens_issued.min=-1) (object_list_request.failures.min=-1) (op_rename.failures.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_delegation_token.min=-1) (op_abort.min=-1) (op_is_directory.min=-1) (op_xattr_get_named.min=-1) (store_exists_probe.min=-1) (op_get_content_summary.min=-1) (op_get_file_checksum.failures.min=-1) (op_exists.min=-1) (object_put_request.failures.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_aborted.min=-1) (op_access.min=-1) (op_xattr_get_map.min=-1) (op_delete.failures.min=-1) (action_http_head_request.min=3) (object_bulk_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_list_status.failures.min=-1) (op_access.failures.min=-1) (action_http_get_request.min=11) (op_rename.min=-1) (op_list_status.min=-1) (op_xattr_list.min=-1) (object_delete_request.failures.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_commit_job.failures.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=10) (stream_read_remote_stream_aborted.min=-1) (op_mkdirs.min=21) (action_file_opened.failures.min=-1) (object_bulk_delete_request.min=5) (op_get_file_status.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_createfile.min=-1) (op_glob_status.min=-1) (op_exists.failures.min=-1) (op_createfile.failures.min=-1) (object_put_request.min=21) (op_get_file_status.min=8) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.min=-1) (object_list_request.min=5) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_stage_file_upload.min=-1) (op_create.min=8) (op_create.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_initiated.min=-1) (store_exists_probe.failures.min=-1) (op_delete.min=25) (stream_write_queue_duration.min=-1));
maximums=((committer_stage_file_upload.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_put_request.max=71) (op_get_file_status.max=8) (op_list_files.failures.max=-1) (op_is_file.max=-1) (op_get_file_status.failures.max=-1) (op_delete.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_create.max=45) (object_continue_list_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_access.max=-1) (op_get_delegation_token.max=-1) (op_list_status.max=-1) (multipart_upload_list.max=-1) (op_create.failures.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_glob_status.max=-1) (op_xattr_get_named_map.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_file.failures.max=-1) (object_list_request.max=167) (op_get_content_summary.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_mkdirs.max=263) (object_bulk_delete_request.failures.max=-1) (committer_commit_job.max=-1) (store_exists_probe.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (committer_load_single_pending_file.max=-1) (op_copy_from_local_file.max=-1) (op_rename.failures.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.max=11) (stream_write_queue_duration.max=-1) (action_http_get_request.failures.max=-1) (op_exists.max=-1) (op_exists.failures.max=-1) (op_xattr_list.failures.max=-1) (store_exists_probe.max=-1) (op_access.failures.max=-1) (op_list_files.max=-1) (action_http_get_request.max=26) (committer_materialize_file.max=-1) (op_createfile.failures.max=-1) (op_is_directory.max=-1) (op_abort.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.failures.max=-1) (op_glob_status.failures.max=-1) (op_rename.max=-1) (op_abort.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.failures.max=-1) (object_delete_request.failures.max=-1) (action_file_opened.max=11) (delegation_tokens_issued.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_content_summary.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_checksum.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named.max=-1) (object_delete_request.max=-1) (object_bulk_delete_request.max=12) (op_delete.max=58) (action_file_opened.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=33, sum=170, mean=5.1515)) (action_file_opened.mean=(samples=9, sum=55, mean=6.1111)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (object_bulk_delete_request.mean=(samples=24, sum=205, mean=8.5417)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=10, sum=177, mean=17.7000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=12, sum=577, mean=48.0833)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=48, sum=588, mean=12.2500)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=12, sum=479, mean=39.9167)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=24, sum=526, mean=21.9167)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=12, sum=185, mean=15.4167)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:48,361 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:48,361 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,361 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,361 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,361 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,362 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000066 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000066&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=111&ts=1731777828361
2024-11-16 17:23:48,368 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:48,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,368 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000066 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000066&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=111&ts=1731777828361
2024-11-16 17:23:48,370 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,371 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:48,371 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:48,371 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:48,371 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000066 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000066&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=111&ts=1731777828361
2024-11-16 17:23:48,382 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:48,382 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:48,382 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:23:48,382 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:48,382 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,383 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,383 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,383 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,383 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000067 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000067&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=111&ts=1731777828382
2024-11-16 17:23:48,388 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:48,389 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,389 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:48,389 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17521338963694261032.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:48,390 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17521338963694261032.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (op_hflush=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (op_abort=0) (object_multipart_initiated=0) (stream_write_total_time=0) (stream_write_total_data=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_hsync=0) (object_put_request.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_put_request.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17521338963694261032.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,390 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,390 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:48,390 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17521338963694261032.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:48,391 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:48,391 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:48,391 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:48,391 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:48,391 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000067 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000067&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=112&ts=1731777828382
2024-11-16 17:23:48,407 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:48,407 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:48,407 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.016s
2024-11-16 17:23:48,407 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17521338963694261032.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:48,408 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17521338963694261032.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,408 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17521338963694261032.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,408 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:48,408 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,409 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (op_hflush=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (op_hsync=0) (stream_write_block_uploads=1) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (stream_write_total_time=0) (op_abort=0) (object_put_request=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (object_put_request.min=16) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=16) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1));
means=((object_put_request.mean=(samples=1, sum=16, mean=16.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:48,409 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:48,410 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,410 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,410 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:48,410 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000068 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000068&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=111&ts=1731777828410
2024-11-16 17:23:48,413 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:48,413 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:48,414 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,414 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:23:48,414 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:48,414 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:23:48,414 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,415 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,415 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:48,415 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-4200&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000068&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=113&ts=1731777828410
2024-11-16 17:23:48,416 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:23:48,417 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,417 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,417 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:48,417 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=16101-16200&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000068&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=114&ts=1731777828410
2024-11-16 17:23:48,427 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:23:48,427 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:23:48,427 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,427 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:23:48,428 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_total_bytes=300) (stream_read_seek_backward_operations=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (action_http_get_request=2) (stream_read_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_drain=0) (action_file_opened=1) (action_http_get_request.failures=0) (stream_read_operations_incomplete=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_combined_ranges=2) (stream_read_opened=0) (stream_read_vectored_incoming_ranges=3) (stream_read_vectored_operations=1) (stream_read_bytes=300) (stream_read_unbuffered=0) (action_file_opened.failures=0) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_discarded_in_close=0) (stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations=0) (stream_read_close_operations=1) (stream_read_seek_policy_changed=1) (stream_read_closed=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired=0) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=4001));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_read.failures.min=-1) (action_file_opened.min=3) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=11) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=3) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=12));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=23, mean=11.5000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:48,429 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,431 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:48,431 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,432 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,432 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=111&ts=1731777828431
2024-11-16 17:23:48,435 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,435 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,435 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=111&ts=1731777828431
2024-11-16 17:23:48,442 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:48,442 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:48,442 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:48,442 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:48,442 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:48,442 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:48,442 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:48,443 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:48,443 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:48,443 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:48,443 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:48,443 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:48,445 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:48,445 [s3a-transfer-leg-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:48,445 [s3a-transfer-leg-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,445 [s3a-transfer-leg-bucket-unbounded-pool2-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [115] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=115&ts=1731777828431
2024-11-16 17:23:48,452 [s3a-transfer-leg-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:48,453 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:23:48,453 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:48,453 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:48,453 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:48,453 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777828404; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:48,454 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:48,454 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:48,454 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:48,454 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:48,454 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:48,455 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:48,455 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:48,455 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:48,455 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,455 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,455 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:48,455 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,455 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=116&ts=1731777828431
2024-11-16 17:23:48,466 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:23:48,467 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:23:48,467 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:23:48,467 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:48,467 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:48,467 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,467 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,467 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:48,467 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,468 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000069&t0=111&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=116&ts=1731777828431
2024-11-16 17:23:48,475 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:48,475 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:48,476 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:23:48,476 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.021s
2024-11-16 17:23:48,477 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:23:48,477 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:23:48,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:48,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:48,479 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:48,493 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 16], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_bytes=851968) (store_exists_probe.failures=0) (op_list_status.failures=0) (op_access.failures=0) (committer_commits_completed=0) (op_create.failures=0) (action_executor_acquired.failures=0) (op_create_non_recursive=0) (stream_write_queue_duration=0) (committer_commits.failures=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named=0) (op_is_file=0) (object_put_request.failures=0) (stream_write_queue_duration.failures=0) (multipart_upload_aborted=0) (committer_tasks_failed=0) (op_open=10) (committer_jobs_completed=0) (ignored_errors=0) (action_http_head_request.failures=0) (committer_stage_file_upload=0) (files_delete_rejected=0) (op_is_directory.failures=0) (delegation_tokens_issued=0) (stream_read_seek_forward_operations=0) (op_xattr_list.failures=0) (stream_write_block_uploads=13) (op_xattr_get_map=0) (op_abort.failures=0) (object_continue_list_request=0) (multipart_upload_list=0) (op_glob_status=0) (object_select_requests=0) (op_copy_from_local_file=0) (op_get_content_summary.failures=0) (object_list_request=52) (op_list_files=0) (op_get_file_checksum=0) (op_create=13) (op_xattr_get_named.failures=0) (action_http_get_request=12) (committer_magic_marker_put.failures=0) (committer_tasks_completed=0) (op_mkdirs.failures=0) (op_list_status=0) (op_get_file_status=1) (stream_read_seek_bytes_skipped=0) (committer_load_single_pending_file=0) (object_continue_list_request.failures=0) (stream_write_total_data=1703936) (object_bulk_delete_request.failures=0) (op_hflush=0) (op_rename=0) (stream_write_total_time=0) (stream_read_closed=2) (multipart_upload_part_put_bytes=0) (op_abort=0) (committer_stage_file_upload.failures=0) (op_exists.failures=0) (stream_read_exceptions=0) (op_openfile=0) (object_bulk_delete_request=26) (committer_load_single_pending_file.failures=0) (stream_read_remote_stream_drain=2) (fake_directories_deleted=13) (stream_read_seek_backward_operations=0) (files_deleted=13) (committer_commit_job.failures=0) (op_glob_status.failures=0) (stream_read_vectored_incoming_ranges=30) (multipart_upload_abort_under_path_invoked=0) (committer_bytes_committed=0) (multipart_instantiated=0) (multipart_upload_started=0) (committer_bytes_uploaded=0) (object_delete_request=0) (object_delete_objects=26) (object_list_request.failures=0) (op_get_content_summary=0) (object_multipart_initiated=0) (committer_magic_files_created=0) (op_exists=0) (object_metadata_request=36) (committer_commits_reverted=0) (committer_commit_job=0) (op_access=0) (stream_write_exceptions=0) (committer_jobs_failed=0) (delegation_tokens_issued.failures=0) (op_createfile=0) (op_delete.failures=0) (op_xattr_list=0) (directories_created=13) (action_file_opened=10) (stream_read_opened=2) (stream_read_bytes=3724) (stream_read_seek_policy_changed=11) (committer_materialize_file=0) (op_get_file_status.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_rename.failures=0) (committer_commits_aborted=0) (op_xattr_get_map.failures=0) (object_multipart_aborted.failures=0) (stream_read_vectored_operations=9) (object_copy_requests=0) (multipart_upload_part_put=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0) (op_is_file.failures=0) (action_executor_acquired=0) (stream_read_operations_incomplete=0) (committer_materialize_file.failures=0) (stream_read_seek_bytes_discarded=0) (directories_deleted=0) (stream_write_exceptions_completing_upload=0) (op_createfile.failures=0) (stream_read_fully_operations=0) (op_hsync=0) (stream_read_seek_operations=0) (store_exists_probe=0) (files_copied=0) (audit_failure=0) (op_is_directory=0) (stream_read_operations=2) (op_xattr_get_named_map.failures=0) (store_io_throttled=0) (op_list_located_status=0) (object_put_request=26) (object_delete_request.failures=0) (stream_read_remote_stream_aborted=0) (multipart_upload_completed=0) (action_http_head_request=36) (object_put_bytes=851968) (audit_access_check_failure=0) (op_list_files.failures=0) (op_get_delegation_token=0) (stream_read_remote_stream_drain.failures=0) (committer_commits_created=0) (audit_span_creation=51) (store_io_request=152) (op_get_delegation_token.failures=0) (fake_directories_created=0) (op_xattr_get_named_map=0) (files_created=13) (stream_aborted=0) (object_multipart_initiated.failures=0) (stream_read_bytes_discarded_in_close=130672) (files_copied_bytes=0) (stream_read_total_bytes=134396) (stream_read_close_operations=10) (object_multipart_aborted=0) (audit_request_execution=152) (store_io_retry=0) (stream_read_vectored_read_bytes_discarded=9985) (committer_magic_marker_put=0) (object_put_request_completed=26) (op_delete=13) (op_mkdirs=13) (op_copy_from_local_file.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_vectored_combined_ranges=12) (multipart_upload_list.failures=0) (action_http_get_request.failures=0) (stream_write_block_uploads_committed=0) (stream_read_unbuffered=1) (op_get_file_checksum.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=13) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0));
minimums=((op_abort.failures.min=-1) (action_file_opened.min=3) (op_get_content_summary.failures.min=-1) (op_createfile.failures.min=-1) (op_exists.min=-1) (store_exists_probe.failures.min=-1) (op_exists.failures.min=-1) (op_rename.failures.min=-1) (action_http_head_request.min=2) (object_delete_request.min=-1) (store_exists_probe.min=-1) (object_delete_request.failures.min=-1) (op_mkdirs.failures.min=-1) (op_rename.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_create.failures.min=-1) (op_is_file.min=-1) (committer_magic_marker_put.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.min=-1) (multipart_upload_list.min=-1) (op_is_directory.min=-1) (action_http_get_request.failures.min=-1) (op_delete.min=25) (op_get_file_checksum.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_stage_file_upload.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_delete.failures.min=-1) (op_list_files.failures.min=-1) (op_create.min=7) (op_is_directory.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.min=5) (stream_read_remote_stream_aborted.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.min=21) (op_xattr_get_named.failures.min=-1) (op_list_status.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_status.failures.min=-1) (object_list_request.failures.min=-1) (committer_commit_job.min=-1) (committer_load_single_pending_file.min=-1) (op_list_files.min=-1) (object_multipart_initiated.min=-1) (object_bulk_delete_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_status.failures.min=-1) (op_glob_status.failures.min=-1) (object_put_request.min=16) (op_createfile.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_map.min=-1) (object_bulk_delete_request.min=5) (stream_read_remote_stream_aborted.failures.min=-1) (op_copy_from_local_file.min=-1) (op_glob_status.min=-1) (op_access.failures.min=-1) (op_xattr_list.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_executor_acquired.min=-1) (delegation_tokens_issued.failures.min=-1) (op_abort.min=-1) (object_continue_list_request.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_materialize_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_content_summary.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (op_get_file_status.min=8) (op_get_delegation_token.min=-1) (op_access.min=-1) (op_copy_from_local_file.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_http_get_request.min=11) (op_xattr_get_named_map.min=-1));
maximums=((op_create.failures.max=-1) (action_http_head_request.max=11) (object_put_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_access.max=-1) (committer_stage_file_upload.failures.max=-1) (op_delete.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named.max=-1) (committer_commit_job.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_delegation_token.max=-1) (op_exists.max=-1) (op_get_file_status.max=8) (op_mkdirs.failures.max=-1) (op_xattr_get_map.max=-1) (op_create.max=45) (object_continue_list_request.failures.max=-1) (action_http_get_request.max=26) (op_is_directory.failures.max=-1) (op_is_directory.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_delete_request.failures.max=-1) (store_exists_probe.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_copy_from_local_file.max=-1) (op_list_files.max=-1) (op_list_status.max=-1) (object_list_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.max=-1) (object_bulk_delete_request.max=12) (op_get_file_status.failures.max=-1) (op_abort.max=-1) (op_glob_status.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_content_summary.max=-1) (multipart_upload_list.max=-1) (object_continue_list_request.max=-1) (op_get_file_checksum.max=-1) (object_put_request.max=71) (delegation_tokens_issued.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_list.max=-1) (op_list_status.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.max=11) (action_http_head_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_file.failures.max=-1) (object_list_request.max=167) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_delete.max=58) (object_delete_request.max=-1) (op_rename.failures.max=-1) (op_access.failures.max=-1) (op_createfile.max=-1) (committer_load_single_pending_file.max=-1) (action_file_opened.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_file.max=-1) (committer_commit_job.failures.max=-1) (op_list_files.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.max=263) (stream_read_remote_stream_drain.max=1) (committer_materialize_file.max=-1));
means=((op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=13, sum=598, mean=46.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=10, sum=58, mean=5.8000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=26, sum=224, mean=8.6154)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=200, mean=16.6667)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=13, sum=192, mean=14.7692)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=52, sum=612, mean=11.7692)) (object_put_request.mean=(samples=26, sum=553, mean=21.2692)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=36, sum=178, mean=4.9444)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=13, sum=515, mean=39.6154)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:48,494 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:48,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,494 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,494 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000070 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000070&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=117&ts=1731777828494
2024-11-16 17:23:48,500 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:48,501 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,501 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,501 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,501 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,501 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000070 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000070&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=117&ts=1731777828494
2024-11-16 17:23:48,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,505 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:48,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:48,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:48,505 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000070 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000070&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=117&ts=1731777828494
2024-11-16 17:23:48,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:48,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:48,521 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:23:48,521 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:48,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,522 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,522 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,522 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000071 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000071&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=117&ts=1731777828521
2024-11-16 17:23:48,526 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:48,526 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,526 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:48,526 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8007463636479267509.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:48,527 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8007463636479267509.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (op_hsync=0) (stream_write_exceptions=0) (action_executor_acquired=0) (op_abort=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted.failures=0) (object_put_request=0) (stream_write_total_time=0) (stream_write_bytes=65536) (op_abort.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8007463636479267509.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,527 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,527 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:48,527 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8007463636479267509.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:48,528 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:48,528 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:48,528 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:48,528 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:48,528 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000071 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000071&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=118&ts=1731777828521
2024-11-16 17:23:48,546 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:48,547 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:48,547 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.019s
2024-11-16 17:23:48,547 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8007463636479267509.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:48,547 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8007463636479267509.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,547 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8007463636479267509.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,547 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:48,547 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,549 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (op_hflush=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=65536) (object_put_request=1) (op_abort.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (op_abort=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_hsync=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_put_request.min=18) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=18));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=18, mean=18.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:48,549 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:48,551 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,551 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,551 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:48,552 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000072 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000072/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000072&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=117&ts=1731777828551
2024-11-16 17:23:48,556 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:48,557 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:48,557 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,559 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_combined_ranges=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read=0) (stream_read_total_bytes=0) (action_file_opened.failures=0) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_bytes_discarded=0) (stream_read_closed=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (action_http_get_request=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request.failures=0) (stream_read_fully_operations=0) (stream_aborted=0) (stream_read_block_acquire_read=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_close_operations=1) (stream_read_block_read.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=0) (stream_read_exceptions=0) (stream_read_bytes=0) (stream_read_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=5) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=5));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:48,561 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:48,561 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,562 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,562 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=117&ts=1731777828561
2024-11-16 17:23:48,565 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,566 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,566 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=117&ts=1731777828561
2024-11-16 17:23:48,577 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:23:48,578 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:48,578 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:48,578 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:48,579 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:48,579 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:48,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:48,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:48,580 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:48,581 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:48,581 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:48,581 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:48,581 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:48,581 [s3a-transfer-leg-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:48,581 [s3a-transfer-leg-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,582 [s3a-transfer-leg-bucket-unbounded-pool2-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [119] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=119&ts=1731777828561
2024-11-16 17:23:48,587 [s3a-transfer-leg-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:48,587 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:48,587 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:48,587 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:48,587 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:48,588 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777828544; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:48,588 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:48,588 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:48,588 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:48,588 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:48,588 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:48,589 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:48,589 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:48,589 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:48,589 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,589 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,589 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:48,589 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,589 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=120&ts=1731777828561
2024-11-16 17:23:48,598 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:48,598 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:23:48,598 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:23:48,598 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:48,599 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:48,599 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,599 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,599 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:48,599 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,599 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000073&t0=117&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=120&ts=1731777828561
2024-11-16 17:23:48,604 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:48,604 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:48,604 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:23:48,604 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:23:48,604 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.016s
2024-11-16 17:23:48,604 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:23:48,604 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:48,604 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:48,606 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:48,620 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 17, active threads = 0, queued tasks = 0, completed tasks = 17], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_exists_probe=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_map.failures=0) (op_createfile=0) (object_put_bytes=917504) (stream_read_seek_backward_operations=0) (op_abort=0) (object_select_requests=0) (stream_read_remote_stream_drain=2) (stream_write_block_uploads=14) (stream_read_operations_incomplete=0) (multipart_upload_list.failures=0) (stream_write_bytes=917504) (op_xattr_get_named.failures=0) (op_get_file_status.failures=0) (op_exists=0) (stream_read_closed=2) (stream_read_remote_stream_drain.failures=0) (object_list_request.failures=0) (op_get_file_checksum=0) (committer_stage_file_upload=0) (stream_read_close_operations=11) (stream_aborted=0) (stream_read_seek_policy_changed=12) (op_copy_from_local_file.failures=0) (object_list_request=56) (files_copied_bytes=0) (store_io_request=163) (stream_read_vectored_combined_ranges=12) (stream_read_bytes=3724) (stream_read_vectored_operations=9) (committer_load_single_pending_file=0) (op_createfile.failures=0) (op_mkdirs.failures=0) (stream_read_seek_bytes_discarded=0) (op_access=0) (store_io_throttled=0) (stream_write_queue_duration.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_started=0) (op_get_delegation_token=0) (object_put_request=28) (committer_commits.failures=0) (files_delete_rejected=0) (op_create.failures=0) (committer_magic_files_created=0) (stream_read_opened=2) (op_xattr_list.failures=0) (audit_access_check_failure=0) (op_rename.failures=0) (fake_directories_deleted=14) (audit_span_creation=55) (op_get_file_checksum.failures=0) (stream_read_bytes_discarded_in_close=130672) (op_xattr_get_named_map=0) (action_file_opened=11) (multipart_upload_list=0) (audit_request_execution=163) (committer_magic_marker_put=0) (action_http_get_request=12) (op_xattr_list=0) (action_http_head_request=39) (object_delete_request=0) (op_glob_status.failures=0) (op_create_non_recursive=0) (object_put_request_completed=28) (stream_write_block_uploads_aborted=0) (files_copied=0) (op_list_files.failures=0) (op_xattr_get_map=0) (op_access.failures=0) (action_http_get_request.failures=0) (op_openfile=0) (files_created=14) (op_copy_from_local_file=0) (op_list_files=0) (committer_materialize_file.failures=0) (multipart_upload_part_put=0) (stream_read_seek_operations=0) (op_xattr_get_named=0) (delegation_tokens_issued=0) (object_put_request.failures=0) (multipart_upload_part_put_bytes=0) (stream_write_total_time=0) (stream_read_vectored_read_bytes_discarded=9985) (action_file_opened.failures=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (ignored_errors=0) (committer_magic_marker_put.failures=0) (committer_commit_job=0) (op_xattr_get_named_map.failures=0) (op_get_content_summary.failures=0) (stream_read_version_mismatches=0) (committer_jobs_completed=0) (committer_materialize_file=0) (object_bulk_delete_request=28) (object_multipart_initiated=0) (op_is_directory.failures=0) (object_delete_request.failures=0) (op_is_file.failures=0) (op_open=11) (committer_commits_completed=0) (op_list_status=0) (store_exists_probe.failures=0) (stream_write_exceptions=0) (stream_read_fully_operations=0) (stream_read_operations=2) (object_copy_requests=0) (op_delete=14) (stream_read_seek_bytes_skipped=0) (op_list_located_status=0) (committer_bytes_uploaded=0) (object_metadata_request=39) (object_multipart_initiated.failures=0) (stream_read_unbuffered=1) (stream_write_block_uploads_committed=0) (op_hsync=0) (audit_failure=0) (op_exists.failures=0) (stream_read_seek_forward_operations=0) (committer_commits_reverted=0) (delegation_tokens_issued.failures=0) (committer_tasks_completed=0) (committer_stage_file_upload.failures=0) (committer_bytes_committed=0) (committer_jobs_failed=0) (committer_tasks_failed=0) (directories_created=14) (committer_commits_created=0) (op_get_content_summary=0) (stream_read_exceptions=0) (object_continue_list_request=0) (op_mkdirs=14) (op_is_directory=0) (op_list_status.failures=0) (op_abort.failures=0) (op_get_file_status=1) (committer_commit_job.failures=0) (op_glob_status=0) (directories_deleted=0) (files_deleted=14) (op_delete.failures=0) (action_http_head_request.failures=0) (object_continue_list_request.failures=0) (op_create=14) (stream_read_remote_stream_aborted=0) (multipart_instantiated=0) (store_io_retry=0) (action_executor_acquired.failures=0) (object_bulk_delete_request.failures=0) (multipart_upload_completed=0) (stream_read_total_bytes=134396) (multipart_upload_abort_under_path_invoked=0) (committer_commits_aborted=0) (committer_load_single_pending_file.failures=0) (object_multipart_aborted.failures=0) (stream_read_vectored_incoming_ranges=30) (multipart_upload_aborted=0) (op_get_delegation_token.failures=0) (op_is_file=0) (object_delete_objects=28) (op_rename=0) (fake_directories_created=0) (stream_write_total_data=1835008));
gauges=((stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=14) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0));
minimums=((op_mkdirs.failures.min=-1) (op_access.min=-1) (action_file_opened.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named.min=-1) (action_executor_acquired.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_list.failures.min=-1) (action_http_head_request.min=2) (op_get_delegation_token.failures.min=-1) (object_bulk_delete_request.min=5) (op_createfile.min=-1) (action_http_get_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_status.min=8) (delegation_tokens_issued.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_create.min=6) (op_exists.min=-1) (multipart_upload_list.min=-1) (object_list_request.failures.min=-1) (op_list_files.min=-1) (object_bulk_delete_request.failures.min=-1) (op_delete.min=25) (action_http_get_request.min=11) (op_xattr_get_named.failures.min=-1) (op_mkdirs.min=21) (stream_write_queue_duration.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_rename.failures.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_files.failures.min=-1) (op_exists.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (op_xattr_get_map.failures.min=-1) (object_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_list.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (op_create.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_list_status.min=-1) (committer_materialize_file.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.failures.min=-1) (op_glob_status.min=-1) (object_multipart_aborted.failures.min=-1) (op_access.failures.min=-1) (op_abort.min=-1) (committer_materialize_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (op_copy_from_local_file.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=18) (object_delete_request.min=-1) (object_list_request.min=4) (object_continue_list_request.failures.min=-1) (op_glob_status.failures.min=-1) (committer_commit_job.min=-1) (store_exists_probe.failures.min=-1) (op_is_file.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_checksum.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_continue_list_request.min=-1) (action_executor_acquired.min=-1) (op_createfile.failures.min=-1) (op_get_delegation_token.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named_map.min=-1));
maximums=((stream_read_remote_stream_drain.max=1) (op_is_file.max=-1) (op_is_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_abort.failures.max=-1) (op_is_directory.max=-1) (op_list_files.max=-1) (op_create.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.failures.max=-1) (action_http_head_request.failures.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.max=-1) (op_abort.max=-1) (object_continue_list_request.max=-1) (op_xattr_list.failures.max=-1) (op_exists.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_initiated.max=-1) (op_is_directory.failures.max=-1) (action_http_head_request.max=11) (action_file_opened.max=11) (op_get_content_summary.max=-1) (op_create.max=45) (op_xattr_get_named.failures.max=-1) (object_put_request.max=71) (op_get_file_checksum.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_list.max=-1) (object_list_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_access.failures.max=-1) (object_continue_list_request.failures.max=-1) (store_exists_probe.max=-1) (op_delete.failures.max=-1) (op_list_files.failures.max=-1) (object_bulk_delete_request.max=12) (committer_commit_job.failures.max=-1) (op_access.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=26) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_createfile.max=-1) (stream_write_queue_duration.failures.max=-1) (action_executor_acquired.max=-1) (op_get_file_status.max=8) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_delete_request.max=-1) (object_list_request.max=167) (op_mkdirs.max=263) (op_xattr_get_map.max=-1) (object_multipart_aborted.max=-1) (op_rename.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_file_status.failures.max=-1) (action_http_get_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_createfile.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.max=-1) (op_list_status.failures.max=-1) (op_rename.max=-1) (op_delete.max=58) (op_list_status.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_mkdirs.failures.max=-1) (op_get_file_checksum.max=-1) (op_glob_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named.max=-1) (op_exists.max=-1) (op_glob_status.failures.max=-1) (op_copy_from_local_file.failures.max=-1));
means=((op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=39, sum=190, mean=4.8718)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=14, sum=625, mean=44.6429)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=200, mean=16.6667)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=56, sum=639, mean=11.4107)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=14, sum=198, mean=14.1429)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=28, sum=587, mean=20.9643)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=11, sum=63, mean=5.7273)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=14, sum=540, mean=38.5714)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=28, sum=238, mean=8.5000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:48,621 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:48,621 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,621 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,621 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,622 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,622 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000074 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000074&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=121&ts=1731777828621
2024-11-16 17:23:48,627 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:48,627 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,627 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,627 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,628 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,628 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000074 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000074&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=121&ts=1731777828621
2024-11-16 17:23:48,631 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,631 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:48,631 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:48,631 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:48,631 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000074 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000074&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=121&ts=1731777828621
2024-11-16 17:23:48,642 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:48,642 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:48,642 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:23:48,643 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:48,643 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,643 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,644 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,644 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000075 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000075&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=121&ts=1731777828643
2024-11-16 17:23:48,652 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:48,652 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,653 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:48,653 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13679794586098719227.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:48,654 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13679794586098719227.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_bytes=65536) (stream_write_total_data=0) (op_hflush=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (object_put_request=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (op_hsync=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (stream_write_block_uploads=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13679794586098719227.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,654 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,654 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:48,655 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13679794586098719227.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:48,655 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:48,655 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:48,655 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:48,656 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:48,656 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000075 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000075&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=122&ts=1731777828643
2024-11-16 17:23:48,672 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:48,673 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:48,673 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.018s
2024-11-16 17:23:48,673 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13679794586098719227.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:48,674 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13679794586098719227.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,674 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13679794586098719227.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,674 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:48,674 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,675 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (op_hsync=0) (action_executor_acquired=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (op_abort=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (op_hflush=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (object_put_request=1) (stream_write_total_time=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=16) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=16) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=16, mean=16.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:48,675 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:48,676 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,676 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,676 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:48,676 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000076 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000076&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=121&ts=1731777828675
2024-11-16 17:23:48,679 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:48,679 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:48,679 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,679 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:23:48,679 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:48,679 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:23:48,679 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:23:48,679 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,680 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,680 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:48,680 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000076 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=10-1199&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000076&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=123&ts=1731777828675
2024-11-16 17:23:48,688 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:23:48,688 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:23:48,688 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:23:48,688 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:23:48,688 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,689 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_total_bytes=315) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (action_file_opened.failures=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_operations=1) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (stream_read_vectored_combined_ranges=1) (stream_read_unbuffered=0) (stream_read_vectored_read_bytes_discarded=875) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (stream_read_seek_forward_operations=0) (stream_read_bytes=315) (stream_read_closed=0) (action_http_get_request=1) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_fully_operations=0) (stream_read_exceptions=0) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_incoming_ranges=4) (stream_read_close_operations=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=8) (action_file_opened.min=3) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((action_http_get_request.max=8) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=3) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:48,690 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:48,690 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,691 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,691 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=121&ts=1731777828690
2024-11-16 17:23:48,694 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,694 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,694 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=121&ts=1731777828690
2024-11-16 17:23:48,700 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:48,700 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:48,701 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:48,701 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:48,701 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:48,701 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:48,702 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:48,702 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:48,702 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:48,703 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:48,703 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:48,703 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:48,703 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:48,704 [s3a-transfer-leg-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:48,704 [s3a-transfer-leg-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,705 [s3a-transfer-leg-bucket-unbounded-pool2-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [124] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=124&ts=1731777828690
2024-11-16 17:23:48,713 [s3a-transfer-leg-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:23:48,714 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:23:48,715 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:48,715 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:48,715 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:48,715 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777828670; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:48,715 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:48,715 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:48,715 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:48,717 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:48,718 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:48,718 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:48,718 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:48,719 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:48,719 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,719 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,720 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:48,720 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,720 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=125&ts=1731777828690
2024-11-16 17:23:48,727 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:23:48,727 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:48,728 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:23:48,728 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:48,728 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:48,729 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,729 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,729 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:48,729 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,729 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000077&t0=121&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=125&ts=1731777828690
2024-11-16 17:23:48,735 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:48,736 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:48,736 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:23:48,736 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.018s
2024-11-16 17:23:48,736 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:23:48,736 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:23:48,736 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:48,736 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:48,738 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:48,750 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 18, active threads = 0, queued tasks = 0, completed tasks = 18], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_is_file.failures=0) (object_list_request=60) (committer_magic_files_created=0) (op_is_file=0) (op_get_content_summary=0) (stream_read_bytes_discarded_in_close=130672) (committer_commits_completed=0) (op_delete=15) (multipart_upload_part_put_bytes=0) (stream_read_remote_stream_drain=2) (multipart_upload_part_put=0) (op_copy_from_local_file.failures=0) (op_openfile=0) (op_mkdirs=15) (object_delete_request=0) (stream_write_queue_duration.failures=0) (stream_read_vectored_combined_ranges=13) (op_list_status.failures=0) (committer_materialize_file.failures=0) (stream_read_close_operations=12) (object_put_request.failures=0) (committer_bytes_committed=0) (stream_read_operations_incomplete=0) (stream_read_total_bytes=134711) (object_metadata_request=42) (stream_read_remote_stream_drain.failures=0) (op_get_delegation_token.failures=0) (op_get_content_summary.failures=0) (delegation_tokens_issued=0) (action_http_head_request=42) (op_get_file_status=1) (store_io_request=175) (directories_created=15) (op_get_delegation_token=0) (object_bulk_delete_request.failures=0) (committer_magic_marker_put=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_create_non_recursive=0) (files_copied_bytes=0) (op_glob_status.failures=0) (directories_deleted=0) (op_list_files.failures=0) (stream_write_block_uploads=15) (op_access=0) (op_is_directory=0) (store_io_throttled=0) (stream_read_vectored_read_bytes_discarded=10860) (audit_access_check_failure=0) (object_delete_request.failures=0) (committer_materialize_file=0) (multipart_upload_list=0) (object_select_requests=0) (object_put_request=30) (object_multipart_initiated=0) (committer_commit_job.failures=0) (op_get_file_checksum.failures=0) (stream_read_bytes_discarded_in_abort=0) (object_multipart_aborted=0) (files_copied=0) (object_multipart_aborted.failures=0) (op_xattr_get_map=0) (op_access.failures=0) (stream_read_seek_bytes_skipped=0) (stream_write_queue_duration=0) (action_http_head_request.failures=0) (committer_load_single_pending_file.failures=0) (object_delete_objects=30) (ignored_errors=0) (stream_read_operations=2) (op_rename.failures=0) (stream_read_closed=2) (action_file_opened=12) (op_xattr_get_named=0) (action_executor_acquired.failures=0) (op_xattr_get_named_map=0) (committer_bytes_uploaded=0) (stream_write_bytes=983040) (op_delete.failures=0) (op_create.failures=0) (stream_write_block_uploads_aborted=0) (op_hflush=0) (action_http_get_request=13) (multipart_instantiated=0) (committer_tasks_failed=0) (committer_tasks_completed=0) (committer_load_single_pending_file=0) (object_multipart_initiated.failures=0) (multipart_upload_aborted=0) (stream_write_total_time=0) (store_io_retry=0) (stream_read_seek_operations=0) (op_createfile=0) (stream_read_unbuffered=1) (op_list_located_status=0) (stream_read_seek_forward_operations=0) (committer_commit_job=0) (op_xattr_get_map.failures=0) (stream_read_vectored_operations=10) (files_created=15) (stream_read_vectored_incoming_ranges=34) (audit_span_creation=59) (stream_aborted=0) (multipart_upload_completed=0) (op_xattr_get_named_map.failures=0) (object_put_request_completed=30) (stream_read_version_mismatches=0) (op_xattr_list=0) (object_copy_requests=0) (fake_directories_deleted=15) (op_list_status=0) (stream_read_opened=2) (object_continue_list_request=0) (op_open=12) (committer_commits_aborted=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (stream_read_bytes=4039) (op_list_files=0) (audit_failure=0) (committer_jobs_failed=0) (op_xattr_list.failures=0) (op_copy_from_local_file=0) (committer_commits_reverted=0) (op_glob_status=0) (files_delete_rejected=0) (multipart_upload_list.failures=0) (files_deleted=15) (stream_read_exceptions=0) (op_createfile.failures=0) (fake_directories_created=0) (op_rename=0) (delegation_tokens_issued.failures=0) (committer_stage_file_upload.failures=0) (committer_jobs_completed=0) (stream_read_seek_backward_operations=0) (stream_write_exceptions_completing_upload=0) (object_continue_list_request.failures=0) (audit_request_execution=175) (committer_commits_created=0) (op_xattr_get_named.failures=0) (op_is_directory.failures=0) (object_bulk_delete_request=30) (op_abort.failures=0) (stream_write_block_uploads_committed=0) (op_abort=0) (stream_read_remote_stream_aborted=0) (stream_write_total_data=1966080) (stream_read_seek_bytes_discarded=0) (stream_read_fully_operations=0) (op_create=15) (multipart_upload_started=0) (action_executor_acquired=0) (object_list_request.failures=0) (op_get_file_checksum=0) (op_exists=0) (action_http_get_request.failures=0) (op_get_file_status.failures=0) (multipart_upload_abort_under_path_invoked=0) (store_exists_probe=0) (stream_read_remote_stream_aborted.failures=0) (op_mkdirs.failures=0) (stream_write_exceptions=0) (committer_commits.failures=0) (stream_read_seek_policy_changed=13) (committer_stage_file_upload=0) (store_exists_probe.failures=0) (op_exists.failures=0) (object_put_bytes=983040));
gauges=((stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=15) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0));
minimums=((op_rename.failures.min=-1) (op_list_files.min=-1) (op_list_status.min=-1) (object_multipart_aborted.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_glob_status.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_list.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_multipart_aborted.failures.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1) (op_mkdirs.min=21) (stream_read_remote_stream_aborted.min=-1) (op_xattr_list.min=-1) (op_xattr_get_map.min=-1) (action_http_head_request.min=2) (op_get_delegation_token.min=-1) (op_get_content_summary.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_glob_status.failures.min=-1) (committer_stage_file_upload.min=-1) (store_exists_probe.min=-1) (op_access.min=-1) (action_http_get_request.min=8) (op_create.min=6) (store_exists_probe.failures.min=-1) (op_rename.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.failures.min=-1) (object_list_request.min=4) (delegation_tokens_issued.failures.min=-1) (action_file_opened.min=3) (op_delete.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.min=-1) (delegation_tokens_issued.min=-1) (op_is_directory.min=-1) (op_list_status.failures.min=-1) (op_abort.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.failures.min=-1) (object_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (op_access.failures.min=-1) (object_put_request.min=16) (op_get_delegation_token.failures.min=-1) (op_is_file.failures.min=-1) (object_multipart_initiated.min=-1) (object_continue_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (multipart_upload_list.min=-1) (op_get_file_status.min=8) (op_is_file.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.min=25) (op_create.failures.min=-1) (op_mkdirs.failures.min=-1) (action_http_head_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_exists.min=-1) (op_createfile.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named.min=-1) (op_exists.failures.min=-1) (object_delete_request.min=-1) (action_file_opened.failures.min=-1) (object_bulk_delete_request.min=5) (op_is_directory.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_load_single_pending_file.min=-1));
maximums=((op_create.max=45) (action_http_head_request.max=11) (object_delete_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_mkdirs.max=263) (committer_load_single_pending_file.failures.max=-1) (object_list_request.failures.max=-1) (store_exists_probe.max=-1) (op_createfile.max=-1) (op_is_file.max=-1) (object_put_request.max=71) (op_get_content_summary.max=-1) (op_exists.max=-1) (op_rename.failures.max=-1) (op_mkdirs.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (action_http_get_request.max=26) (op_xattr_get_named_map.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.failures.max=-1) (committer_stage_file_upload.max=-1) (op_list_files.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.max=-1) (object_continue_list_request.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_access.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_glob_status.max=-1) (op_is_file.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_remote_stream_aborted.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.max=12) (op_delete.failures.max=-1) (op_delete.max=58) (object_delete_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_status.max=8) (object_multipart_initiated.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_magic_marker_put.failures.max=-1) (op_list_status.max=-1) (op_xattr_get_map.max=-1) (delegation_tokens_issued.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_is_directory.max=-1) (action_file_opened.max=11) (op_list_files.max=-1) (op_is_directory.failures.max=-1) (op_access.max=-1) (action_file_opened.failures.max=-1) (object_list_request.max=167) (committer_commit_job.failures.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_abort.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_list.failures.max=-1) (op_rename.max=-1) (op_get_file_checksum.max=-1) (op_list_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named.max=-1) (committer_commit_job.max=-1) (stream_write_queue_duration.max=-1) (object_put_request.failures.max=-1) (op_create.failures.max=-1) (op_get_delegation_token.max=-1) (action_executor_acquired.max=-1) (op_glob_status.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=12, sum=66, mean=5.5000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=30, sum=614, mean=20.4667)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=13, sum=208, mean=16.0000)) (op_mkdirs.mean=(samples=15, sum=647, mean=43.1333)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=15, sum=575, mean=38.3333)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=15, sum=208, mean=13.8667)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=60, sum=667, mean=11.1167)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=30, sum=251, mean=8.3667)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=42, sum=199, mean=4.7381)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:48,751 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:48,752 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,752 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,752 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,752 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,752 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000078 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000078&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=126&ts=1731777828751
2024-11-16 17:23:48,758 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:48,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,758 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000078 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000078&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=126&ts=1731777828751
2024-11-16 17:23:48,761 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,761 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:48,761 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:48,762 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:48,762 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000078 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000078&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=126&ts=1731777828751
2024-11-16 17:23:48,770 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:48,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:48,771 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:23:48,771 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:48,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,772 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,773 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000079 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000079&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=126&ts=1731777828772
2024-11-16 17:23:48,778 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:48,778 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,778 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:48,779 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9224351954808522081.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:48,780 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9224351954808522081.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (op_hflush=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (op_abort=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (op_hsync=0) (stream_write_block_uploads=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9224351954808522081.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,780 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,780 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:48,780 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9224351954808522081.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:48,781 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:48,781 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:48,781 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:48,781 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:48,782 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000079 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000079&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=127&ts=1731777828772
2024-11-16 17:23:48,799 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:48,799 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:48,799 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.018s
2024-11-16 17:23:48,799 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9224351954808522081.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:48,799 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9224351954808522081.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,799 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9224351954808522081.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,799 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:48,799 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,800 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put=0) (stream_write_exceptions=0) (object_put_request.failures=0) (op_hsync=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (stream_write_bytes=65536) (op_hflush=0) (committer_magic_marker_put.failures=0) (object_put_request=1) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (stream_write_total_data=65536) (action_executor_acquired=0) (op_abort=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=1) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=18) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=18) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=18, mean=18.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:48,800 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:48,801 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,801 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,802 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:48,802 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000080 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000080&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=126&ts=1731777828801
2024-11-16 17:23:48,805 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:48,805 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:48,805 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,805 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:23:48,805 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:48,805 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:23:48,806 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:23:48,806 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,806 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,806 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:48,807 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000080 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-7998&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000080&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=128&ts=1731777828801
2024-11-16 17:23:48,814 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:23:48,814 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:23:48,814 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:23:48,815 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,816 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (stream_aborted=0) (action_file_opened.failures=0) (stream_read_close_operations=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_unbuffered=0) (action_executor_acquired=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_total_bytes=300) (stream_read_prefetch_operations.failures=0) (action_http_get_request=1) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_fully_operations=0) (stream_read_version_mismatches=0) (stream_read_vectored_operations=1) (stream_read_exceptions=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=1) (stream_read_opened=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (stream_read_bytes=300) (action_http_get_request.failures=0) (stream_read_vectored_read_bytes_discarded=7699) (stream_read_block_acquire_read=0) (stream_read_vectored_incoming_ranges=3) (stream_read_block_read=0) (stream_read_seek_policy_changed=1) (action_file_opened=1));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=4) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=8) (stream_read_remote_stream_drain.min=-1));
maximums=((action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=8) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:48,817 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:48,817 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,817 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,818 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=126&ts=1731777828817
2024-11-16 17:23:48,821 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,821 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,821 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=126&ts=1731777828817
2024-11-16 17:23:48,827 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:48,827 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:48,827 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:48,827 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:48,827 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:48,827 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:48,828 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:48,828 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:48,828 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:48,828 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:48,828 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:48,828 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:48,835 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:48,835 [s3a-transfer-leg-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:48,835 [s3a-transfer-leg-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,836 [s3a-transfer-leg-bucket-unbounded-pool2-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [129] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=129&ts=1731777828817
2024-11-16 17:23:48,841 [s3a-transfer-leg-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:48,841 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:48,841 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:48,841 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:48,841 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:48,842 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777828796; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:48,842 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:48,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:48,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:48,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:48,845 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:48,846 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:48,846 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:48,846 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:48,847 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,847 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,847 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:48,847 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,847 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=130&ts=1731777828817
2024-11-16 17:23:48,856 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:48,856 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:23:48,856 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:23:48,856 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:48,856 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:48,856 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:48,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:48,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:48,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:48,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000081&t0=126&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=130&ts=1731777828817
2024-11-16 17:23:48,863 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:48,863 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:48,863 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:48,863 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:23:48,863 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:23:48,863 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.035s
2024-11-16 17:23:48,863 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:48,863 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:48,866 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:48,877 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 19, active threads = 0, queued tasks = 0, completed tasks = 19], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_createfile=0) (committer_commits_aborted=0) (stream_read_vectored_read_bytes_discarded=18559) (stream_write_exceptions_completing_upload=0) (committer_materialize_file=0) (object_bulk_delete_request=32) (committer_commits_created=0) (fake_directories_deleted=16) (stream_write_queue_duration.failures=0) (op_list_located_status=0) (op_glob_status=0) (files_deleted=16) (files_copied_bytes=0) (op_create=16) (op_get_file_status.failures=0) (committer_magic_files_created=0) (committer_bytes_uploaded=0) (action_file_opened=13) (op_list_files.failures=0) (stream_read_seek_bytes_skipped=0) (op_xattr_list.failures=0) (op_xattr_get_named_map=0) (op_is_file=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0) (op_is_directory.failures=0) (op_access.failures=0) (multipart_upload_completed=0) (op_get_content_summary.failures=0) (directories_deleted=0) (multipart_upload_part_put=0) (object_list_request.failures=0) (object_list_request=64) (stream_write_exceptions=0) (stream_write_total_data=2097152) (audit_failure=0) (stream_read_vectored_operations=11) (op_exists=0) (multipart_upload_part_put_bytes=0) (committer_load_single_pending_file=0) (op_access=0) (op_mkdirs=16) (committer_stage_file_upload=0) (stream_write_total_time=0) (op_abort=0) (stream_read_vectored_incoming_ranges=37) (committer_commit_job.failures=0) (committer_magic_marker_put=0) (store_io_retry=0) (audit_span_creation=63) (stream_read_total_bytes=135011) (op_create.failures=0) (store_exists_probe.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (op_abort.failures=0) (op_xattr_get_named_map.failures=0) (op_get_delegation_token=0) (directories_created=16) (delegation_tokens_issued.failures=0) (object_multipart_initiated.failures=0) (committer_bytes_committed=0) (object_put_request_completed=32) (op_xattr_list=0) (files_delete_rejected=0) (op_list_status.failures=0) (object_put_request=32) (committer_commits.failures=0) (stream_write_bytes=1048576) (stream_read_seek_forward_operations=0) (op_get_content_summary=0) (op_get_file_checksum.failures=0) (object_metadata_request=45) (committer_load_single_pending_file.failures=0) (multipart_upload_aborted=0) (committer_tasks_completed=0) (stream_write_block_uploads_aborted=0) (object_delete_request=0) (stream_read_unbuffered=1) (op_list_status=0) (stream_read_remote_stream_aborted.failures=0) (op_copy_from_local_file.failures=0) (op_xattr_get_map.failures=0) (op_hsync=0) (op_delete.failures=0) (committer_stage_file_upload.failures=0) (object_continue_list_request=0) (stream_aborted=0) (op_xattr_get_named=0) (stream_read_closed=2) (stream_read_remote_stream_drain=2) (multipart_upload_list.failures=0) (store_exists_probe=0) (committer_tasks_failed=0) (op_exists.failures=0) (stream_write_queue_duration=0) (object_bulk_delete_request.failures=0) (fake_directories_created=0) (op_hflush=0) (op_list_files=0) (object_put_request.failures=0) (committer_jobs_failed=0) (files_copied=0) (action_http_head_request=45) (stream_read_close_operations=13) (multipart_instantiated=0) (committer_commit_job=0) (stream_read_remote_stream_drain.failures=0) (object_delete_request.failures=0) (op_create_non_recursive=0) (stream_read_remote_stream_aborted=0) (store_io_request=187) (op_open=13) (store_io_throttled=0) (object_copy_requests=0) (op_glob_status.failures=0) (object_continue_list_request.failures=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (audit_access_check_failure=0) (committer_jobs_completed=0) (multipart_upload_started=0) (stream_read_operations_incomplete=0) (action_http_head_request.failures=0) (op_copy_from_local_file=0) (action_http_get_request=14) (stream_write_block_uploads=16) (committer_commits_reverted=0) (stream_read_vectored_combined_ranges=14) (committer_materialize_file.failures=0) (stream_read_seek_policy_changed=14) (stream_read_seek_operations=0) (op_delete=16) (stream_read_bytes=4339) (committer_commits_completed=0) (object_multipart_aborted=0) (op_rename.failures=0) (multipart_upload_list=0) (op_rename=0) (op_xattr_get_named.failures=0) (op_get_file_status=1) (object_delete_objects=32) (object_select_requests=0) (op_get_file_checksum=0) (ignored_errors=0) (audit_request_execution=187) (stream_read_operations=2) (op_xattr_get_map=0) (op_is_file.failures=0) (action_http_get_request.failures=0) (op_is_directory=0) (op_get_delegation_token.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_bytes_discarded=0) (op_openfile=0) (delegation_tokens_issued=0) (files_created=16) (committer_magic_marker_put.failures=0) (stream_read_opened=2) (stream_write_block_uploads_committed=0) (stream_read_bytes_discarded_in_close=130672) (action_file_opened.failures=0) (stream_read_exceptions=0) (op_createfile.failures=0) (op_mkdirs.failures=0) (stream_read_fully_operations=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (object_put_bytes=1048576));
gauges=((stream_write_block_uploads_pending=16) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((op_xattr_list.failures.min=-1) (op_rename.min=-1) (object_list_request.min=4) (committer_commit_job.min=-1) (op_xattr_get_map.failures.min=-1) (object_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_delete.min=25) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (store_exists_probe.min=-1) (action_file_opened.failures.min=-1) (op_createfile.failures.min=-1) (op_get_delegation_token.min=-1) (op_abort.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.min=-1) (op_exists.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_map.min=-1) (op_exists.min=-1) (delegation_tokens_issued.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_list.min=-1) (op_access.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_createfile.min=-1) (op_list_files.failures.min=-1) (object_put_request.min=18) (op_access.failures.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_bulk_delete_request.min=5) (op_glob_status.min=-1) (multipart_upload_list.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (op_list_files.min=-1) (op_abort.failures.min=-1) (op_create.failures.min=-1) (op_mkdirs.min=20) (action_http_get_request.min=8) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_checksum.min=-1) (action_file_opened.min=4) (committer_materialize_file.failures.min=-1) (op_get_file_status.failures.min=-1) (op_rename.failures.min=-1) (op_create.min=6) (op_get_file_status.min=8) (op_copy_from_local_file.failures.min=-1) (object_multipart_initiated.min=-1) (op_is_file.min=-1) (op_is_file.failures.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_head_request.min=2) (stream_read_remote_stream_drain.min=1) (op_get_delegation_token.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_head_request.failures.min=-1) (op_list_status.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_delete.failures.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1));
maximums=((action_http_head_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_createfile.failures.max=-1) (op_mkdirs.max=263) (op_get_delegation_token.max=-1) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.max=12) (committer_stage_file_upload.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.failures.max=-1) (action_file_opened.max=11) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (committer_materialize_file.failures.max=-1) (object_put_request.failures.max=-1) (op_glob_status.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.max=-1) (object_list_request.max=167) (committer_magic_marker_put.max=-1) (op_list_files.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_directory.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (object_delete_request.max=-1) (op_get_file_checksum.max=-1) (action_file_opened.failures.max=-1) (op_is_directory.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_create.max=45) (op_exists.max=-1) (op_list_files.failures.max=-1) (op_is_file.failures.max=-1) (committer_commit_job.failures.max=-1) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_list.failures.max=-1) (op_rename.failures.max=-1) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_createfile.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.max=-1) (op_access.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_list_request.failures.max=-1) (store_exists_probe.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.max=-1) (op_get_file_status.max=8) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.max=1) (op_get_file_checksum.failures.max=-1) (action_http_get_request.max=26) (op_xattr_list.max=-1) (op_access.failures.max=-1) (object_continue_list_request.max=-1) (op_list_status.failures.max=-1) (op_create.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_delete.max=58) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (op_get_file_status.failures.max=-1) (op_delete.failures.max=-1) (action_http_head_request.max=11) (op_glob_status.failures.max=-1) (op_copy_from_local_file.max=-1) (object_put_request.max=71) (op_abort.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=64, sum=690, mean=10.7813)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=16, sum=611, mean=38.1875)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=16, sum=667, mean=41.6875)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=16, sum=215, mean=13.4375)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (action_file_opened.mean=(samples=13, sum=70, mean=5.3846)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=32, sum=640, mean=20.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=45, sum=209, mean=4.6444)) (action_http_get_request.mean=(samples=14, sum=216, mean=15.4286)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=32, sum=266, mean=8.3125)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:48,878 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:48,878 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,879 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,879 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,879 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,879 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000082 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000082&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=131&ts=1731777828878
2024-11-16 17:23:48,885 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:48,886 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,886 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:48,887 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:48,887 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:48,888 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000082 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000082&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=131&ts=1731777828878
2024-11-16 17:23:48,894 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:48,894 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:48,895 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:48,895 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:48,896 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000082 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000082&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=131&ts=1731777828878
2024-11-16 17:23:48,908 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:48,909 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:48,910 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:23:48,910 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:48,911 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,911 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,912 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:48,912 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:48,913 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000083 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000083&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=131&ts=1731777828911
2024-11-16 17:23:48,919 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:48,919 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,920 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:48,921 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11821098853848872439.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:48,922 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11821098853848872439.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (action_executor_acquired=0) (op_abort.failures=0) (op_hsync=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (object_put_request=0) (stream_write_block_uploads=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1));
maximums=((object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11821098853848872439.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,923 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,923 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:48,923 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11821098853848872439.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:48,925 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:48,926 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:48,926 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:48,927 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:48,927 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000083 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000083&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=132&ts=1731777828911
2024-11-16 17:23:48,954 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:48,954 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:48,954 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:23:48,955 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11821098853848872439.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:48,955 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11821098853848872439.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,955 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11821098853848872439.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:48,955 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:48,955 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:48,956 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (stream_write_block_uploads=1) (object_put_request=1) (stream_write_bytes=65536) (multipart_upload_part_put=0) (object_multipart_initiated=0) (action_executor_acquired=0) (object_multipart_aborted=0) (op_hsync=0) (object_put_request.failures=0) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (op_hflush=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=27) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1));
maximums=((action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=27) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:48,957 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:48,959 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:48,959 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:48,960 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:48,960 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=131&ts=1731777828959
2024-11-16 17:23:48,964 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:48,964 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:48,964 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,965 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:48,965 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:48,965 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:23:48,969 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,970 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,970 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:48,970 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=1947-2046&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=133&ts=1731777828959
2024-11-16 17:23:48,974 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,975 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,975 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:48,975 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=8192-14435&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=134&ts=1731777828959
2024-11-16 17:23:48,984 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:23:48,985 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,986 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:48,989 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:48,989 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:48,989 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:48,989 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=40960-41983&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000084&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=135&ts=1731777828959
2024-11-16 17:23:48,990 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:23:49,000 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:23:49,001 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:23:49,001 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:49,002 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:23:49,002 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:49,014 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (action_executor_acquired.failures=0) (stream_read_exceptions=0) (stream_read_version_mismatches=0) (stream_read_close_operations=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (action_executor_acquired=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes=1424) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_read=0) (action_file_opened.failures=0) (stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_block_acquire_read=0) (stream_read_seek_backward_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_incoming_ranges=5) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_close=0) (action_http_get_request=3) (stream_read_closed=0) (stream_read_operations=0) (stream_read_vectored_combined_ranges=3) (stream_read_total_bytes=1424) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_vectored_read_bytes_discarded=5944) (action_file_opened=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=5) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=13) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1));
maximums=((action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=15) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=5) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=43, mean=14.3333)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:49,021 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:49,021 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,022 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,022 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=131&ts=1731777829021
2024-11-16 17:23:49,025 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,025 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,026 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=131&ts=1731777829021
2024-11-16 17:23:49,033 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:49,033 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:49,033 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:49,033 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:49,034 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:49,034 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:49,034 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:49,034 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:49,034 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:49,034 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:49,035 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:49,035 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:49,041 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:49,042 [s3a-transfer-leg-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:49,042 [s3a-transfer-leg-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,043 [s3a-transfer-leg-bucket-unbounded-pool2-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [141] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=141&ts=1731777829021
2024-11-16 17:23:49,049 [s3a-transfer-leg-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:49,050 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:23:49,050 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:49,050 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:49,050 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:49,050 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777828951; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:49,050 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:49,050 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:49,051 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:49,051 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:49,055 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:49,056 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:49,057 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:49,057 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:49,057 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,057 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,057 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:49,057 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,058 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=142&ts=1731777829021
2024-11-16 17:23:49,065 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:49,066 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:23:49,066 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:23:49,066 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:49,066 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:49,066 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,066 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,066 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:49,066 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,066 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000085&t0=131&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=142&ts=1731777829021
2024-11-16 17:23:49,073 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:49,073 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:49,073 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:49,073 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:23:49,073 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:23:49,073 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.039s
2024-11-16 17:23:49,073 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:49,073 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:49,077 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:49,094 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 20, active threads = 0, queued tasks = 0, completed tasks = 20], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((audit_request_execution=201) (stream_read_closed=2) (committer_materialize_file=0) (store_exists_probe.failures=0) (op_access=0) (multipart_upload_completed=0) (committer_tasks_completed=0) (op_copy_from_local_file=0) (object_bulk_delete_request=34) (op_createfile=0) (object_continue_list_request.failures=0) (op_get_delegation_token=0) (op_create_non_recursive=0) (stream_read_total_bytes=136435) (op_exists=0) (stream_read_seek_policy_changed=15) (stream_read_close_operations=14) (action_http_get_request.failures=0) (multipart_instantiated=0) (object_delete_request=0) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_started=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (object_multipart_aborted.failures=0) (fake_directories_deleted=17) (committer_commits.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_get_delegation_token.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=2228224) (op_rename=0) (stream_read_remote_stream_aborted=0) (stream_read_operations=2) (stream_write_exceptions=0) (stream_read_seek_backward_operations=0) (ignored_errors=0) (committer_commits_aborted=0) (op_access.failures=0) (stream_write_exceptions_completing_upload=0) (directories_created=17) (op_openfile=0) (stream_aborted=0) (object_bulk_delete_request.failures=0) (committer_commit_job.failures=0) (op_list_files.failures=0) (stream_read_exceptions=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (delegation_tokens_issued=0) (op_list_status=0) (action_executor_acquired=0) (op_hsync=0) (op_copy_from_local_file.failures=0) (stream_read_vectored_incoming_ranges=42) (op_is_file.failures=0) (committer_magic_marker_put.failures=0) (committer_jobs_failed=0) (store_io_throttled=0) (committer_materialize_file.failures=0) (object_list_request=68) (op_xattr_get_named=0) (committer_magic_files_created=0) (action_file_opened.failures=0) (op_list_located_status=0) (stream_write_block_uploads=17) (op_is_directory.failures=0) (op_get_content_summary.failures=0) (files_copied_bytes=0) (object_put_bytes=1114112) (op_get_content_summary=0) (stream_write_block_uploads_aborted=0) (stream_read_fully_operations=0) (audit_failure=0) (stream_read_seek_bytes_discarded=0) (committer_magic_marker_put=0) (op_delete=17) (op_open=14) (action_http_head_request.failures=0) (multipart_upload_aborted=0) (multipart_upload_list=0) (op_xattr_list=0) (object_list_request.failures=0) (stream_read_remote_stream_drain=2) (op_createfile.failures=0) (committer_stage_file_upload=0) (stream_read_opened=2) (committer_commits_created=0) (op_xattr_get_named_map.failures=0) (op_create=17) (op_abort=0) (op_get_file_status.failures=0) (object_metadata_request=48) (committer_bytes_committed=0) (stream_read_version_mismatches=0) (object_put_request_completed=34) (op_xattr_get_named.failures=0) (files_delete_rejected=0) (op_get_file_status=1) (store_io_request=201) (committer_jobs_completed=0) (op_rename.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_put_request=34) (op_mkdirs.failures=0) (object_multipart_aborted=0) (op_is_directory=0) (stream_read_seek_operations=0) (op_xattr_get_map=0) (stream_read_vectored_combined_ranges=17) (op_get_file_checksum.failures=0) (op_abort.failures=0) (op_get_file_checksum=0) (files_created=17) (multipart_upload_list.failures=0) (stream_read_unbuffered=1) (store_io_retry=0) (object_delete_objects=34) (committer_commits_reverted=0) (action_file_opened=14) (op_xattr_get_map.failures=0) (op_mkdirs=17) (op_exists.failures=0) (committer_bytes_uploaded=0) (stream_read_bytes=5763) (stream_read_seek_forward_operations=0) (action_http_head_request=48) (committer_commit_job=0) (op_xattr_get_named_map=0) (stream_read_remote_stream_drain.failures=0) (op_delete.failures=0) (committer_load_single_pending_file=0) (files_deleted=17) (op_glob_status.failures=0) (multipart_upload_part_put_bytes=0) (object_multipart_initiated=0) (audit_span_creation=67) (op_xattr_list.failures=0) (multipart_upload_part_put=0) (stream_read_vectored_read_bytes_discarded=24503) (stream_write_bytes=1114112) (stream_write_block_uploads_committed=0) (committer_commits_completed=0) (object_select_requests=0) (files_copied=0) (op_list_status.failures=0) (fake_directories_created=0) (delegation_tokens_issued.failures=0) (object_continue_list_request=0) (object_copy_requests=0) (committer_load_single_pending_file.failures=0) (stream_read_bytes_discarded_in_close=130672) (op_hflush=0) (action_executor_acquired.failures=0) (stream_read_vectored_operations=12) (op_glob_status=0) (action_http_get_request=17) (op_list_files=0) (audit_access_check_failure=0) (committer_stage_file_upload.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_tasks_failed=0) (op_is_file=0) (store_exists_probe=0) (directories_deleted=0) (op_create.failures=0) (object_put_request.failures=0) (stream_write_queue_duration.failures=0) (object_delete_request.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=17) (stream_write_block_uploads_active=0));
minimums=((op_delete.failures.min=-1) (op_copy_from_local_file.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (op_xattr_get_named_map.min=-1) (delegation_tokens_issued.failures.min=-1) (op_glob_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=27) (op_xattr_get_named_map.failures.min=-1) (action_http_head_request.failures.min=-1) (store_exists_probe.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_status.min=8) (stream_read_remote_stream_aborted.min=-1) (committer_materialize_file.min=-1) (store_exists_probe.min=-1) (op_xattr_get_map.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.min=-1) (committer_commit_job.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.failures.min=-1) (action_file_opened.failures.min=-1) (op_list_status.min=-1) (op_mkdirs.min=20) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.min=-1) (op_rename.failures.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_drain.min=1) (op_is_directory.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_delegation_token.min=-1) (op_exists.failures.min=-1) (stream_write_queue_duration.min=-1) (action_file_opened.min=5) (op_list_files.failures.min=-1) (op_access.failures.min=-1) (action_http_get_request.min=13) (committer_load_single_pending_file.min=-1) (action_executor_acquired.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_glob_status.min=-1) (op_access.min=-1) (op_is_file.failures.min=-1) (committer_magic_marker_put.min=-1) (op_is_file.min=-1) (op_get_file_status.failures.min=-1) (op_delete.min=25) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_list_request.min=4) (object_bulk_delete_request.min=5) (op_list_status.failures.min=-1) (op_rename.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_list.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_directory.min=-1) (committer_stage_file_upload.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.min=2) (committer_stage_file_upload.min=-1) (object_delete_request.min=-1) (op_create.min=6) (op_get_file_checksum.min=-1) (object_delete_request.failures.min=-1) (op_abort.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (op_exists.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_delegation_token.failures.max=-1) (object_list_request.max=167) (delegation_tokens_issued.failures.max=-1) (op_glob_status.failures.max=-1) (object_put_request.max=71) (stream_read_remote_stream_aborted.failures.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_head_request.max=11) (action_http_get_request.max=26) (op_xattr_get_named.failures.max=-1) (op_is_file.max=-1) (op_list_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_copy_from_local_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (op_delete.failures.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_status.max=-1) (op_get_delegation_token.max=-1) (op_is_directory.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_exists.max=-1) (object_bulk_delete_request.max=12) (op_mkdirs.max=263) (committer_load_single_pending_file.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_file_status.max=8) (op_abort.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.max=-1) (op_get_content_summary.max=-1) (op_create.max=45) (op_is_directory.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.failures.max=-1) (action_file_opened.max=11) (committer_load_single_pending_file.max=-1) (op_get_file_status.failures.max=-1) (op_list_files.max=-1) (object_delete_request.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_access.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_rename.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named.max=-1) (op_rename.failures.max=-1) (action_http_get_request.failures.max=-1) (store_exists_probe.failures.max=-1) (store_exists_probe.max=-1) (op_createfile.max=-1) (op_access.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (op_create.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.max=-1) (object_continue_list_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_glob_status.max=-1) (committer_commit_job.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_map.max=-1) (object_list_request.failures.max=-1) (op_list_files.failures.max=-1) (committer_stage_file_upload.max=-1) (op_delete.max=58) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_materialize_file.max=-1));
means=((op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=17, sum=225, mean=13.2353)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=17, sum=700, mean=41.1765)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=17, sum=259, mean=15.2353)) (object_bulk_delete_request.mean=(samples=34, sum=279, mean=8.2059)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=68, sum=716, mean=10.5294)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=34, sum=679, mean=19.9706)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=17, sum=650, mean=38.2353)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=14, sum=75, mean=5.3571)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=48, sum=223, mean=4.6458)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:49,095 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:49,095 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,095 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,095 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,095 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,096 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000086 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000086&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=143&ts=1731777829095
2024-11-16 17:23:49,102 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:49,103 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,103 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,103 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,103 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,103 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000086 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000086&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=143&ts=1731777829095
2024-11-16 17:23:49,106 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,106 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:49,107 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:49,107 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:49,107 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000086 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000086&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=143&ts=1731777829095
2024-11-16 17:23:49,142 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:49,143 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:49,143 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.037s
2024-11-16 17:23:49,143 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:49,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,144 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,144 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000087 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000087&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=143&ts=1731777829144
2024-11-16 17:23:49,158 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:23:49,158 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,158 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:49,159 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13703135102087079948.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:49,160 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13703135102087079948.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (op_abort=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (stream_write_total_data=0) (op_abort.failures=0) (object_put_request.failures=0) (object_put_request=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (op_hsync=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13703135102087079948.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,160 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,160 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:49,160 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13703135102087079948.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:49,165 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:49,165 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:49,166 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:49,166 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:49,166 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000087 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000087&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=144&ts=1731777829144
2024-11-16 17:23:49,196 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:49,197 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:49,197 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.032s
2024-11-16 17:23:49,198 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13703135102087079948.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:49,198 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13703135102087079948.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,198 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13703135102087079948.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,198 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:49,198 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,199 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (object_put_request=1) (op_hflush=0) (stream_write_total_time=0) (object_put_request.failures=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (op_abort=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (op_hsync=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=30) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=30) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=30, mean=30.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:49,199 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:49,200 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,200 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,200 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:49,200 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000088 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000088&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=143&ts=1731777829199
2024-11-16 17:23:49,209 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:49,209 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:49,209 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,209 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:23:49,209 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:23:49,213 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:23:49,213 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:49,213 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:23:49,214 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,214 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=100-65535&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000088&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=143&ts=1731777829199
2024-11-16 17:23:49,215 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:49,216 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,216 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:23:49,216 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=100-199&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000088&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=145&ts=1731777829199
2024-11-16 17:23:49,227 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.013s
2024-11-16 17:23:49,227 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:49,227 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:49,229 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.013s
2024-11-16 17:23:49,230 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:49,231 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:23:49,232 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:23:49,232 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:23:49,233 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7535 bytes
2024-11-16 17:23:49,233 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:49,234 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:49,234 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:49,235 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8649 bytes
2024-11-16 17:23:49,235 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:23:49,235 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:49,236 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired=0) (stream_read_vectored_combined_ranges=1) (stream_read_opened=1) (stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_backward_operations=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_operations=0) (action_executor_acquired.failures=0) (stream_read_exceptions=0) (stream_read_bytes=200) (stream_read_remote_stream_drain=1) (stream_read_fully_operations=1) (action_file_opened=1) (stream_read_unbuffered=0) (action_http_get_request=2) (stream_read_bytes_discarded_in_close=65336) (stream_read_close_operations=1) (stream_read_block_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_vectored_incoming_ranges=1) (stream_read_operations_incomplete=0) (stream_read_operations=1) (stream_read_version_mismatches=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_total_bytes=65536) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request.failures=0) (stream_read_closed=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((action_file_opened.min=9) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=12) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=4) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=4) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=14) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=9) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1));
means=((action_file_opened.mean=(samples=1, sum=9, mean=9.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=26, mean=13.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:49,238 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:49,238 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,239 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,239 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=143&ts=1731777829238
2024-11-16 17:23:49,243 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,243 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,243 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=143&ts=1731777829238
2024-11-16 17:23:49,253 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:23:49,254 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:49,254 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:49,255 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:49,255 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:49,256 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:49,256 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:49,256 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:49,257 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:49,257 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:49,257 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:49,257 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:49,258 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:49,258 [s3a-transfer-leg-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:49,258 [s3a-transfer-leg-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,258 [s3a-transfer-leg-bucket-unbounded-pool2-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [146] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=146&ts=1731777829238
2024-11-16 17:23:49,264 [s3a-transfer-leg-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:49,264 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:49,264 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:49,264 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:49,265 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:49,265 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777829194; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:49,265 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:49,265 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:49,265 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:49,265 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:49,266 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:49,266 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:49,266 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:49,266 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:49,266 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,266 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,266 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:49,266 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,266 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=147&ts=1731777829238
2024-11-16 17:23:49,274 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:49,274 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:49,275 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:23:49,275 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:49,276 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:49,276 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,276 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,277 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:49,277 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,277 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000089&t0=143&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=147&ts=1731777829238
2024-11-16 17:23:49,283 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:49,283 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:49,283 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:49,283 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:23:49,283 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:23:49,283 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.026s
2024-11-16 17:23:49,283 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:49,283 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:49,284 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:49,297 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 21, active threads = 0, queued tasks = 0, completed tasks = 21], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((files_copied=0) (committer_materialize_file.failures=0) (op_mkdirs=18) (committer_commits_reverted=0) (op_glob_status.failures=0) (op_rename.failures=0) (action_file_opened.failures=0) (action_file_opened=15) (stream_read_unbuffered=1) (op_access=0) (object_put_bytes=1179648) (object_multipart_initiated.failures=0) (stream_read_vectored_incoming_ranges=43) (store_exists_probe.failures=0) (op_get_content_summary=0) (multipart_upload_list=0) (stream_read_total_bytes=201971) (stream_read_vectored_operations=13) (committer_commit_job.failures=0) (stream_read_fully_operations=1) (stream_write_block_uploads_committed=0) (stream_write_exceptions=0) (delegation_tokens_issued=0) (stream_read_seek_policy_changed=16) (op_xattr_list=0) (stream_read_vectored_combined_ranges=18) (committer_materialize_file=0) (stream_read_close_operations=15) (object_list_request=72) (audit_failure=0) (action_http_head_request=51) (op_get_file_checksum=0) (multipart_upload_completed=0) (op_xattr_list.failures=0) (op_mkdirs.failures=0) (delegation_tokens_issued.failures=0) (op_abort.failures=0) (fake_directories_created=0) (object_put_request=36) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_version_mismatches=0) (stream_write_total_data=2359296) (op_rename=0) (op_hflush=0) (stream_write_block_uploads_aborted=0) (op_copy_from_local_file.failures=0) (object_multipart_aborted=0) (files_created=18) (op_get_delegation_token=0) (stream_read_vectored_read_bytes_discarded=24503) (op_list_files=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_named_map=0) (op_open=15) (op_create=18) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (op_abort=0) (op_list_status=0) (fake_directories_deleted=18) (action_http_get_request=19) (stream_read_seek_backward_operations=0) (audit_span_creation=71) (op_delete.failures=0) (action_executor_acquired=0) (object_metadata_request=51) (op_create_non_recursive=0) (committer_tasks_failed=0) (object_multipart_aborted.failures=0) (op_get_delegation_token.failures=0) (stream_read_remote_stream_drain=3) (op_is_file=0) (op_is_file.failures=0) (op_copy_from_local_file=0) (stream_read_seek_bytes_skipped=0) (object_delete_request.failures=0) (object_multipart_initiated=0) (committer_stage_file_upload=0) (op_is_directory.failures=0) (files_copied_bytes=0) (committer_magic_files_created=0) (stream_read_bytes=5963) (op_create.failures=0) (action_http_head_request.failures=0) (multipart_upload_list.failures=0) (multipart_instantiated=0) (op_get_file_status.failures=0) (object_delete_request=0) (object_bulk_delete_request=36) (store_io_retry=0) (op_get_file_status=1) (object_list_request.failures=0) (object_continue_list_request=0) (op_access.failures=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_map=0) (stream_read_bytes_backwards_on_seek=0) (committer_jobs_failed=0) (stream_write_bytes=1179648) (directories_deleted=0) (op_list_located_status=0) (stream_write_block_uploads=18) (op_delete=18) (committer_tasks_completed=0) (committer_commits_aborted=0) (ignored_errors=0) (stream_read_exceptions=0) (committer_bytes_uploaded=0) (op_get_content_summary.failures=0) (stream_read_operations_incomplete=0) (op_xattr_get_named_map.failures=0) (stream_read_seek_forward_operations=0) (committer_magic_marker_put=0) (multipart_upload_aborted=0) (stream_read_seek_operations=0) (object_select_requests=0) (committer_load_single_pending_file=0) (store_exists_probe=0) (op_exists=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations=3) (op_is_directory=0) (audit_request_execution=214) (committer_stage_file_upload.failures=0) (action_http_get_request.failures=0) (op_glob_status=0) (op_createfile.failures=0) (object_bulk_delete_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_map.failures=0) (audit_access_check_failure=0) (op_openfile=0) (object_continue_list_request.failures=0) (directories_created=18) (committer_commits_created=0) (op_list_status.failures=0) (committer_jobs_completed=0) (op_xattr_get_named=0) (stream_read_closed=3) (files_delete_rejected=0) (op_createfile=0) (multipart_upload_started=0) (committer_commits_completed=0) (op_hsync=0) (multipart_upload_part_put=0) (stream_read_remote_stream_drain.failures=0) (store_io_request=214) (store_io_throttled=0) (committer_load_single_pending_file.failures=0) (object_copy_requests=0) (op_xattr_get_named.failures=0) (object_put_request_completed=36) (stream_read_bytes_discarded_in_close=196008) (committer_bytes_committed=0) (committer_commit_job=0) (stream_write_queue_duration.failures=0) (stream_write_queue_duration=0) (committer_commits.failures=0) (stream_read_remote_stream_aborted=0) (op_get_file_checksum.failures=0) (files_deleted=18) (multipart_upload_part_put_bytes=0) (op_list_files.failures=0) (op_exists.failures=0) (object_delete_objects=36) (stream_read_opened=3) (stream_write_total_time=0));
gauges=((object_put_bytes_pending=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=18) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0));
minimums=((op_create.min=6) (object_multipart_aborted.failures.min=-1) (op_get_content_summary.failures.min=-1) (store_exists_probe.failures.min=-1) (op_is_file.failures.min=-1) (op_createfile.failures.min=-1) (op_delete.min=25) (op_is_directory.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_rename.failures.min=-1) (op_list_files.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_list_request.min=4) (object_continue_list_request.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_commit_job.min=-1) (object_list_request.failures.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.min=-1) (object_delete_request.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_drain.min=4) (op_copy_from_local_file.min=-1) (stream_write_queue_duration.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named.min=-1) (object_put_request.min=30) (op_list_files.failures.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.min=8) (op_exists.failures.min=-1) (op_glob_status.min=-1) (store_exists_probe.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_rename.min=-1) (op_get_file_status.failures.min=-1) (multipart_upload_list.min=-1) (op_mkdirs.failures.min=-1) (op_mkdirs.min=20) (op_access.failures.min=-1) (object_delete_request.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_list.failures.min=-1) (object_bulk_delete_request.min=5) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_file_opened.min=9) (op_is_file.min=-1) (op_access.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.min=-1) (op_list_status.failures.min=-1) (op_exists.min=-1) (committer_materialize_file.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.failures.min=-1) (action_executor_acquired.min=-1) (op_createfile.min=-1) (action_http_head_request.min=2) (op_xattr_list.min=-1) (op_list_status.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_checksum.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_http_get_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_create.failures.min=-1) (op_is_directory.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.min=12));
maximums=((op_is_directory.max=-1) (op_get_delegation_token.failures.max=-1) (action_executor_acquired.max=-1) (op_list_files.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_createfile.max=-1) (object_multipart_initiated.failures.max=-1) (store_exists_probe.failures.max=-1) (action_http_head_request.max=11) (object_put_request.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_drain.max=4) (op_get_delegation_token.max=-1) (op_create.max=45) (committer_commit_job.failures.max=-1) (object_continue_list_request.max=-1) (object_list_request.max=167) (op_get_content_summary.failures.max=-1) (object_delete_request.max=-1) (committer_materialize_file.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_glob_status.failures.max=-1) (op_list_status.max=-1) (op_xattr_get_map.max=-1) (op_access.failures.max=-1) (op_delete.max=58) (multipart_upload_list.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_access.max=-1) (delegation_tokens_issued.max=-1) (op_list_status.failures.max=-1) (committer_materialize_file.max=-1) (op_abort.max=-1) (op_is_file.max=-1) (object_bulk_delete_request.max=12) (store_exists_probe.max=-1) (object_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_commit_job.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_create.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_files.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_list.failures.max=-1) (action_http_get_request.max=26) (op_rename.max=-1) (action_file_opened.max=11) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.failures.max=-1) (op_exists.max=-1) (committer_stage_file_upload.max=-1) (op_get_content_summary.max=-1) (op_delete.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_file_status.max=8) (stream_write_queue_duration.failures.max=-1) (op_is_directory.failures.max=-1) (object_put_request.max=71) (op_abort.failures.max=-1) (object_list_request.failures.max=-1) (action_file_opened.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_mkdirs.max=263) (object_continue_list_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_list.max=-1) (multipart_upload_list.max=-1) (op_glob_status.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=18, sum=240, mean=13.3333)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=18, sum=677, mean=37.6111)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=36, sum=744, mean=20.6667)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=36, sum=292, mean=8.1111)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=285, mean=15.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=18, sum=748, mean=41.5556)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=15, sum=84, mean=5.6000)) (action_http_head_request.mean=(samples=51, sum=239, mean=4.6863)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=72, sum=751, mean=10.4306)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:49,298 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:49,298 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,298 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,298 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,298 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,299 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000090 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000090&t0=148&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=148&ts=1731777829298
2024-11-16 17:23:49,304 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:49,304 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,304 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,304 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,304 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,304 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000090 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000090&t0=148&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=148&ts=1731777829298
2024-11-16 17:23:49,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,307 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:49,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:49,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:49,307 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000090 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000090&t0=148&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=148&ts=1731777829298
2024-11-16 17:23:49,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:49,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:49,315 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:23:49,315 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:49,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,316 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,316 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000091 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000091&t0=148&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=148&ts=1731777829316
2024-11-16 17:23:49,321 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:49,321 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,321 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:49,321 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11589157434193504224.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:49,322 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11589157434193504224.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (stream_write_total_data=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (object_put_request=0) (op_hflush=0) (op_hsync=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (op_abort=0) (object_multipart_aborted=0) (stream_write_block_uploads=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11589157434193504224.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,322 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,322 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:49,322 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11589157434193504224.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:49,323 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:49,323 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:49,323 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:49,323 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:49,323 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000091 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000091&t0=148&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=149&ts=1731777829316
2024-11-16 17:23:49,340 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:49,340 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:49,340 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:23:49,340 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11589157434193504224.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:49,340 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11589157434193504224.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,340 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11589157434193504224.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,340 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:49,340 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,342 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort=0) (stream_write_exceptions=0) (stream_write_total_time=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (multipart_upload_completed=0) (committer_magic_marker_put=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (stream_write_queue_duration=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (op_hsync=0) (object_put_request=1) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=16) (op_abort.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=16) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=16, mean=16.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:49,342 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:49,343 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,343 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,343 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:49,343 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [150] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000092 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000092/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000092&t0=150&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=150&ts=1731777829343
2024-11-16 17:23:49,346 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:49,347 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:49,347 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,347 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:23:49,349 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations=0) (stream_read_block_read=0) (stream_read_version_mismatches=0) (stream_read_operations=0) (action_file_opened=1) (stream_read_bytes=0) (stream_read_exceptions=0) (stream_read_opened=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_backward_operations=0) (stream_read_total_bytes=0) (stream_read_operations_incomplete=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_seek_operations=0) (action_http_get_request.failures=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=0) (stream_read_close_operations=1) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read=0) (stream_read_block_read.failures=0) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations.failures=0) (action_http_get_request=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_incoming_ranges=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_unbuffered=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((action_http_get_request.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=4) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:49,350 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:49,350 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,350 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,350 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093&t0=148&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=148&ts=1731777829350
2024-11-16 17:23:49,352 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,353 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,353 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093&t0=148&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=148&ts=1731777829350
2024-11-16 17:23:49,358 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:49,358 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:49,358 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:49,358 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:49,358 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:49,359 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:49,359 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:49,359 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:49,359 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:49,359 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:49,359 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:49,360 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:49,360 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:49,360 [s3a-transfer-leg-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:49,360 [s3a-transfer-leg-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,360 [s3a-transfer-leg-bucket-unbounded-pool2-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [151] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093&t0=148&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=151&ts=1731777829350
2024-11-16 17:23:49,366 [s3a-transfer-leg-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:49,366 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:49,367 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:49,367 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:49,367 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:49,367 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777829337; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:49,367 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:49,367 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:49,367 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:49,367 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:49,367 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:49,368 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:49,368 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:49,368 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:49,368 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,368 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,368 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:49,368 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,368 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093&t0=148&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=152&ts=1731777829350
2024-11-16 17:23:49,374 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:49,374 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:49,374 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:23:49,374 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:49,374 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:49,374 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,374 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,374 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:49,374 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,374 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000093&t0=148&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=152&ts=1731777829350
2024-11-16 17:23:49,382 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:49,382 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:49,382 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:23:49,382 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.014s
2024-11-16 17:23:49,382 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:23:49,383 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:23:49,383 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:49,383 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:49,384 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:49,394 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 23, active threads = 0, queued tasks = 0, completed tasks = 23], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((audit_span_creation=75) (op_list_files=0) (multipart_instantiated=0) (op_get_file_status=1) (fake_directories_created=0) (stream_read_close_operations=16) (object_bulk_delete_request.failures=0) (committer_commits_aborted=0) (committer_tasks_completed=0) (op_mkdirs=19) (stream_read_fully_operations=1) (committer_load_single_pending_file.failures=0) (stream_write_block_uploads_committed=0) (committer_commits_reverted=0) (committer_load_single_pending_file=0) (object_multipart_initiated=0) (op_list_status.failures=0) (committer_magic_marker_put.failures=0) (stream_read_opened=3) (op_get_content_summary.failures=0) (delegation_tokens_issued=0) (stream_read_exceptions=0) (op_list_files.failures=0) (object_put_request.failures=0) (stream_write_exceptions=0) (object_metadata_request=54) (files_deleted=19) (op_delete=19) (op_access=0) (object_put_request=38) (committer_tasks_failed=0) (stream_write_block_uploads=19) (op_xattr_get_named=0) (op_xattr_get_map=0) (op_is_file.failures=0) (op_is_directory=0) (op_xattr_list.failures=0) (object_multipart_aborted=0) (stream_read_remote_stream_aborted=0) (object_bulk_delete_request=38) (op_create_non_recursive=0) (action_executor_acquired=0) (committer_materialize_file=0) (object_delete_request=0) (object_put_bytes=1245184) (stream_read_vectored_operations=13) (files_created=19) (audit_access_check_failure=0) (op_get_delegation_token.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_operations_incomplete=0) (op_abort=0) (op_xattr_get_named_map=0) (stream_read_seek_forward_operations=0) (op_copy_from_local_file.failures=0) (fake_directories_deleted=19) (committer_commits_created=0) (stream_write_total_data=2490368) (object_copy_requests=0) (audit_request_execution=225) (stream_read_vectored_incoming_ranges=43) (action_http_get_request=19) (stream_write_total_time=0) (action_file_opened=16) (stream_read_vectored_combined_ranges=18) (action_file_opened.failures=0) (files_delete_rejected=0) (op_openfile=0) (op_rename.failures=0) (committer_commits.failures=0) (stream_read_operations=3) (stream_read_seek_operations=0) (committer_jobs_failed=0) (op_abort.failures=0) (store_io_request=225) (op_is_directory.failures=0) (object_select_requests=0) (op_get_file_checksum=0) (op_get_file_status.failures=0) (directories_deleted=0) (object_delete_request.failures=0) (committer_bytes_uploaded=0) (object_multipart_initiated.failures=0) (committer_bytes_committed=0) (object_delete_objects=38) (object_list_request=76) (op_glob_status.failures=0) (op_xattr_get_map.failures=0) (committer_magic_marker_put=0) (object_list_request.failures=0) (stream_read_bytes_discarded_in_close=196008) (op_list_status=0) (directories_created=19) (op_is_file=0) (files_copied=0) (store_io_throttled=0) (stream_read_unbuffered=1) (stream_write_bytes=1245184) (op_createfile=0) (committer_jobs_completed=0) (op_xattr_get_named.failures=0) (store_exists_probe.failures=0) (committer_stage_file_upload=0) (committer_materialize_file.failures=0) (stream_read_remote_stream_aborted.failures=0) (committer_commit_job.failures=0) (committer_commits_completed=0) (object_continue_list_request.failures=0) (op_get_file_checksum.failures=0) (op_createfile.failures=0) (stream_read_seek_policy_changed=17) (object_continue_list_request=0) (stream_read_closed=3) (audit_failure=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_queue_duration.failures=0) (store_io_retry=0) (op_get_content_summary=0) (committer_stage_file_upload.failures=0) (op_access.failures=0) (stream_read_seek_bytes_skipped=0) (object_put_request_completed=38) (multipart_upload_part_put=0) (stream_read_version_mismatches=0) (delegation_tokens_issued.failures=0) (multipart_upload_list=0) (op_rename=0) (committer_commit_job=0) (files_copied_bytes=0) (multipart_upload_aborted=0) (stream_read_vectored_read_bytes_discarded=24503) (op_list_located_status=0) (stream_read_bytes_backwards_on_seek=0) (action_http_head_request.failures=0) (store_exists_probe=0) (stream_write_queue_duration=0) (op_create=19) (stream_read_bytes=5963) (stream_aborted=0) (op_hflush=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_list.failures=0) (action_http_get_request.failures=0) (object_multipart_aborted.failures=0) (op_glob_status=0) (stream_read_remote_stream_drain=3) (op_delete.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_open=16) (op_exists.failures=0) (stream_read_total_bytes=201971) (op_mkdirs.failures=0) (multipart_upload_started=0) (op_get_delegation_token=0) (stream_read_seek_backward_operations=0) (multipart_upload_part_put_bytes=0) (op_hsync=0) (op_xattr_list=0) (ignored_errors=0) (op_xattr_get_named_map.failures=0) (action_executor_acquired.failures=0) (op_copy_from_local_file=0) (multipart_upload_completed=0) (op_exists=0) (op_create.failures=0) (committer_magic_files_created=0) (action_http_head_request=54) (stream_read_seek_bytes_discarded=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=19) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_list_status.min=-1) (action_file_opened.min=4) (op_create.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (op_delete.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_http_head_request.min=2) (op_xattr_list.failures.min=-1) (op_get_content_summary.failures.min=-1) (store_exists_probe.failures.min=-1) (op_access.min=-1) (op_abort.min=-1) (op_xattr_get_named_map.min=-1) (op_list_files.min=-1) (op_get_file_status.min=8) (stream_read_remote_stream_aborted.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_glob_status.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=12) (object_put_request.min=16) (op_is_directory.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_map.failures.min=-1) (op_glob_status.failures.min=-1) (op_createfile.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.min=-1) (stream_write_queue_duration.min=-1) (op_rename.failures.min=-1) (object_delete_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_delete.min=24) (op_get_delegation_token.failures.min=-1) (op_access.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_status.failures.min=-1) (object_delete_request.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.failures.min=-1) (op_create.min=5) (op_get_delegation_token.min=-1) (object_bulk_delete_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_createfile.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named.failures.min=-1) (multipart_upload_list.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.failures.min=-1) (store_exists_probe.min=-1) (op_copy_from_local_file.min=-1) (object_multipart_initiated.min=-1) (op_exists.failures.min=-1) (object_list_request.min=4) (committer_commit_job.failures.min=-1) (object_list_request.failures.min=-1) (object_bulk_delete_request.min=5) (op_is_file.min=-1) (op_rename.min=-1) (op_mkdirs.min=17) (op_xattr_list.min=-1) (op_xattr_get_map.min=-1) (action_file_opened.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_commit_job.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=4) (op_get_file_checksum.failures.min=-1) (object_continue_list_request.min=-1) (op_get_content_summary.min=-1) (committer_materialize_file.min=-1));
maximums=((object_bulk_delete_request.max=12) (op_glob_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.max=-1) (op_create.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_get_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_exists.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (op_access.max=-1) (op_is_file.failures.max=-1) (action_file_opened.max=11) (object_multipart_initiated.max=-1) (op_list_files.failures.max=-1) (object_continue_list_request.max=-1) (op_is_directory.max=-1) (op_glob_status.max=-1) (op_xattr_list.max=-1) (op_abort.max=-1) (op_createfile.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_content_summary.max=-1) (multipart_upload_list.max=-1) (committer_magic_marker_put.max=-1) (op_delete.failures.max=-1) (op_create.max=45) (committer_load_single_pending_file.max=-1) (object_put_request.max=71) (committer_magic_marker_put.failures.max=-1) (action_http_get_request.max=26) (op_get_file_status.max=8) (committer_materialize_file.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.failures.max=-1) (object_list_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_delete_request.failures.max=-1) (op_rename.max=-1) (op_xattr_get_map.failures.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_map.max=-1) (op_rename.failures.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_status.max=-1) (op_access.failures.max=-1) (committer_stage_file_upload.max=-1) (op_delete.max=58) (delegation_tokens_issued.failures.max=-1) (action_http_head_request.max=11) (op_createfile.max=-1) (op_list_files.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_drain.max=4) (committer_commit_job.max=-1) (store_exists_probe.max=-1) (object_multipart_aborted.failures.max=-1) (op_is_file.max=-1) (op_list_status.failures.max=-1) (op_is_directory.failures.max=-1) (op_mkdirs.max=263) (object_delete_request.max=-1) (action_executor_acquired.max=-1) (object_continue_list_request.failures.max=-1) (object_list_request.max=167) (committer_commit_job.failures.max=-1) (op_exists.max=-1) (op_copy_from_local_file.failures.max=-1) (action_http_head_request.failures.max=-1) (object_put_request.failures.max=-1) (op_get_content_summary.failures.max=-1));
means=((action_http_head_request.mean=(samples=54, sum=247, mean=4.5741)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=16, sum=88, mean=5.5000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=38, sum=306, mean=8.0526)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=285, mean=15.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=19, sum=701, mean=36.8947)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=38, sum=768, mean=20.2105)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=76, sum=772, mean=10.1579)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=19, sum=765, mean=40.2632)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=19, sum=245, mean=12.8947)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:49,395 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:49,395 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,395 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,395 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,395 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,395 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000094 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000094&t0=153&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=153&ts=1731777829395
2024-11-16 17:23:49,399 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:49,400 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,400 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,400 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,400 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,400 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000094 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000094&t0=153&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=153&ts=1731777829395
2024-11-16 17:23:49,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,403 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:49,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:49,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:49,404 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000094 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000094&t0=153&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=153&ts=1731777829395
2024-11-16 17:23:49,414 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:49,414 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:49,414 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:23:49,414 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:49,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,415 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,415 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000095 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000095&t0=153&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=153&ts=1731777829414
2024-11-16 17:23:49,419 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:49,419 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,419 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:49,420 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12845498578036756735.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:49,421 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12845498578036756735.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_block_uploads=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (op_hsync=0) (stream_write_exceptions=0) (op_abort.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_put_request=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (stream_write_total_data=0) (op_hflush=0) (op_abort=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12845498578036756735.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,421 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,421 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:49,421 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12845498578036756735.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:49,421 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:49,421 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:49,421 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:49,421 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:49,422 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000095 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000095&t0=153&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=154&ts=1731777829414
2024-11-16 17:23:49,439 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:49,439 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:49,440 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.019s
2024-11-16 17:23:49,441 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12845498578036756735.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:49,441 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12845498578036756735.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,441 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12845498578036756735.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,441 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:49,441 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,442 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated.failures=0) (stream_write_block_uploads=1) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (op_abort=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (op_hsync=0) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (object_put_request=1) (stream_write_total_data=65536) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=17) (multipart_upload_completed.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_put_request.max=17));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:49,442 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:49,443 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,443 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,443 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:49,444 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [155] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000096 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000096/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000096&t0=155&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=155&ts=1731777829443
2024-11-16 17:23:49,447 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:49,447 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:49,447 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,447 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:23:49,448 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_unbuffered=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (action_file_opened=1) (stream_read_seek_operations=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_incoming_ranges=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_operations=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=0) (stream_read_prefetch_operations=0) (stream_read_exceptions=0) (stream_read_total_bytes=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (action_http_get_request.failures=0) (stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request=0) (stream_read_vectored_combined_ranges=0) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=4) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=4) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:49,450 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:49,450 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,450 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,450 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097&t0=153&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=153&ts=1731777829450
2024-11-16 17:23:49,453 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,453 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,453 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097&t0=153&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=153&ts=1731777829450
2024-11-16 17:23:49,461 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:49,461 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:49,461 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:49,462 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:49,462 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:49,462 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:49,463 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:49,463 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:49,463 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:49,464 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:49,464 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:49,464 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:49,465 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:49,465 [s3a-transfer-leg-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:49,466 [s3a-transfer-leg-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,466 [s3a-transfer-leg-bucket-unbounded-pool2-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [156] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097&t0=153&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=156&ts=1731777829450
2024-11-16 17:23:49,471 [s3a-transfer-leg-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:49,471 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:49,472 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:49,472 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:49,472 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:49,472 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777829435; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:49,472 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:49,472 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:49,472 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:49,473 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:49,473 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:49,473 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:49,474 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:49,474 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:49,474 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,474 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,474 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:49,474 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,474 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097&t0=153&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=157&ts=1731777829450
2024-11-16 17:23:49,482 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:49,482 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:49,482 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:23:49,483 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:49,483 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:49,483 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,483 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,483 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:49,483 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,483 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000097&t0=153&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=157&ts=1731777829450
2024-11-16 17:23:49,489 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:49,489 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:49,489 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:23:49,490 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:23:49,490 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:23:49,490 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.027s
2024-11-16 17:23:49,490 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:49,490 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:49,491 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:49,506 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 25, active threads = 0, queued tasks = 0, completed tasks = 25], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_list_located_status=0) (object_bulk_delete_request=40) (op_xattr_get_named_map.failures=0) (ignored_errors=0) (op_get_file_status=1) (object_multipart_aborted.failures=0) (object_put_bytes=1310720) (object_multipart_aborted=0) (object_delete_request.failures=0) (stream_read_seek_bytes_discarded=0) (multipart_instantiated=0) (store_exists_probe=0) (action_http_head_request.failures=0) (directories_created=20) (committer_commits_aborted=0) (object_multipart_initiated.failures=0) (files_delete_rejected=0) (stream_write_block_uploads_aborted=0) (multipart_upload_list=0) (store_io_retry=0) (committer_materialize_file=0) (committer_stage_file_upload.failures=0) (stream_read_vectored_operations=13) (multipart_upload_aborted=0) (multipart_upload_started=0) (committer_load_single_pending_file.failures=0) (stream_read_operations_incomplete=0) (multipart_upload_list.failures=0) (op_xattr_get_named=0) (object_list_request=80) (op_create.failures=0) (op_glob_status=0) (op_create_non_recursive=0) (stream_read_operations=3) (stream_aborted=0) (op_delete=20) (stream_read_remote_stream_aborted=0) (stream_write_bytes=1310720) (op_xattr_get_map=0) (committer_jobs_completed=0) (object_put_request_completed=40) (op_exists.failures=0) (committer_commit_job=0) (committer_commits_completed=0) (op_glob_status.failures=0) (audit_request_execution=236) (op_list_status=0) (multipart_upload_part_put_bytes=0) (stream_write_exceptions_completing_upload=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened=17) (op_openfile=0) (object_bulk_delete_request.failures=0) (object_put_request=40) (op_mkdirs=20) (object_multipart_initiated=0) (stream_read_unbuffered=1) (files_created=20) (op_createfile.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_is_file=0) (stream_read_bytes_backwards_on_seek=0) (committer_jobs_failed=0) (stream_read_closed=3) (fake_directories_deleted=20) (op_is_directory=0) (stream_write_queue_duration=0) (object_continue_list_request=0) (multipart_upload_part_put=0) (op_list_files=0) (op_createfile=0) (committer_commits.failures=0) (committer_tasks_failed=0) (committer_magic_files_created=0) (op_is_directory.failures=0) (stream_read_exceptions=0) (delegation_tokens_issued.failures=0) (op_get_delegation_token.failures=0) (action_executor_acquired=0) (files_copied=0) (op_hsync=0) (op_rename=0) (stream_write_exceptions=0) (action_file_opened.failures=0) (object_continue_list_request.failures=0) (object_metadata_request=57) (store_exists_probe.failures=0) (action_http_get_request=19) (stream_read_seek_operations=0) (stream_write_total_time=0) (store_io_throttled=0) (op_access.failures=0) (stream_read_seek_backward_operations=0) (op_delete.failures=0) (fake_directories_created=0) (object_copy_requests=0) (directories_deleted=0) (op_get_delegation_token=0) (op_is_file.failures=0) (committer_load_single_pending_file=0) (committer_bytes_committed=0) (op_get_file_checksum=0) (committer_commit_job.failures=0) (committer_commits_created=0) (stream_read_vectored_incoming_ranges=43) (store_io_request=236) (committer_magic_marker_put.failures=0) (op_xattr_list.failures=0) (op_get_file_status.failures=0) (audit_access_check_failure=0) (object_delete_objects=40) (committer_stage_file_upload=0) (committer_magic_marker_put=0) (audit_span_creation=79) (committer_tasks_completed=0) (multipart_upload_abort_under_path_invoked=0) (committer_bytes_uploaded=0) (object_delete_request=0) (stream_read_bytes=5963) (op_get_content_summary.failures=0) (stream_write_block_uploads=20) (committer_commits_reverted=0) (op_exists=0) (op_create=20) (stream_write_block_uploads_committed=0) (delegation_tokens_issued=0) (stream_read_seek_forward_operations=0) (op_xattr_list=0) (op_get_file_checksum.failures=0) (object_put_request.failures=0) (op_mkdirs.failures=0) (op_xattr_get_named_map=0) (stream_read_vectored_combined_ranges=18) (stream_read_seek_bytes_skipped=0) (stream_write_total_data=2621440) (action_http_get_request.failures=0) (stream_read_opened=3) (stream_read_remote_stream_drain=3) (object_select_requests=0) (op_open=17) (op_abort.failures=0) (audit_failure=0) (stream_read_vectored_read_bytes_discarded=24503) (op_access=0) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_completed=0) (stream_read_version_mismatches=0) (op_get_content_summary=0) (op_hflush=0) (stream_read_total_bytes=201971) (op_copy_from_local_file.failures=0) (committer_materialize_file.failures=0) (object_list_request.failures=0) (op_xattr_get_named.failures=0) (stream_read_seek_policy_changed=18) (op_xattr_get_map.failures=0) (files_deleted=20) (op_abort=0) (stream_read_close_operations=17) (action_http_head_request=57) (op_rename.failures=0) (op_list_files.failures=0) (stream_read_bytes_discarded_in_close=196008) (action_executor_acquired.failures=0) (files_copied_bytes=0) (stream_read_fully_operations=1) (op_list_status.failures=0) (op_copy_from_local_file=0) (stream_write_queue_duration.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=20) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.min=4) (op_createfile.failures.min=-1) (op_exists.min=-1) (multipart_upload_list.min=-1) (object_delete_request.min=-1) (action_http_head_request.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.failures.min=-1) (object_delete_request.failures.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (op_delete.min=24) (op_rename.failures.min=-1) (op_is_directory.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_delegation_token.min=-1) (object_multipart_initiated.failures.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_materialize_file.min=-1) (op_create.min=5) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_initiated.min=-1) (stream_write_queue_duration.min=-1) (op_glob_status.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_status.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_createfile.min=-1) (object_list_request.min=4) (stream_read_remote_stream_drain.failures.min=-1) (object_put_request.min=17) (committer_materialize_file.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.min=-1) (op_get_file_checksum.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_delete.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_create.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_list_files.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (delegation_tokens_issued.min=-1) (op_get_content_summary.min=-1) (committer_commit_job.failures.min=-1) (op_list_status.min=-1) (committer_commit_job.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.min=-1) (op_is_file.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named.min=-1) (object_list_request.failures.min=-1) (stream_read_remote_stream_drain.min=4) (op_copy_from_local_file.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=12) (op_xattr_list.min=-1) (action_http_head_request.min=2) (op_glob_status.min=-1) (op_xattr_get_map.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (op_access.failures.min=-1) (object_bulk_delete_request.min=5) (committer_stage_file_upload.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.min=8) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_aborted.min=-1) (op_rename.min=-1) (store_exists_probe.min=-1) (delegation_tokens_issued.failures.min=-1) (op_mkdirs.min=17));
maximums=((op_glob_status.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.max=-1) (op_is_directory.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_list.max=-1) (object_list_request.failures.max=-1) (op_is_file.failures.max=-1) (op_mkdirs.failures.max=-1) (store_exists_probe.failures.max=-1) (op_delete.max=58) (committer_stage_file_upload.failures.max=-1) (op_exists.max=-1) (committer_commit_job.failures.max=-1) (object_list_request.max=167) (store_exists_probe.max=-1) (committer_stage_file_upload.max=-1) (op_list_files.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_file_opened.max=11) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_exists.failures.max=-1) (object_put_request.max=71) (op_createfile.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_status.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_commit_job.max=-1) (committer_materialize_file.failures.max=-1) (delegation_tokens_issued.max=-1) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_http_head_request.max=11) (object_continue_list_request.failures.max=-1) (op_create.max=45) (op_xattr_get_named.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_map.max=-1) (op_mkdirs.max=263) (op_xattr_get_named.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_delegation_token.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=4) (object_bulk_delete_request.max=12) (object_multipart_initiated.failures.max=-1) (op_get_file_status.max=8) (op_get_file_checksum.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_glob_status.failures.max=-1) (op_access.failures.max=-1) (op_delete.failures.max=-1) (object_multipart_initiated.max=-1) (op_rename.max=-1) (op_is_directory.max=-1) (committer_materialize_file.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named_map.max=-1) (object_continue_list_request.max=-1) (op_access.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_get_request.max=26) (op_abort.max=-1) (op_is_file.max=-1) (object_delete_request.max=-1) (op_rename.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_aborted.max=-1) (object_bulk_delete_request.failures.max=-1) (object_put_request.failures.max=-1) (op_create.failures.max=-1) (op_list_files.max=-1) (action_file_opened.failures.max=-1) (op_abort.failures.max=-1));
means=((object_list_request.mean=(samples=80, sum=793, mean=9.9125)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=20, sum=784, mean=39.2000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=17, sum=92, mean=5.4118)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=285, mean=15.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=57, sum=257, mean=4.5088)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=20, sum=250, mean=12.5000)) (object_put_request.mean=(samples=40, sum=795, mean=19.8750)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=40, sum=320, mean=8.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=20, sum=729, mean=36.4500)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:49,507 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:49,507 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,507 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,507 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,507 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,508 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000098 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000098&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=158&ts=1731777829507
2024-11-16 17:23:49,513 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:49,514 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,514 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,514 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,514 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,514 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000098 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000098&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=158&ts=1731777829507
2024-11-16 17:23:49,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,517 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:49,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:49,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:49,517 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000098 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000098&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=158&ts=1731777829507
2024-11-16 17:23:49,526 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:49,527 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:49,527 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:23:49,527 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:49,527 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,527 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,528 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,528 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000099 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000099&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=158&ts=1731777829527
2024-11-16 17:23:49,534 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:49,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,535 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:49,536 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15456955336709063706.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:49,537 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15456955336709063706.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (op_abort=0) (op_abort.failures=0) (multipart_upload_part_put=0) (stream_write_total_data=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (op_hflush=0) (stream_write_total_time=0) (object_multipart_initiated=0) (op_hsync=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15456955336709063706.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,538 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,538 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:49,538 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15456955336709063706.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:49,540 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:49,540 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:49,541 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:49,541 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:49,542 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000099 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000099&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=159&ts=1731777829527
2024-11-16 17:23:49,576 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:49,576 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:49,576 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.036s
2024-11-16 17:23:49,576 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15456955336709063706.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:49,576 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15456955336709063706.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,576 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15456955336709063706.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,576 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:49,577 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,578 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (op_hsync=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (op_hflush=0) (op_abort.failures=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (op_abort=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (object_put_request=1) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=34) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=34) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=34, mean=34.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:49,578 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:49,579 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,579 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,579 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:49,579 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000100 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000100&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=158&ts=1731777829579
2024-11-16 17:23:49,591 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:49,591 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:49,592 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,592 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:49,592 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:49,592 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:49,596 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:49,596 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:49,596 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:49,596 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:49,597 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:49,597 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,598 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:49,598 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000100&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=160&ts=1731777829579
2024-11-16 17:23:49,600 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:49,601 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:49,601 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,601 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:49,601 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [161] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000100&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=161&ts=1731777829579
2024-11-16 17:23:49,621 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.023s
2024-11-16 17:23:49,621 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:49,621 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:23:49,621 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:49,623 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:49,623 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (stream_read_unbuffered=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_operations=2) (stream_read_block_acquire_read=0) (stream_read_seek_backward_operations=0) (stream_read_fully_operations=0) (stream_read_opened=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (stream_read_bytes=300) (stream_read_vectored_incoming_ranges=4) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=2) (stream_read_exceptions=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read.failures=0) (stream_read_version_mismatches=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=20) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=300) (stream_read_block_read.failures=0) (stream_read_block_read=0) (stream_read_operations=0) (action_file_opened.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=2) (action_file_opened=1) (stream_read_prefetch_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=12) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=21) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=12) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=23));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=12, mean=12.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=44, mean=22.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:49,624 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:49,625 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:49,625 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,625 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,625 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=158&ts=1731777829625
2024-11-16 17:23:49,634 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,634 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,634 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=158&ts=1731777829625
2024-11-16 17:23:49,640 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:49,641 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:49,641 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:49,641 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:49,641 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:49,641 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:49,641 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:49,641 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:49,641 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:49,641 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:49,641 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:49,642 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:49,642 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:49,643 [s3a-transfer-leg-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:49,643 [s3a-transfer-leg-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,643 [s3a-transfer-leg-bucket-unbounded-pool2-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [162] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=162&ts=1731777829625
2024-11-16 17:23:49,649 [s3a-transfer-leg-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:49,649 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:23:49,650 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:49,650 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:49,650 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:49,650 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777829570; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:49,650 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:49,650 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:49,650 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:49,651 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:49,653 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:49,655 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:49,655 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:49,655 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:49,656 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,656 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,656 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:49,656 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,656 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=163&ts=1731777829625
2024-11-16 17:23:49,663 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:23:49,664 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:49,664 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:23:49,664 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:49,664 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:49,664 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,664 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,665 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:49,666 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,666 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000101&t0=158&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=163&ts=1731777829625
2024-11-16 17:23:49,675 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:49,676 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:23:49,676 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:23:49,676 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.021s
2024-11-16 17:23:49,677 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.024s
2024-11-16 17:23:49,677 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.036s
2024-11-16 17:23:49,677 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:49,677 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:49,680 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:49,710 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 26, active threads = 0, queued tasks = 0, completed tasks = 26], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_create.failures=0) (op_rename=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=3) (audit_span_creation=83) (op_get_file_checksum=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (store_io_request=249) (delegation_tokens_issued.failures=0) (committer_commits.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_get_file_checksum.failures=0) (action_http_get_request=21) (committer_jobs_completed=0) (multipart_instantiated=0) (directories_created=21) (stream_read_fully_operations=1) (committer_stage_file_upload=0) (stream_read_seek_forward_operations=0) (op_list_files.failures=0) (committer_tasks_completed=0) (stream_write_exceptions=0) (object_put_bytes=1376256) (op_is_file.failures=0) (stream_read_exceptions=0) (object_continue_list_request=0) (multipart_upload_started=0) (committer_tasks_failed=0) (stream_read_remote_stream_aborted=0) (op_list_located_status=0) (object_continue_list_request.failures=0) (op_copy_from_local_file.failures=0) (op_is_file=0) (op_get_file_status=1) (multipart_upload_list.failures=0) (op_delete=21) (files_delete_rejected=0) (committer_commits_completed=0) (stream_write_exceptions_completing_upload=0) (stream_aborted=0) (object_multipart_aborted=0) (multipart_upload_aborted=0) (multipart_upload_list=0) (action_http_head_request.failures=0) (stream_read_seek_policy_changed=19) (files_copied=0) (op_xattr_get_named_map.failures=0) (audit_access_check_failure=0) (stream_write_queue_duration=0) (object_select_requests=0) (action_file_opened.failures=0) (op_get_delegation_token.failures=0) (op_copy_from_local_file=0) (ignored_errors=0) (fake_directories_created=0) (stream_read_total_bytes=202271) (op_open=18) (multipart_upload_part_put=0) (op_xattr_get_named=0) (object_copy_requests=0) (stream_read_seek_operations=0) (stream_write_total_time=0) (committer_bytes_uploaded=0) (directories_deleted=0) (object_delete_request.failures=0) (op_create_non_recursive=0) (op_xattr_get_named_map=0) (stream_read_operations=3) (op_access=0) (files_deleted=21) (stream_read_vectored_operations=15) (committer_materialize_file.failures=0) (object_delete_request=0) (committer_magic_marker_put.failures=0) (op_is_directory=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_bytes_skipped=0) (op_xattr_list.failures=0) (stream_read_bytes=6263) (multipart_upload_part_put_bytes=0) (object_put_request.failures=0) (committer_stage_file_upload.failures=0) (files_copied_bytes=0) (op_list_files=0) (object_multipart_aborted.failures=0) (stream_read_close_operations=18) (op_glob_status.failures=0) (op_abort=0) (stream_read_closed=3) (multipart_upload_completed=0) (stream_read_version_mismatches=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=20) (action_file_opened=18) (stream_read_remote_stream_aborted.failures=0) (op_create=21) (op_xattr_get_named.failures=0) (committer_magic_files_created=0) (stream_read_remote_stream_drain.failures=0) (store_io_throttled=0) (op_hsync=0) (files_created=21) (stream_write_bytes=1376256) (op_createfile.failures=0) (store_io_retry=0) (committer_load_single_pending_file=0) (op_list_status=0) (op_createfile=0) (stream_write_total_data=2752512) (object_put_request_completed=42) (op_openfile=0) (store_exists_probe=0) (op_mkdirs.failures=0) (object_list_request.failures=0) (op_abort.failures=0) (object_bulk_delete_request.failures=0) (object_list_request=84) (object_bulk_delete_request=42) (store_exists_probe.failures=0) (op_xattr_get_map.failures=0) (op_glob_status=0) (committer_commits_reverted=0) (op_mkdirs=21) (stream_read_opened=3) (committer_commit_job.failures=0) (stream_read_operations_incomplete=0) (committer_bytes_committed=0) (stream_write_queue_duration.failures=0) (committer_commits_aborted=0) (committer_commits_created=0) (op_exists=0) (audit_failure=0) (fake_directories_deleted=21) (stream_read_bytes_discarded_in_abort=0) (op_access.failures=0) (committer_jobs_failed=0) (op_rename.failures=0) (object_put_request=42) (committer_magic_marker_put=0) (committer_materialize_file=0) (op_delete.failures=0) (action_http_head_request=60) (stream_write_block_uploads=21) (audit_request_execution=249) (object_delete_objects=42) (stream_read_unbuffered=1) (op_get_content_summary=0) (stream_read_bytes_discarded_in_close=196008) (op_list_status.failures=0) (op_get_file_status.failures=0) (op_get_delegation_token=0) (op_exists.failures=0) (op_get_content_summary.failures=0) (object_metadata_request=60) (stream_read_vectored_read_bytes_discarded=24523) (op_hflush=0) (stream_write_block_uploads_committed=0) (committer_commit_job=0) (stream_read_seek_bytes_discarded=0) (op_is_directory.failures=0) (stream_read_vectored_incoming_ranges=47) (action_executor_acquired=0) (op_xattr_get_map=0) (op_xattr_list=0) (delegation_tokens_issued=0) (object_multipart_initiated.failures=0) (committer_load_single_pending_file.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_pending=21) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((multipart_upload_list.failures.min=-1) (object_list_request.min=4) (stream_write_queue_duration.min=-1) (op_exists.min=-1) (object_put_request.min=34) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_checksum.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_glob_status.failures.min=-1) (committer_commit_job.failures.min=-1) (op_delete.min=24) (op_abort.min=-1) (op_access.min=-1) (object_multipart_initiated.failures.min=-1) (object_list_request.failures.min=-1) (op_access.failures.min=-1) (action_http_head_request.min=2) (committer_magic_marker_put.min=-1) (op_rename.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_named.failures.min=-1) (action_executor_acquired.min=-1) (op_is_directory.failures.min=-1) (store_exists_probe.min=-1) (committer_commit_job.min=-1) (op_glob_status.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=12) (op_delete.failures.min=-1) (op_get_content_summary.min=-1) (action_http_get_request.failures.min=-1) (op_create.failures.min=-1) (op_createfile.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_drain.min=4) (op_get_file_status.min=8) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_continue_list_request.min=-1) (object_continue_list_request.failures.min=-1) (object_bulk_delete_request.min=5) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_create.min=5) (committer_materialize_file.failures.min=-1) (op_copy_from_local_file.min=-1) (op_is_directory.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_file.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_files.min=-1) (op_get_delegation_token.min=-1) (op_list_status.min=-1) (op_list_status.failures.min=-1) (delegation_tokens_issued.min=-1) (op_createfile.min=-1) (op_exists.failures.min=-1) (op_is_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.min=21) (op_rename.min=-1) (op_get_file_status.failures.min=-1) (op_mkdirs.min=17) (committer_stage_file_upload.min=-1));
maximums=((op_get_delegation_token.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.max=12) (op_xattr_get_map.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_checksum.max=-1) (op_access.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_exists.max=-1) (object_delete_request.max=-1) (action_http_get_request.max=26) (op_create.max=45) (op_createfile.max=-1) (op_get_content_summary.max=-1) (object_list_request.max=167) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_put_request.max=71) (object_multipart_initiated.max=-1) (op_get_file_status.max=8) (committer_commit_job.failures.max=-1) (object_multipart_aborted.max=-1) (op_create.failures.max=-1) (op_createfile.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.max=-1) (op_abort.max=-1) (op_get_content_summary.failures.max=-1) (multipart_upload_list.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.max=-1) (committer_materialize_file.failures.max=-1) (committer_stage_file_upload.max=-1) (op_mkdirs.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_list.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_glob_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_access.max=-1) (delegation_tokens_issued.failures.max=-1) (op_is_file.max=-1) (op_list_files.max=-1) (op_copy_from_local_file.failures.max=-1) (object_list_request.failures.max=-1) (op_exists.failures.max=-1) (op_is_directory.max=-1) (op_copy_from_local_file.max=-1) (op_delete.max=58) (action_executor_acquired.failures.max=-1) (op_xattr_get_named.max=-1) (op_list_status.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_magic_marker_put.max=-1) (op_list_status.failures.max=-1) (op_is_file.failures.max=-1) (op_mkdirs.max=263) (op_delete.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_rename.failures.max=-1) (multipart_upload_list.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_list.max=-1) (object_delete_request.failures.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.max=4) (action_file_opened.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_file_opened.max=12) (action_http_get_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.max=12) (op_rename.max=-1) (op_list_files.failures.max=-1) (delegation_tokens_issued.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=42, sum=838, mean=19.9524)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=21, sum=765, mean=36.4286)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=42, sum=336, mean=8.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=60, sum=281, mean=4.6833)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=21, sum=804, mean=38.2857)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=329, mean=15.6667)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=84, sum=816, mean=9.7143)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=21, sum=259, mean=12.3333)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=18, sum=104, mean=5.7778)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:49,711 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:49,711 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,711 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,711 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,711 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,711 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000102 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000102&t0=164&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=164&ts=1731777829710
2024-11-16 17:23:49,728 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:23:49,728 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,728 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,728 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,728 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,728 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000102 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000102&t0=164&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=164&ts=1731777829710
2024-11-16 17:23:49,732 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,732 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:49,732 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:49,732 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:49,732 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000102 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000102&t0=164&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=164&ts=1731777829710
2024-11-16 17:23:49,744 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:49,744 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:49,745 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:23:49,745 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:49,746 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,746 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,747 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,747 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,748 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000103 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000103&t0=164&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=164&ts=1731777829746
2024-11-16 17:23:49,754 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:49,754 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,755 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:49,755 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1861986411555411685.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:49,756 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1861986411555411685.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed.failures=0) (multipart_upload_completed=0) (op_hflush=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (object_put_request=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (op_hsync=0) (stream_write_exceptions=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (op_abort=0) (stream_write_total_time=0) (stream_write_total_data=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1861986411555411685.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,756 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,757 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:49,757 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1861986411555411685.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:49,762 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:49,763 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:49,763 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:49,763 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:49,763 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000103 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000103&t0=164&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=165&ts=1731777829746
2024-11-16 17:23:49,788 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:49,788 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:49,788 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.025s
2024-11-16 17:23:49,792 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1861986411555411685.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:49,792 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1861986411555411685.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,792 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1861986411555411685.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,792 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:49,792 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,792 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (stream_write_block_uploads=1) (op_hsync=0) (stream_write_exceptions=0) (stream_write_total_data=65536) (stream_write_bytes=65536) (object_multipart_initiated=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (action_executor_acquired=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=25) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=25) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:49,793 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:49,795 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,796 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,796 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:49,797 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000104 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000104/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000104&t0=166&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=166&ts=1731777829795
2024-11-16 17:23:49,802 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:49,802 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:49,802 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,802 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:23:49,804 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_forward_operations=0) (stream_read_operations=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired=0) (stream_read_closed=0) (stream_read_seek_backward_operations=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_total_bytes=0) (stream_read_seek_operations=0) (stream_read_version_mismatches=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_policy_changed=1) (stream_read_bytes=0) (stream_read_unbuffered=0) (stream_read_remote_stream_drain=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (action_file_opened=1) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (action_http_get_request=0) (stream_aborted=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (stream_read_opened=0) (stream_read_vectored_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=7) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=7) (stream_read_block_read.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:49,805 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:49,805 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,805 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,805 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105&t0=164&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=164&ts=1731777829805
2024-11-16 17:23:49,809 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,809 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,809 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105&t0=164&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=164&ts=1731777829805
2024-11-16 17:23:49,816 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:49,817 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:49,817 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:49,818 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:49,819 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:49,819 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:49,820 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:49,820 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:49,821 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:49,821 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:49,822 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:49,822 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:49,825 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:49,826 [s3a-transfer-leg-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:49,826 [s3a-transfer-leg-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,827 [s3a-transfer-leg-bucket-unbounded-pool2-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105&t0=164&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=167&ts=1731777829805
2024-11-16 17:23:49,847 [s3a-transfer-leg-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.020s
2024-11-16 17:23:49,848 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.023s
2024-11-16 17:23:49,848 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:49,848 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:49,848 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:49,849 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777829785; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:49,849 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:49,849 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:49,849 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:49,849 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:49,853 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:49,853 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:49,853 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:49,854 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:49,854 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,854 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,854 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:49,854 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,854 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105&t0=164&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=168&ts=1731777829805
2024-11-16 17:23:49,862 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:49,862 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:49,862 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:23:49,862 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:49,862 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:49,862 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:49,862 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:49,862 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:49,863 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:49,863 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000105&t0=164&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=168&ts=1731777829805
2024-11-16 17:23:49,872 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:49,872 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:23:49,872 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:23:49,872 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:23:49,873 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.020s
2024-11-16 17:23:49,873 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.052s
2024-11-16 17:23:49,873 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:49,873 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:49,881 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:49,897 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 28, active threads = 0, queued tasks = 0, completed tasks = 28], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_access=0) (op_access.failures=0) (stream_read_version_mismatches=0) (stream_read_closed=3) (stream_read_seek_forward_operations=0) (stream_read_bytes=6263) (object_list_request=88) (files_deleted=22) (stream_read_remote_stream_aborted.failures=0) (stream_write_queue_duration.failures=0) (op_xattr_list.failures=0) (store_exists_probe.failures=0) (op_create.failures=0) (stream_read_fully_operations=1) (committer_load_single_pending_file=0) (op_createfile.failures=0) (op_get_content_summary=0) (stream_read_seek_policy_changed=20) (committer_commits.failures=0) (op_open=19) (stream_read_bytes_discarded_in_close=196008) (store_io_request=260) (files_copied=0) (stream_write_exceptions=0) (stream_read_remote_stream_drain=3) (committer_jobs_failed=0) (committer_commit_job=0) (op_get_file_checksum=0) (committer_stage_file_upload.failures=0) (op_xattr_get_named_map.failures=0) (op_rename=0) (multipart_upload_list.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_discarded=0) (op_copy_from_local_file=0) (stream_read_vectored_read_bytes_discarded=24523) (op_create=22) (committer_commits_aborted=0) (ignored_errors=0) (committer_commits_created=0) (object_put_request.failures=0) (op_rename.failures=0) (audit_span_creation=87) (object_delete_objects=44) (stream_read_close_operations=19) (object_multipart_initiated=0) (op_delete=22) (object_multipart_aborted.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_total_data=2883584) (audit_failure=0) (action_file_opened.failures=0) (op_is_file=0) (op_list_status.failures=0) (op_glob_status=0) (op_xattr_get_named.failures=0) (stream_read_seek_backward_operations=0) (stream_read_unbuffered=1) (directories_deleted=0) (op_openfile=0) (committer_commits_completed=0) (committer_materialize_file=0) (op_is_directory.failures=0) (op_xattr_get_map.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (op_abort.failures=0) (op_list_status=0) (committer_tasks_failed=0) (op_hflush=0) (stream_read_vectored_combined_ranges=20) (op_list_files=0) (object_select_requests=0) (object_delete_request.failures=0) (stream_aborted=0) (audit_request_execution=260) (delegation_tokens_issued.failures=0) (stream_write_bytes=1441792) (stream_read_seek_bytes_skipped=0) (multipart_upload_completed=0) (object_put_bytes=1441792) (op_xattr_get_named_map=0) (stream_write_block_uploads_aborted=0) (store_exists_probe=0) (op_exists.failures=0) (committer_materialize_file.failures=0) (op_xattr_get_map=0) (op_get_delegation_token.failures=0) (stream_read_opened=3) (files_delete_rejected=0) (op_is_directory=0) (stream_read_seek_operations=0) (multipart_upload_part_put=0) (action_http_head_request.failures=0) (multipart_upload_list=0) (stream_read_total_bytes=202271) (stream_read_vectored_operations=15) (op_create_non_recursive=0) (op_mkdirs=22) (files_created=22) (stream_read_operations=3) (committer_jobs_completed=0) (committer_bytes_committed=0) (action_executor_acquired=0) (op_xattr_get_named=0) (op_delete.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_copy_from_local_file.failures=0) (audit_access_check_failure=0) (stream_write_total_time=0) (multipart_upload_aborted=0) (object_continue_list_request=0) (committer_bytes_uploaded=0) (op_get_file_status.failures=0) (op_hsync=0) (stream_write_queue_duration=0) (stream_read_exceptions=0) (op_xattr_list=0) (multipart_upload_started=0) (op_glob_status.failures=0) (committer_magic_marker_put=0) (object_list_request.failures=0) (directories_created=22) (multipart_upload_part_put_bytes=0) (object_continue_list_request.failures=0) (action_http_get_request.failures=0) (op_createfile=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_block_uploads_committed=0) (op_mkdirs.failures=0) (op_get_content_summary.failures=0) (op_exists=0) (op_abort=0) (op_list_located_status=0) (files_copied_bytes=0) (op_get_file_checksum.failures=0) (store_io_throttled=0) (object_copy_requests=0) (action_http_get_request=21) (action_file_opened=19) (object_delete_request=0) (stream_read_operations_incomplete=0) (delegation_tokens_issued=0) (op_get_delegation_token=0) (op_get_file_status=1) (stream_write_exceptions_completing_upload=0) (stream_read_remote_stream_aborted=0) (committer_stage_file_upload=0) (action_executor_acquired.failures=0) (object_put_request=44) (committer_commits_reverted=0) (stream_read_vectored_incoming_ranges=47) (fake_directories_created=0) (store_io_retry=0) (object_put_request_completed=44) (action_http_head_request=63) (op_list_files.failures=0) (multipart_instantiated=0) (committer_magic_files_created=0) (stream_write_block_uploads=22) (object_bulk_delete_request.failures=0) (committer_commit_job.failures=0) (object_bulk_delete_request=44) (op_is_file.failures=0) (object_metadata_request=63) (committer_magic_marker_put.failures=0) (fake_directories_deleted=22) (committer_tasks_completed=0));
gauges=((object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=22) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0));
minimums=((delegation_tokens_issued.min=-1) (op_rename.min=-1) (op_list_status.min=-1) (op_list_files.min=-1) (store_exists_probe.failures.min=-1) (op_is_directory.failures.min=-1) (store_exists_probe.min=-1) (op_copy_from_local_file.min=-1) (op_access.failures.min=-1) (op_exists.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (op_delete.min=24) (op_get_content_summary.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_glob_status.min=-1) (op_get_file_checksum.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_list.min=-1) (op_create.min=5) (object_continue_list_request.min=-1) (op_is_directory.min=-1) (op_delete.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_write_queue_duration.min=-1) (op_exists.min=-1) (stream_read_remote_stream_drain.min=4) (object_delete_request.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_materialize_file.min=-1) (committer_magic_marker_put.min=-1) (action_http_head_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_http_get_request.min=21) (op_abort.min=-1) (object_list_request.min=4) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_list.min=-1) (op_abort.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_status.failures.min=-1) (op_create.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.failures.min=-1) (op_mkdirs.min=17) (op_get_file_checksum.failures.min=-1) (op_list_files.failures.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.min=7) (op_get_file_status.min=8) (op_createfile.min=-1) (op_rename.failures.min=-1) (object_put_request.min=25) (stream_write_queue_duration.failures.min=-1) (op_get_delegation_token.min=-1) (op_access.min=-1) (op_is_file.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_map.min=-1) (op_glob_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_bulk_delete_request.min=5) (op_get_file_status.failures.min=-1) (op_createfile.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_http_head_request.min=2) (action_http_get_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_put_request.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_named.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_named.failures.min=-1));
maximums=((op_get_file_status.max=8) (committer_materialize_file.max=-1) (object_list_request.max=167) (op_list_status.failures.max=-1) (op_exists.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (op_xattr_list.max=-1) (op_is_directory.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_access.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (object_bulk_delete_request.max=12) (op_createfile.max=-1) (object_multipart_initiated.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.max=12) (committer_materialize_file.failures.max=-1) (store_exists_probe.failures.max=-1) (action_file_opened.max=12) (multipart_upload_list.failures.max=-1) (op_list_files.failures.max=-1) (op_createfile.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_file_checksum.max=-1) (op_copy_from_local_file.failures.max=-1) (store_exists_probe.max=-1) (stream_write_queue_duration.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_directory.max=-1) (op_rename.max=-1) (op_glob_status.failures.max=-1) (object_list_request.failures.max=-1) (op_create.max=45) (object_delete_request.max=-1) (action_http_get_request.max=26) (op_is_file.failures.max=-1) (op_access.failures.max=-1) (op_delete.failures.max=-1) (op_copy_from_local_file.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.max=-1) (object_put_request.failures.max=-1) (op_xattr_list.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_drain.max=4) (action_http_head_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named.max=-1) (op_glob_status.max=-1) (op_xattr_get_map.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_file.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_create.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_content_summary.max=-1) (action_http_get_request.failures.max=-1) (op_rename.failures.max=-1) (op_mkdirs.failures.max=-1) (object_put_request.max=71) (committer_magic_marker_put.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named_map.max=-1) (delegation_tokens_issued.max=-1) (op_exists.failures.max=-1) (object_delete_request.failures.max=-1) (op_abort.failures.max=-1) (op_delete.max=58) (committer_magic_marker_put.failures.max=-1) (op_mkdirs.max=263) (op_list_status.max=-1));
means=((op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=44, sum=353, mean=8.0227)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=88, sum=865, mean=9.8295)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=44, sum=873, mean=19.8409)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (op_delete.mean=(samples=22, sum=819, mean=37.2273)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=22, sum=838, mean=38.0909)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=63, sum=295, mean=4.6825)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=22, sum=268, mean=12.1818)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=19, sum=111, mean=5.8421)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=329, mean=15.6667)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:49,898 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:49,898 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,898 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,898 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,899 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,899 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000106 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000106&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=169&ts=1731777829898
2024-11-16 17:23:49,905 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:49,905 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,905 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:49,906 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,906 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,906 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000106 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000106&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=169&ts=1731777829898
2024-11-16 17:23:49,909 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:49,910 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:49,910 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:49,910 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:49,910 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000106 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000106&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=169&ts=1731777829898
2024-11-16 17:23:49,922 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:49,923 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:49,923 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:23:49,923 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:49,924 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,924 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,924 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,924 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,924 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000107 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000107&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=169&ts=1731777829924
2024-11-16 17:23:49,932 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:49,932 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,933 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:49,933 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12355760843834263046.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:49,934 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12355760843834263046.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (stream_write_bytes=65536) (op_abort=0) (stream_write_block_uploads=0) (op_hflush=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (object_put_request=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (op_hsync=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12355760843834263046.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,934 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,935 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:49,935 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12355760843834263046.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:49,935 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:49,935 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:49,935 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:49,935 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000107 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000107&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=31&ts=1731777829924
2024-11-16 17:23:49,938 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:49,956 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:49,956 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:49,956 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.021s
2024-11-16 17:23:49,957 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12355760843834263046.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:49,957 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12355760843834263046.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,957 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12355760843834263046.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:49,957 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:49,957 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:49,959 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (op_hflush=0) (stream_write_total_data=65536) (stream_write_total_time=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (op_abort=0) (op_hsync=0) (object_multipart_initiated.failures=0) (object_put_request=1) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=21) (object_multipart_initiated.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((op_abort.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=21) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=21, mean=21.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:49,959 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:49,960 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:49,960 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:49,961 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:49,961 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000108 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000108&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=169&ts=1731777829960
2024-11-16 17:23:49,964 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:49,964 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:49,964 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,964 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:23:49,965 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:49,965 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:23:49,965 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:49,965 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:49,965 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:49,965 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000108 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=500-899&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000108&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=36&ts=1731777829960
2024-11-16 17:23:49,966 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:23:49,973 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:23:49,974 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:49,975 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (stream_read_exceptions=0) (stream_read_seek_backward_operations=0) (stream_read_operations=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (action_http_get_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (stream_read_vectored_operations=1) (stream_read_vectored_incoming_ranges=3) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (action_executor_acquired=0) (stream_aborted=0) (stream_read_unbuffered=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (stream_read_total_bytes=400) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations=0) (action_file_opened.failures=0) (action_http_get_request=1) (stream_read_seek_bytes_skipped=0) (stream_read_operations_incomplete=0) (stream_read_bytes=400) (stream_read_close_operations=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_opened=0) (stream_read_vectored_combined_ranges=1) (stream_read_version_mismatches=0) (stream_read_closed=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=8) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=4) (action_file_opened.failures.min=-1));
maximums=((action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=4) (action_http_get_request.max=8) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=8, mean=8.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:49,976 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:49,976 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:49,976 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:49,977 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=169&ts=1731777829976
2024-11-16 17:23:49,987 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:49,987 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:49,988 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=169&ts=1731777829976
2024-11-16 17:23:49,997 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:23:49,997 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:49,997 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:49,997 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:49,997 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:49,999 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:49,999 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:50,000 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:50,000 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:50,001 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:50,001 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:50,002 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:50,003 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:50,003 [s3a-transfer-leg-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:50,003 [s3a-transfer-leg-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,003 [s3a-transfer-leg-bucket-unbounded-pool2-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [170] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=170&ts=1731777829976
2024-11-16 17:23:50,013 [s3a-transfer-leg-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:23:50,013 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:23:50,014 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:50,014 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:50,014 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:50,014 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777829954; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:50,014 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:50,014 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:50,014 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:50,015 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:50,015 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:50,015 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:50,015 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:50,015 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:50,015 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,015 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,015 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:50,015 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,015 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=38&ts=1731777829976
2024-11-16 17:23:50,029 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:23:50,030 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:23:50,030 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:23:50,030 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:50,030 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:50,030 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,030 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,030 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:50,030 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,030 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000109&t0=169&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=38&ts=1731777829976
2024-11-16 17:23:50,041 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:23:50,041 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:23:50,041 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:23:50,042 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.027s
2024-11-16 17:23:50,042 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.027s
2024-11-16 17:23:50,042 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.042s
2024-11-16 17:23:50,042 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:50,042 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:50,050 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:50,064 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 29, active threads = 0, queued tasks = 0, completed tasks = 29], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_is_directory=0) (op_mkdirs=23) (op_xattr_get_named_map=0) (op_get_file_status=1) (stream_read_exceptions=0) (action_http_head_request.failures=0) (stream_aborted=0) (committer_commit_job.failures=0) (op_createfile=0) (op_openfile=0) (stream_write_block_uploads_committed=0) (object_put_bytes=1507328) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_closed=3) (committer_load_single_pending_file.failures=0) (store_io_retry=0) (committer_magic_marker_put.failures=0) (op_create=23) (stream_read_seek_policy_changed=21) (store_io_request=272) (committer_commits_reverted=0) (op_xattr_get_named=0) (object_copy_requests=0) (multipart_upload_part_put=0) (op_is_file=0) (op_access=0) (committer_load_single_pending_file=0) (stream_read_fully_operations=1) (stream_write_block_uploads=23) (directories_created=23) (committer_stage_file_upload=0) (action_http_get_request=22) (object_list_request.failures=0) (op_xattr_get_named.failures=0) (op_delete.failures=0) (op_list_status.failures=0) (op_xattr_get_named_map.failures=0) (ignored_errors=0) (stream_read_seek_bytes_discarded=0) (committer_commit_job=0) (delegation_tokens_issued=0) (committer_jobs_failed=0) (op_open=20) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (op_is_file.failures=0) (op_abort=0) (op_get_file_checksum.failures=0) (audit_access_check_failure=0) (op_create_non_recursive=0) (committer_tasks_completed=0) (committer_tasks_failed=0) (stream_read_unbuffered=1) (op_rename.failures=0) (directories_deleted=0) (object_put_request_completed=46) (files_delete_rejected=0) (multipart_upload_part_put_bytes=0) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=50) (committer_bytes_committed=0) (op_is_directory.failures=0) (fake_directories_deleted=23) (committer_jobs_completed=0) (op_access.failures=0) (object_multipart_initiated.failures=0) (stream_read_vectored_combined_ranges=21) (audit_failure=0) (multipart_instantiated=0) (op_get_delegation_token=0) (stream_read_remote_stream_aborted=0) (op_glob_status.failures=0) (committer_stage_file_upload.failures=0) (stream_read_vectored_operations=16) (multipart_upload_list=0) (committer_materialize_file.failures=0) (stream_write_queue_duration=0) (committer_commits.failures=0) (op_get_file_status.failures=0) (op_xattr_get_map=0) (object_multipart_aborted.failures=0) (committer_bytes_uploaded=0) (committer_commits_completed=0) (object_continue_list_request=0) (object_list_request=92) (multipart_upload_aborted=0) (stream_write_total_time=0) (stream_read_bytes=6663) (stream_read_seek_forward_operations=0) (action_http_head_request=66) (object_multipart_aborted=0) (object_bulk_delete_request=46) (files_created=23) (delegation_tokens_issued.failures=0) (committer_commits_aborted=0) (audit_request_execution=272) (stream_read_seek_bytes_skipped=0) (object_continue_list_request.failures=0) (files_deleted=23) (op_rename=0) (op_createfile.failures=0) (op_get_content_summary=0) (op_get_content_summary.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_close_operations=20) (op_abort.failures=0) (object_delete_objects=46) (files_copied_bytes=0) (op_list_files.failures=0) (object_delete_request.failures=0) (stream_write_total_data=3014656) (stream_write_block_uploads_aborted=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (object_metadata_request=66) (stream_read_opened=3) (stream_read_operations=3) (stream_write_queue_duration.failures=0) (fake_directories_created=0) (op_list_located_status=0) (stream_read_remote_stream_drain=3) (op_delete=23) (stream_read_remote_stream_aborted.failures=0) (op_hsync=0) (committer_magic_files_created=0) (multipart_upload_list.failures=0) (files_copied=0) (action_executor_acquired=0) (op_exists=0) (object_multipart_initiated=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (stream_read_total_bytes=202671) (op_hflush=0) (op_copy_from_local_file=0) (object_put_request=46) (op_glob_status=0) (op_list_status=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_operations=0) (stream_write_bytes=1507328) (op_exists.failures=0) (op_copy_from_local_file.failures=0) (stream_read_bytes_discarded_in_close=196008) (op_xattr_list.failures=0) (store_exists_probe.failures=0) (op_create.failures=0) (op_get_delegation_token.failures=0) (multipart_upload_abort_under_path_invoked=0) (audit_span_creation=91) (op_get_file_checksum=0) (action_file_opened=20) (op_xattr_list=0) (stream_read_vectored_read_bytes_discarded=24523) (store_exists_probe=0) (store_io_throttled=0) (object_bulk_delete_request.failures=0) (object_select_requests=0) (multipart_upload_started=0) (stream_read_operations_incomplete=0) (op_xattr_get_map.failures=0) (committer_materialize_file=0) (op_mkdirs.failures=0) (object_delete_request=0) (object_put_request.failures=0) (action_http_get_request.failures=0) (committer_commits_created=0) (op_list_files=0));
gauges=((stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_pending=23) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_list_status.min=-1) (op_xattr_get_named.min=-1) (multipart_upload_list.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_mkdirs.min=17) (op_get_content_summary.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_drain.min=4) (op_rename.failures.min=-1) (store_exists_probe.min=-1) (committer_commit_job.failures.min=-1) (op_mkdirs.failures.min=-1) (op_access.failures.min=-1) (op_list_files.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_abort.failures.min=-1) (op_createfile.min=-1) (delegation_tokens_issued.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_exists.failures.min=-1) (op_copy_from_local_file.min=-1) (op_is_directory.min=-1) (object_list_request.failures.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.failures.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_initiated.min=-1) (op_get_file_status.failures.min=-1) (op_list_status.failures.min=-1) (committer_commit_job.min=-1) (op_get_delegation_token.min=-1) (op_get_file_checksum.min=-1) (object_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.min=-1) (object_list_request.min=4) (op_delete.min=24) (action_http_head_request.failures.min=-1) (action_http_head_request.min=2) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_create.min=5) (op_delete.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_aborted.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_delete_request.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named.failures.min=-1) (op_exists.min=-1) (action_http_get_request.failures.min=-1) (object_bulk_delete_request.min=5) (action_file_opened.min=4) (committer_stage_file_upload.min=-1) (op_abort.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_access.min=-1) (committer_materialize_file.failures.min=-1) (action_http_get_request.min=8) (op_get_delegation_token.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=21) (object_multipart_aborted.min=-1) (op_is_file.min=-1) (stream_write_queue_duration.min=-1) (committer_materialize_file.min=-1) (object_put_request.failures.min=-1) (op_get_file_status.min=8) (op_createfile.failures.min=-1) (op_list_files.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_glob_status.min=-1) (action_file_opened.failures.min=-1) (op_glob_status.failures.min=-1));
maximums=((op_xattr_list.max=-1) (op_abort.failures.max=-1) (committer_commit_job.failures.max=-1) (op_delete.max=58) (multipart_upload_list.failures.max=-1) (op_abort.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_file_opened.max=12) (store_exists_probe.max=-1) (op_is_directory.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_files.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_access.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (multipart_upload_list.max=-1) (op_glob_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_map.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.max=4) (action_http_get_request.max=26) (op_is_file.max=-1) (op_exists.failures.max=-1) (op_rename.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_head_request.max=12) (action_http_get_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.max=-1) (op_list_status.failures.max=-1) (op_access.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.max=-1) (op_is_file.failures.max=-1) (committer_materialize_file.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_list.failures.max=-1) (op_createfile.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.max=-1) (object_bulk_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_list_request.max=167) (committer_materialize_file.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named.max=-1) (committer_stage_file_upload.max=-1) (op_get_delegation_token.max=-1) (object_put_request.max=71) (op_get_delegation_token.failures.max=-1) (op_exists.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_directory.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_status.max=8) (op_create.max=45) (stream_write_queue_duration.failures.max=-1) (object_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.max=14) (action_executor_acquired.failures.max=-1) (op_delete.failures.max=-1) (op_mkdirs.max=263) (object_put_request.failures.max=-1) (object_continue_list_request.max=-1) (object_delete_request.max=-1) (op_list_files.failures.max=-1) (object_delete_request.failures.max=-1));
means=((op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=46, sum=906, mean=19.6957)) (object_list_request.mean=(samples=92, sum=899, mean=9.7717)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=23, sum=863, mean=37.5217)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=23, sum=862, mean=37.4783)) (action_file_opened.mean=(samples=20, sum=115, mean=5.7500)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=23, sum=277, mean=12.0435)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=66, sum=312, mean=4.7273)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=46, sum=378, mean=8.2174)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=337, mean=15.3182)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:50,065 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:50,065 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,065 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,065 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,065 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,066 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000110 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000110&t0=171&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=171&ts=1731777830065
2024-11-16 17:23:50,071 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:50,071 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,071 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,072 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,072 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,073 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000110 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000110&t0=171&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=171&ts=1731777830065
2024-11-16 17:23:50,075 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,075 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:50,076 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:50,076 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:50,077 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000110 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000110&t0=171&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=171&ts=1731777830065
2024-11-16 17:23:50,090 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:50,090 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:50,091 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:23:50,091 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:50,091 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,091 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,091 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,091 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,091 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000111 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000111&t0=171&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=171&ts=1731777830091
2024-11-16 17:23:50,096 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,096 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,096 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:50,097 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15991261829042714990.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:50,097 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15991261829042714990.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (object_put_request=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (stream_write_total_time=0) (stream_write_exceptions=0) (op_abort=0) (object_multipart_initiated=0) (op_abort.failures=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15991261829042714990.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,097 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,098 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:50,098 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15991261829042714990.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:50,098 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:50,098 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:50,098 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:50,098 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:50,098 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000111 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000111&t0=171&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=41&ts=1731777830091
2024-11-16 17:23:50,115 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:50,115 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:50,115 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:23:50,115 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15991261829042714990.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:50,115 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15991261829042714990.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,115 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15991261829042714990.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,115 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:50,116 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,116 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (object_put_request=1) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (stream_write_bytes=65536) (op_abort=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (op_hsync=0) (object_multipart_aborted.failures=0) (stream_write_total_data=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (object_put_request.min=17) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=17) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:50,117 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:50,117 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:23:50,117 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:23:50,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:50,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:50,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:23:50,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:23:50,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:23:50,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:23:50,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:23:50,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:23:50,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:23:50,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:23:50,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:23:50,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:23:50,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='01a4ef0a-2640-4cae-add3-8b3a6e796adc', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:50,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='01a4ef0a-2640-4cae-add3-8b3a6e796adc', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:50,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='01a4ef0a-2640-4cae-add3-8b3a6e796adc', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:23:50,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:23:50,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:23:50,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:23:50,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:23:50,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:23:50,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1a56b3bb]
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1a56b3bb]
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:23:50,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:23:50,123 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:23:50,123 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:23:50,124 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:23:50,124 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:23:50,124 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:23:50,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:23:50,126 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,126 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,126 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:50,126 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] 01a4ef0a-2640-4cae-add3-8b3a6e796adc-00000114 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/01a4ef0a-2640-4cae-add3-8b3a6e796adc-00000114/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=01a4ef0a-2640-4cae-add3-8b3a6e796adc-00000114&t0=171&fs=01a4ef0a-2640-4cae-add3-8b3a6e796adc&t1=171&ts=1731777830126
2024-11-16 17:23:50,127 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:23:50,127 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:23:50,127 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:23:50,127 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:23:50,136 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:50,136 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:50,136 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,137 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_incoming_ranges=0) (stream_read_opened=0) (action_http_get_request.failures=0) (action_http_get_request=0) (stream_read_block_read=0) (stream_read_unbuffered=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_acquire_read=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_operations=0) (action_file_opened.failures=0) (action_executor_acquired=0) (stream_aborted=0) (action_file_opened=1) (stream_read_version_mismatches=0) (stream_read_vectored_operations=0) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes=0) (stream_read_closed=0) (stream_read_total_bytes=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=0) (stream_read_fully_operations=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=10));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=10) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1));
means=((action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)));

2024-11-16 17:23:50,137 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:23:50,138 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:23:50,138 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:50,138 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@532b3614[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:23:50,138 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:50,138 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics6-leg-bucket
2024-11-16 17:23:50,138 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:23:50,138 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1a56b3bb] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:50,138 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1a56b3bb] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:50,139 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_write_exceptions_completing_upload=0) (object_select_requests=0) (files_delete_rejected=0) (object_put_request.failures=0) (op_create_non_recursive=0) (op_abort=0) (action_http_head_request=1) (multipart_upload_part_put_bytes=0) (committer_tasks_completed=0) (op_create=0) (op_xattr_list.failures=0) (object_continue_list_request.failures=0) (op_get_file_checksum=0) (op_xattr_get_named.failures=0) (op_is_file=0) (object_delete_request.failures=0) (op_open=1) (action_http_head_request.failures=0) (op_xattr_get_named_map=0) (directories_deleted=0) (stream_write_exceptions=0) (stream_read_total_bytes=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain=0) (op_openfile=0) (action_file_opened=1) (op_mkdirs=0) (delegation_tokens_issued=0) (stream_read_operations=0) (audit_request_execution=1) (object_bulk_delete_request=0) (stream_read_version_mismatches=0) (committer_magic_marker_put=0) (op_is_directory=0) (object_multipart_initiated.failures=0) (fake_directories_created=0) (ignored_errors=0) (audit_span_creation=2) (stream_write_bytes=0) (multipart_upload_list.failures=0) (op_delete=0) (committer_commits_reverted=0) (op_get_delegation_token=0) (object_put_request=0) (store_io_request=1) (op_xattr_list=0) (committer_stage_file_upload=0) (multipart_upload_part_put=0) (committer_tasks_failed=0) (committer_jobs_completed=0) (stream_read_seek_bytes_skipped=0) (action_http_get_request.failures=0) (op_is_directory.failures=0) (stream_read_remote_stream_drain.failures=0) (op_get_file_checksum.failures=0) (delegation_tokens_issued.failures=0) (committer_load_single_pending_file.failures=0) (fake_directories_deleted=0) (object_continue_list_request=0) (op_mkdirs.failures=0) (op_hsync=0) (op_get_content_summary=0) (op_createfile.failures=0) (committer_commit_job.failures=0) (op_copy_from_local_file.failures=0) (op_xattr_get_named=0) (stream_write_total_data=0) (op_get_content_summary.failures=0) (object_multipart_aborted=0) (stream_read_vectored_operations=0) (multipart_upload_abort_under_path_invoked=0) (multipart_instantiated=0) (object_copy_requests=0) (committer_commits_aborted=0) (committer_commits_completed=0) (op_rename=0) (committer_stage_file_upload.failures=0) (object_multipart_aborted.failures=0) (op_is_file.failures=0) (audit_failure=0) (store_io_throttled=0) (multipart_upload_list=0) (stream_read_seek_operations=0) (op_glob_status.failures=0) (stream_read_seek_policy_changed=1) (op_list_located_status=0) (stream_write_total_time=0) (stream_read_unbuffered=0) (stream_read_operations_incomplete=0) (object_delete_request=0) (stream_read_vectored_incoming_ranges=0) (files_copied_bytes=0) (store_exists_probe=0) (op_list_status.failures=0) (audit_access_check_failure=0) (op_list_files=0) (committer_materialize_file.failures=0) (op_glob_status=0) (stream_read_vectored_combined_ranges=0) (committer_materialize_file=0) (stream_read_bytes_discarded_in_abort=0) (store_io_retry=0) (op_abort.failures=0) (object_list_request=0) (committer_load_single_pending_file=0) (object_put_request_completed=0) (op_xattr_get_named_map.failures=0) (op_delete.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_get_file_status.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_fully_operations=0) (action_executor_acquired=0) (files_copied=0) (object_metadata_request=1) (committer_magic_files_created=0) (committer_bytes_committed=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (committer_commits_created=0) (op_access.failures=0) (op_exists=0) (stream_write_block_uploads_committed=0) (op_list_files.failures=0) (stream_aborted=0) (store_exists_probe.failures=0) (stream_read_exceptions=0) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_close=0) (op_get_file_status=0) (op_access=0) (stream_read_bytes=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_discarded=0) (directories_created=0) (object_bulk_delete_request.failures=0) (committer_commits.failures=0) (object_delete_objects=0) (op_xattr_get_map=0) (op_list_status=0) (stream_write_queue_duration.failures=0) (stream_read_opened=0) (action_http_get_request=0) (action_executor_acquired.failures=0) (op_exists.failures=0) (object_put_bytes=0) (files_created=0) (committer_commit_job=0) (stream_write_queue_duration=0) (op_copy_from_local_file=0) (multipart_upload_aborted=0) (committer_bytes_uploaded=0) (stream_read_closed=0) (stream_write_block_uploads=0) (object_list_request.failures=0) (op_hflush=0) (stream_read_vectored_read_bytes_discarded=0) (op_get_delegation_token.failures=0) (stream_read_close_operations=1) (op_rename.failures=0) (op_create.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_completed=0) (op_xattr_get_map.failures=0) (op_createfile=0) (files_deleted=0) (stream_read_remote_stream_aborted=0) (multipart_upload_started=0));
gauges=((client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (stream_read_active_prefetch_operations=0));
minimums=((object_multipart_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.failures.min=-1) (action_http_get_request.min=-1) (object_multipart_initiated.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.min=-1) (op_access.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_list.min=-1) (action_http_head_request.min=10) (delegation_tokens_issued.min=-1) (op_createfile.min=-1) (store_exists_probe.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_status.min=-1) (action_file_opened.min=10) (op_get_content_summary.failures.min=-1) (op_mkdirs.failures.min=-1) (op_exists.failures.min=-1) (op_get_content_summary.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_write_queue_duration.min=-1) (op_is_directory.min=-1) (op_rename.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_bulk_delete_request.min=-1) (op_copy_from_local_file.min=-1) (committer_materialize_file.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_list_files.min=-1) (store_exists_probe.failures.min=-1) (op_create.min=-1) (op_get_file_status.failures.min=-1) (object_put_request.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.failures.min=-1) (object_multipart_aborted.min=-1) (op_glob_status.min=-1) (object_list_request.min=-1) (op_xattr_get_map.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.failures.min=-1) (object_delete_request.min=-1) (op_is_file.min=-1) (object_multipart_initiated.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_list_status.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (op_delete.min=-1) (op_mkdirs.min=-1) (action_executor_acquired.failures.min=-1) (op_glob_status.failures.min=-1) (multipart_upload_list.min=-1) (op_access.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.failures.min=-1) (op_list_files.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_list_status.min=-1) (object_continue_list_request.min=-1) (op_rename.failures.min=-1) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_commit_job.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.min=-1) (op_create.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (store_exists_probe.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_abort.max=-1) (op_copy_from_local_file.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (delegation_tokens_issued.max=-1) (op_rename.failures.max=-1) (committer_magic_marker_put.max=-1) (op_access.max=-1) (op_is_directory.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_delete_request.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.max=-1) (op_glob_status.max=-1) (op_exists.max=-1) (op_is_file.failures.max=-1) (op_get_file_status.failures.max=-1) (op_create.failures.max=-1) (committer_commit_job.max=-1) (op_create.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_status.max=-1) (action_executor_acquired.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_rename.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.max=-1) (committer_commit_job.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_is_directory.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_createfile.max=-1) (op_list_status.failures.max=-1) (op_get_file_status.max=-1) (op_delete.max=-1) (committer_stage_file_upload.failures.max=-1) (object_continue_list_request.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_is_file.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named_map.max=-1) (op_glob_status.failures.max=-1) (op_delete.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_file_opened.max=10) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (multipart_upload_list.max=-1) (action_http_get_request.max=-1) (action_http_head_request.max=10) (op_list_files.failures.max=-1) (action_executor_acquired.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_aborted.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.max=-1) (op_list_files.max=-1) (op_xattr_list.max=-1) (object_list_request.failures.max=-1) (object_list_request.max=-1) (op_mkdirs.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.max=-1) (op_mkdirs.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=10, mean=10.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,140 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:50,140 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,140 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,140 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115&t0=171&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=171&ts=1731777830140
2024-11-16 17:23:50,144 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,144 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,144 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115&t0=171&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=171&ts=1731777830140
2024-11-16 17:23:50,150 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:50,150 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:50,150 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:50,150 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:50,150 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:50,150 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:50,150 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:50,150 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:50,150 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:50,151 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:50,151 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:50,151 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:50,151 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:50,151 [s3a-transfer-leg-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:50,152 [s3a-transfer-leg-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,152 [s3a-transfer-leg-bucket-unbounded-pool2-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115&t0=171&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=173&ts=1731777830140
2024-11-16 17:23:50,156 [s3a-transfer-leg-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:50,157 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:50,157 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:50,157 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:50,157 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:50,157 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777830112; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:50,157 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:50,158 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:50,158 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:50,158 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:50,158 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:50,158 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:50,158 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:50,158 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:50,159 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,159 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,159 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:50,159 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,159 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115&t0=171&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=43&ts=1731777830140
2024-11-16 17:23:50,165 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:50,165 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:50,165 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:23:50,165 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:50,165 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:50,165 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,165 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,165 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:50,165 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,166 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000115&t0=171&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=43&ts=1731777830140
2024-11-16 17:23:50,171 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:50,172 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:50,172 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:50,172 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.014s
2024-11-16 17:23:50,172 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.014s
2024-11-16 17:23:50,172 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.022s
2024-11-16 17:23:50,172 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:50,172 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:50,178 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:50,195 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 30, active threads = 0, queued tasks = 0, completed tasks = 30], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_createfile=0) (store_exists_probe=0) (stream_read_seek_bytes_skipped=0) (op_rename.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_close=196008) (audit_request_execution=282) (op_xattr_get_map.failures=0) (stream_write_block_uploads=24) (op_xattr_get_named_map=0) (op_list_located_status=0) (object_delete_request.failures=0) (action_executor_acquired=0) (op_get_content_summary.failures=0) (object_delete_objects=48) (committer_bytes_uploaded=0) (multipart_upload_part_put_bytes=0) (stream_read_vectored_operations=16) (stream_read_seek_bytes_discarded=0) (store_io_throttled=0) (action_executor_acquired.failures=0) (op_get_content_summary=0) (op_get_delegation_token=0) (op_create=24) (stream_write_queue_duration.failures=0) (op_open=20) (op_glob_status=0) (store_io_request=282) (op_access.failures=0) (stream_read_closed=3) (action_http_head_request=68) (directories_deleted=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (multipart_upload_started=0) (files_deleted=24) (op_delete.failures=0) (object_put_bytes=1572864) (committer_commit_job.failures=0) (audit_failure=0) (stream_read_operations=3) (stream_aborted=0) (committer_materialize_file=0) (op_is_directory.failures=0) (fake_directories_deleted=24) (op_copy_from_local_file=0) (stream_write_total_data=3145728) (stream_read_seek_policy_changed=21) (op_hsync=0) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_aborted=0) (op_list_status=0) (stream_read_seek_operations=0) (committer_jobs_completed=0) (object_put_request.failures=0) (committer_tasks_failed=0) (object_continue_list_request=0) (committer_bytes_committed=0) (stream_read_opened=3) (files_delete_rejected=0) (stream_write_queue_duration=0) (action_file_opened=20) (object_multipart_initiated=0) (files_copied_bytes=0) (action_file_opened.failures=0) (object_select_requests=0) (op_delete=24) (op_xattr_get_named_map.failures=0) (op_get_file_status.failures=0) (committer_stage_file_upload.failures=0) (op_abort.failures=0) (op_xattr_get_named=0) (stream_write_exceptions=0) (committer_commits.failures=0) (stream_read_remote_stream_drain=3) (stream_read_vectored_incoming_ranges=50) (object_bulk_delete_request.failures=0) (stream_read_total_bytes=202671) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_map=0) (op_is_directory=0) (directories_created=24) (object_multipart_aborted=0) (op_is_file.failures=0) (stream_read_exceptions=0) (store_io_retry=0) (object_multipart_aborted.failures=0) (op_glob_status.failures=0) (op_list_files=0) (stream_read_version_mismatches=0) (committer_jobs_failed=0) (committer_magic_files_created=0) (audit_access_check_failure=0) (committer_commits_completed=0) (object_list_request.failures=0) (ignored_errors=0) (op_access=0) (fake_directories_created=0) (stream_write_total_time=0) (committer_commits_reverted=0) (audit_span_creation=94) (multipart_instantiated=0) (op_createfile.failures=0) (stream_read_seek_backward_operations=0) (action_http_head_request.failures=0) (op_exists=0) (multipart_upload_list=0) (multipart_upload_completed=0) (op_xattr_list=0) (action_http_get_request.failures=0) (op_hflush=0) (stream_read_vectored_combined_ranges=21) (op_copy_from_local_file.failures=0) (stream_write_block_uploads_committed=0) (op_xattr_list.failures=0) (op_create_non_recursive=0) (op_abort=0) (stream_read_fully_operations=1) (object_continue_list_request.failures=0) (op_list_status.failures=0) (object_list_request=96) (delegation_tokens_issued.failures=0) (multipart_upload_abort_under_path_invoked=0) (files_created=24) (stream_read_unbuffered=1) (object_bulk_delete_request=48) (stream_write_block_uploads_aborted=0) (op_get_delegation_token.failures=0) (op_rename=0) (op_get_file_checksum.failures=0) (delegation_tokens_issued=0) (multipart_upload_part_put=0) (op_get_file_status=1) (stream_read_bytes=6663) (committer_materialize_file.failures=0) (committer_commits_aborted=0) (op_xattr_get_named.failures=0) (committer_commits_created=0) (object_copy_requests=0) (op_is_file=0) (object_metadata_request=68) (stream_write_exceptions_completing_upload=0) (op_mkdirs=24) (object_multipart_initiated.failures=0) (stream_read_remote_stream_aborted=0) (op_mkdirs.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_exists.failures=0) (stream_read_vectored_read_bytes_discarded=24523) (stream_read_remote_stream_drain.failures=0) (stream_read_operations_incomplete=0) (op_create.failures=0) (files_copied=0) (multipart_upload_list.failures=0) (stream_read_close_operations=20) (committer_load_single_pending_file=0) (op_list_files.failures=0) (committer_commit_job=0) (object_delete_request=0) (op_get_file_checksum=0) (committer_load_single_pending_file.failures=0) (stream_write_bytes=1572864) (action_http_get_request=22) (committer_tasks_completed=0) (object_put_request=48) (store_exists_probe.failures=0) (committer_stage_file_upload=0) (op_openfile=0) (object_put_request_completed=48));
gauges=((client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=24) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.min=8) (store_exists_probe.min=-1) (op_get_delegation_token.min=-1) (object_list_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_files.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_list.min=-1) (op_get_file_status.failures.min=-1) (op_get_file_checksum.min=-1) (op_create.failures.min=-1) (op_exists.failures.min=-1) (op_delete.min=22) (op_get_content_summary.min=-1) (op_access.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_create.min=5) (object_multipart_aborted.min=-1) (committer_commit_job.failures.min=-1) (op_list_status.min=-1) (object_multipart_initiated.failures.min=-1) (op_rename.failures.min=-1) (op_rename.min=-1) (object_continue_list_request.min=-1) (committer_materialize_file.failures.min=-1) (op_delete.failures.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_bulk_delete_request.min=5) (op_createfile.min=-1) (op_copy_from_local_file.min=-1) (delegation_tokens_issued.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (multipart_upload_list.min=-1) (op_mkdirs.min=17) (op_xattr_list.failures.min=-1) (object_put_request.min=17) (op_abort.failures.min=-1) (op_is_directory.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named.min=-1) (multipart_upload_list.failures.min=-1) (object_delete_request.min=-1) (object_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.min=-1) (object_bulk_delete_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_status.min=8) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_glob_status.min=-1) (stream_write_queue_duration.min=-1) (op_list_files.min=-1) (committer_load_single_pending_file.min=-1) (op_exists.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_createfile.failures.min=-1) (action_file_opened.min=4) (op_xattr_get_map.min=-1) (stream_write_queue_duration.failures.min=-1) (object_list_request.min=4) (action_http_head_request.min=2) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (op_get_content_summary.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_drain.min=4) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_commit_job.min=-1) (action_executor_acquired.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.failures.min=-1));
maximums=((op_list_files.max=-1) (op_xattr_get_map.failures.max=-1) (op_copy_from_local_file.max=-1) (action_http_get_request.max=26) (op_exists.failures.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_load_single_pending_file.max=-1) (op_access.max=-1) (op_get_delegation_token.failures.max=-1) (object_list_request.max=167) (op_is_directory.failures.max=-1) (stream_read_remote_stream_drain.max=4) (delegation_tokens_issued.failures.max=-1) (op_create.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_exists.max=-1) (op_rename.max=-1) (op_list_status.failures.max=-1) (op_get_file_status.max=8) (op_xattr_get_named_map.failures.max=-1) (op_is_file.max=-1) (op_get_file_status.failures.max=-1) (op_abort.max=-1) (op_is_directory.max=-1) (op_get_delegation_token.max=-1) (op_abort.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_mkdirs.max=263) (object_continue_list_request.failures.max=-1) (multipart_upload_list.max=-1) (op_createfile.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_rename.failures.max=-1) (op_createfile.max=-1) (op_is_file.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=71) (object_continue_list_request.max=-1) (committer_commit_job.failures.max=-1) (committer_commit_job.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_http_head_request.max=12) (committer_materialize_file.max=-1) (object_put_request.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_delete.max=58) (committer_magic_marker_put.max=-1) (object_bulk_delete_request.max=14) (action_http_head_request.failures.max=-1) (action_http_get_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_checksum.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named.max=-1) (op_create.max=45) (op_get_content_summary.max=-1) (object_delete_request.failures.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.failures.max=-1) (op_access.failures.max=-1) (action_file_opened.max=12) (object_list_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_file_opened.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named_map.max=-1) (object_delete_request.max=-1) (op_glob_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (store_exists_probe.max=-1) (op_glob_status.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=24, sum=283, mean=11.7917)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=24, sum=884, mean=36.8333)) (action_file_opened.mean=(samples=20, sum=115, mean=5.7500)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=48, sum=937, mean=19.5208)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=24, sum=889, mean=37.0417)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=337, mean=15.3182)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=68, sum=319, mean=4.6912)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=48, sum=389, mean=8.1042)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=96, sum=919, mean=9.5729)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:50,196 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:50,197 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,197 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,198 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,198 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,199 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000116 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000116&t0=174&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=174&ts=1731777830196
2024-11-16 17:23:50,205 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:50,206 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,206 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,207 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,207 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,208 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000116 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000116&t0=174&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=174&ts=1731777830196
2024-11-16 17:23:50,211 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,212 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:50,212 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:50,212 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:50,213 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000116 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000116&t0=174&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=174&ts=1731777830196
2024-11-16 17:23:50,222 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:50,223 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:50,223 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:23:50,224 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:50,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,225 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,225 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,225 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,225 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000117 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000117&t0=174&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=174&ts=1731777830224
2024-11-16 17:23:50,233 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:50,233 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,234 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:50,235 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4339726800060936344.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:50,236 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4339726800060936344.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed.failures=0) (op_abort.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (op_hflush=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (object_put_request=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=0) (op_abort=0) (multipart_upload_part_put=0) (op_hsync=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4339726800060936344.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,236 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,237 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:50,237 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4339726800060936344.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:50,237 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:50,237 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:50,238 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:50,238 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:50,238 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000117 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000117&t0=174&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=44&ts=1731777830224
2024-11-16 17:23:50,258 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:50,258 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:50,258 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.021s
2024-11-16 17:23:50,260 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4339726800060936344.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:50,260 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4339726800060936344.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,260 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4339726800060936344.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,261 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:50,262 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,262 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_time=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_hsync=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_total_data=65536) (object_put_request=1) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (action_executor_acquired.failures=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=20) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_put_request.max=20) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=20, mean=20.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:50,263 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:50,263 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:23:50,263 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:23:50,264 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:50,265 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:50,271 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:23:50,271 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:23:50,271 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:23:50,271 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:23:50,272 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:23:50,272 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:23:50,272 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:23:50,272 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:23:50,273 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:23:50,273 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:23:50,274 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='acbb6751-c78f-48a4-ba9a-e2a75062ec29', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:50,274 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='acbb6751-c78f-48a4-ba9a-e2a75062ec29', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:50,274 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='acbb6751-c78f-48a4-ba9a-e2a75062ec29', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:23:50,274 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:23:50,274 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:23:50,275 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:23:50,275 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:23:50,276 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:23:50,276 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:23:50,276 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4c3ed901]
2024-11-16 17:23:50,276 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4c3ed901]
2024-11-16 17:23:50,276 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:23:50,276 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:23:50,276 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:23:50,277 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:23:50,277 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:23:50,277 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:23:50,278 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:23:50,278 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:50,278 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:23:50,278 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:23:50,278 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:23:50,278 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:23:50,280 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:23:50,280 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:23:50,280 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:23:50,280 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:23:50,280 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:23:50,280 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:23:50,280 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:23:50,280 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:23:50,280 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:23:50,281 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:23:50,285 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:23:50,285 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:23:50,285 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:23:50,285 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:23:50,285 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:23:50,285 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:23:50,287 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,287 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,287 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:50,287 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] acbb6751-c78f-48a4-ba9a-e2a75062ec29-00000120 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/acbb6751-c78f-48a4-ba9a-e2a75062ec29-00000120/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=acbb6751-c78f-48a4-ba9a-e2a75062ec29-00000120&t0=174&fs=acbb6751-c78f-48a4-ba9a-e2a75062ec29&t1=174&ts=1731777830287
2024-11-16 17:23:50,288 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:23:50,288 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:23:50,288 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:23:50,288 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:23:50,293 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:50,293 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:50,293 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,294 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_operations=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_close_operations=1) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_fully_operations=0) (stream_read_vectored_operations=0) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations.failures=0) (stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted=0) (action_file_opened=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_prefetch_operations=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (stream_read_exceptions=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request=0) (stream_read_seek_forward_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=6) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=6) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,294 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:23:50,295 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:23:50,295 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:50,295 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@3cbaa30[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:23:50,295 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:50,295 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics7-leg-bucket
2024-11-16 17:23:50,295 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:23:50,295 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4c3ed901] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:50,295 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4c3ed901] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:50,297 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_glob_status.failures=0) (committer_bytes_committed=0) (op_create.failures=0) (action_executor_acquired.failures=0) (stream_aborted=0) (audit_failure=0) (stream_read_vectored_operations=0) (stream_write_exceptions_completing_upload=0) (op_copy_from_local_file.failures=0) (stream_write_exceptions=0) (op_glob_status=0) (committer_magic_marker_put.failures=0) (stream_read_seek_backward_operations=0) (delegation_tokens_issued=0) (stream_write_total_time=0) (action_executor_acquired=0) (object_put_request.failures=0) (op_get_content_summary.failures=0) (stream_write_total_data=0) (op_list_files=0) (op_get_file_status=0) (op_abort.failures=0) (op_is_file=0) (object_copy_requests=0) (op_get_file_checksum.failures=0) (op_hflush=0) (stream_read_exceptions=0) (store_io_throttled=0) (op_access=0) (store_exists_probe.failures=0) (op_open=1) (committer_jobs_failed=0) (files_copied_bytes=0) (fake_directories_deleted=0) (committer_commits_created=0) (object_delete_request=0) (multipart_upload_part_put=0) (object_bulk_delete_request=0) (op_get_delegation_token.failures=0) (object_delete_request.failures=0) (stream_read_operations_incomplete=0) (action_http_get_request.failures=0) (object_metadata_request=1) (op_create_non_recursive=0) (op_xattr_get_named.failures=0) (committer_jobs_completed=0) (committer_load_single_pending_file=0) (committer_commits.failures=0) (object_multipart_initiated.failures=0) (action_http_head_request.failures=0) (object_put_bytes=0) (ignored_errors=0) (object_select_requests=0) (object_put_request=0) (object_multipart_aborted=0) (op_get_file_checksum=0) (op_mkdirs.failures=0) (op_is_directory=0) (committer_commits_completed=0) (committer_commits_aborted=0) (op_xattr_list.failures=0) (store_io_retry=0) (op_delete=0) (stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=0) (object_list_request.failures=0) (committer_stage_file_upload.failures=0) (committer_magic_marker_put=0) (object_continue_list_request=0) (committer_tasks_failed=0) (directories_created=0) (stream_read_operations=0) (op_xattr_get_map=0) (op_create=0) (audit_request_execution=1) (stream_read_seek_policy_changed=1) (op_abort=0) (stream_write_block_uploads_committed=0) (multipart_upload_aborted=0) (committer_materialize_file=0) (committer_load_single_pending_file.failures=0) (audit_span_creation=2) (op_openfile=0) (stream_read_unbuffered=0) (committer_commit_job.failures=0) (stream_write_block_uploads=0) (op_get_content_summary=0) (op_mkdirs=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_closed=0) (op_get_delegation_token=0) (stream_write_queue_duration=0) (stream_read_bytes=0) (action_file_opened.failures=0) (op_xattr_get_named=0) (object_list_request=0) (stream_read_remote_stream_aborted.failures=0) (op_createfile.failures=0) (stream_read_fully_operations=0) (op_xattr_list=0) (op_list_status=0) (multipart_instantiated=0) (files_copied=0) (files_delete_rejected=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (op_list_located_status=0) (files_deleted=0) (fake_directories_created=0) (op_createfile=0) (store_io_request=1) (committer_tasks_completed=0) (object_continue_list_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (object_multipart_initiated=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=0) (multipart_upload_completed=0) (committer_stage_file_upload=0) (object_multipart_aborted.failures=0) (stream_read_version_mismatches=0) (multipart_upload_list=0) (audit_access_check_failure=0) (committer_materialize_file.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain.failures=0) (op_hsync=0) (op_rename.failures=0) (delegation_tokens_issued.failures=0) (op_is_directory.failures=0) (stream_read_seek_forward_operations=0) (committer_commits_reverted=0) (object_bulk_delete_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_opened=0) (store_exists_probe=0) (op_exists=0) (action_file_opened=1) (stream_read_seek_bytes_skipped=0) (op_list_files.failures=0) (stream_read_vectored_incoming_ranges=0) (op_access.failures=0) (object_delete_objects=0) (op_xattr_get_named_map=0) (committer_commit_job=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named_map.failures=0) (stream_write_bytes=0) (stream_write_block_uploads_aborted=0) (op_delete.failures=0) (op_list_status.failures=0) (op_rename=0) (stream_write_queue_duration.failures=0) (op_is_file.failures=0) (op_xattr_get_map.failures=0) (committer_bytes_uploaded=0) (action_http_get_request=0) (object_put_request_completed=0) (multipart_upload_started=0) (op_copy_from_local_file=0) (action_http_head_request=1) (multipart_upload_list.failures=0) (files_created=0) (op_get_file_status.failures=0) (directories_deleted=0) (op_exists.failures=0) (committer_magic_files_created=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0));
minimums=((object_list_request.failures.min=-1) (op_delete.min=-1) (committer_stage_file_upload.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.failures.min=-1) (op_list_status.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_map.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.min=-1) (object_continue_list_request.min=-1) (op_abort.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_directory.min=-1) (object_put_request.failures.min=-1) (op_list_status.min=-1) (committer_materialize_file.failures.min=-1) (committer_commit_job.min=-1) (op_rename.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (op_list_files.failures.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (object_bulk_delete_request.min=-1) (op_create.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.failures.min=-1) (action_http_head_request.failures.min=-1) (action_file_opened.min=6) (op_glob_status.failures.min=-1) (op_createfile.failures.min=-1) (op_get_file_status.min=-1) (store_exists_probe.min=-1) (op_get_file_checksum.min=-1) (action_http_get_request.min=-1) (delegation_tokens_issued.min=-1) (stream_write_queue_duration.min=-1) (op_exists.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_mkdirs.min=-1) (object_bulk_delete_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_glob_status.min=-1) (op_xattr_get_map.failures.min=-1) (object_delete_request.min=-1) (op_xattr_get_named.min=-1) (op_access.failures.min=-1) (action_http_get_request.failures.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_list.min=-1) (op_createfile.min=-1) (op_abort.min=-1) (op_list_files.min=-1) (op_xattr_get_named.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_status.failures.min=-1) (multipart_upload_list.min=-1) (object_list_request.min=-1) (op_is_file.min=-1) (op_get_content_summary.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.min=-1) (action_executor_acquired.failures.min=-1) (op_create.failures.min=-1) (committer_commit_job.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_head_request.min=6) (stream_read_remote_stream_drain.min=-1) (op_access.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_exists.min=-1) (op_get_content_summary.failures.min=-1));
maximums=((op_xattr_get_named.max=-1) (op_copy_from_local_file.max=-1) (object_delete_request.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_map.max=-1) (action_http_get_request.max=-1) (action_http_head_request.max=6) (op_get_file_checksum.failures.max=-1) (object_continue_list_request.max=-1) (op_abort.failures.max=-1) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (op_createfile.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_status.max=-1) (op_create.failures.max=-1) (op_exists.failures.max=-1) (object_bulk_delete_request.max=-1) (multipart_upload_list.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named_map.failures.max=-1) (store_exists_probe.max=-1) (op_mkdirs.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_files.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_list_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_delete.max=-1) (op_xattr_get_map.failures.max=-1) (op_access.max=-1) (committer_stage_file_upload.failures.max=-1) (object_list_request.max=-1) (op_copy_from_local_file.failures.max=-1) (action_file_opened.max=6) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_file.failures.max=-1) (op_exists.max=-1) (op_get_file_status.failures.max=-1) (object_multipart_aborted.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_drain.max=-1) (op_glob_status.max=-1) (op_create.max=-1) (committer_materialize_file.max=-1) (op_rename.max=-1) (op_glob_status.failures.max=-1) (op_list_files.max=-1) (committer_materialize_file.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.max=-1) (action_http_head_request.failures.max=-1) (op_list_status.max=-1) (object_multipart_initiated.failures.max=-1) (action_file_opened.failures.max=-1) (op_is_directory.max=-1) (op_list_status.failures.max=-1) (op_createfile.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_mkdirs.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_directory.failures.max=-1) (action_http_get_request.failures.max=-1) (op_delete.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_access.failures.max=-1) (committer_commit_job.max=-1) (object_put_request.max=-1) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.max=-1) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.max=-1) (stream_read_remote_stream_aborted.max=-1) (multipart_upload_list.failures.max=-1));
means=((op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=6, mean=6.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,297 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:50,297 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,297 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,297 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121&t0=174&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=174&ts=1731777830297
2024-11-16 17:23:50,300 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,300 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,301 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121&t0=174&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=174&ts=1731777830297
2024-11-16 17:23:50,306 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:50,306 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:50,306 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:50,306 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:50,306 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:50,306 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:50,307 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:50,307 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:50,307 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:50,307 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:50,307 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:50,307 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:50,307 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:50,307 [s3a-transfer-leg-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:50,307 [s3a-transfer-leg-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,307 [s3a-transfer-leg-bucket-unbounded-pool2-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121&t0=174&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=176&ts=1731777830297
2024-11-16 17:23:50,312 [s3a-transfer-leg-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,313 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:50,313 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:50,313 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:50,313 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:50,313 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777830256; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:50,313 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:50,314 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:50,314 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:50,314 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:50,315 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:50,315 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:50,316 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:50,316 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:50,316 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,316 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,316 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:50,316 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,316 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121&t0=174&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=45&ts=1731777830297
2024-11-16 17:23:50,322 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:50,323 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:50,323 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:23:50,323 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:50,323 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:50,323 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,323 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,323 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:50,324 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,324 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000121&t0=174&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=45&ts=1731777830297
2024-11-16 17:23:50,330 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:50,330 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:50,330 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:50,331 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.016s
2024-11-16 17:23:50,331 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.016s
2024-11-16 17:23:50,331 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:23:50,331 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:50,331 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:50,332 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:50,345 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 31, active threads = 0, queued tasks = 0, completed tasks = 31], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_put_request.failures=0) (op_openfile=0) (object_metadata_request=70) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named_map=0) (committer_load_single_pending_file=0) (op_is_file=0) (store_exists_probe=0) (op_xattr_get_named=0) (multipart_upload_part_put_bytes=0) (stream_read_remote_stream_drain=3) (stream_read_operations=3) (op_list_files=0) (stream_read_version_mismatches=0) (op_createfile.failures=0) (op_get_content_summary.failures=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (op_is_file.failures=0) (stream_read_seek_policy_changed=21) (op_xattr_get_named_map.failures=0) (object_put_request_completed=50) (stream_read_bytes=6663) (audit_failure=0) (committer_commits_completed=0) (object_delete_request=0) (store_io_retry=0) (op_glob_status=0) (object_delete_objects=50) (object_select_requests=0) (stream_read_unbuffered=1) (stream_write_block_uploads_aborted=0) (store_io_request=292) (op_abort=0) (op_xattr_list=0) (store_io_throttled=0) (delegation_tokens_issued=0) (stream_write_exceptions=0) (object_put_request=50) (stream_read_seek_forward_operations=0) (object_multipart_aborted=0) (committer_commit_job.failures=0) (action_http_head_request.failures=0) (ignored_errors=0) (committer_bytes_uploaded=0) (committer_stage_file_upload.failures=0) (action_file_opened=20) (stream_write_block_uploads=25) (stream_read_fully_operations=1) (op_open=20) (op_delete.failures=0) (action_executor_acquired.failures=0) (op_create=25) (stream_read_remote_stream_drain.failures=0) (committer_commits.failures=0) (object_continue_list_request.failures=0) (op_get_content_summary=0) (multipart_upload_aborted=0) (stream_read_vectored_incoming_ranges=50) (audit_span_creation=97) (op_copy_from_local_file.failures=0) (stream_read_seek_operations=0) (committer_materialize_file.failures=0) (object_delete_request.failures=0) (files_deleted=25) (files_delete_rejected=0) (stream_write_total_data=3276800) (op_get_file_status.failures=0) (committer_magic_marker_put=0) (directories_created=25) (committer_load_single_pending_file.failures=0) (multipart_upload_list=0) (op_get_file_status=1) (stream_read_vectored_operations=16) (delegation_tokens_issued.failures=0) (audit_request_execution=292) (committer_magic_marker_put.failures=0) (action_http_get_request=22) (object_list_request=100) (stream_read_bytes_backwards_on_seek=0) (object_copy_requests=0) (committer_commits_reverted=0) (stream_read_remote_stream_aborted.failures=0) (files_copied=0) (stream_write_queue_duration=0) (committer_materialize_file=0) (op_list_files.failures=0) (stream_write_queue_duration.failures=0) (stream_write_total_time=0) (op_createfile=0) (committer_bytes_committed=0) (multipart_upload_started=0) (op_xattr_get_map=0) (audit_access_check_failure=0) (op_copy_from_local_file=0) (op_access=0) (stream_read_exceptions=0) (op_exists=0) (committer_stage_file_upload=0) (op_get_file_checksum=0) (committer_tasks_completed=0) (multipart_upload_part_put=0) (op_xattr_get_map.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_backward_operations=0) (multipart_upload_completed=0) (object_bulk_delete_request=50) (action_executor_acquired=0) (op_list_status=0) (stream_write_bytes=1638400) (committer_jobs_completed=0) (object_bulk_delete_request.failures=0) (op_glob_status.failures=0) (op_access.failures=0) (op_delete=25) (stream_aborted=0) (directories_deleted=0) (op_hsync=0) (op_mkdirs=25) (stream_read_vectored_read_bytes_discarded=24523) (op_list_located_status=0) (stream_read_bytes_discarded_in_close=196008) (object_put_bytes=1638400) (action_http_get_request.failures=0) (stream_read_close_operations=20) (stream_read_seek_bytes_skipped=0) (files_copied_bytes=0) (op_rename=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_named.failures=0) (object_continue_list_request=0) (op_exists.failures=0) (committer_commits_created=0) (op_is_directory=0) (fake_directories_deleted=25) (action_file_opened.failures=0) (committer_jobs_failed=0) (stream_read_closed=3) (committer_magic_files_created=0) (stream_read_remote_stream_aborted=0) (fake_directories_created=0) (op_is_directory.failures=0) (stream_read_vectored_combined_ranges=21) (op_xattr_list.failures=0) (op_abort.failures=0) (op_rename.failures=0) (multipart_instantiated=0) (stream_write_block_uploads_committed=0) (stream_read_opened=3) (stream_read_total_bytes=202671) (op_create.failures=0) (op_create_non_recursive=0) (object_list_request.failures=0) (files_created=25) (op_list_status.failures=0) (op_mkdirs.failures=0) (committer_commit_job=0) (store_exists_probe.failures=0) (op_get_delegation_token.failures=0) (stream_read_operations_incomplete=0) (committer_tasks_failed=0) (object_multipart_aborted.failures=0) (multipart_upload_list.failures=0) (op_get_delegation_token=0) (op_hflush=0) (action_http_head_request=70) (op_get_file_checksum.failures=0) (committer_commits_aborted=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=25) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0));
minimums=((store_exists_probe.min=-1) (op_rename.min=-1) (op_create.failures.min=-1) (object_list_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named_map.min=-1) (committer_magic_marker_put.min=-1) (stream_write_queue_duration.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_directory.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_materialize_file.min=-1) (op_get_file_status.min=8) (op_rename.failures.min=-1) (action_http_head_request.failures.min=-1) (object_list_request.min=4) (op_abort.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_delete_request.failures.min=-1) (op_mkdirs.min=17) (committer_stage_file_upload.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=4) (action_executor_acquired.min=-1) (op_xattr_get_named.min=-1) (op_get_content_summary.min=-1) (op_delete.failures.min=-1) (op_list_status.failures.min=-1) (object_bulk_delete_request.min=5) (committer_materialize_file.failures.min=-1) (object_multipart_initiated.min=-1) (op_is_file.min=-1) (committer_stage_file_upload.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_continue_list_request.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=8) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_createfile.min=-1) (multipart_upload_list.min=-1) (op_copy_from_local_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_create.min=5) (stream_write_queue_duration.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_files.failures.min=-1) (action_file_opened.min=4) (object_delete_request.min=-1) (op_glob_status.failures.min=-1) (op_delete.min=22) (delegation_tokens_issued.min=-1) (action_http_head_request.min=2) (op_exists.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_access.min=-1) (op_list_status.min=-1) (op_glob_status.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_exists.failures.min=-1) (op_is_directory.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=20) (op_access.failures.min=-1) (op_xattr_get_named.failures.min=-1));
maximums=((op_get_file_checksum.failures.max=-1) (action_file_opened.failures.max=-1) (op_delete.max=58) (stream_read_remote_stream_aborted.failures.max=-1) (op_exists.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_checksum.max=-1) (op_access.max=-1) (delegation_tokens_issued.max=-1) (op_glob_status.max=-1) (op_list_files.max=-1) (object_continue_list_request.failures.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (op_get_content_summary.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_map.max=-1) (op_is_directory.max=-1) (action_executor_acquired.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_createfile.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_drain.max=4) (object_multipart_aborted.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_commit_job.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_map.failures.max=-1) (object_continue_list_request.max=-1) (committer_materialize_file.failures.max=-1) (op_list_status.max=-1) (object_multipart_initiated.max=-1) (action_http_head_request.failures.max=-1) (op_rename.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.max=-1) (object_list_request.max=167) (object_multipart_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_content_summary.max=-1) (op_create.max=45) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_list.failures.max=-1) (object_put_request.max=71) (op_get_delegation_token.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.failures.max=-1) (op_create.failures.max=-1) (object_bulk_delete_request.max=14) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_list.max=-1) (action_http_get_request.failures.max=-1) (op_exists.failures.max=-1) (action_file_opened.max=12) (op_access.failures.max=-1) (op_rename.failures.max=-1) (action_http_head_request.max=12) (op_abort.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.failures.max=-1) (op_createfile.failures.max=-1) (multipart_upload_list.max=-1) (op_is_directory.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_get_request.max=26) (op_xattr_get_named_map.max=-1) (op_copy_from_local_file.failures.max=-1) (op_abort.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_mkdirs.max=263) (object_put_request.failures.max=-1) (op_get_file_status.max=8) (object_delete_request.failures.max=-1) (object_list_request.failures.max=-1));
means=((object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=337, mean=15.3182)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=25, sum=909, mean=36.3600)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=25, sum=294, mean=11.7600)) (op_mkdirs.mean=(samples=25, sum=917, mean=36.6800)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=115, mean=5.7500)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=70, sum=326, mean=4.6571)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=50, sum=966, mean=19.3200)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=50, sum=401, mean=8.0200)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=100, sum=943, mean=9.4300)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:50,345 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:50,345 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,346 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,346 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,346 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,346 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000122 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000122&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=177&ts=1731777830345
2024-11-16 17:23:50,351 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,351 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,351 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,352 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,352 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,352 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000122 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000122&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=177&ts=1731777830345
2024-11-16 17:23:50,354 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,355 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:50,355 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:50,355 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:50,355 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000122 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000122&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=177&ts=1731777830345
2024-11-16 17:23:50,375 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:50,375 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:50,375 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.021s
2024-11-16 17:23:50,375 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:50,376 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,376 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,376 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,376 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,376 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000123 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000123&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=177&ts=1731777830376
2024-11-16 17:23:50,381 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,381 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,381 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:50,382 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13765784731733169060.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:50,382 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13765784731733169060.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (op_hsync=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (op_abort=0) (object_put_request=0) (stream_write_total_time=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (op_hflush=0) (action_executor_acquired=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13765784731733169060.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,383 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,383 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:50,383 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13765784731733169060.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:50,383 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:50,383 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:50,383 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:50,383 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:50,383 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000123 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000123&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=47&ts=1731777830376
2024-11-16 17:23:50,403 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:50,403 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:50,403 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.020s
2024-11-16 17:23:50,403 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13765784731733169060.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:50,403 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13765784731733169060.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,403 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13765784731733169060.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,403 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:50,404 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,404 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (op_abort=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=1) (stream_write_total_data=65536) (op_abort.failures=0) (stream_write_total_time=0) (op_hsync=0) (object_put_request=1) (stream_write_queue_duration=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (op_hflush=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=20) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=20) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=20, mean=20.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:50,404 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:50,405 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,405 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,405 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:50,405 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000124 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000124/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000124&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=177&ts=1731777830405
2024-11-16 17:23:50,409 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:50,409 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:50,409 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,409 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:50,410 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:50,410 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:50,410 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:50,410 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,410 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:23:50,410 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,410 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_operations=1) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_seek_forward_operations=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_close_operations=1) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (stream_read_total_bytes=0) (stream_read_remote_stream_aborted=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_incoming_ranges=2) (stream_read_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations_incomplete=0) (stream_read_fully_operations=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_combined_ranges=1) (action_http_get_request=0) (stream_read_closed=0) (stream_read_opened=0) (stream_read_block_read=0) (action_http_get_request.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=4) (action_http_get_request.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=4) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,412 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,413 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,413 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:50,413 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000125 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000125/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000125&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=177&ts=1731777830412
2024-11-16 17:23:50,415 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:50,415 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:50,416 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,416 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:50,416 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:50,416 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:50,416 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:50,416 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,416 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,416 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:50,416 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [50] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000125 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000125/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000125&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=50&ts=1731777830412
2024-11-16 17:23:50,424 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:23:50,424 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:50,424 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,425 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (stream_read_operations_incomplete=0) (stream_read_exceptions=0) (stream_read_vectored_incoming_ranges=2) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_operations=0) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_aborted=0) (stream_read_seek_bytes_skipped=0) (action_executor_acquired.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_bytes=150) (stream_read_fully_operations=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_operations=0) (stream_read_block_acquire_read=0) (stream_read_close_operations=1) (action_file_opened.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_opened=0) (action_http_get_request.failures=0) (action_http_get_request=1) (stream_read_total_bytes=150) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_operations=1) (stream_read_unbuffered=0) (stream_read_block_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (action_file_opened=1) (stream_read_seek_backward_operations=0) (stream_read_version_mismatches=0) (stream_read_block_acquire_read.failures=0) (stream_read_closed=0) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=3) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=8) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=8) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=3) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (action_http_get_request.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,426 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:50,426 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,426 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,426 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=177&ts=1731777830426
2024-11-16 17:23:50,430 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,430 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,430 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=177&ts=1731777830426
2024-11-16 17:23:50,444 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:23:50,444 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:50,444 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:50,444 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:50,444 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:50,444 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:50,444 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:50,444 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:50,444 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:50,444 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:50,444 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:50,444 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:50,445 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:50,445 [s3a-transfer-leg-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:50,445 [s3a-transfer-leg-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,445 [s3a-transfer-leg-bucket-unbounded-pool2-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=179&ts=1731777830426
2024-11-16 17:23:50,449 [s3a-transfer-leg-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:50,449 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.004s
2024-11-16 17:23:50,450 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:50,450 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:50,450 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:50,450 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777830400; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:50,450 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:50,450 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:50,450 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:50,450 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:50,450 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:50,451 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:50,451 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:50,451 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:50,451 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,451 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,451 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:50,451 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,451 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=51&ts=1731777830426
2024-11-16 17:23:50,459 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:50,459 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:50,459 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:23:50,459 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:50,459 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:50,459 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,459 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,459 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:50,459 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,459 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000126&t0=177&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=51&ts=1731777830426
2024-11-16 17:23:50,464 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:50,464 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:50,464 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:23:50,464 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.013s
2024-11-16 17:23:50,465 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:23:50,465 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.021s
2024-11-16 17:23:50,465 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:50,466 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:50,468 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:50,480 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 32, active threads = 0, queued tasks = 0, completed tasks = 32], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (delegation_tokens_issued=0) (multipart_upload_completed=0) (stream_read_remote_stream_aborted=0) (op_rename=0) (store_exists_probe.failures=0) (op_xattr_get_named_map.failures=0) (object_copy_requests=0) (object_put_request=52) (multipart_upload_aborted=0) (op_xattr_get_map.failures=0) (directories_deleted=0) (action_http_head_request=74) (directories_created=26) (stream_read_close_operations=22) (op_exists=0) (object_continue_list_request=0) (committer_commits_created=0) (committer_stage_file_upload=0) (op_abort=0) (committer_jobs_failed=0) (action_http_head_request.failures=0) (op_hflush=0) (multipart_upload_list=0) (op_mkdirs=26) (stream_write_block_uploads_committed=0) (files_deleted=26) (stream_read_remote_stream_aborted.failures=0) (op_glob_status=0) (op_get_file_status=1) (committer_load_single_pending_file.failures=0) (multipart_instantiated=0) (op_get_file_status.failures=0) (stream_read_bytes=6813) (op_rename.failures=0) (op_createfile=0) (committer_commits_aborted=0) (stream_read_vectored_combined_ranges=23) (committer_bytes_committed=0) (stream_read_vectored_operations=18) (committer_commits_reverted=0) (stream_read_seek_forward_operations=0) (action_file_opened=22) (committer_commit_job=0) (audit_span_creation=102) (committer_commit_job.failures=0) (stream_write_block_uploads=26) (stream_read_seek_operations=0) (committer_magic_marker_put.failures=0) (committer_materialize_file=0) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (files_copied_bytes=0) (object_metadata_request=74) (multipart_upload_part_put_bytes=0) (stream_read_bytes_backwards_on_seek=0) (op_list_status=0) (action_executor_acquired=0) (committer_commits_completed=0) (committer_commits.failures=0) (object_list_request.failures=0) (op_exists.failures=0) (object_select_requests=0) (object_put_request.failures=0) (stream_read_vectored_incoming_ranges=54) (op_xattr_get_named.failures=0) (object_multipart_aborted.failures=0) (stream_read_bytes_discarded_in_close=196008) (stream_write_total_time=0) (op_is_file=0) (op_copy_from_local_file=0) (action_executor_acquired.failures=0) (op_get_delegation_token.failures=0) (stream_read_opened=3) (op_xattr_get_named_map=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_read_bytes_discarded=24533) (op_access=0) (audit_access_check_failure=0) (multipart_upload_list.failures=0) (object_list_request=104) (op_createfile.failures=0) (stream_aborted=0) (op_copy_from_local_file.failures=0) (stream_write_total_data=3407872) (store_exists_probe=0) (op_get_file_checksum=0) (stream_read_seek_policy_changed=23) (op_create_non_recursive=0) (committer_tasks_failed=0) (op_hsync=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_fully_operations=1) (op_create=26) (multipart_upload_started=0) (op_mkdirs.failures=0) (object_continue_list_request.failures=0) (object_delete_objects=52) (op_xattr_get_named=0) (committer_materialize_file.failures=0) (stream_write_queue_duration=0) (store_io_request=305) (committer_magic_marker_put=0) (stream_read_seek_backward_operations=0) (op_get_content_summary.failures=0) (ignored_errors=0) (stream_read_seek_bytes_discarded=0) (op_delete.failures=0) (files_delete_rejected=0) (stream_read_total_bytes=202821) (op_open=22) (store_io_throttled=0) (files_created=26) (object_multipart_initiated=0) (stream_read_operations=3) (object_multipart_initiated.failures=0) (committer_stage_file_upload.failures=0) (fake_directories_created=0) (op_list_files=0) (op_list_files.failures=0) (action_http_get_request.failures=0) (action_http_get_request=23) (op_get_file_checksum.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (op_delete=26) (op_is_file.failures=0) (op_openfile=0) (committer_tasks_completed=0) (stream_write_block_uploads_aborted=0) (op_list_located_status=0) (op_xattr_get_map=0) (files_copied=0) (op_get_content_summary=0) (op_glob_status.failures=0) (stream_write_queue_duration.failures=0) (op_list_status.failures=0) (op_xattr_list=0) (audit_request_execution=305) (op_xattr_list.failures=0) (stream_read_seek_bytes_skipped=0) (audit_failure=0) (op_is_directory=0) (delegation_tokens_issued.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_closed=3) (object_delete_request=0) (fake_directories_deleted=26) (op_is_directory.failures=0) (stream_write_bytes=1703936) (committer_load_single_pending_file=0) (object_put_request_completed=52) (stream_read_remote_stream_drain=3) (op_get_delegation_token=0) (committer_magic_files_created=0) (store_io_retry=0) (object_bulk_delete_request=52) (op_create.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=1) (op_access.failures=0) (stream_read_version_mismatches=0) (committer_jobs_completed=0) (object_delete_request.failures=0) (object_put_bytes=1703936) (stream_read_exceptions=0) (committer_bytes_uploaded=0) (object_multipart_aborted=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_pending=26) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (client_side_encryption_enabled=0));
minimums=((op_glob_status.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_commit_job.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_status.min=8) (committer_materialize_file.failures.min=-1) (object_list_request.failures.min=-1) (object_multipart_initiated.min=-1) (action_http_get_request.failures.min=-1) (op_create.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_delete.failures.min=-1) (store_exists_probe.min=-1) (object_multipart_initiated.failures.min=-1) (op_access.min=-1) (op_createfile.failures.min=-1) (op_access.failures.min=-1) (object_put_request.failures.min=-1) (op_get_delegation_token.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.min=-1) (committer_commit_job.min=-1) (stream_read_remote_stream_drain.min=4) (object_continue_list_request.min=-1) (op_xattr_get_named_map.min=-1) (action_file_opened.failures.min=-1) (committer_materialize_file.min=-1) (action_executor_acquired.min=-1) (op_createfile.min=-1) (committer_load_single_pending_file.min=-1) (op_abort.min=-1) (op_is_directory.failures.min=-1) (object_list_request.min=4) (op_xattr_get_named.min=-1) (store_exists_probe.failures.min=-1) (op_glob_status.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.min=2) (op_rename.failures.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.min=-1) (multipart_upload_list.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_map.min=-1) (op_abort.failures.min=-1) (object_delete_request.failures.min=-1) (op_list_status.failures.min=-1) (op_is_file.min=-1) (op_list_files.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_list_files.failures.min=-1) (committer_stage_file_upload.min=-1) (op_rename.min=-1) (op_create.min=5) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_status.min=-1) (stream_write_queue_duration.min=-1) (op_delete.min=22) (op_is_file.failures.min=-1) (object_put_request.min=20) (op_xattr_get_named_map.failures.min=-1) (object_delete_request.min=-1) (action_http_get_request.min=8) (action_http_head_request.failures.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_aborted.failures.min=-1) (op_mkdirs.min=17) (object_bulk_delete_request.min=5) (op_xattr_list.min=-1) (delegation_tokens_issued.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((op_list_status.failures.max=-1) (object_put_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_status.failures.max=-1) (multipart_upload_list.max=-1) (op_createfile.max=-1) (op_xattr_get_named_map.max=-1) (action_http_get_request.failures.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.max=-1) (multipart_upload_list.failures.max=-1) (op_delete.failures.max=-1) (op_access.max=-1) (op_is_directory.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_list_request.failures.max=-1) (action_executor_acquired.max=-1) (object_bulk_delete_request.max=14) (object_multipart_initiated.max=-1) (op_is_directory.max=-1) (committer_materialize_file.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_file_opened.max=12) (op_get_delegation_token.max=-1) (stream_read_remote_stream_drain.max=4) (op_get_content_summary.max=-1) (action_http_get_request.max=26) (op_rename.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_create.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_create.max=45) (op_exists.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.failures.max=-1) (op_abort.max=-1) (delegation_tokens_issued.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.failures.max=-1) (action_http_head_request.max=12) (object_multipart_aborted.failures.max=-1) (op_mkdirs.max=263) (op_is_file.failures.max=-1) (delegation_tokens_issued.max=-1) (object_put_request.max=71) (op_exists.max=-1) (op_xattr_get_map.max=-1) (op_abort.failures.max=-1) (object_list_request.max=167) (op_delete.max=58) (object_multipart_aborted.max=-1) (object_delete_request.max=-1) (action_file_opened.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_files.max=-1) (op_xattr_get_named.max=-1) (op_get_content_summary.failures.max=-1) (object_continue_list_request.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.failures.max=-1) (stream_write_queue_duration.max=-1) (op_mkdirs.failures.max=-1) (op_get_file_status.max=8) (op_copy_from_local_file.max=-1) (committer_commit_job.max=-1) (store_exists_probe.max=-1) (op_rename.failures.max=-1) (op_createfile.failures.max=-1));
means=((op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=52, sum=414, mean=7.9615)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=74, sum=338, mean=4.5676)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=26, sum=931, mean=35.8077)) (action_file_opened.mean=(samples=22, sum=122, mean=5.5455)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=52, sum=1006, mean=19.3462)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=26, sum=947, mean=36.4231)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=26, sum=300, mean=11.5385)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=23, sum=345, mean=15.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=104, sum=971, mean=9.3365)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:50,481 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:50,481 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,481 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,481 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,481 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,481 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [180] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000127 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000127&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=180&ts=1731777830481
2024-11-16 17:23:50,487 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:50,487 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,488 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,488 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,488 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,488 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [180] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000127 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000127&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=180&ts=1731777830481
2024-11-16 17:23:50,491 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,491 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:50,491 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:50,491 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:50,491 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [180] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000127 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000127&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=180&ts=1731777830481
2024-11-16 17:23:50,500 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:50,500 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:50,500 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:23:50,500 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:50,501 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,501 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,501 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,501 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,502 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [180] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000128 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000128/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000128&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=180&ts=1731777830501
2024-11-16 17:23:50,508 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:50,508 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,509 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:50,509 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2666142272809821120.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:50,510 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2666142272809821120.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_bytes=65536) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_put_request.failures=0) (object_put_request=0) (object_multipart_initiated=0) (op_abort=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (op_hsync=0) (op_hflush=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((op_abort.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2666142272809821120.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,510 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,510 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:50,510 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2666142272809821120.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:50,510 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:50,510 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:50,510 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:50,510 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:50,510 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000128 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000128/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000128&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=53&ts=1731777830501
2024-11-16 17:23:50,525 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:50,525 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:50,525 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.015s
2024-11-16 17:23:50,526 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2666142272809821120.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:50,526 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2666142272809821120.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,526 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2666142272809821120.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,526 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:50,526 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,527 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (op_abort=0) (committer_magic_marker_put=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (stream_write_total_time=0) (op_hsync=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=15) (committer_magic_marker_put.failures.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=15));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=15, mean=15.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:50,527 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:50,527 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,528 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,528 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:50,528 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [180] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000129 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000129&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=180&ts=1731777830527
2024-11-16 17:23:50,530 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:50,530 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:50,530 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,531 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:50,531 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:50,531 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:50,531 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:50,531 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,531 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:23:50,531 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,531 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((stream_read_block_acquire_read.failures=0) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=1) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=0) (stream_read_bytes=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=1) (action_file_opened.failures=0) (action_file_opened=1) (stream_read_unbuffered=1) (action_http_get_request=0) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_operations=0) (action_executor_acquired=0) (stream_read_total_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_closed=0) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_fully_operations=0) (stream_read_vectored_incoming_ranges=2) (stream_read_seek_bytes_discarded=0) (stream_read_opened=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_skipped=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,532 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:23:50,532 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:50,532 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,532 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:50,532 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:50,532 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:50,532 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,532 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,532 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:50,532 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000129 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000129&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=63&ts=1731777830527
2024-11-16 17:23:50,539 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.007s
2024-11-16 17:23:50,539 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:50,539 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,540 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_combined_ranges=2) (stream_read_bytes=150) (stream_read_operations_incomplete=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_closed=0) (stream_read_unbuffered=1) (stream_read_vectored_operations=2) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=1) (stream_read_exceptions=0) (stream_read_remote_stream_drain=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (stream_read_opened=0) (stream_read_operations=0) (stream_read_seek_policy_changed=2) (stream_read_block_read.failures=0) (action_executor_acquired=0) (stream_read_total_bytes=150) (stream_read_block_read=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (stream_aborted=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_seek_bytes_discarded=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened=1) (stream_read_vectored_incoming_ranges=4) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=1) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=7) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=7) (action_executor_acquired.max=-1) (action_file_opened.max=3) (stream_read_block_acquire_read.max=-1));
means=((action_http_get_request.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,541 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:50,541 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,541 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,541 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [180] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=180&ts=1731777830541
2024-11-16 17:23:50,544 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,544 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,544 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [180] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=180&ts=1731777830541
2024-11-16 17:23:50,555 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:23:50,555 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:50,555 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:50,555 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:50,555 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:50,555 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:50,556 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:50,556 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:50,556 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:50,556 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:50,556 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:50,556 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:50,556 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:50,557 [s3a-transfer-leg-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:50,557 [s3a-transfer-leg-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,557 [s3a-transfer-leg-bucket-unbounded-pool2-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=182&ts=1731777830541
2024-11-16 17:23:50,562 [s3a-transfer-leg-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,562 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:50,562 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:50,563 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:50,563 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:50,563 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777830523; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:50,563 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:50,563 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:50,564 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:50,564 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:50,564 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:50,564 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:50,564 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:50,564 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,564 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,564 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:50,564 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,565 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=65&ts=1731777830541
2024-11-16 17:23:50,571 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:50,571 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:50,571 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:23:50,571 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:50,571 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:50,571 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,571 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,571 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:50,571 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,571 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000130&t0=180&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=65&ts=1731777830541
2024-11-16 17:23:50,572 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:50,578 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:23:50,579 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:50,579 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:23:50,579 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:23:50,579 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.013s
2024-11-16 17:23:50,579 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.023s
2024-11-16 17:23:50,579 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:50,579 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:50,580 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:50,591 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 33, active threads = 0, queued tasks = 0, completed tasks = 33], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_seek_forward_operations=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_bytes_skipped=0) (store_exists_probe=0) (op_list_files=0) (committer_commits_created=0) (op_get_content_summary=0) (stream_read_seek_operations=0) (op_get_file_status.failures=0) (stream_read_remote_stream_drain=3) (object_metadata_request=77) (files_copied=0) (delegation_tokens_issued.failures=0) (op_get_file_checksum=0) (action_file_opened.failures=0) (object_select_requests=0) (committer_commits_aborted=0) (op_hflush=0) (op_is_file.failures=0) (store_io_retry=0) (committer_magic_marker_put.failures=0) (op_xattr_list.failures=0) (fake_directories_created=0) (op_createfile.failures=0) (object_list_request.failures=0) (op_createfile=0) (object_put_request_completed=54) (store_io_request=317) (op_xattr_get_map.failures=0) (op_list_located_status=0) (stream_read_bytes_discarded_in_abort=0) (op_get_content_summary.failures=0) (store_io_throttled=0) (op_list_status.failures=0) (audit_access_check_failure=0) (object_delete_request=0) (multipart_upload_part_put=0) (stream_read_total_bytes=202971) (op_copy_from_local_file=0) (stream_read_seek_policy_changed=25) (op_create=27) (multipart_upload_list=0) (multipart_instantiated=0) (op_access.failures=0) (object_put_bytes=1769472) (object_multipart_aborted.failures=0) (committer_bytes_uploaded=0) (audit_request_execution=317) (op_xattr_get_named=0) (object_continue_list_request.failures=0) (op_get_delegation_token.failures=0) (op_get_file_checksum.failures=0) (stream_read_unbuffered=2) (op_xattr_get_named_map=0) (action_http_get_request.failures=0) (op_open=23) (committer_stage_file_upload=0) (op_glob_status=0) (committer_tasks_completed=0) (stream_read_exceptions=0) (stream_write_queue_duration.failures=0) (committer_commit_job.failures=0) (op_is_directory.failures=0) (multipart_upload_list.failures=0) (fake_directories_deleted=27) (stream_read_seek_backward_operations=0) (op_list_status=0) (files_copied_bytes=0) (stream_read_vectored_incoming_ranges=58) (op_xattr_list=0) (directories_deleted=0) (multipart_upload_aborted=0) (object_bulk_delete_request.failures=0) (object_put_request=54) (files_created=27) (stream_write_block_uploads_aborted=0) (stream_read_operations=3) (stream_read_seek_bytes_discarded=0) (op_create.failures=0) (op_xattr_get_named.failures=0) (op_create_non_recursive=0) (committer_commit_job=0) (committer_materialize_file.failures=0) (committer_load_single_pending_file=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (object_delete_objects=54) (op_list_files.failures=0) (stream_read_bytes_discarded_in_close=196008) (committer_jobs_completed=0) (committer_commits_completed=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_backwards_on_seek=0) (op_exists=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=25) (stream_read_bytes=6963) (committer_magic_marker_put=0) (action_http_head_request.failures=0) (op_is_directory=0) (stream_write_bytes=1769472) (op_rename=0) (stream_write_total_data=3538944) (committer_tasks_failed=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=20) (committer_magic_files_created=0) (multipart_upload_started=0) (op_abort.failures=0) (action_file_opened=23) (committer_materialize_file=0) (action_executor_acquired=0) (committer_jobs_failed=0) (action_http_get_request=24) (directories_created=27) (op_get_file_status=1) (op_delete=27) (files_delete_rejected=0) (op_glob_status.failures=0) (committer_commits.failures=0) (multipart_upload_completed=0) (stream_read_operations_incomplete=0) (object_delete_request.failures=0) (delegation_tokens_issued=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (files_deleted=27) (committer_commits_reverted=0) (op_xattr_get_named_map.failures=0) (op_abort=0) (audit_failure=0) (op_delete.failures=0) (op_is_file=0) (stream_aborted=0) (stream_write_block_uploads_committed=0) (op_exists.failures=0) (action_executor_acquired.failures=0) (op_get_delegation_token=0) (op_hsync=0) (op_access=0) (committer_stage_file_upload.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_copy_requests=0) (store_exists_probe.failures=0) (stream_read_close_operations=23) (op_openfile=0) (op_rename.failures=0) (ignored_errors=0) (audit_span_creation=106) (op_mkdirs=27) (stream_read_fully_operations=1) (op_copy_from_local_file.failures=0) (object_continue_list_request=0) (committer_load_single_pending_file.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_version_mismatches=0) (op_xattr_get_map=0) (stream_read_opened=3) (stream_read_vectored_read_bytes_discarded=24543) (object_bulk_delete_request=54) (stream_write_block_uploads=27) (action_http_head_request=77) (committer_bytes_committed=0) (object_list_request=108) (stream_read_closed=3) (stream_write_queue_duration=0) (op_mkdirs.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=27) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0));
minimums=((multipart_upload_list.failures.min=-1) (op_is_directory.min=-1) (op_list_status.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_createfile.min=-1) (object_put_request.min=15) (op_delete.failures.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (op_glob_status.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_content_summary.min=-1) (op_create.min=5) (object_bulk_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (committer_commit_job.failures.min=-1) (object_list_request.min=4) (op_get_file_status.failures.min=-1) (op_mkdirs.failures.min=-1) (op_createfile.failures.min=-1) (committer_materialize_file.min=-1) (op_rename.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_copy_from_local_file.min=-1) (delegation_tokens_issued.min=-1) (committer_magic_marker_put.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_aborted.min=-1) (op_glob_status.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_file.min=-1) (op_abort.failures.min=-1) (op_xattr_get_map.min=-1) (op_abort.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.min=-1) (store_exists_probe.failures.min=-1) (object_continue_list_request.min=-1) (action_http_get_request.min=7) (stream_write_queue_duration.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_directory.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_delete.min=22) (action_file_opened.min=3) (committer_load_single_pending_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_access.failures.min=-1) (multipart_upload_list.min=-1) (op_list_status.min=-1) (committer_materialize_file.failures.min=-1) (object_bulk_delete_request.min=5) (op_access.min=-1) (object_delete_request.min=-1) (op_xattr_list.min=-1) (action_http_head_request.min=2) (op_exists.min=-1) (committer_load_single_pending_file.min=-1) (object_list_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_mkdirs.min=17) (stream_read_remote_stream_drain.min=4) (op_xattr_list.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_commit_job.min=-1) (op_exists.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_rename.min=-1) (object_delete_request.failures.min=-1) (op_list_files.min=-1) (op_get_file_status.min=8) (action_executor_acquired.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_map.failures.min=-1) (store_exists_probe.min=-1));
maximums=((object_put_request.failures.max=-1) (op_is_directory.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.failures.max=-1) (object_list_request.max=167) (op_list_files.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_stage_file_upload.max=-1) (op_access.failures.max=-1) (op_glob_status.max=-1) (committer_commit_job.max=-1) (object_delete_request.max=-1) (action_http_head_request.max=12) (object_put_request.max=71) (action_http_get_request.failures.max=-1) (op_xattr_list.max=-1) (stream_write_queue_duration.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.max=8) (op_create.max=45) (store_exists_probe.failures.max=-1) (op_xattr_get_map.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.failures.max=-1) (delegation_tokens_issued.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_write_queue_duration.max=-1) (action_executor_acquired.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (op_glob_status.failures.max=-1) (op_access.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.failures.max=-1) (store_exists_probe.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_is_file.max=-1) (committer_magic_marker_put.max=-1) (committer_materialize_file.max=-1) (op_create.failures.max=-1) (op_xattr_get_named.max=-1) (committer_magic_marker_put.failures.max=-1) (op_rename.max=-1) (op_createfile.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_status.max=-1) (multipart_upload_list.max=-1) (op_exists.failures.max=-1) (op_get_content_summary.max=-1) (op_exists.max=-1) (object_delete_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_delegation_token.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_checksum.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.max=14) (op_list_files.max=-1) (op_delete.max=58) (committer_load_single_pending_file.max=-1) (op_is_directory.failures.max=-1) (object_list_request.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_list.failures.max=-1) (action_file_opened.max=12) (action_executor_acquired.max=-1) (action_http_get_request.max=26) (action_file_opened.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_abort.max=-1) (op_copy_from_local_file.failures.max=-1) (op_mkdirs.max=263));
means=((op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=77, sum=346, mean=4.4935)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (op_create.mean=(samples=27, sum=308, mean=11.4074)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=125, mean=5.4348)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=54, sum=426, mean=7.8889)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=54, sum=1030, mean=19.0741)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=27, sum=955, mean=35.3704)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=108, sum=1000, mean=9.2593)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.mean=(samples=24, sum=352, mean=14.6667)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=27, sum=966, mean=35.7778)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:50,592 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:50,592 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,592 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,592 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,592 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,592 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000131 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000131&t0=184&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=184&ts=1731777830592
2024-11-16 17:23:50,597 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,597 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,597 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,597 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,597 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,597 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000131 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000131&t0=184&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=184&ts=1731777830592
2024-11-16 17:23:50,600 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,600 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:50,600 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:50,600 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:50,600 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000131 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000131&t0=184&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=184&ts=1731777830592
2024-11-16 17:23:50,612 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:50,612 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:50,612 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.012s
2024-11-16 17:23:50,612 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:50,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,613 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,613 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000132 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000132/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000132&t0=184&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=184&ts=1731777830613
2024-11-16 17:23:50,620 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:50,620 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,620 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:50,621 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3913136659862936468.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:50,621 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3913136659862936468.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (object_put_request=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (stream_write_total_time=0) (op_abort.failures=0) (stream_write_exceptions=0) (op_hsync=0) (op_abort=0) (multipart_upload_completed=0) (op_hflush=0) (stream_write_block_uploads=0) (action_executor_acquired=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_total_data=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3913136659862936468.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,622 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,622 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:50,622 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3913136659862936468.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:50,622 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:50,622 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:50,622 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:50,622 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:50,622 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000132 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000132/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000132&t0=184&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=77&ts=1731777830613
2024-11-16 17:23:50,647 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:50,647 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:50,647 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.025s
2024-11-16 17:23:50,647 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3913136659862936468.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:50,647 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3913136659862936468.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,647 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3913136659862936468.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,647 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:50,649 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,650 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated.failures=0) (stream_write_total_time=0) (op_abort.failures=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (op_abort=0) (stream_write_block_uploads=1) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (object_put_request=1) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (object_multipart_initiated=0) (op_hflush=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.min=25) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=25) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:50,651 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:50,651 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:23:50,651 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:23:50,652 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:50,652 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:50,653 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='9b5fd811-809d-4d16-b20a-5d9743a466ed', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='9b5fd811-809d-4d16-b20a-5d9743a466ed', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:50,654 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='9b5fd811-809d-4d16-b20a-5d9743a466ed', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:23:50,655 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:23:50,655 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:23:50,655 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:23:50,655 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:23:50,655 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:23:50,655 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:23:50,656 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@314ba2e4]
2024-11-16 17:23:50,656 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@314ba2e4]
2024-11-16 17:23:50,656 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:23:50,656 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:23:50,656 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:23:50,657 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:23:50,657 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:23:50,657 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:23:50,657 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:23:50,657 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:50,657 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:23:50,658 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:23:50,658 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:23:50,658 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:23:50,660 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:23:50,660 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:23:50,660 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:23:50,660 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:23:50,660 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:23:50,660 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:23:50,660 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:23:50,660 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:23:50,661 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:23:50,661 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:23:50,661 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:23:50,661 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:23:50,661 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:23:50,661 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:23:50,661 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:23:50,662 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:23:50,662 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,662 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,662 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:50,666 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] 9b5fd811-809d-4d16-b20a-5d9743a466ed-00000135 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/9b5fd811-809d-4d16-b20a-5d9743a466ed-00000135/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=9b5fd811-809d-4d16-b20a-5d9743a466ed-00000135&t0=184&fs=9b5fd811-809d-4d16-b20a-5d9743a466ed&t1=184&ts=1731777830662
2024-11-16 17:23:50,666 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:23:50,667 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:23:50,667 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:23:50,667 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:23:50,676 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:50,676 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777830000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:23:50,678 [s3a-transfer-leg-bucket-unbounded-pool17-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:50,678 [s3a-transfer-leg-bucket-unbounded-pool17-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,680 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:23:50,680 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:50,680 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:50,681 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:23:50,681 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:23:50,681 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:50,681 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:50,681 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,685 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,685 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:50,686 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [187] 9b5fd811-809d-4d16-b20a-5d9743a466ed-00000136 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/9b5fd811-809d-4d16-b20a-5d9743a466ed-00000136/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=100-1099&id=9b5fd811-809d-4d16-b20a-5d9743a466ed-00000136&t0=186&fs=9b5fd811-809d-4d16-b20a-5d9743a466ed&t1=187&ts=1731777830678
2024-11-16 17:23:50,687 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:23:50,688 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,688 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,694 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:50,694 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [188] 9b5fd811-809d-4d16-b20a-5d9743a466ed-00000136 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/9b5fd811-809d-4d16-b20a-5d9743a466ed-00000136/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=100-1099&id=9b5fd811-809d-4d16-b20a-5d9743a466ed-00000136&t0=186&fs=9b5fd811-809d-4d16-b20a-5d9743a466ed&t1=188&ts=1731777830678
2024-11-16 17:23:50,703 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:23:50,703 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,709 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:23:50,710 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,711 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_incoming_ranges=4) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=2000) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_operations=2) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=2) (stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (action_file_opened=1) (action_file_opened.failures=0) (stream_read_closed=0) (stream_read_close_operations=1) (stream_read_block_read=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_seek_policy_changed=1) (stream_read_fully_operations=0) (stream_read_block_acquire_read=0) (stream_read_bytes=2000) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_aborted=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=2) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_opened=0) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=15) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=18) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=33, mean=16.5000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,714 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:23:50,716 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:23:50,716 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:50,716 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@2ae3667b[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:23:50,716 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:50,716 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics8-leg-bucket
2024-11-16 17:23:50,716 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:23:50,717 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@314ba2e4] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:50,717 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@314ba2e4] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:50,719 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_remote_stream_aborted=0) (committer_bytes_uploaded=0) (op_delete=0) (store_io_throttled=0) (action_http_head_request.failures=0) (files_copied_bytes=0) (op_get_file_status.failures=0) (files_delete_rejected=0) (object_multipart_initiated=0) (audit_access_check_failure=0) (op_xattr_get_map.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_version_mismatches=0) (op_delete.failures=0) (stream_read_remote_stream_drain.failures=0) (op_abort=0) (multipart_upload_part_put_bytes=0) (op_mkdirs=0) (fake_directories_created=0) (audit_failure=0) (op_get_file_status=1) (object_continue_list_request=0) (object_delete_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_opened=0) (committer_magic_files_created=0) (delegation_tokens_issued.failures=0) (object_put_request.failures=0) (stream_read_seek_backward_operations=0) (committer_stage_file_upload.failures=0) (committer_commits_aborted=0) (op_rename.failures=0) (object_put_request=0) (store_io_retry=0) (stream_read_fully_operations=0) (op_get_content_summary.failures=0) (stream_write_queue_duration.failures=0) (op_list_files.failures=0) (object_multipart_initiated.failures=0) (object_delete_objects=0) (stream_write_total_time=0) (store_exists_probe=0) (action_executor_acquired.failures=0) (op_xattr_get_named.failures=0) (op_open=1) (stream_write_exceptions=0) (multipart_upload_aborted=0) (op_create_non_recursive=0) (object_bulk_delete_request.failures=0) (committer_bytes_committed=0) (stream_read_seek_policy_changed=1) (audit_request_execution=3) (op_exists.failures=0) (multipart_upload_part_put=0) (op_xattr_get_named=0) (op_list_status.failures=0) (object_multipart_aborted=0) (action_file_opened.failures=0) (stream_read_total_bytes=2000) (stream_read_bytes=2000) (stream_read_vectored_read_bytes_discarded=0) (op_list_located_status=0) (committer_commits_completed=0) (stream_read_vectored_combined_ranges=2) (object_copy_requests=0) (action_file_opened=1) (stream_read_bytes_discarded_in_abort=0) (op_copy_from_local_file=0) (op_createfile=0) (files_created=0) (stream_write_block_uploads=0) (stream_read_vectored_incoming_ranges=4) (op_xattr_list=0) (committer_commits.failures=0) (committer_commit_job=0) (ignored_errors=0) (stream_read_operations=0) (action_http_head_request=1) (stream_write_block_uploads_aborted=0) (stream_read_remote_stream_drain=0) (action_http_get_request.failures=0) (multipart_upload_started=0) (stream_read_unbuffered=0) (multipart_upload_list=0) (op_is_file=0) (op_mkdirs.failures=0) (op_access.failures=0) (committer_tasks_completed=0) (op_abort.failures=0) (op_xattr_get_map=0) (op_is_file.failures=0) (action_executor_acquired=0) (committer_commits_created=0) (stream_read_operations_incomplete=0) (op_hflush=0) (committer_materialize_file=0) (stream_read_vectored_operations=2) (op_createfile.failures=0) (op_exists=0) (multipart_instantiated=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (delegation_tokens_issued=0) (object_select_requests=0) (committer_magic_marker_put=0) (op_access=0) (op_get_content_summary=0) (op_rename=0) (store_io_request=3) (op_is_directory=0) (committer_magic_marker_put.failures=0) (stream_aborted=0) (op_is_directory.failures=0) (op_get_file_checksum=0) (op_xattr_get_named_map=0) (op_copy_from_local_file.failures=0) (committer_jobs_failed=0) (committer_materialize_file.failures=0) (store_exists_probe.failures=0) (op_get_delegation_token.failures=0) (stream_write_queue_duration=0) (object_delete_request=0) (stream_read_seek_bytes_discarded=0) (committer_load_single_pending_file.failures=0) (op_create=0) (committer_commits_reverted=0) (op_create.failures=0) (object_multipart_aborted.failures=0) (committer_load_single_pending_file=0) (stream_read_closed=0) (files_copied=0) (committer_tasks_failed=0) (stream_write_total_data=0) (audit_span_creation=3) (stream_read_bytes_backwards_on_seek=0) (stream_write_exceptions_completing_upload=0) (object_list_request.failures=0) (committer_stage_file_upload=0) (object_metadata_request=1) (op_xattr_list.failures=0) (op_get_file_checksum.failures=0) (stream_read_exceptions=0) (object_put_bytes=0) (object_continue_list_request.failures=0) (object_put_request_completed=0) (stream_read_seek_forward_operations=0) (multipart_upload_completed=0) (op_xattr_get_named_map.failures=0) (op_glob_status.failures=0) (op_hsync=0) (stream_write_bytes=0) (stream_read_close_operations=1) (op_openfile=0) (object_list_request=0) (object_bulk_delete_request=0) (files_deleted=0) (action_http_get_request=2) (directories_deleted=0) (multipart_upload_list.failures=0) (op_list_files=0) (op_list_status=0) (op_get_delegation_token=0) (op_glob_status=0) (stream_write_block_uploads_committed=0) (committer_commit_job.failures=0) (directories_created=0) (stream_read_seek_operations=0) (committer_jobs_completed=0) (fake_directories_deleted=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0) (object_put_bytes_pending=0));
minimums=((committer_stage_file_upload.min=-1) (op_xattr_get_map.min=-1) (op_is_file.min=-1) (object_multipart_initiated.min=-1) (op_get_delegation_token.min=-1) (action_http_head_request.failures.min=-1) (op_list_files.failures.min=-1) (action_file_opened.failures.min=-1) (object_delete_request.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named.failures.min=-1) (store_exists_probe.min=-1) (action_http_get_request.failures.min=-1) (committer_commit_job.min=-1) (op_rename.failures.min=-1) (action_file_opened.min=0) (op_is_file.failures.min=-1) (op_glob_status.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_status.min=-1) (object_list_request.failures.min=-1) (op_mkdirs.min=-1) (op_delete.min=-1) (op_rename.min=-1) (object_put_request.failures.min=-1) (multipart_upload_list.min=-1) (committer_stage_file_upload.failures.min=-1) (op_access.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.min=-1) (op_create.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_content_summary.min=-1) (op_create.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_get_request.min=15) (op_abort.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_bulk_delete_request.failures.min=-1) (object_list_request.min=-1) (op_glob_status.min=-1) (op_list_files.min=-1) (op_xattr_get_named_map.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_executor_acquired.min=-1) (op_delete.failures.min=-1) (op_list_status.failures.min=-1) (op_get_file_status.min=14) (action_executor_acquired.failures.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.min=-1) (object_multipart_aborted.min=-1) (op_access.failures.min=-1) (action_http_head_request.min=14) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_is_directory.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.failures.min=-1) (op_exists.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_continue_list_request.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_exists.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_put_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_checksum.min=-1) (op_copy_from_local_file.failures.min=-1) (op_createfile.min=-1) (op_xattr_list.failures.min=-1) (op_copy_from_local_file.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (op_get_delegation_token.max=-1) (object_continue_list_request.max=-1) (action_http_get_request.failures.max=-1) (op_createfile.failures.max=-1) (op_list_files.max=-1) (action_http_get_request.max=18) (op_get_file_checksum.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_rename.max=-1) (op_glob_status.max=-1) (op_xattr_get_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named.max=-1) (committer_commit_job.max=-1) (object_multipart_initiated.failures.max=-1) (op_access.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.failures.max=-1) (op_copy_from_local_file.max=-1) (op_is_file.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_create.failures.max=-1) (op_is_directory.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_access.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_mkdirs.max=-1) (op_abort.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_list.max=-1) (op_get_file_status.max=14) (object_put_request.failures.max=-1) (op_list_status.max=-1) (op_is_file.failures.max=-1) (object_list_request.max=-1) (op_exists.failures.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.failures.max=-1) (object_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (store_exists_probe.max=-1) (op_delete.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.failures.max=-1) (op_list_status.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.max=-1) (op_delete.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_status.failures.max=-1) (object_put_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_create.max=-1) (committer_load_single_pending_file.max=-1) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.max=-1) (object_delete_request.max=-1) (op_createfile.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.max=14) (object_continue_list_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_exists.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_file_checksum.max=-1) (op_is_directory.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.max=-1) (store_exists_probe.failures.max=-1) (action_file_opened.max=0) (stream_write_queue_duration.failures.max=-1));
means=((op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=33, mean=16.5000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=14, mean=14.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=14, mean=14.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,719 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:50,720 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,720 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,720 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137&t0=184&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=184&ts=1731777830719
2024-11-16 17:23:50,723 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,724 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,724 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137&t0=184&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=184&ts=1731777830719
2024-11-16 17:23:50,730 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:50,730 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:50,730 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:50,730 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:50,730 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:50,731 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:50,731 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:50,731 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:50,731 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:50,732 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:50,732 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:50,732 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:50,732 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:50,733 [s3a-transfer-leg-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:50,733 [s3a-transfer-leg-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,733 [s3a-transfer-leg-bucket-unbounded-pool2-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [193] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137&t0=184&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=193&ts=1731777830719
2024-11-16 17:23:50,738 [s3a-transfer-leg-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,739 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:23:50,739 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:50,740 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:50,740 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:50,740 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777830644; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:50,740 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:50,741 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:50,742 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:50,742 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:50,743 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:50,743 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:50,743 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:50,743 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,743 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,743 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:50,743 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,743 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137&t0=184&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=79&ts=1731777830719
2024-11-16 17:23:50,746 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:50,751 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:50,751 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:50,751 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:23:50,751 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:50,751 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:50,751 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,751 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,751 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:50,751 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,751 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000137&t0=184&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=79&ts=1731777830719
2024-11-16 17:23:50,757 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:50,758 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:50,758 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:50,758 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:23:50,758 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.012s
2024-11-16 17:23:50,759 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.028s
2024-11-16 17:23:50,759 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:50,759 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:50,760 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:50,772 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 34, active threads = 0, queued tasks = 0, completed tasks = 34], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_put_request_completed=56) (op_list_files=0) (directories_created=28) (stream_read_version_mismatches=0) (op_copy_from_local_file=0) (stream_read_remote_stream_drain=3) (op_get_file_status=1) (action_executor_acquired=0) (op_openfile=0) (object_multipart_aborted.failures=0) (committer_stage_file_upload=0) (files_copied=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_write_queue_duration=0) (store_exists_probe.failures=0) (op_xattr_get_map=0) (op_list_status=0) (audit_span_creation=109) (stream_read_unbuffered=2) (op_hsync=0) (op_is_directory=0) (stream_read_operations=3) (stream_write_block_uploads=28) (op_access.failures=0) (committer_commit_job.failures=0) (op_xattr_list.failures=0) (audit_request_execution=327) (object_delete_objects=56) (op_get_file_checksum=0) (op_delete=28) (op_get_content_summary.failures=0) (stream_write_total_time=0) (fake_directories_deleted=28) (object_bulk_delete_request=56) (op_create=28) (multipart_upload_list=0) (op_get_file_checksum.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_bytes=1835008) (store_io_request=327) (multipart_upload_started=0) (ignored_errors=0) (object_metadata_request=79) (stream_read_vectored_read_bytes_discarded=24543) (op_get_content_summary=0) (multipart_upload_abort_under_path_invoked=0) (op_open=23) (audit_access_check_failure=0) (committer_magic_files_created=0) (committer_commits_created=0) (action_executor_acquired.failures=0) (op_exists.failures=0) (stream_write_block_uploads_committed=0) (multipart_upload_part_put=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (store_io_throttled=0) (op_mkdirs=28) (stream_read_vectored_operations=20) (object_list_request.failures=0) (action_http_get_request.failures=0) (committer_bytes_committed=0) (stream_read_seek_bytes_skipped=0) (op_mkdirs.failures=0) (audit_failure=0) (op_delete.failures=0) (object_bulk_delete_request.failures=0) (op_access=0) (op_is_file=0) (multipart_instantiated=0) (op_glob_status.failures=0) (action_http_get_request=24) (action_http_head_request.failures=0) (delegation_tokens_issued=0) (op_xattr_get_named_map.failures=0) (stream_write_exceptions=0) (store_exists_probe=0) (op_xattr_get_named_map=0) (committer_commit_job=0) (stream_write_exceptions_completing_upload=0) (op_list_status.failures=0) (op_hflush=0) (object_put_request=56) (stream_read_bytes=6963) (stream_write_block_uploads_aborted=0) (op_rename=0) (files_copied_bytes=0) (multipart_upload_part_put_bytes=0) (object_put_bytes=1835008) (op_create.failures=0) (op_list_files.failures=0) (op_rename.failures=0) (multipart_upload_aborted=0) (stream_write_queue_duration.failures=0) (committer_commits_aborted=0) (stream_read_seek_forward_operations=0) (committer_jobs_failed=0) (stream_read_closed=3) (op_list_located_status=0) (action_http_head_request=79) (action_file_opened=23) (object_continue_list_request=0) (object_multipart_initiated.failures=0) (op_xattr_get_named.failures=0) (committer_jobs_completed=0) (op_get_delegation_token=0) (op_xattr_get_map.failures=0) (op_copy_from_local_file.failures=0) (delegation_tokens_issued.failures=0) (stream_read_seek_operations=0) (committer_load_single_pending_file=0) (object_continue_list_request.failures=0) (stream_read_opened=3) (directories_deleted=0) (object_multipart_aborted=0) (object_copy_requests=0) (stream_read_vectored_combined_ranges=25) (committer_commits.failures=0) (committer_materialize_file.failures=0) (op_glob_status=0) (committer_materialize_file=0) (op_abort.failures=0) (op_is_directory.failures=0) (object_select_requests=0) (object_delete_request=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (committer_tasks_failed=0) (op_abort=0) (op_is_file.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_close=196008) (op_xattr_list=0) (stream_read_close_operations=23) (stream_read_operations_incomplete=0) (object_put_request.failures=0) (object_delete_request.failures=0) (committer_bytes_uploaded=0) (op_create_non_recursive=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_completed=0) (stream_read_exceptions=0) (files_delete_rejected=0) (multipart_upload_list.failures=0) (committer_tasks_completed=0) (committer_commits_reverted=0) (object_list_request=112) (stream_read_vectored_incoming_ranges=58) (op_get_file_status.failures=0) (op_createfile=0) (committer_magic_marker_put=0) (stream_read_fully_operations=1) (stream_read_total_bytes=202971) (stream_read_seek_policy_changed=25) (store_io_retry=0) (fake_directories_created=0) (op_createfile.failures=0) (files_deleted=28) (op_exists=0) (committer_magic_marker_put.failures=0) (op_get_delegation_token.failures=0) (committer_stage_file_upload.failures=0) (files_created=28) (committer_commits_completed=0) (op_xattr_get_named=0) (object_multipart_initiated=0) (stream_write_total_data=3670016) (committer_load_single_pending_file.failures=0));
gauges=((object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=28) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0));
minimums=((op_copy_from_local_file.failures.min=-1) (stream_write_queue_duration.min=-1) (action_http_get_request.failures.min=-1) (store_exists_probe.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_status.min=-1) (action_executor_acquired.min=-1) (object_bulk_delete_request.min=5) (op_glob_status.min=-1) (object_bulk_delete_request.failures.min=-1) (op_rename.failures.min=-1) (op_is_file.min=-1) (op_get_file_checksum.min=-1) (op_list_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_exists.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_list.failures.min=-1) (op_is_directory.min=-1) (object_put_request.min=25) (action_file_opened.failures.min=-1) (op_list_files.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.failures.min=-1) (object_continue_list_request.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_list.failures.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.min=-1) (op_exists.min=-1) (op_get_file_status.min=8) (action_file_opened.min=3) (committer_load_single_pending_file.min=-1) (object_multipart_initiated.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.min=22) (op_createfile.min=-1) (op_xattr_list.min=-1) (op_rename.min=-1) (op_access.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_access.failures.min=-1) (action_http_head_request.min=2) (committer_materialize_file.failures.min=-1) (multipart_upload_list.min=-1) (op_list_files.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_map.min=-1) (op_copy_from_local_file.min=-1) (object_delete_request.min=-1) (op_is_directory.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_delete_request.failures.min=-1) (object_multipart_aborted.min=-1) (delegation_tokens_issued.min=-1) (op_create.min=5) (op_delete.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.failures.min=-1) (op_abort.min=-1) (object_list_request.min=4) (committer_stage_file_upload.min=-1) (object_multipart_initiated.failures.min=-1) (op_create.failures.min=-1) (committer_commit_job.failures.min=-1) (op_mkdirs.min=17) (op_get_delegation_token.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_drain.min=4) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_http_get_request.min=7) (op_createfile.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.max=-1) (op_is_directory.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_directory.failures.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_put_request.max=71) (op_is_file.failures.max=-1) (action_file_opened.max=12) (multipart_upload_list.max=-1) (object_put_request.failures.max=-1) (op_get_file_checksum.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (store_exists_probe.max=-1) (op_get_file_status.max=8) (object_continue_list_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_abort.max=-1) (object_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_rename.failures.max=-1) (op_glob_status.max=-1) (committer_materialize_file.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_access.failures.max=-1) (op_delete.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_exists.failures.max=-1) (action_http_get_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_abort.failures.max=-1) (op_createfile.failures.max=-1) (op_glob_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_create.max=45) (stream_write_queue_duration.failures.max=-1) (op_exists.max=-1) (op_xattr_list.max=-1) (action_http_get_request.max=26) (object_list_request.max=167) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.max=14) (op_get_file_status.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_list.failures.max=-1) (op_access.max=-1) (op_list_files.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_map.failures.max=-1) (committer_commit_job.max=-1) (op_delete.max=58) (action_executor_acquired.max=-1) (op_list_status.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_mkdirs.max=263) (op_create.failures.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_drain.max=4) (op_get_delegation_token.max=-1) (op_rename.max=-1) (action_http_head_request.max=12) (op_xattr_get_map.max=-1) (object_list_request.failures.max=-1) (op_is_file.max=-1) (committer_materialize_file.failures.max=-1));
means=((object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=79, sum=352, mean=4.4557)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=28, sum=316, mean=11.2857)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=125, mean=5.4348)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=56, sum=440, mean=7.8571)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=56, sum=1067, mean=19.0536)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=24, sum=352, mean=14.6667)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=28, sum=986, mean=35.2143)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=28, sum=983, mean=35.1071)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=112, sum=1023, mean=9.1339)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:50,772 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:50,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,772 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,772 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000138 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000138&t0=194&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=194&ts=1731777830772
2024-11-16 17:23:50,777 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,777 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,777 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,777 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,777 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,777 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000138 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000138&t0=194&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=194&ts=1731777830772
2024-11-16 17:23:50,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,781 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:50,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:50,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:50,781 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000138 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000138&t0=194&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=194&ts=1731777830772
2024-11-16 17:23:50,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:50,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:50,790 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:23:50,790 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:50,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,790 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,791 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000139 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000139/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000139&t0=194&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=194&ts=1731777830790
2024-11-16 17:23:50,795 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,795 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,795 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:50,795 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2458266544432252346.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:50,796 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2458266544432252346.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (op_hsync=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (stream_write_block_uploads=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (object_put_request=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (op_abort=0) (op_hflush=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2458266544432252346.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,796 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,796 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:50,796 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2458266544432252346.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:50,796 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:50,796 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:50,797 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:50,797 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:50,797 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000139 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000139/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000139&t0=194&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=80&ts=1731777830790
2024-11-16 17:23:50,813 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:50,813 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:50,813 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:23:50,814 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2458266544432252346.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:50,814 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2458266544432252346.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,814 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2458266544432252346.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:50,814 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:50,815 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:50,816 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (op_hflush=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (stream_write_total_data=65536) (multipart_upload_part_put=0) (object_multipart_aborted=0) (object_put_request=1) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (op_abort=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (op_abort.failures=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=16) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_put_request.max=16) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=16, mean=16.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:50,816 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:50,816 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:23:50,816 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:23:50,817 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:50,818 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:50,819 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:23:50,819 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:23:50,819 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:23:50,819 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:23:50,819 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:23:50,819 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:23:50,820 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:23:50,820 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:23:50,820 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:23:50,820 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:23:50,820 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='3424fc2b-c5a8-41f3-af69-bbd4366f8bdd', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:50,820 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='3424fc2b-c5a8-41f3-af69-bbd4366f8bdd', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:23:50,820 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='3424fc2b-c5a8-41f3-af69-bbd4366f8bdd', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:23:50,820 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:23:50,820 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:23:50,821 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:23:50,821 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:23:50,821 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:23:50,821 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:23:50,821 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1bbc0517]
2024-11-16 17:23:50,821 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1bbc0517]
2024-11-16 17:23:50,821 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:23:50,821 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:23:50,822 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:23:50,822 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:23:50,822 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:23:50,822 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:23:50,822 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:23:50,822 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:23:50,822 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:23:50,822 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:23:50,822 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:23:50,822 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:23:50,824 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:23:50,825 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:23:50,825 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:23:50,825 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:23:50,825 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:23:50,825 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:23:50,825 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:50,825 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,825 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:50,825 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000142 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000142/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000142&t0=194&fs=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd&t1=194&ts=1731777830825
2024-11-16 17:23:50,826 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:23:50,826 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:23:50,826 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:23:50,826 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:23:50,832 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:50,832 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777830000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:23:50,833 [s3a-transfer-leg-bucket-unbounded-pool19-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:50,834 [s3a-transfer-leg-bucket-unbounded-pool19-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,834 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:50,834 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:50,834 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:23:50,834 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,834 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,835 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,835 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:50,835 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [198] 3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=8192-14435&id=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000143&t0=196&fs=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd&t1=198&ts=1731777830833
2024-11-16 17:23:50,836 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,836 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:50,836 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [197] 3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=1947-2046&id=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000143&t0=196&fs=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd&t1=197&ts=1731777830833
2024-11-16 17:23:50,837 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:50,837 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,837 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,837 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:50,837 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [199] 3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=40960-41983&id=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000143&t0=196&fs=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd&t1=199&ts=1731777830833
2024-11-16 17:23:50,853 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:23:50,854 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,861 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.026s
2024-11-16 17:23:50,866 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:23:50,866 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:23:50,866 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,871 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.034s
2024-11-16 17:23:50,871 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:50,872 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=18));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=34));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=78, mean=26.0000)));

2024-11-16 17:23:50,873 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened=1) (stream_read_total_bytes=1424) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=3) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (stream_read_unbuffered=0) (stream_read_operations=0) (stream_read_exceptions=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_seek_operations=0) (stream_read_vectored_read_bytes_discarded=5944) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read.failures=0) (stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_close_operations=1) (stream_read_block_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (stream_read_vectored_incoming_ranges=5) (action_executor_acquired.failures=0) (stream_read_bytes=1424) (action_http_get_request=3));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=18) (action_file_opened.min=0) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=34) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=0) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=78, mean=26.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,874 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777830000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:23:50,883 [s3a-transfer-leg-bucket-unbounded-pool19-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:50,883 [s3a-transfer-leg-bucket-unbounded-pool19-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,883 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:50,883 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:23:50,883 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,884 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=10240-65535&id=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144&t0=203&fs=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd&t1=194&ts=1731777830882
2024-11-16 17:23:50,892 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.009s
2024-11-16 17:23:50,893 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:50,893 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:50,893 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:50,894 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:23:50,894 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:23:50,894 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:23:50,894 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:50,897 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://leg-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:23:50,897 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:23:50,897 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,897 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=8192-8291&id=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144&t0=203&fs=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd&t1=194&ts=1731777830882
2024-11-16 17:23:50,906 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.013s
2024-11-16 17:23:50,906 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:50,906 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:50,906 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:50,906 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:23:50,906 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:23:50,906 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:50,907 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:23:50,907 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,907 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=14336-14435&id=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144&t0=203&fs=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd&t1=194&ts=1731777830882
2024-11-16 17:23:50,916 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.010s
2024-11-16 17:23:50,916 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:50,916 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:50,916 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:50,916 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:23:50,916 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:23:50,917 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:50,917 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:23:50,917 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,917 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=1947-2046&id=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144&t0=203&fs=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd&t1=194&ts=1731777830882
2024-11-16 17:23:50,926 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.010s
2024-11-16 17:23:50,926 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:50,926 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:50,926 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:50,926 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:23:50,926 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:23:50,927 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:50,927 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:23:50,927 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:50,927 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=40960-41983&id=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd-00000144&t0=203&fs=3424fc2b-c5a8-41f3-af69-bbd4366f8bdd&t1=194&ts=1731777830882
2024-11-16 17:23:50,934 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.008s
2024-11-16 17:23:50,935 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:50,935 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:50,936 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=7)
(stream_read_remote_stream_aborted.min=3)
(stream_read_remote_stream_drain.min=1));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=9)
(stream_read_remote_stream_aborted.max=3)
(stream_read_remote_stream_drain.max=1));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=43, mean=8.6000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)));

2024-11-16 17:23:50,936 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:23:50,936 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:23:50,936 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:50,937 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_policy_changed=2) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_read_block_read.failures=0) (stream_aborted=1) (stream_read_remote_stream_aborted=1) (stream_read_seek_bytes_discarded=0) (action_executor_acquired=0) (stream_read_seek_operations=4) (stream_read_seek_backward_operations=2) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_combined_ranges=0) (stream_read_operations_incomplete=0) (stream_read_fully_operations=5) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_unbuffered=0) (stream_read_seek_forward_operations=2) (action_http_get_request=5) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_seek_bytes_skipped=44957) (stream_read_total_bytes=1424) (stream_read_operations=5) (stream_read_bytes=1424) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain=4) (action_file_opened.failures=0) (stream_read_exceptions=0) (stream_read_opened=5) (stream_read_block_acquire_read=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=14637) (stream_read_closed=4));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=1) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=7) (stream_read_block_read.min=-1) (action_file_opened.min=0) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=3) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=9) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.max=3) (action_executor_acquired.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=3, mean=0.7500)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (action_http_get_request.mean=(samples=5, sum=43, mean=8.6000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,939 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:23:50,941 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:23:50,941 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:50,941 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@610d264f[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:23:50,942 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:50,942 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics9-leg-bucket
2024-11-16 17:23:50,942 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:23:50,943 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1bbc0517] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:50,943 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1bbc0517] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:50,944 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=1) (stream_read_seek_policy_changed=3) (op_hflush=0) (stream_write_exceptions=0) (stream_read_seek_forward_operations=2) (fake_directories_deleted=0) (op_delete.failures=0) (op_delete=0) (stream_read_remote_stream_drain=4) (action_http_head_request.failures=0) (committer_materialize_file.failures=0) (object_multipart_initiated.failures=0) (store_exists_probe=0) (op_xattr_get_named.failures=0) (stream_read_exceptions=0) (op_copy_from_local_file.failures=0) (stream_read_bytes_discarded_in_close=0) (object_put_bytes=0) (delegation_tokens_issued.failures=0) (stream_read_seek_bytes_discarded=0) (committer_magic_files_created=0) (store_io_throttled=0) (committer_commit_job.failures=0) (object_multipart_aborted=0) (op_mkdirs=0) (op_xattr_get_map.failures=0) (object_copy_requests=0) (stream_write_queue_duration.failures=0) (committer_commits_reverted=0) (store_exists_probe.failures=0) (stream_read_bytes=2848) (multipart_upload_completed=0) (ignored_errors=0) (op_rename.failures=0) (committer_materialize_file=0) (op_createfile.failures=0) (op_list_status=0) (object_continue_list_request.failures=0) (fake_directories_created=0) (stream_write_exceptions_completing_upload=0) (op_list_files.failures=0) (op_get_file_checksum.failures=0) (op_get_file_status=1) (multipart_upload_list.failures=0) (files_deleted=0) (delegation_tokens_issued=0) (action_executor_acquired=0) (object_delete_request.failures=0) (stream_write_block_uploads_aborted=0) (committer_bytes_uploaded=0) (committer_load_single_pending_file=0) (stream_read_operations=5) (stream_read_vectored_incoming_ranges=5) (multipart_upload_part_put=0) (stream_read_seek_backward_operations=2) (op_get_delegation_token.failures=0) (stream_read_seek_operations=4) (stream_write_total_data=0) (object_metadata_request=1) (store_io_request=9) (stream_read_vectored_combined_ranges=3) (stream_read_opened=5) (op_is_file.failures=0) (op_is_directory=0) (op_xattr_get_map=0) (op_exists.failures=0) (op_access=0) (committer_jobs_failed=0) (files_created=0) (op_access.failures=0) (stream_write_queue_duration=0) (op_xattr_get_named=0) (op_get_file_status.failures=0) (object_continue_list_request=0) (op_hsync=0) (op_get_file_checksum=0) (stream_write_block_uploads_committed=0) (op_abort.failures=0) (op_openfile=0) (committer_commits.failures=0) (object_delete_objects=0) (stream_write_bytes=0) (files_copied=0) (multipart_instantiated=0) (object_bulk_delete_request.failures=0) (committer_stage_file_upload.failures=0) (op_list_status.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_select_requests=0) (op_is_file=0) (op_rename=0) (audit_span_creation=4) (action_file_opened.failures=0) (op_copy_from_local_file=0) (stream_read_unbuffered=0) (committer_commit_job=0) (committer_commits_aborted=0) (audit_request_execution=9) (committer_load_single_pending_file.failures=0) (op_get_delegation_token=0) (op_create.failures=0) (stream_read_remote_stream_drain.failures=0) (op_open=2) (stream_read_bytes_discarded_in_abort=55196) (multipart_upload_list=0) (stream_read_fully_operations=5) (committer_commits_completed=0) (op_xattr_list.failures=0) (object_put_request=0) (object_put_request.failures=0) (audit_access_check_failure=0) (directories_deleted=0) (action_executor_acquired.failures=0) (op_get_content_summary=0) (committer_tasks_failed=0) (op_createfile=0) (stream_read_total_bytes=2848) (committer_bytes_committed=0) (stream_write_total_time=0) (committer_tasks_completed=0) (object_put_request_completed=0) (action_http_head_request=1) (multipart_upload_started=0) (stream_read_bytes_backwards_on_seek=14637) (stream_aborted=1) (committer_magic_marker_put.failures=0) (op_xattr_get_named_map=0) (store_io_retry=0) (op_xattr_list=0) (op_exists=0) (op_list_files=0) (committer_stage_file_upload=0) (multipart_upload_abort_under_path_invoked=0) (object_list_request=0) (object_delete_request=0) (op_list_located_status=0) (files_copied_bytes=0) (stream_write_block_uploads=0) (directories_created=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (committer_jobs_completed=0) (stream_read_operations_incomplete=0) (object_multipart_aborted.failures=0) (op_glob_status=0) (multipart_upload_aborted=0) (stream_read_vectored_operations=1) (object_bulk_delete_request=0) (action_http_get_request=8) (files_delete_rejected=0) (object_list_request.failures=0) (op_mkdirs.failures=0) (audit_failure=0) (stream_read_closed=4) (op_create_non_recursive=0) (op_abort=0) (committer_commits_created=0) (op_create=0) (action_http_get_request.failures=0) (action_file_opened=2) (op_is_directory.failures=0) (stream_read_close_operations=2) (op_glob_status.failures=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named_map.failures=0) (op_get_content_summary.failures=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_seek_bytes_skipped=44957));
gauges=((stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((op_list_status.min=-1) (object_multipart_aborted.min=-1) (op_is_directory.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named.failures.min=-1) (op_create.min=-1) (stream_read_remote_stream_drain.min=0) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.min=-1) (op_list_files.min=-1) (op_delete.min=-1) (committer_materialize_file.min=-1) (object_put_request.failures.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_initiated.failures.min=-1) (store_exists_probe.min=-1) (committer_magic_marker_put.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_access.failures.min=-1) (op_abort.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_aborted.min=3) (op_is_directory.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_delegation_token.failures.min=-1) (multipart_upload_list.min=-1) (action_http_head_request.min=7) (action_file_opened.min=0) (action_file_opened.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_write_queue_duration.min=-1) (object_bulk_delete_request.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_http_get_request.min=7) (op_mkdirs.failures.min=-1) (op_is_file.min=-1) (object_continue_list_request.min=-1) (delegation_tokens_issued.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_access.min=-1) (action_http_head_request.failures.min=-1) (op_delete.failures.min=-1) (object_delete_request.min=-1) (op_rename.min=-1) (op_xattr_list.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (op_create.failures.min=-1) (op_glob_status.failures.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.min=-1) (op_list_files.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.min=-1) (object_list_request.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (op_get_file_checksum.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_rename.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_exists.min=-1) (op_xattr_get_named_map.min=-1) (committer_materialize_file.failures.min=-1) (committer_stage_file_upload.min=-1) (op_abort.min=-1) (committer_load_single_pending_file.min=-1) (object_delete_request.failures.min=-1) (object_list_request.failures.min=-1) (op_glob_status.min=-1) (op_list_status.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_file_status.min=7) (op_xattr_list.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_commit_job.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((op_is_file.failures.max=-1) (op_get_file_status.failures.max=-1) (object_list_request.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.failures.max=-1) (op_access.max=-1) (object_continue_list_request.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_create.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named_map.max=-1) (op_exists.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_commit_job.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_aborted.max=3) (multipart_upload_list.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_rename.max=-1) (op_list_status.failures.max=-1) (op_mkdirs.failures.max=-1) (op_create.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_map.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_put_request.failures.max=-1) (op_get_content_summary.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (committer_stage_file_upload.max=-1) (op_rename.failures.max=-1) (action_http_head_request.max=7) (object_continue_list_request.failures.max=-1) (op_access.failures.max=-1) (action_http_get_request.max=34) (object_list_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_bulk_delete_request.max=-1) (stream_write_queue_duration.max=-1) (op_list_status.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_list.max=-1) (delegation_tokens_issued.max=-1) (op_glob_status.failures.max=-1) (op_get_file_status.max=7) (op_glob_status.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.failures.max=-1) (op_abort.failures.max=-1) (op_copy_from_local_file.max=-1) (object_delete_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_file_opened.failures.max=-1) (op_exists.max=-1) (committer_magic_marker_put.failures.max=-1) (op_delete.max=-1) (op_mkdirs.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_files.max=-1) (op_xattr_get_map.max=-1) (op_get_delegation_token.max=-1) (stream_read_remote_stream_drain.max=1) (store_exists_probe.max=-1) (op_is_directory.max=-1) (object_put_request.max=-1) (op_createfile.max=-1) (op_get_content_summary.failures.max=-1) (op_is_directory.failures.max=-1) (committer_magic_marker_put.max=-1) (op_createfile.failures.max=-1) (action_file_opened.max=0) (object_delete_request.max=-1) (action_http_get_request.failures.max=-1) (op_list_files.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=121, mean=15.1250)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=7, mean=7.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=3, mean=0.7500)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=7, mean=7.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:50,945 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:50,945 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,946 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,946 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145&t0=194&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=194&ts=1731777830945
2024-11-16 17:23:50,949 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,949 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,950 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145&t0=194&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=194&ts=1731777830945
2024-11-16 17:23:50,955 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:50,955 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:50,955 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:50,956 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:50,956 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:50,956 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:50,956 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:50,956 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:50,956 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:50,956 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:50,956 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:50,957 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:50,957 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:50,957 [s3a-transfer-leg-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:50,957 [s3a-transfer-leg-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,957 [s3a-transfer-leg-bucket-unbounded-pool2-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [205] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145&t0=194&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=205&ts=1731777830945
2024-11-16 17:23:50,962 [s3a-transfer-leg-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,962 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:23:50,962 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:50,962 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:50,962 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:50,962 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777830811; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:50,962 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:50,962 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:50,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:50,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:50,963 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:50,963 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:50,963 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:50,963 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:50,963 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,963 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,963 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:50,963 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,963 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145&t0=194&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=82&ts=1731777830945
2024-11-16 17:23:50,968 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:50,969 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:50,969 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:23:50,969 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:50,969 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:50,969 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:50,969 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:50,969 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:50,969 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:50,969 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000145&t0=194&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=82&ts=1731777830945
2024-11-16 17:23:50,974 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:50,975 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:50,975 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:23:50,975 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.012s
2024-11-16 17:23:50,975 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.012s
2024-11-16 17:23:50,975 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.019s
2024-11-16 17:23:50,975 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:50,975 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:50,976 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:50,988 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 35, active threads = 0, queued tasks = 0, completed tasks = 35], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_initiated=0) (delegation_tokens_issued=0) (multipart_upload_aborted=0) (committer_tasks_completed=0) (committer_commit_job=0) (op_copy_from_local_file=0) (object_multipart_aborted=0) (committer_commit_job.failures=0) (stream_read_bytes_discarded_in_close=196008) (op_exists.failures=0) (op_hsync=0) (op_get_file_checksum=0) (object_copy_requests=0) (stream_write_block_uploads_aborted=0) (op_create=29) (store_io_retry=0) (multipart_upload_part_put_bytes=0) (multipart_instantiated=0) (delegation_tokens_issued.failures=0) (op_xattr_get_named_map=0) (directories_created=29) (stream_write_queue_duration.failures=0) (op_get_content_summary.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_exists=0) (committer_commits_reverted=0) (committer_load_single_pending_file.failures=0) (op_create.failures=0) (committer_commits.failures=0) (op_xattr_get_named_map.failures=0) (stream_write_total_data=3801088) (multipart_upload_completed=0) (stream_read_seek_policy_changed=25) (object_metadata_request=81) (stream_read_seek_bytes_discarded=0) (op_abort.failures=0) (object_continue_list_request=0) (object_put_request=58) (audit_access_check_failure=0) (stream_read_closed=3) (committer_commits_created=0) (stream_write_bytes=1900544) (audit_failure=0) (op_mkdirs.failures=0) (action_executor_acquired.failures=0) (committer_jobs_failed=0) (stream_read_bytes=6963) (stream_read_fully_operations=1) (committer_bytes_uploaded=0) (stream_read_version_mismatches=0) (action_http_head_request.failures=0) (stream_read_seek_backward_operations=0) (committer_load_single_pending_file=0) (stream_read_seek_bytes_skipped=0) (committer_magic_marker_put.failures=0) (stream_read_close_operations=23) (stream_read_vectored_operations=20) (op_get_file_status=1) (committer_commits_aborted=0) (op_hflush=0) (op_list_status=0) (audit_request_execution=337) (op_delete=29) (op_list_status.failures=0) (store_exists_probe.failures=0) (stream_read_opened=3) (op_delete.failures=0) (stream_read_remote_stream_drain=3) (multipart_upload_started=0) (committer_commits_completed=0) (stream_read_vectored_combined_ranges=25) (stream_write_queue_duration=0) (committer_stage_file_upload=0) (multipart_upload_list=0) (committer_stage_file_upload.failures=0) (action_http_head_request=81) (stream_read_remote_stream_aborted=0) (stream_read_operations_incomplete=0) (op_get_file_checksum.failures=0) (multipart_upload_list.failures=0) (op_copy_from_local_file.failures=0) (stream_write_total_time=0) (committer_materialize_file.failures=0) (op_xattr_list.failures=0) (op_glob_status=0) (stream_write_exceptions=0) (files_delete_rejected=0) (object_put_request.failures=0) (committer_jobs_completed=0) (committer_materialize_file=0) (object_put_bytes=1900544) (op_get_file_status.failures=0) (object_continue_list_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain.failures=0) (object_bulk_delete_request.failures=0) (files_copied=0) (op_get_delegation_token.failures=0) (files_created=29) (fake_directories_created=0) (op_list_located_status=0) (op_rename=0) (op_abort=0) (op_glob_status.failures=0) (stream_read_total_bytes=202971) (op_xattr_list=0) (op_xattr_get_map.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_files_created=0) (multipart_upload_part_put=0) (op_access.failures=0) (committer_magic_marker_put=0) (op_is_directory.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_block_uploads_committed=0) (fake_directories_deleted=29) (op_openfile=0) (ignored_errors=0) (op_open=23) (store_io_throttled=0) (op_rename.failures=0) (op_mkdirs=29) (committer_tasks_failed=0) (op_xattr_get_named.failures=0) (stream_read_seek_operations=0) (op_create_non_recursive=0) (object_list_request=116) (op_is_directory=0) (op_xattr_get_map=0) (object_multipart_aborted.failures=0) (action_http_get_request=24) (object_delete_request.failures=0) (action_executor_acquired=0) (object_delete_objects=58) (object_list_request.failures=0) (op_is_file=0) (files_deleted=29) (stream_read_vectored_incoming_ranges=58) (action_http_get_request.failures=0) (object_multipart_initiated.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_unbuffered=2) (stream_read_seek_forward_operations=0) (op_createfile.failures=0) (op_xattr_get_named=0) (action_file_opened=23) (op_get_delegation_token=0) (op_is_file.failures=0) (op_get_content_summary=0) (files_copied_bytes=0) (directories_deleted=0) (store_exists_probe=0) (audit_span_creation=112) (stream_read_operations=3) (op_createfile=0) (stream_write_block_uploads=29) (object_select_requests=0) (object_bulk_delete_request=58) (op_list_files=0) (action_file_opened.failures=0) (object_put_request_completed=58) (store_io_request=337) (object_delete_request=0) (stream_read_exceptions=0) (op_list_files.failures=0) (op_access=0) (stream_read_vectored_read_bytes_discarded=24543) (stream_aborted=0) (committer_bytes_committed=0));
gauges=((stream_write_block_uploads_pending=29) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0));
minimums=((op_exists.failures.min=-1) (committer_magic_marker_put.min=-1) (op_delete.failures.min=-1) (object_list_request.failures.min=-1) (op_list_status.min=-1) (op_abort.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.failures.min=-1) (op_rename.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_list.failures.min=-1) (delegation_tokens_issued.min=-1) (action_http_head_request.min=2) (op_xattr_get_map.failures.min=-1) (op_create.failures.min=-1) (op_create.min=5) (object_multipart_initiated.min=-1) (committer_materialize_file.min=-1) (op_get_file_status.failures.min=-1) (action_http_get_request.min=7) (stream_write_queue_duration.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_file_opened.failures.min=-1) (op_delete.min=19) (op_access.min=-1) (object_multipart_initiated.failures.min=-1) (object_delete_request.min=-1) (op_exists.min=-1) (committer_commit_job.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_continue_list_request.min=-1) (op_glob_status.min=-1) (op_xattr_get_map.min=-1) (op_mkdirs.min=17) (op_get_content_summary.min=-1) (multipart_upload_list.min=-1) (op_access.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_stage_file_upload.min=-1) (op_get_content_summary.failures.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_abort.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=4) (op_get_delegation_token.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.min=8) (op_createfile.failures.min=-1) (store_exists_probe.failures.min=-1) (action_file_opened.min=3) (op_get_file_checksum.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.min=5) (delegation_tokens_issued.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_files.failures.min=-1) (action_http_head_request.failures.min=-1) (object_list_request.min=4) (op_createfile.min=-1) (object_put_request.min=16) (op_list_files.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_is_directory.min=-1) (op_glob_status.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_list.min=-1) (op_copy_from_local_file.min=-1) (action_executor_acquired.min=-1) (op_is_file.min=-1));
maximums=((object_bulk_delete_request.max=14) (op_is_directory.max=-1) (op_list_files.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_delete_request.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_status.max=8) (op_create.failures.max=-1) (op_access.max=-1) (action_file_opened.max=12) (op_xattr_list.failures.max=-1) (action_http_head_request.max=12) (object_delete_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_list.max=-1) (op_xattr_get_map.failures.max=-1) (action_file_opened.failures.max=-1) (object_continue_list_request.max=-1) (action_executor_acquired.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_is_directory.failures.max=-1) (op_create.max=45) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_materialize_file.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.max=-1) (op_rename.failures.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_drain.max=4) (delegation_tokens_issued.max=-1) (op_delete.failures.max=-1) (op_glob_status.failures.max=-1) (op_mkdirs.max=263) (object_continue_list_request.failures.max=-1) (op_rename.max=-1) (object_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_load_single_pending_file.failures.max=-1) (multipart_upload_list.max=-1) (op_createfile.max=-1) (object_list_request.max=167) (op_xattr_get_named.failures.max=-1) (op_delete.max=58) (op_exists.max=-1) (committer_stage_file_upload.failures.max=-1) (op_list_files.max=-1) (op_abort.max=-1) (multipart_upload_list.failures.max=-1) (op_is_file.max=-1) (store_exists_probe.max=-1) (committer_load_single_pending_file.max=-1) (op_list_status.max=-1) (action_http_head_request.failures.max=-1) (op_createfile.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named_map.max=-1) (action_http_get_request.max=26) (object_put_request.max=71) (object_multipart_initiated.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_status.failures.max=-1) (op_glob_status.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named.max=-1) (op_is_file.failures.max=-1) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (op_access.failures.max=-1));
means=((op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=81, sum=359, mean=4.4321)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=116, sum=1043, mean=8.9914)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=125, mean=5.4348)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=29, sum=1002, mean=34.5517)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=6, mean=2.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=58, sum=1092, mean=18.8276)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=29, sum=321, mean=11.0690)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=24, sum=352, mean=14.6667)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=58, sum=450, mean=7.7586)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=29, sum=1004, mean=34.6207)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:50,988 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:50,988 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,988 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,988 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:50,989 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:50,989 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000146 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000146&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=206&ts=1731777830988
2024-11-16 17:23:50,994 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:50,994 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,994 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:50,994 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:50,994 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:50,994 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000146 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000146&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=206&ts=1731777830988
2024-11-16 17:23:50,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:50,997 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:50,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:50,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:50,997 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000146 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000146&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=206&ts=1731777830988
2024-11-16 17:23:51,008 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:51,008 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:51,008 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:23:51,008 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:51,009 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,009 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,009 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,009 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,009 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000147 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000147/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000147&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=206&ts=1731777831009
2024-11-16 17:23:51,014 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:51,015 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,015 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:51,016 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4083172101332052733.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:51,016 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4083172101332052733.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (op_abort=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (op_hsync=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4083172101332052733.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,017 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,017 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:51,017 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4083172101332052733.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:51,017 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:51,017 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:51,017 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:51,017 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:51,018 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000147 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000147/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000147&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=84&ts=1731777831009
2024-11-16 17:23:51,039 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:51,039 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:51,039 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.022s
2024-11-16 17:23:51,040 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4083172101332052733.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:51,040 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4083172101332052733.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,040 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4083172101332052733.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,040 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:51,041 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,042 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (object_multipart_aborted=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (multipart_upload_completed=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (multipart_upload_part_put=0) (op_abort=0) (op_hsync=0) (stream_write_exceptions=0) (object_put_request=1) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=21) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=21) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=21, mean=21.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:51,043 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:51,044 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,044 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,044 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:51,044 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000148 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000148&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=206&ts=1731777831043
2024-11-16 17:23:51,047 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:51,047 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:51,048 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,048 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:51,048 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:51,048 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:51,048 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:51,048 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,048 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:51,048 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,048 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:23:51,048 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:51,048 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,048 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000148 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000148&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=87&ts=1731777831043
2024-11-16 17:23:51,048 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000148 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-65535&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000148&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=206&ts=1731777831043
2024-11-16 17:23:51,056 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:23:51,056 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.008s
2024-11-16 17:23:51,056 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:51,056 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,056 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:51,056 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:51,057 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:23:51,057 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:23:51,057 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:23:51,057 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7438 bytes
2024-11-16 17:23:51,057 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:51,057 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:51,057 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:51,057 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8746 bytes
2024-11-16 17:23:51,057 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:23:51,057 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:51,058 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_fully_operations=0) (stream_aborted=0) (stream_read_block_read=0) (stream_read_closed=1) (stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_block_read.failures=0) (stream_read_seek_operations=0) (stream_read_bytes=350) (stream_read_vectored_incoming_ranges=2) (stream_read_remote_stream_drain=1) (stream_read_vectored_combined_ranges=1) (stream_read_exceptions=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_close_operations=1) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_seek_policy_changed=1) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request=2) (stream_read_version_mismatches=0) (stream_read_opened=1) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_operations=1) (stream_read_vectored_read_bytes_discarded=10) (stream_read_total_bytes=65686) (action_file_opened=1) (stream_read_unbuffered=0) (stream_read_operations=1) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.min=1) (action_file_opened.failures.min=-1) (action_file_opened.min=3) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=8) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=3) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=8) (stream_read_remote_stream_drain.max=1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=16, mean=8.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:51,059 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:51,059 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,059 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,059 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=206&ts=1731777831059
2024-11-16 17:23:51,063 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,063 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,063 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=206&ts=1731777831059
2024-11-16 17:23:51,070 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:51,070 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:51,070 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:51,070 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:51,070 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:51,070 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:51,071 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:51,071 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:51,071 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:51,071 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:51,071 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:51,071 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:51,072 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:51,072 [s3a-transfer-leg-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:51,072 [s3a-transfer-leg-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,072 [s3a-transfer-leg-bucket-unbounded-pool2-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=207&ts=1731777831059
2024-11-16 17:23:51,077 [s3a-transfer-leg-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:51,077 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:23:51,077 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:51,077 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:51,077 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:51,077 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777831037; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:51,078 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:51,078 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:51,078 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:51,078 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:51,078 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:51,078 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:51,079 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:51,079 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:51,079 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,079 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,079 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:51,079 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,079 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=89&ts=1731777831059
2024-11-16 17:23:51,084 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:51,084 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:51,084 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:23:51,084 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:51,084 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:51,084 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,084 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,084 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:51,084 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,084 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000149&t0=206&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=89&ts=1731777831059
2024-11-16 17:23:51,089 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:51,089 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:51,089 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:23:51,089 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.011s
2024-11-16 17:23:51,089 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.011s
2024-11-16 17:23:51,089 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.018s
2024-11-16 17:23:51,089 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:51,089 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:51,090 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:51,102 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 36, active threads = 0, queued tasks = 0, completed tasks = 36], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_incoming_ranges=60) (object_multipart_initiated=0) (op_glob_status=0) (op_xattr_get_named_map=0) (fake_directories_created=0) (stream_read_bytes=7313) (op_delete=30) (files_deleted=30) (object_continue_list_request.failures=0) (op_hflush=0) (committer_jobs_failed=0) (committer_load_single_pending_file.failures=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_part_put_bytes=0) (stream_write_block_uploads=30) (op_is_directory.failures=0) (op_access.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads_committed=0) (op_glob_status.failures=0) (store_io_throttled=0) (action_http_head_request.failures=0) (action_http_get_request.failures=0) (files_delete_rejected=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=4) (op_open=24) (committer_magic_files_created=0) (op_hsync=0) (stream_read_closed=4) (op_list_status.failures=0) (op_xattr_list=0) (directories_deleted=0) (action_executor_acquired.failures=0) (stream_read_close_operations=24) (op_list_status=0) (committer_stage_file_upload.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (op_list_files.failures=0) (op_exists.failures=0) (object_multipart_aborted=0) (op_copy_from_local_file=0) (object_select_requests=0) (committer_commit_job.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_write_total_data=3932160) (stream_read_version_mismatches=0) (stream_read_exceptions=0) (delegation_tokens_issued=0) (op_xattr_get_named.failures=0) (stream_aborted=0) (stream_write_queue_duration.failures=0) (object_metadata_request=84) (object_list_request.failures=0) (op_mkdirs=30) (committer_bytes_committed=0) (stream_read_seek_forward_operations=0) (op_xattr_list.failures=0) (op_is_file.failures=0) (op_get_content_summary.failures=0) (action_file_opened.failures=0) (op_list_located_status=0) (op_xattr_get_map.failures=0) (op_create=30) (committer_commits_created=0) (committer_commit_job=0) (object_list_request=120) (stream_read_seek_operations=0) (op_abort.failures=0) (committer_materialize_file.failures=0) (multipart_upload_list.failures=0) (object_multipart_initiated.failures=0) (object_copy_requests=0) (stream_read_unbuffered=2) (op_get_content_summary=0) (store_exists_probe.failures=0) (stream_write_queue_duration=0) (fake_directories_deleted=30) (op_xattr_get_map=0) (op_is_directory=0) (stream_read_vectored_combined_ranges=26) (committer_commits_aborted=0) (ignored_errors=0) (stream_write_block_uploads_aborted=0) (delegation_tokens_issued.failures=0) (op_get_file_status.failures=0) (store_exists_probe=0) (object_delete_objects=60) (op_create_non_recursive=0) (store_io_request=350) (op_get_delegation_token.failures=0) (stream_read_operations_incomplete=0) (audit_span_creation=116) (op_mkdirs.failures=0) (op_get_file_checksum.failures=0) (op_copy_from_local_file.failures=0) (op_xattr_get_named_map.failures=0) (op_create.failures=0) (object_delete_request.failures=0) (multipart_upload_list=0) (stream_read_vectored_operations=21) (action_http_head_request=84) (committer_materialize_file=0) (directories_created=30) (audit_access_check_failure=0) (multipart_upload_aborted=0) (op_exists=0) (files_copied_bytes=0) (object_put_request=60) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_named=0) (multipart_upload_completed=0) (files_created=30) (stream_read_seek_policy_changed=26) (multipart_upload_part_put=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (op_access=0) (committer_commits_completed=0) (stream_read_operations=4) (committer_tasks_failed=0) (multipart_upload_abort_under_path_invoked=0) (committer_tasks_completed=0) (object_put_bytes=1966080) (stream_read_bytes_discarded_in_close=261344) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_abort=0) (op_createfile=0) (stream_read_vectored_read_bytes_discarded=24553) (committer_commits_reverted=0) (files_copied=0) (op_get_file_checksum=0) (committer_stage_file_upload=0) (store_io_retry=0) (op_rename.failures=0) (op_is_file=0) (committer_magic_marker_put=0) (stream_read_fully_operations=1) (stream_write_bytes=1966080) (action_file_opened=24) (audit_request_execution=350) (object_put_request_completed=60) (op_openfile=0) (committer_jobs_completed=0) (op_abort=0) (object_delete_request=0) (op_get_file_status=1) (op_get_delegation_token=0) (object_put_request.failures=0) (object_bulk_delete_request.failures=0) (multipart_upload_started=0) (committer_commits.failures=0) (action_http_get_request=26) (committer_bytes_uploaded=0) (committer_magic_marker_put.failures=0) (op_delete.failures=0) (stream_read_total_bytes=268657) (multipart_instantiated=0) (op_rename=0) (stream_read_opened=4) (object_continue_list_request=0) (object_bulk_delete_request=60) (audit_failure=0) (op_list_files=0) (committer_load_single_pending_file=0) (op_createfile.failures=0) (object_multipart_aborted.failures=0));
gauges=((object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=30) (client_side_encryption_enabled=0) (object_put_bytes_pending=0));
minimums=((op_delete.min=19) (op_create.min=5) (object_list_request.failures.min=-1) (op_access.min=-1) (object_multipart_aborted.failures.min=-1) (object_bulk_delete_request.min=5) (op_glob_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_list.min=-1) (action_http_get_request.min=8) (op_createfile.min=-1) (op_createfile.failures.min=-1) (op_list_status.failures.min=-1) (op_abort.min=-1) (delegation_tokens_issued.failures.min=-1) (op_abort.failures.min=-1) (object_delete_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_exists.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_write_queue_duration.min=-1) (object_continue_list_request.min=-1) (committer_materialize_file.failures.min=-1) (op_glob_status.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.failures.min=-1) (op_rename.failures.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_aborted.min=-1) (multipart_upload_list.failures.min=-1) (object_put_request.min=21) (committer_commit_job.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_list.failures.min=-1) (op_exists.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_list_request.min=4) (op_xattr_get_named_map.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_status.min=8) (object_delete_request.min=-1) (action_executor_acquired.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.failures.min=-1) (op_is_file.min=-1) (committer_materialize_file.min=-1) (op_list_status.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_access.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_mkdirs.min=17) (op_get_delegation_token.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_copy_from_local_file.min=-1) (op_rename.min=-1) (op_get_delegation_token.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.failures.min=-1) (action_file_opened.min=3) (action_http_get_request.failures.min=-1) (store_exists_probe.min=-1) (action_http_head_request.min=2) (op_xattr_get_map.failures.min=-1) (op_list_files.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.min=-1));
maximums=((action_http_get_request.max=26) (committer_load_single_pending_file.failures.max=-1) (op_is_directory.max=-1) (action_http_get_request.failures.max=-1) (op_createfile.max=-1) (action_http_head_request.failures.max=-1) (op_get_content_summary.max=-1) (op_exists.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_content_summary.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_is_file.max=-1) (op_is_directory.failures.max=-1) (op_access.max=-1) (op_delete.failures.max=-1) (action_file_opened.max=12) (object_list_request.max=167) (delegation_tokens_issued.failures.max=-1) (op_create.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_rename.max=-1) (op_list_files.failures.max=-1) (op_get_file_status.max=8) (stream_write_queue_duration.max=-1) (op_glob_status.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_materialize_file.max=-1) (committer_magic_marker_put.failures.max=-1) (op_list_status.failures.max=-1) (object_put_request.failures.max=-1) (object_continue_list_request.max=-1) (object_put_request.max=71) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.max=14) (op_mkdirs.max=263) (action_executor_acquired.failures.max=-1) (store_exists_probe.failures.max=-1) (store_exists_probe.max=-1) (op_is_file.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_delete.max=58) (op_get_file_checksum.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (object_multipart_initiated.failures.max=-1) (op_createfile.failures.max=-1) (op_exists.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_head_request.max=12) (object_continue_list_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_access.failures.max=-1) (multipart_upload_list.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_list_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_map.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_files.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.max=-1) (action_executor_acquired.max=-1) (object_bulk_delete_request.failures.max=-1) (op_abort.max=-1) (object_delete_request.failures.max=-1) (op_create.max=45));
means=((object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=60, sum=1124, mean=18.7333)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=7, mean=1.7500)) (action_file_opened.mean=(samples=24, sum=128, mean=5.3333)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=30, sum=1021, mean=34.0333)) (op_create.mean=(samples=30, sum=328, mean=10.9333)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=30, sum=1025, mean=34.1667)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=84, sum=369, mean=4.3929)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=26, sum=368, mean=14.1538)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=60, sum=460, mean=7.6667)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=120, sum=1065, mean=8.8750)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:51,102 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:51,102 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,102 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,102 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,102 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,102 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000150 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000150&t0=208&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=208&ts=1731777831102
2024-11-16 17:23:51,107 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:51,108 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,108 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,108 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,108 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,108 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000150 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000150&t0=208&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=208&ts=1731777831102
2024-11-16 17:23:51,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,110 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:51,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:51,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:51,111 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000150 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000150&t0=208&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=208&ts=1731777831102
2024-11-16 17:23:51,120 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:51,120 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:51,120 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:23:51,120 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:51,121 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,121 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,121 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,121 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,121 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000151 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000151/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000151&t0=208&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=208&ts=1731777831121
2024-11-16 17:23:51,125 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:51,125 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,126 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:51,126 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15453831701052406636.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:51,127 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15453831701052406636.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (stream_write_total_time=0) (object_put_request=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (stream_write_total_data=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (op_hsync=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=0) (op_abort=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15453831701052406636.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,128 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,128 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:51,128 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15453831701052406636.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:51,129 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:51,129 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:51,129 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:51,129 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:51,129 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000151 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000151/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000151&t0=208&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=90&ts=1731777831121
2024-11-16 17:23:51,148 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:51,148 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:51,148 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.019s
2024-11-16 17:23:51,148 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15453831701052406636.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:51,148 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15453831701052406636.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,148 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15453831701052406636.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,148 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:51,149 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,150 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (op_abort=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (object_put_request=1) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (op_abort.failures=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (op_hsync=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=19) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1));
maximums=((object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=19) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=19, mean=19.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:51,150 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:51,151 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,151 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,151 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:51,151 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [209] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000152 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000152/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000152&t0=209&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=209&ts=1731777831151
2024-11-16 17:23:51,162 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:51,162 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:51,162 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,163 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:23:51,164 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read=0) (stream_read_vectored_incoming_ranges=0) (stream_read_closed=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired.failures=0) (stream_read_vectored_operations=0) (stream_read_prefetch_operations=0) (stream_read_close_operations=1) (action_http_get_request=0) (stream_read_operations=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (stream_read_exceptions=0) (stream_read_bytes=0) (stream_read_total_bytes=0) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_opened=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=11) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=11) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=11, mean=11.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:51,166 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:51,166 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,166 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,166 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153&t0=208&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=208&ts=1731777831165
2024-11-16 17:23:51,169 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,170 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,170 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153&t0=208&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=208&ts=1731777831165
2024-11-16 17:23:51,178 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:51,178 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:51,178 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:51,179 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:51,179 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:51,179 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:51,179 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:51,179 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:51,179 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:51,180 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:51,180 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:51,180 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:51,180 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:51,180 [s3a-transfer-leg-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:51,180 [s3a-transfer-leg-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,181 [s3a-transfer-leg-bucket-unbounded-pool2-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [210] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153&t0=208&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=210&ts=1731777831165
2024-11-16 17:23:51,187 [s3a-transfer-leg-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:51,187 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:23:51,187 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:51,187 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:51,187 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:51,188 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777831145; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:51,188 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:51,190 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:51,192 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:51,192 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:51,193 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:51,193 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:51,193 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:51,193 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,193 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,193 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:51,193 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,193 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153&t0=208&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=92&ts=1731777831165
2024-11-16 17:23:51,196 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:51,210 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:23:51,210 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:23:51,210 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.017s
2024-11-16 17:23:51,210 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:51,210 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:51,210 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,211 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,211 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:51,211 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,211 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000153&t0=208&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=92&ts=1731777831165
2024-11-16 17:23:51,219 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:51,219 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:23:51,219 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:23:51,219 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.026s
2024-11-16 17:23:51,220 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.024s
2024-11-16 17:23:51,220 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.041s
2024-11-16 17:23:51,220 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:51,220 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:51,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:51,237 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 38, active threads = 0, queued tasks = 0, completed tasks = 38], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_delete_request=0) (op_create.failures=0) (object_put_request.failures=0) (committer_commits.failures=0) (stream_write_total_time=0) (committer_stage_file_upload=0) (committer_commit_job.failures=0) (store_exists_probe.failures=0) (op_list_status.failures=0) (action_executor_acquired.failures=0) (op_create=31) (op_exists=0) (store_exists_probe=0) (op_is_file.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_vectored_incoming_ranges=60) (committer_commit_job=0) (committer_magic_marker_put.failures=0) (stream_read_close_operations=25) (stream_read_remote_stream_aborted.failures=0) (op_get_file_checksum=0) (object_put_request_completed=62) (stream_read_bytes_discarded_in_abort=0) (object_multipart_aborted.failures=0) (committer_commits_completed=0) (stream_read_operations_incomplete=0) (committer_load_single_pending_file.failures=0) (op_abort.failures=0) (op_xattr_get_named_map.failures=0) (stream_read_operations=4) (committer_magic_marker_put=0) (committer_jobs_completed=0) (multipart_upload_started=0) (stream_read_bytes=7313) (stream_write_bytes=2031616) (stream_write_block_uploads=31) (op_createfile.failures=0) (action_http_head_request=87) (op_xattr_get_named.failures=0) (op_glob_status.failures=0) (op_glob_status=0) (committer_bytes_committed=0) (op_get_delegation_token=0) (op_list_located_status=0) (op_xattr_list.failures=0) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (op_copy_from_local_file=0) (multipart_upload_completed=0) (op_xattr_get_map.failures=0) (files_copied=0) (op_get_content_summary=0) (committer_commits_reverted=0) (committer_materialize_file.failures=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named=0) (delegation_tokens_issued.failures=0) (directories_deleted=0) (committer_jobs_failed=0) (committer_magic_files_created=0) (action_file_opened=25) (object_bulk_delete_request=62) (stream_read_unbuffered=2) (op_createfile=0) (audit_span_creation=120) (multipart_instantiated=0) (stream_read_remote_stream_drain=4) (multipart_upload_abort_under_path_invoked=0) (committer_load_single_pending_file=0) (action_executor_acquired=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_fully_operations=1) (stream_write_queue_duration.failures=0) (stream_write_block_uploads_aborted=0) (op_list_status=0) (stream_read_seek_policy_changed=27) (stream_read_remote_stream_drain.failures=0) (op_list_files.failures=0) (op_hflush=0) (fake_directories_created=0) (object_copy_requests=0) (op_delete=31) (op_mkdirs.failures=0) (object_list_request.failures=0) (op_openfile=0) (object_delete_objects=62) (files_created=31) (op_abort=0) (stream_write_total_data=4063232) (stream_read_version_mismatches=0) (stream_read_opened=4) (op_delete.failures=0) (multipart_upload_list.failures=0) (op_xattr_get_named_map=0) (object_select_requests=0) (object_continue_list_request.failures=0) (action_http_head_request.failures=0) (store_io_throttled=0) (stream_read_bytes_discarded_in_close=261344) (ignored_errors=0) (delegation_tokens_issued=0) (object_multipart_aborted=0) (op_xattr_get_map=0) (committer_commits_created=0) (stream_read_seek_bytes_skipped=0) (committer_tasks_completed=0) (op_exists.failures=0) (op_create_non_recursive=0) (multipart_upload_aborted=0) (stream_write_queue_duration=0) (stream_read_seek_operations=0) (files_deleted=31) (action_file_opened.failures=0) (object_metadata_request=87) (action_http_get_request=26) (object_put_bytes=2031616) (action_http_get_request.failures=0) (op_get_content_summary.failures=0) (stream_read_seek_forward_operations=0) (object_put_request=62) (op_copy_from_local_file.failures=0) (object_list_request=124) (audit_access_check_failure=0) (op_is_directory=0) (object_bulk_delete_request.failures=0) (stream_write_exceptions=0) (stream_read_vectored_operations=21) (op_xattr_list=0) (object_continue_list_request=0) (audit_request_execution=361) (stream_read_closed=4) (files_delete_rejected=0) (op_hsync=0) (stream_read_remote_stream_aborted=0) (object_multipart_initiated.failures=0) (stream_read_exceptions=0) (op_get_file_status.failures=0) (committer_tasks_failed=0) (op_get_delegation_token.failures=0) (op_is_file=0) (files_copied_bytes=0) (committer_bytes_uploaded=0) (multipart_upload_list=0) (op_rename=0) (committer_materialize_file=0) (object_delete_request.failures=0) (audit_failure=0) (object_multipart_initiated=0) (op_get_file_status=1) (op_is_directory.failures=0) (stream_read_vectored_combined_ranges=26) (directories_created=31) (op_access.failures=0) (store_io_request=361) (stream_read_seek_backward_operations=0) (op_list_files=0) (op_get_file_checksum.failures=0) (op_rename.failures=0) (stream_read_total_bytes=268657) (op_open=25) (committer_commits_aborted=0) (fake_directories_deleted=31) (multipart_upload_part_put=0) (op_access=0) (stream_read_vectored_read_bytes_discarded=24553) (op_mkdirs=31) (stream_write_block_uploads_committed=0) (committer_stage_file_upload.failures=0) (store_io_retry=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=31) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0));
minimums=((action_executor_acquired.failures.min=-1) (op_exists.min=-1) (committer_commit_job.min=-1) (store_exists_probe.min=-1) (action_http_get_request.min=8) (op_access.failures.min=-1) (stream_write_queue_duration.min=-1) (op_abort.min=-1) (stream_read_remote_stream_drain.min=1) (op_mkdirs.min=17) (op_get_content_summary.failures.min=-1) (op_list_status.min=-1) (op_get_file_checksum.min=-1) (action_http_head_request.min=2) (op_copy_from_local_file.failures.min=-1) (op_exists.failures.min=-1) (op_list_files.min=-1) (object_delete_request.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (object_put_request.min=19) (op_createfile.min=-1) (op_get_file_checksum.failures.min=-1) (object_continue_list_request.min=-1) (committer_stage_file_upload.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_aborted.min=-1) (op_rename.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_file_status.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_bulk_delete_request.min=5) (committer_load_single_pending_file.min=-1) (op_is_directory.min=-1) (op_get_content_summary.min=-1) (action_file_opened.failures.min=-1) (op_createfile.failures.min=-1) (op_delete.min=19) (committer_commit_job.failures.min=-1) (committer_materialize_file.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_status.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_list.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_status.min=8) (op_create.failures.min=-1) (op_abort.failures.min=-1) (object_list_request.min=4) (op_glob_status.failures.min=-1) (object_put_request.failures.min=-1) (op_create.min=5) (op_xattr_get_named.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.min=-1) (op_is_file.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_file.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_file_opened.min=11) (object_list_request.failures.min=-1) (op_xattr_list.min=-1) (op_rename.min=-1) (op_glob_status.min=-1) (op_list_files.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named_map.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.min=-1) (committer_magic_marker_put.failures.min=-1) (op_access.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((op_xattr_get_map.failures.max=-1) (op_delete.failures.max=-1) (object_put_request.max=71) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_xattr_get_named_map.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (op_is_directory.failures.max=-1) (op_is_directory.max=-1) (op_rename.max=-1) (op_access.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_create.max=45) (multipart_upload_list.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.max=8) (object_continue_list_request.failures.max=-1) (object_list_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_list.failures.max=-1) (op_exists.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.max=26) (action_executor_acquired.failures.max=-1) (object_continue_list_request.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.max=-1) (op_get_content_summary.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.max=58) (committer_magic_marker_put.max=-1) (op_xattr_get_named.max=-1) (op_createfile.max=-1) (object_multipart_initiated.failures.max=-1) (op_access.failures.max=-1) (op_rename.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_file.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.max=-1) (committer_materialize_file.max=-1) (op_get_file_checksum.max=-1) (op_abort.failures.max=-1) (op_glob_status.failures.max=-1) (object_bulk_delete_request.max=17) (object_list_request.max=167) (stream_write_queue_duration.max=-1) (op_get_delegation_token.max=-1) (op_list_files.max=-1) (op_get_file_status.failures.max=-1) (op_list_status.max=-1) (action_file_opened.max=12) (op_xattr_get_named_map.failures.max=-1) (action_file_opened.failures.max=-1) (op_mkdirs.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_exists.failures.max=-1) (op_abort.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.max=-1) (op_get_content_summary.failures.max=-1) (op_mkdirs.max=263) (object_multipart_initiated.max=-1) (op_create.failures.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.failures.max=-1) (object_multipart_aborted.max=-1) (store_exists_probe.failures.max=-1) (committer_stage_file_upload.max=-1) (op_createfile.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.max=-1) (op_glob_status.max=-1) (object_delete_request.failures.max=-1) (store_exists_probe.max=-1) (object_multipart_aborted.failures.max=-1) (action_http_head_request.max=12));
means=((op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=31, sum=334, mean=10.7742)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=87, sum=385, mean=4.4253)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=25, sum=139, mean=5.5600)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=31, sum=1062, mean=34.2581)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=62, sum=485, mean=7.8226)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=7, mean=1.7500)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=62, sum=1153, mean=18.5968)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=26, sum=368, mean=14.1538)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=124, sum=1088, mean=8.7742)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=31, sum=1043, mean=33.6452)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:51,237 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:51,237 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,237 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,238 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,238 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,238 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000154 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000154&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=211&ts=1731777831237
2024-11-16 17:23:51,253 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:23:51,253 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,253 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,253 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,253 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,253 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000154 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000154&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=211&ts=1731777831237
2024-11-16 17:23:51,257 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,257 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:51,257 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:51,257 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:51,258 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000154 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000154&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=211&ts=1731777831237
2024-11-16 17:23:51,272 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:51,272 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:51,272 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.015s
2024-11-16 17:23:51,272 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:51,273 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,273 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,273 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,273 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,273 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000155 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000155/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000155&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=211&ts=1731777831272
2024-11-16 17:23:51,278 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:51,278 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,278 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:51,279 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1529737045234073038.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:51,279 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1529737045234073038.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (action_executor_acquired=0) (stream_write_total_data=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (op_hflush=0) (stream_write_exceptions=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (object_put_request=0) (object_multipart_aborted=0) (op_abort=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (stream_write_total_time=0) (op_hsync=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1529737045234073038.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,280 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,280 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:51,280 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1529737045234073038.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:51,280 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:51,280 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:51,280 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:51,281 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:51,281 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000155 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000155/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000155&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=94&ts=1731777831272
2024-11-16 17:23:51,308 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:51,308 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:51,308 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:23:51,309 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1529737045234073038.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:51,309 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1529737045234073038.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,309 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1529737045234073038.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,309 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:51,309 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,310 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (object_put_request=1) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (op_abort.failures=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (op_abort=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (stream_write_exceptions=0) (op_hflush=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (action_executor_acquired=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=27) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=27) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:51,310 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:51,311 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,311 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,311 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:51,311 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000156 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000156/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000156&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=211&ts=1731777831311
2024-11-16 17:23:51,314 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:51,314 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:51,314 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,314 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:23:51,314 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:51,314 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:23:51,314 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:23:51,314 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,314 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,314 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:51,315 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000156 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000156/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-999&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000156&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=97&ts=1731777831311
2024-11-16 17:23:51,322 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:23:51,322 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,324 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=1) (stream_read_vectored_incoming_ranges=10) (stream_read_remote_stream_aborted.failures=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (action_file_opened=1) (stream_read_bytes=1000) (action_http_get_request=1) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=1000) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_unbuffered=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0) (stream_read_block_read.failures=0) (stream_read_fully_operations=0) (stream_read_block_read=0) (stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_skipped=0) (stream_read_closed=0) (stream_read_opened=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_close_operations=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=3) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=8) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=8) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=3) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:51,324 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:51,324 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,324 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,325 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=211&ts=1731777831324
2024-11-16 17:23:51,328 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,328 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,328 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=211&ts=1731777831324
2024-11-16 17:23:51,334 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:51,335 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:51,335 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:51,335 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:51,335 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:51,336 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:51,336 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:51,336 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:51,336 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:51,336 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:51,336 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:51,337 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:51,338 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:51,338 [s3a-transfer-leg-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:51,338 [s3a-transfer-leg-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,338 [s3a-transfer-leg-bucket-unbounded-pool2-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=212&ts=1731777831324
2024-11-16 17:23:51,342 [s3a-transfer-leg-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:51,343 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:23:51,343 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:51,343 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:51,343 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:51,343 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777831302; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:51,343 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:51,343 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:51,344 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:51,344 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:51,344 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:51,344 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:51,344 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:51,344 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,344 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,344 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:51,344 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,345 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=98&ts=1731777831324
2024-11-16 17:23:51,345 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:51,350 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:51,350 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:51,350 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:23:51,350 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:51,350 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:51,350 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,350 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,350 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:51,350 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,350 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000157&t0=211&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=98&ts=1731777831324
2024-11-16 17:23:51,355 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:51,355 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:51,355 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:23:51,355 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.011s
2024-11-16 17:23:51,355 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.010s
2024-11-16 17:23:51,356 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.020s
2024-11-16 17:23:51,356 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:51,356 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:51,357 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:51,367 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 39, active threads = 0, queued tasks = 0, completed tasks = 39], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commits.failures=0) (object_multipart_aborted=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=4) (op_list_located_status=0) (stream_read_operations=4) (stream_write_exceptions_completing_upload=0) (op_list_files=0) (committer_commits_reverted=0) (stream_read_seek_forward_operations=0) (committer_commits_completed=0) (op_abort=0) (op_is_directory.failures=0) (committer_commit_job.failures=0) (ignored_errors=0) (audit_access_check_failure=0) (object_delete_request.failures=0) (op_copy_from_local_file=0) (op_is_file=0) (committer_stage_file_upload.failures=0) (stream_read_exceptions=0) (op_xattr_get_named_map.failures=0) (op_list_files.failures=0) (files_delete_rejected=0) (stream_write_block_uploads_committed=0) (op_get_content_summary=0) (op_delete=32) (committer_magic_marker_put.failures=0) (object_continue_list_request=0) (multipart_upload_aborted=0) (stream_read_remote_stream_drain=4) (multipart_upload_list.failures=0) (audit_failure=0) (op_hflush=0) (op_get_file_status=1) (stream_read_total_bytes=269657) (stream_read_operations_incomplete=0) (op_get_file_checksum.failures=0) (audit_span_creation=124) (committer_magic_marker_put=0) (stream_read_unbuffered=2) (object_list_request=128) (audit_request_execution=373) (object_list_request.failures=0) (op_create.failures=0) (op_xattr_get_map.failures=0) (action_http_head_request=90) (op_is_directory=0) (op_rename=0) (op_copy_from_local_file.failures=0) (op_is_file.failures=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (op_list_status=0) (op_create_non_recursive=0) (op_get_delegation_token=0) (multipart_upload_started=0) (op_xattr_list=0) (action_executor_acquired=0) (object_delete_request=0) (object_put_request_completed=64) (op_createfile=0) (store_io_throttled=0) (committer_tasks_completed=0) (committer_commit_job=0) (op_access.failures=0) (op_xattr_get_map=0) (action_file_opened.failures=0) (store_io_request=373) (op_hsync=0) (store_exists_probe.failures=0) (object_metadata_request=90) (fake_directories_created=0) (object_bulk_delete_request.failures=0) (stream_write_queue_duration.failures=0) (op_exists.failures=0) (store_exists_probe=0) (op_xattr_get_named.failures=0) (stream_read_close_operations=26) (stream_write_block_uploads_aborted=0) (op_get_file_checksum=0) (op_delete.failures=0) (stream_read_seek_backward_operations=0) (object_bulk_delete_request=64) (committer_commits_aborted=0) (committer_bytes_uploaded=0) (committer_magic_files_created=0) (committer_materialize_file=0) (delegation_tokens_issued=0) (committer_bytes_committed=0) (op_glob_status.failures=0) (object_multipart_initiated=0) (stream_read_vectored_combined_ranges=27) (object_copy_requests=0) (delegation_tokens_issued.failures=0) (op_create=32) (multipart_upload_list=0) (files_copied_bytes=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request=27) (stream_read_vectored_operations=22) (stream_read_version_mismatches=0) (stream_read_fully_operations=1) (op_get_file_status.failures=0) (op_xattr_get_named_map=0) (store_io_retry=0) (stream_read_bytes_discarded_in_abort=0) (op_get_delegation_token.failures=0) (stream_aborted=0) (stream_write_block_uploads=32) (op_createfile.failures=0) (committer_jobs_completed=0) (stream_read_closed=4) (op_glob_status=0) (object_multipart_aborted.failures=0) (files_copied=0) (object_put_request=64) (stream_write_bytes=2097152) (stream_write_total_data=4194304) (committer_load_single_pending_file.failures=0) (directories_created=32) (stream_read_seek_operations=0) (op_open=26) (op_mkdirs=32) (op_list_status.failures=0) (files_created=32) (stream_write_total_time=0) (multipart_upload_abort_under_path_invoked=0) (op_rename.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_completed=0) (action_http_get_request.failures=0) (multipart_upload_part_put=0) (committer_tasks_failed=0) (stream_write_exceptions=0) (op_openfile=0) (multipart_instantiated=0) (stream_read_vectored_incoming_ranges=70) (stream_read_bytes_backwards_on_seek=0) (action_file_opened=26) (files_deleted=32) (object_delete_objects=64) (op_access=0) (committer_stage_file_upload=0) (stream_read_remote_stream_drain.failures=0) (op_abort.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=24553) (committer_commits_created=0) (op_xattr_list.failures=0) (stream_write_queue_duration=0) (stream_read_bytes=8313) (object_continue_list_request.failures=0) (action_http_head_request.failures=0) (action_executor_acquired.failures=0) (directories_deleted=0) (stream_read_bytes_discarded_in_close=261344) (committer_load_single_pending_file=0) (committer_jobs_failed=0) (stream_read_seek_policy_changed=28) (object_select_requests=0) (op_get_content_summary.failures=0) (fake_directories_deleted=32) (object_put_bytes=2097152) (op_mkdirs.failures=0) (committer_materialize_file.failures=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named=0) (op_exists=0));
gauges=((stream_read_active_memory_in_use=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=32) (stream_write_block_uploads_active=0));
minimums=((op_mkdirs.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.min=19) (object_multipart_initiated.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_delete_request.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_put_request.min=27) (object_bulk_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (delegation_tokens_issued.min=-1) (op_list_status.failures.min=-1) (stream_write_queue_duration.min=-1) (action_http_head_request.min=2) (op_get_delegation_token.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.failures.min=-1) (object_delete_request.failures.min=-1) (op_createfile.min=-1) (op_glob_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_files.min=-1) (op_is_file.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_createfile.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_rename.min=-1) (committer_materialize_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_map.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_is_file.failures.min=-1) (action_executor_acquired.min=-1) (store_exists_probe.min=-1) (op_abort.min=-1) (object_bulk_delete_request.min=5) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_checksum.min=-1) (stream_read_remote_stream_drain.min=1) (op_rename.failures.min=-1) (action_file_opened.min=3) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.min=8) (op_xattr_get_named_map.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_directory.min=-1) (op_access.min=-1) (op_xattr_get_named.min=-1) (op_get_file_checksum.failures.min=-1) (op_delete.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_status.min=-1) (object_list_request.failures.min=-1) (action_http_head_request.failures.min=-1) (op_glob_status.min=-1) (object_list_request.min=4) (op_create.min=5) (committer_load_single_pending_file.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_materialize_file.min=-1) (op_exists.min=-1) (multipart_upload_list.min=-1) (op_get_file_status.min=8) (object_continue_list_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_access.failures.min=-1) (op_create.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_mkdirs.min=17) (action_file_opened.failures.min=-1) (op_exists.failures.min=-1));
maximums=((action_http_head_request.failures.max=-1) (op_abort.max=-1) (committer_stage_file_upload.failures.max=-1) (object_put_request.failures.max=-1) (op_is_file.failures.max=-1) (op_access.failures.max=-1) (object_list_request.failures.max=-1) (object_put_request.max=71) (op_access.max=-1) (op_copy_from_local_file.failures.max=-1) (op_createfile.max=-1) (op_copy_from_local_file.max=-1) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_load_single_pending_file.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.max=-1) (op_glob_status.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_file_opened.max=12) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.max=263) (action_executor_acquired.max=-1) (op_xattr_get_map.max=-1) (multipart_upload_list.max=-1) (op_list_status.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_delegation_token.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_drain.max=4) (delegation_tokens_issued.max=-1) (op_list_files.failures.max=-1) (op_rename.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_list_files.max=-1) (stream_write_queue_duration.failures.max=-1) (op_delete.max=58) (store_exists_probe.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_exists.failures.max=-1) (op_createfile.failures.max=-1) (committer_stage_file_upload.max=-1) (object_bulk_delete_request.max=17) (object_multipart_initiated.failures.max=-1) (op_exists.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named.max=-1) (store_exists_probe.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_create.max=45) (op_xattr_list.max=-1) (op_is_directory.failures.max=-1) (committer_materialize_file.max=-1) (op_create.failures.max=-1) (op_get_file_status.failures.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_delete_request.max=-1) (op_abort.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.max=-1) (action_http_head_request.max=12) (op_delete.failures.max=-1) (committer_commit_job.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=26) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_rename.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_list_request.max=167) (op_is_directory.max=-1) (op_get_file_status.max=8) (op_xattr_list.failures.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.max=-1) (op_list_status.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=7, mean=1.7500)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=26, sum=142, mean=5.4615)) (object_put_request.mean=(samples=64, sum=1194, mean=18.6563)) (op_create.mean=(samples=32, sum=340, mean=10.6250)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=27, sum=376, mean=13.9259)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=32, sum=1082, mean=33.8125)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=90, sum=396, mean=4.4000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=64, sum=496, mean=7.7500)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=128, sum=1118, mean=8.7344)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=32, sum=1078, mean=33.6875)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:51,368 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:51,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,368 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,368 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000158 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000158&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=213&ts=1731777831368
2024-11-16 17:23:51,373 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:51,373 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,373 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,373 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,373 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,373 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000158 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000158&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=213&ts=1731777831368
2024-11-16 17:23:51,375 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,375 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:51,375 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:51,376 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:51,376 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000158 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000158&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=213&ts=1731777831368
2024-11-16 17:23:51,386 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:51,386 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:51,386 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:23:51,387 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:51,387 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,387 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,387 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,387 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,387 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000159 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000159/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000159&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=213&ts=1731777831387
2024-11-16 17:23:51,393 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:51,393 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,393 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:51,394 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3775953285938534862.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:51,394 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3775953285938534862.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (stream_write_exceptions=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (op_abort=0) (object_put_request=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (op_hsync=0) (op_abort.failures=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3775953285938534862.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,395 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,395 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:51,395 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3775953285938534862.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:51,395 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:51,395 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:51,395 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:51,395 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:51,395 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000159 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000159/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000159&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=96&ts=1731777831387
2024-11-16 17:23:51,412 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:51,412 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:51,412 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:23:51,413 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3775953285938534862.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:51,413 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3775953285938534862.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,413 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3775953285938534862.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,413 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:51,414 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,417 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (object_put_request=1) (stream_write_total_time=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (op_hsync=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (op_abort=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=17) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=17) (object_multipart_initiated.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:51,418 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:51,418 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,418 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,418 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:51,418 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000160 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000160/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000160&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=213&ts=1731777831418
2024-11-16 17:23:51,423 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:51,423 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777831000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:23:51,424 [s3a-transfer-leg-bucket-unbounded-pool2-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:51,424 [s3a-transfer-leg-bucket-unbounded-pool2-t40] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,425 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:51,425 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:51,425 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:23:51,425 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:51,430 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,430 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,430 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,430 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:51,430 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,431 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,431 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:51,431 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=40960-41983&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000161&t0=214&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=105&ts=1731777831424
2024-11-16 17:23:51,431 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=1947-2046&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000161&t0=214&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=100&ts=1731777831424
2024-11-16 17:23:51,430 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,432 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:51,432 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=8192-14435&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000161&t0=214&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=102&ts=1731777831424
2024-11-16 17:23:51,443 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:23:51,443 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,446 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:23:51,446 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:23:51,446 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:23:51,446 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,446 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:23:51,446 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,449 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_aborted=0) (action_executor_acquired=0) (stream_read_prefetch_operations.failures=0) (stream_read_closed=0) (stream_read_block_read.failures=0) (stream_read_operations_incomplete=0) (action_file_opened=1) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_combined_ranges=3) (stream_read_opened=0) (stream_read_bytes=1424) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_version_mismatches=0) (stream_read_block_read=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_total_bytes=1424) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_incoming_ranges=5) (stream_read_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (action_file_opened.failures=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_operations=1) (stream_read_prefetch_operations=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (action_http_get_request=3) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=0) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=12) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=16) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=42, mean=14.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:51,450 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:51,451 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,451 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,451 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=213&ts=1731777831450
2024-11-16 17:23:51,453 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,453 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,454 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=213&ts=1731777831450
2024-11-16 17:23:51,461 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:51,461 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:51,461 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:51,461 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:51,461 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:51,461 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:51,461 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:51,461 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:51,461 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:51,461 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:51,461 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:51,461 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:51,462 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:51,462 [s3a-transfer-leg-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:51,462 [s3a-transfer-leg-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,462 [s3a-transfer-leg-bucket-unbounded-pool2-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [215] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=215&ts=1731777831450
2024-11-16 17:23:51,466 [s3a-transfer-leg-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:51,466 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.004s
2024-11-16 17:23:51,466 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:51,467 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:51,467 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:51,467 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777831410; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:51,467 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:51,467 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:51,467 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:51,467 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:51,468 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:51,468 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:51,468 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:51,468 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,468 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,468 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:51,468 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,468 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=107&ts=1731777831450
2024-11-16 17:23:51,469 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:51,475 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:23:51,475 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:51,475 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:23:51,475 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:51,475 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:51,475 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,475 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,475 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:51,475 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,475 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000162&t0=213&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=107&ts=1731777831450
2024-11-16 17:23:51,480 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:51,481 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:51,481 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:23:51,481 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.013s
2024-11-16 17:23:51,481 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.012s
2024-11-16 17:23:51,481 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.020s
2024-11-16 17:23:51,481 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:51,481 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:51,483 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:51,495 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 41, active threads = 0, queued tasks = 0, completed tasks = 41], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_aborted=0) (object_multipart_aborted=0) (store_io_throttled=0) (op_access=0) (stream_read_operations=4) (op_list_located_status=0) (op_get_content_summary=0) (stream_read_seek_bytes_discarded=0) (committer_commit_job=0) (stream_read_seek_backward_operations=0) (object_put_request_completed=66) (object_put_request=66) (files_delete_rejected=0) (object_bulk_delete_request.failures=0) (object_multipart_initiated.failures=0) (files_created=33) (op_xattr_list.failures=0) (op_mkdirs.failures=0) (object_delete_objects=66) (op_xattr_list=0) (stream_read_vectored_operations=23) (multipart_upload_abort_under_path_invoked=0) (op_hsync=0) (object_delete_request.failures=0) (op_is_directory.failures=0) (op_list_status=0) (committer_commits_created=0) (stream_write_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (object_continue_list_request.failures=0) (ignored_errors=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=261344) (op_create.failures=0) (stream_write_total_time=0) (files_copied=0) (stream_write_queue_duration=0) (op_get_file_checksum=0) (stream_read_unbuffered=2) (stream_read_remote_stream_drain=4) (op_createfile.failures=0) (stream_aborted=0) (op_openfile=0) (op_xattr_get_named=0) (op_exists=0) (stream_read_seek_policy_changed=29) (op_xattr_get_named_map.failures=0) (committer_magic_marker_put.failures=0) (delegation_tokens_issued=0) (object_put_bytes=2162688) (committer_tasks_completed=0) (op_get_file_status.failures=0) (committer_magic_files_created=0) (action_executor_acquired=0) (op_get_delegation_token.failures=0) (stream_read_vectored_combined_ranges=30) (stream_read_close_operations=27) (stream_read_opened=4) (op_is_file=0) (multipart_upload_part_put=0) (op_list_status.failures=0) (op_rename.failures=0) (stream_read_fully_operations=1) (audit_failure=0) (committer_load_single_pending_file.failures=0) (stream_write_block_uploads=33) (stream_write_block_uploads_aborted=0) (op_create_non_recursive=0) (committer_bytes_uploaded=0) (action_executor_acquired.failures=0) (op_glob_status.failures=0) (object_metadata_request=93) (delegation_tokens_issued.failures=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (action_file_opened=27) (committer_jobs_failed=0) (action_http_get_request=30) (stream_read_seek_operations=0) (stream_read_vectored_read_bytes_discarded=30497) (audit_access_check_failure=0) (stream_read_exceptions=0) (multipart_upload_list.failures=0) (op_open=27) (multipart_upload_completed=0) (action_http_head_request=93) (op_xattr_get_map.failures=0) (committer_commit_job.failures=0) (op_glob_status=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (op_get_delegation_token=0) (op_createfile=0) (committer_stage_file_upload.failures=0) (op_xattr_get_map=0) (stream_read_total_bytes=271081) (op_get_file_status=2) (directories_created=33) (op_list_files=0) (committer_stage_file_upload=0) (files_deleted=33) (stream_read_bytes_discarded_in_abort=0) (op_get_content_summary.failures=0) (fake_directories_created=0) (object_copy_requests=0) (stream_write_block_uploads_committed=0) (committer_materialize_file=0) (op_rename=0) (op_mkdirs=33) (op_delete.failures=0) (op_list_files.failures=0) (stream_read_remote_stream_aborted=0) (action_http_head_request.failures=0) (committer_load_single_pending_file=0) (op_create=33) (object_delete_request=0) (stream_write_queue_duration.failures=0) (object_multipart_initiated=0) (op_access.failures=0) (committer_tasks_failed=0) (object_bulk_delete_request=66) (op_abort.failures=0) (audit_span_creation=129) (committer_jobs_completed=0) (stream_write_total_data=4325376) (store_exists_probe=0) (object_select_requests=0) (stream_read_vectored_incoming_ranges=75) (multipart_instantiated=0) (object_list_request.failures=0) (store_io_retry=0) (fake_directories_deleted=33) (op_hflush=0) (multipart_upload_started=0) (directories_deleted=0) (op_is_directory=0) (store_io_request=387) (multipart_upload_list=0) (op_copy_from_local_file.failures=0) (committer_commits.failures=0) (op_get_file_checksum.failures=0) (op_abort=0) (object_put_request.failures=0) (op_exists.failures=0) (committer_magic_marker_put=0) (op_is_file.failures=0) (stream_read_remote_stream_drain.failures=0) (audit_request_execution=387) (committer_commits_completed=0) (committer_commits_aborted=0) (committer_bytes_committed=0) (stream_read_seek_bytes_skipped=0) (stream_write_bytes=2162688) (object_continue_list_request=0) (stream_read_closed=4) (action_http_get_request.failures=0) (committer_commits_reverted=0) (stream_read_version_mismatches=0) (op_copy_from_local_file=0) (stream_read_operations_incomplete=0) (op_xattr_get_named_map=0) (object_list_request=132) (committer_materialize_file.failures=0) (files_copied_bytes=0) (multipart_upload_part_put_bytes=0) (store_exists_probe.failures=0) (op_delete=33) (op_xattr_get_named.failures=0) (stream_read_bytes=9737));
gauges=((object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_pending=33) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_get_delegation_token.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_createfile.min=-1) (op_list_status.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_list.failures.min=-1) (op_is_directory.failures.min=-1) (object_list_request.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_delete_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_is_directory.min=-1) (action_executor_acquired.failures.min=-1) (op_get_file_checksum.min=-1) (op_rename.min=-1) (object_delete_request.min=-1) (action_http_get_request.min=12) (op_is_file.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_glob_status.min=-1) (action_http_get_request.failures.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.min=-1) (op_access.min=-1) (op_mkdirs.failures.min=-1) (committer_commit_job.min=-1) (op_rename.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=17) (stream_write_queue_duration.min=-1) (op_mkdirs.min=17) (op_list_status.failures.min=-1) (op_abort.failures.min=-1) (op_delete.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_magic_marker_put.min=-1) (object_bulk_delete_request.min=5) (op_delete.min=19) (op_xattr_list.min=-1) (stream_read_remote_stream_drain.min=1) (object_multipart_initiated.failures.min=-1) (action_http_head_request.failures.min=-1) (action_file_opened.min=0) (op_abort.min=-1) (op_xattr_get_map.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_materialize_file.min=-1) (op_create.min=5) (op_createfile.failures.min=-1) (op_exists.min=-1) (object_bulk_delete_request.failures.min=-1) (multipart_upload_list.min=-1) (op_list_files.min=-1) (op_create.failures.min=-1) (op_get_file_status.min=5) (op_copy_from_local_file.failures.min=-1) (op_list_files.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.min=-1) (op_copy_from_local_file.min=-1) (committer_materialize_file.failures.min=-1) (store_exists_probe.min=-1) (committer_commit_job.failures.min=-1) (op_get_file_status.failures.min=-1) (object_list_request.min=4) (object_multipart_aborted.min=-1) (op_exists.failures.min=-1) (op_get_content_summary.min=-1) (op_access.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_head_request.min=2));
maximums=((op_delete.max=58) (op_create.failures.max=-1) (op_is_file.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_list.failures.max=-1) (object_delete_request.max=-1) (object_put_request.failures.max=-1) (op_list_files.failures.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_access.failures.max=-1) (op_xattr_get_map.max=-1) (multipart_upload_list.max=-1) (op_list_status.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_list.max=-1) (op_rename.failures.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named.max=-1) (action_file_opened.max=12) (committer_stage_file_upload.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.failures.max=-1) (op_glob_status.max=-1) (committer_commit_job.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_mkdirs.failures.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.max=17) (op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (action_http_get_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (delegation_tokens_issued.max=-1) (op_exists.failures.max=-1) (op_create.max=45) (object_continue_list_request.max=-1) (action_file_opened.failures.max=-1) (op_is_file.failures.max=-1) (op_access.max=-1) (op_is_directory.max=-1) (op_get_delegation_token.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.failures.max=-1) (op_rename.max=-1) (op_get_content_summary.failures.max=-1) (op_abort.failures.max=-1) (op_exists.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.max=263) (op_xattr_get_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_get_request.max=26) (object_list_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (committer_materialize_file.max=-1) (committer_commit_job.failures.max=-1) (action_http_head_request.max=12) (op_get_content_summary.max=-1) (object_put_request.max=71) (object_multipart_aborted.failures.max=-1) (op_list_files.max=-1) (object_list_request.max=167) (op_get_file_status.failures.max=-1) (op_abort.max=-1) (op_get_file_status.max=8));
means=((object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=132, sum=1140, mean=8.6364)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=33, sum=1097, mean=33.2424)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=30, sum=418, mean=13.9333)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=66, sum=508, mean=7.6970)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=93, sum=405, mean=4.3548)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=27, sum=142, mean=5.2593)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=66, sum=1221, mean=18.5000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=33, sum=347, mean=10.5152)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=33, sum=1102, mean=33.3939)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=7, mean=1.7500)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:51,495 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:51,495 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,495 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,495 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,495 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,495 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000163 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000163&t0=216&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=216&ts=1731777831495
2024-11-16 17:23:51,503 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:51,504 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,504 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,504 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,504 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,504 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000163 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000163&t0=216&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=216&ts=1731777831495
2024-11-16 17:23:51,506 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,506 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:51,506 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:51,506 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:51,506 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000163 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000163&t0=216&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=216&ts=1731777831495
2024-11-16 17:23:51,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:51,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:51,515 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:23:51,515 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:51,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,516 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,516 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,516 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000164 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000164/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000164&t0=216&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=216&ts=1731777831515
2024-11-16 17:23:51,531 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:23:51,531 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,531 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:51,532 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6375326297642851287.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:51,532 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6375326297642851287.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (op_hflush=0) (stream_write_total_time=0) (action_executor_acquired=0) (op_hsync=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (object_put_request=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6375326297642851287.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,532 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,533 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:51,533 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6375326297642851287.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:51,533 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:51,533 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:51,533 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:51,533 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000164 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000164/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000164&t0=216&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=108&ts=1731777831515
2024-11-16 17:23:51,534 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:51,557 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:51,557 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:51,557 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.024s
2024-11-16 17:23:51,558 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6375326297642851287.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:51,558 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6375326297642851287.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,558 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6375326297642851287.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,558 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:51,558 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,559 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (op_abort.failures=0) (object_put_request=1) (op_hsync=0) (op_hflush=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (action_executor_acquired=0) (object_put_request.failures=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (op_abort=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=24) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=24) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=24, mean=24.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:51,559 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:51,561 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,561 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,561 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:51,561 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [217] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000165 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000165/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000165&t0=217&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=217&ts=1731777831560
2024-11-16 17:23:51,564 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:51,564 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:51,564 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,564 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:23:51,564 [JUnit-testEOFRanges[Buffer type : array]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,565 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_closed=0) (stream_read_opened=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_fully_operations=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (action_http_get_request=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (stream_read_vectored_combined_ranges=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_total_bytes=0) (action_file_opened.failures=0) (stream_read_unbuffered=0) (action_executor_acquired=0) (stream_read_block_read=0) (stream_read_block_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_policy_changed=1) (action_http_get_request.failures=0) (action_file_opened=1) (stream_read_vectored_operations=0) (stream_read_exceptions=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=3) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=3) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:51,566 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:51,566 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,566 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,566 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166&t0=216&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=216&ts=1731777831566
2024-11-16 17:23:51,568 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,568 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,568 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166&t0=216&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=216&ts=1731777831566
2024-11-16 17:23:51,573 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:51,573 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:51,573 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:51,573 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:51,573 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:51,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:51,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:51,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:51,574 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:51,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:51,574 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:51,574 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:51,574 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:51,574 [s3a-transfer-leg-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:51,574 [s3a-transfer-leg-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,574 [s3a-transfer-leg-bucket-unbounded-pool2-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166&t0=216&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=218&ts=1731777831566
2024-11-16 17:23:51,579 [s3a-transfer-leg-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:51,579 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:23:51,579 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:51,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:51,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:51,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777831554; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:51,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:51,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:51,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:51,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:51,580 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:51,580 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:51,580 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:51,581 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:51,581 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,581 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,581 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:51,581 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,581 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166&t0=216&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=110&ts=1731777831566
2024-11-16 17:23:51,587 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:51,587 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:51,587 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:23:51,587 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:51,587 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:51,587 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,587 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,587 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:51,587 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,587 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000166&t0=216&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=110&ts=1731777831566
2024-11-16 17:23:51,593 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:51,594 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:51,594 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:51,594 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.014s
2024-11-16 17:23:51,594 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.014s
2024-11-16 17:23:51,594 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.020s
2024-11-16 17:23:51,594 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:51,594 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:51,595 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:51,608 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 43, active threads = 0, queued tasks = 0, completed tasks = 43], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_list.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_discarded_in_close=261344) (op_get_content_summary=0) (audit_access_check_failure=0) (action_file_opened=28) (object_put_bytes=2228224) (committer_commits_reverted=0) (op_list_status=0) (stream_read_unbuffered=2) (multipart_upload_abort_under_path_invoked=0) (stream_aborted=0) (multipart_upload_part_put_bytes=0) (object_delete_request=0) (audit_failure=0) (stream_write_queue_duration.failures=0) (object_put_request_completed=68) (stream_write_block_uploads=34) (op_xattr_get_named_map=0) (op_get_file_checksum.failures=0) (committer_tasks_failed=0) (multipart_upload_aborted=0) (stream_write_exceptions=0) (op_is_file.failures=0) (committer_stage_file_upload=0) (fake_directories_created=0) (object_bulk_delete_request=68) (files_copied=0) (op_copy_from_local_file.failures=0) (op_xattr_get_named_map.failures=0) (stream_read_version_mismatches=0) (op_createfile.failures=0) (action_http_get_request=30) (op_createfile=0) (committer_commits.failures=0) (op_list_status.failures=0) (committer_jobs_failed=0) (op_get_file_status.failures=0) (files_delete_rejected=0) (stream_write_block_uploads_committed=0) (op_exists.failures=0) (multipart_upload_list=0) (directories_created=34) (object_list_request.failures=0) (directories_deleted=0) (committer_magic_files_created=0) (multipart_upload_started=0) (committer_commit_job=0) (object_put_request=68) (stream_read_seek_bytes_discarded=0) (committer_tasks_completed=0) (op_access.failures=0) (stream_read_closed=4) (committer_load_single_pending_file=0) (op_xattr_get_map.failures=0) (op_get_file_status=2) (stream_write_total_data=4456448) (object_multipart_initiated.failures=0) (store_exists_probe=0) (object_copy_requests=0) (object_metadata_request=96) (op_abort.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_hflush=0) (store_io_request=398) (object_bulk_delete_request.failures=0) (store_io_retry=0) (stream_read_operations=4) (stream_read_seek_forward_operations=0) (op_create=34) (stream_read_bytes=9737) (op_open=28) (object_multipart_aborted=0) (delegation_tokens_issued=0) (op_xattr_get_named.failures=0) (committer_commits_completed=0) (op_exists=0) (op_create.failures=0) (files_created=34) (committer_commit_job.failures=0) (object_delete_request.failures=0) (ignored_errors=0) (committer_load_single_pending_file.failures=0) (op_list_files=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=1) (stream_write_bytes=2228224) (store_exists_probe.failures=0) (op_xattr_get_named=0) (op_glob_status=0) (op_delete=34) (op_create_non_recursive=0) (stream_read_vectored_operations=23) (fake_directories_deleted=34) (stream_write_total_time=0) (committer_bytes_committed=0) (committer_bytes_uploaded=0) (stream_read_seek_policy_changed=30) (stream_read_opened=4) (op_copy_from_local_file=0) (stream_read_close_operations=28) (stream_read_total_bytes=271081) (op_xattr_list=0) (stream_read_exceptions=0) (object_continue_list_request=0) (action_executor_acquired=0) (object_delete_objects=68) (stream_read_remote_stream_drain.failures=0) (store_io_throttled=0) (committer_magic_marker_put.failures=0) (stream_read_vectored_incoming_ranges=75) (stream_write_queue_duration=0) (object_select_requests=0) (audit_span_creation=133) (committer_commits_aborted=0) (op_rename.failures=0) (op_mkdirs.failures=0) (stream_read_vectored_combined_ranges=30) (object_multipart_initiated=0) (stream_read_vectored_read_bytes_discarded=30497) (stream_read_seek_operations=0) (object_list_request=136) (op_hsync=0) (op_list_files.failures=0) (multipart_instantiated=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_map=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits_created=0) (op_get_delegation_token=0) (stream_read_seek_bytes_skipped=0) (action_http_head_request.failures=0) (object_continue_list_request.failures=0) (multipart_upload_part_put=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain=4) (op_abort=0) (action_http_get_request.failures=0) (op_is_file=0) (op_delete.failures=0) (files_copied_bytes=0) (files_deleted=34) (delegation_tokens_issued.failures=0) (op_get_content_summary.failures=0) (op_get_delegation_token.failures=0) (op_openfile=0) (op_mkdirs=34) (action_http_head_request=96) (stream_read_seek_backward_operations=0) (op_is_directory=0) (committer_materialize_file=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (committer_stage_file_upload.failures=0) (op_xattr_list.failures=0) (op_is_directory.failures=0) (stream_read_remote_stream_aborted=0) (op_get_file_checksum=0) (object_multipart_aborted.failures=0) (committer_jobs_completed=0) (committer_materialize_file.failures=0) (op_access=0) (op_glob_status.failures=0) (multipart_upload_completed=0) (op_list_located_status=0) (op_rename=0) (audit_request_execution=398));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=34) (object_put_request_active=0));
minimums=((action_http_get_request.min=12) (object_list_request.failures.min=-1) (op_access.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.min=4) (committer_stage_file_upload.min=-1) (object_continue_list_request.failures.min=-1) (op_create.min=5) (op_xattr_get_map.min=-1) (op_copy_from_local_file.failures.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_createfile.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_content_summary.min=-1) (multipart_upload_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_files.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_file_status.min=5) (object_delete_request.min=-1) (committer_magic_marker_put.min=-1) (op_get_file_checksum.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_delete.min=19) (object_put_request.failures.min=-1) (committer_commit_job.min=-1) (stream_write_queue_duration.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_head_request.min=2) (object_multipart_initiated.failures.min=-1) (object_bulk_delete_request.min=5) (op_is_file.failures.min=-1) (op_mkdirs.min=17) (op_copy_from_local_file.min=-1) (op_glob_status.min=-1) (op_rename.min=-1) (op_xattr_list.min=-1) (op_get_file_checksum.failures.min=-1) (op_abort.min=-1) (op_create.failures.min=-1) (op_exists.min=-1) (action_file_opened.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.min=-1) (action_file_opened.min=3) (delegation_tokens_issued.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_put_request.min=24) (object_bulk_delete_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_files.min=-1) (store_exists_probe.min=-1) (op_is_directory.min=-1) (op_exists.failures.min=-1) (op_is_file.min=-1) (object_multipart_initiated.min=-1) (op_list_status.min=-1) (op_is_directory.failures.min=-1) (op_abort.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_rename.failures.min=-1) (committer_commit_job.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.failures.max=-1) (store_exists_probe.max=-1) (op_get_content_summary.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_copy_from_local_file.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_rename.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.failures.max=-1) (op_access.max=-1) (op_createfile.max=-1) (object_put_request.max=71) (action_http_get_request.max=26) (op_copy_from_local_file.failures.max=-1) (op_glob_status.failures.max=-1) (committer_commit_job.max=-1) (object_multipart_aborted.max=-1) (op_delete.max=58) (committer_materialize_file.max=-1) (op_is_file.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_content_summary.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_list.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_directory.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=4) (object_list_request.max=167) (action_executor_acquired.max=-1) (action_http_head_request.max=12) (op_get_file_checksum.max=-1) (op_mkdirs.max=263) (action_http_head_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_exists.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_list.max=-1) (object_list_request.failures.max=-1) (object_delete_request.max=-1) (object_bulk_delete_request.max=17) (op_get_delegation_token.failures.max=-1) (op_xattr_get_map.max=-1) (op_is_file.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_files.failures.max=-1) (op_delete.failures.max=-1) (op_list_files.max=-1) (op_is_directory.failures.max=-1) (object_put_request.failures.max=-1) (action_file_opened.max=12) (op_create.failures.max=-1) (op_list_status.failures.max=-1) (committer_stage_file_upload.max=-1) (op_create.max=45) (op_xattr_list.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_file_status.failures.max=-1) (op_rename.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_status.max=8) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_map.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1));
means=((op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=34, sum=364, mean=10.7059)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=68, sum=520, mean=7.6471)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=28, sum=145, mean=5.1786)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=30, sum=418, mean=13.9333)) (op_delete.mean=(samples=34, sum=1122, mean=33.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=34, sum=1117, mean=32.8529)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=7, mean=1.7500)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=136, sum=1173, mean=8.6250)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=68, sum=1254, mean=18.4412)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=96, sum=412, mean=4.2917)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:51,608 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:51,608 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,608 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,608 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,608 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,608 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000167 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000167&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=219&ts=1731777831608
2024-11-16 17:23:51,617 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:23:51,617 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,617 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,617 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,618 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,618 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000167 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000167&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=219&ts=1731777831608
2024-11-16 17:23:51,622 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,622 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:51,623 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:51,623 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:51,623 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000167 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000167&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=219&ts=1731777831608
2024-11-16 17:23:51,650 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:51,650 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:51,651 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.028s
2024-11-16 17:23:51,651 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:51,651 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,651 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,652 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,652 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,652 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000168 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000168/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000168&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=219&ts=1731777831651
2024-11-16 17:23:51,659 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:51,659 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,659 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:51,659 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15059145667778214335.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:51,661 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15059145667778214335.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions=0) (action_executor_acquired=0) (object_multipart_aborted=0) (op_abort=0) (stream_write_bytes=65536) (stream_write_total_data=0) (action_executor_acquired.failures=0) (op_hsync=0) (object_put_request.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15059145667778214335.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,661 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,661 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:51,661 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15059145667778214335.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:51,661 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:51,664 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:51,664 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:51,664 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:51,664 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000168 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000168/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000168&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=112&ts=1731777831651
2024-11-16 17:23:51,686 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:51,686 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:51,686 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.022s
2024-11-16 17:23:51,686 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15059145667778214335.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:51,686 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15059145667778214335.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,686 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15059145667778214335.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,686 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:51,687 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,687 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (stream_write_total_time=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (op_abort=0) (object_put_request.failures=0) (object_put_request=1) (object_multipart_aborted=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (op_hflush=0) (stream_write_exceptions=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=22) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=22) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=22, mean=22.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:51,687 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:51,687 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,687 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,687 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:51,688 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000169 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000169&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=219&ts=1731777831687
2024-11-16 17:23:51,691 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:51,691 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:51,691 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,691 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:51,691 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:23:51,691 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,692 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000169 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-65535&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000169&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=219&ts=1731777831687
2024-11-16 17:23:51,700 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.009s
2024-11-16 17:23:51,700 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:51,700 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:51,701 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:51,701 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:51,701 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:51,701 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:51,705 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,705 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,705 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:51,705 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000169 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000169&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=113&ts=1731777831687
2024-11-16 17:23:51,715 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:23:51,715 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:51,715 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,715 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:23:51,716 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:23:51,716 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:23:51,716 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7438 bytes
2024-11-16 17:23:51,716 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:51,716 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:51,716 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:51,716 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8746 bytes
2024-11-16 17:23:51,716 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:23:51,716 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:51,717 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (action_http_get_request=2) (action_file_opened.failures=0) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain=1) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_close_operations=1) (stream_read_block_acquire_read.failures=0) (stream_read_opened=1) (stream_read_block_acquire_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=350) (stream_read_bytes_discarded_in_close=65336) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (stream_read_vectored_operations=1) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_total_bytes=65686) (stream_read_operations=1) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_incoming_ranges=2) (stream_read_closed=1) (stream_read_seek_policy_changed=1) (stream_aborted=0) (action_file_opened=1) (stream_read_fully_operations=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_discarded=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=8) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=0) (action_http_get_request.max=10) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=4) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=18, mean=9.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:51,718 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:51,718 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,718 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,719 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=219&ts=1731777831718
2024-11-16 17:23:51,725 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,725 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,725 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=219&ts=1731777831718
2024-11-16 17:23:51,733 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:51,733 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:51,733 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:51,733 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:51,733 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:51,733 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:51,733 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:51,733 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:51,733 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:51,733 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:51,733 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:51,733 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:51,734 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:51,734 [s3a-transfer-leg-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:51,734 [s3a-transfer-leg-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,734 [s3a-transfer-leg-bucket-unbounded-pool2-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [220] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=220&ts=1731777831718
2024-11-16 17:23:51,739 [s3a-transfer-leg-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:51,739 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:23:51,739 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:51,739 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:51,740 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:51,740 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777831681; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:51,740 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:51,740 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:51,740 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:51,740 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:51,740 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:51,741 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:51,741 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:51,741 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:51,741 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,741 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,741 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:51,741 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,741 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=114&ts=1731777831718
2024-11-16 17:23:51,747 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:51,747 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:51,747 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:23:51,747 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:51,747 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:51,747 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,747 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,747 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:51,747 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,747 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000170&t0=219&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=114&ts=1731777831718
2024-11-16 17:23:51,756 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:51,756 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:23:51,756 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:23:51,756 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:23:51,757 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:23:51,757 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:23:51,757 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:51,757 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:51,761 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:51,776 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 44, active threads = 0, queued tasks = 0, completed tasks = 44], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_executor_acquired.failures=0) (multipart_instantiated=0) (stream_read_seek_operations=0) (audit_failure=0) (stream_write_bytes=2293760) (stream_read_close_operations=29) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=31) (object_bulk_delete_request=70) (op_delete=35) (op_xattr_list=0) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (multipart_upload_part_put_bytes=0) (op_get_file_checksum.failures=0) (object_list_request=140) (op_exists.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_list_files.failures=0) (store_io_retry=0) (op_copy_from_local_file.failures=0) (object_delete_objects=70) (op_delete.failures=0) (action_http_get_request=32) (audit_access_check_failure=0) (committer_commit_job.failures=0) (object_multipart_initiated=0) (op_get_file_status.failures=0) (files_deleted=35) (committer_commits.failures=0) (stream_write_total_time=0) (op_xattr_get_map.failures=0) (op_access.failures=0) (stream_write_block_uploads_aborted=0) (multipart_upload_list=0) (audit_request_execution=411) (object_list_request.failures=0) (object_put_request_completed=70) (committer_commits_completed=0) (stream_read_bytes_backwards_on_seek=0) (op_create_non_recursive=0) (op_copy_from_local_file=0) (action_http_get_request.failures=0) (stream_read_operations=5) (multipart_upload_aborted=0) (op_xattr_list.failures=0) (op_is_file.failures=0) (committer_load_single_pending_file=0) (op_createfile=0) (op_is_directory.failures=0) (delegation_tokens_issued.failures=0) (op_list_files=0) (object_continue_list_request=0) (op_get_file_checksum=0) (committer_magic_files_created=0) (action_file_opened.failures=0) (op_is_file=0) (op_xattr_get_named.failures=0) (fake_directories_created=0) (multipart_upload_started=0) (store_io_throttled=0) (op_list_status.failures=0) (ignored_errors=0) (op_exists=0) (op_abort=0) (committer_load_single_pending_file.failures=0) (stream_read_unbuffered=2) (object_select_requests=0) (object_delete_request=0) (committer_magic_marker_put.failures=0) (committer_stage_file_upload=0) (stream_write_queue_duration.failures=0) (stream_read_closed=5) (committer_commits_aborted=0) (stream_read_vectored_operations=24) (stream_write_block_uploads=35) (op_hsync=0) (object_put_bytes=2293760) (store_exists_probe=0) (op_is_directory=0) (op_list_located_status=0) (object_copy_requests=0) (op_abort.failures=0) (stream_read_seek_forward_operations=0) (files_created=35) (action_file_opened=29) (stream_write_queue_duration=0) (op_get_delegation_token=0) (committer_jobs_completed=0) (op_openfile=0) (stream_write_block_uploads_committed=0) (committer_magic_marker_put=0) (op_get_content_summary=0) (object_metadata_request=99) (stream_read_vectored_incoming_ranges=77) (store_io_request=411) (stream_read_opened=5) (stream_read_vectored_read_bytes_discarded=30507) (op_access=0) (multipart_upload_part_put=0) (op_xattr_get_map=0) (op_mkdirs.failures=0) (op_xattr_get_named_map.failures=0) (op_create.failures=0) (audit_span_creation=137) (stream_read_exceptions=0) (files_copied_bytes=0) (op_create=35) (stream_read_seek_bytes_skipped=0) (object_multipart_aborted=0) (stream_read_remote_stream_aborted=0) (committer_tasks_completed=0) (directories_created=35) (op_createfile.failures=0) (committer_stage_file_upload.failures=0) (stream_read_seek_policy_changed=31) (object_put_request=70) (op_get_delegation_token.failures=0) (object_multipart_initiated.failures=0) (stream_read_bytes=10087) (op_glob_status.failures=0) (op_mkdirs=35) (stream_read_total_bytes=336767) (object_bulk_delete_request.failures=0) (multipart_upload_completed=0) (op_get_file_status=2) (delegation_tokens_issued=0) (op_open=29) (object_multipart_aborted.failures=0) (multipart_upload_list.failures=0) (stream_read_remote_stream_aborted.failures=0) (committer_materialize_file=0) (committer_bytes_committed=0) (op_hflush=0) (action_executor_acquired=0) (committer_commits_reverted=0) (committer_commit_job=0) (store_exists_probe.failures=0) (committer_commits_created=0) (object_put_request.failures=0) (directories_deleted=0) (committer_jobs_failed=0) (op_glob_status=0) (fake_directories_deleted=35) (committer_bytes_uploaded=0) (files_delete_rejected=0) (stream_read_bytes_discarded_in_close=326680) (stream_aborted=0) (object_delete_request.failures=0) (stream_write_total_data=4587520) (stream_read_bytes_discarded_in_abort=0) (action_http_head_request.failures=0) (op_rename=0) (stream_write_exceptions_completing_upload=0) (op_rename.failures=0) (stream_read_fully_operations=1) (stream_read_remote_stream_drain=5) (stream_read_remote_stream_drain.failures=0) (op_get_content_summary.failures=0) (op_list_status=0) (stream_write_exceptions=0) (committer_tasks_failed=0) (op_xattr_get_named_map=0) (action_http_head_request=99) (op_xattr_get_named=0) (stream_read_operations_incomplete=0) (object_continue_list_request.failures=0) (files_copied=0) (committer_materialize_file.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=35) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (object_put_request_active=0));
minimums=((op_create.min=5) (action_file_opened.min=4) (op_xattr_get_named.min=-1) (op_xattr_list.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_delete.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_status.min=-1) (committer_stage_file_upload.failures.min=-1) (op_exists.failures.min=-1) (op_exists.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.min=-1) (op_access.min=-1) (object_bulk_delete_request.min=5) (op_is_directory.min=-1) (action_file_opened.failures.min=-1) (store_exists_probe.min=-1) (op_mkdirs.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_map.min=-1) (object_multipart_aborted.min=-1) (object_delete_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_list_request.min=4) (stream_read_remote_stream_aborted.min=-1) (committer_magic_marker_put.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_is_file.min=-1) (object_put_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_copy_from_local_file.min=-1) (multipart_upload_list.min=-1) (op_mkdirs.min=17) (op_abort.min=-1) (store_exists_probe.failures.min=-1) (op_abort.failures.min=-1) (op_rename.min=-1) (multipart_upload_list.failures.min=-1) (object_continue_list_request.min=-1) (op_list_files.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_glob_status.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_status.failures.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_remote_stream_drain.failures.min=-1) (op_create.failures.min=-1) (op_access.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_checksum.min=-1) (op_delete.min=19) (op_xattr_get_named_map.min=-1) (op_get_content_summary.min=-1) (stream_write_queue_duration.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.min=-1) (action_http_get_request.min=8) (object_delete_request.min=-1) (op_list_files.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_status.min=5) (op_xattr_list.min=-1) (op_createfile.min=-1) (committer_commit_job.min=-1) (action_http_get_request.failures.min=-1) (action_http_head_request.min=2) (object_list_request.failures.min=-1) (op_get_delegation_token.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=22) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_directory.failures.min=-1) (op_createfile.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_is_file.failures.min=-1) (op_rename.failures.min=-1));
maximums=((store_exists_probe.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_files.max=-1) (op_get_delegation_token.max=-1) (committer_materialize_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_put_request.max=71) (stream_read_remote_stream_drain.max=4) (op_is_file.max=-1) (op_create.max=45) (op_xattr_list.max=-1) (stream_write_queue_duration.max=-1) (op_glob_status.failures.max=-1) (op_createfile.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.max=8) (op_is_directory.failures.max=-1) (op_delete.max=58) (op_is_directory.max=-1) (op_createfile.failures.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_rename.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (op_exists.failures.max=-1) (object_delete_request.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_file.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.failures.max=-1) (op_abort.max=-1) (committer_load_single_pending_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_exists.max=-1) (action_http_head_request.max=12) (op_access.max=-1) (object_bulk_delete_request.max=17) (delegation_tokens_issued.failures.max=-1) (op_abort.failures.max=-1) (action_http_head_request.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_map.max=-1) (action_http_get_request.max=26) (op_get_file_checksum.failures.max=-1) (object_list_request.max=167) (op_xattr_get_named.max=-1) (op_get_delegation_token.failures.max=-1) (object_continue_list_request.max=-1) (op_mkdirs.max=263) (op_copy_from_local_file.max=-1) (op_access.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_commit_job.max=-1) (op_list_status.max=-1) (store_exists_probe.failures.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.max=-1) (op_rename.failures.max=-1) (op_create.failures.max=-1) (action_file_opened.max=12) (op_xattr_get_named_map.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_list.max=-1) (object_list_request.failures.max=-1) (op_glob_status.max=-1) (committer_commit_job.failures.max=-1));
means=((delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=35, sum=372, mean=10.6286)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=99, sum=427, mean=4.3131)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=32, sum=436, mean=13.6250)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (object_list_request.mean=(samples=140, sum=1202, mean=8.5857)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=70, sum=1303, mean=18.6143)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=70, sum=535, mean=7.6429)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=29, sum=149, mean=5.1379)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=35, sum=1146, mean=32.7429)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=35, sum=1160, mean=33.1429)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:51,777 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:51,777 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,777 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,777 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,777 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,777 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000171 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000171&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=221&ts=1731777831776
2024-11-16 17:23:51,784 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:51,784 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,784 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,784 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,784 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,784 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000171 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000171&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=221&ts=1731777831776
2024-11-16 17:23:51,787 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,787 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:51,787 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:51,788 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:51,788 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000171 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000171&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=221&ts=1731777831776
2024-11-16 17:23:51,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:51,801 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:51,801 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.014s
2024-11-16 17:23:51,801 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:51,801 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,801 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,802 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,802 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,802 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000172 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000172/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000172&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=221&ts=1731777831801
2024-11-16 17:23:51,806 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:51,806 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,807 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:51,807 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7614323132255327635.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:51,808 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7614323132255327635.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (op_abort=0) (stream_write_bytes=65536) (op_hsync=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (op_abort.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (op_hflush=0) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (stream_write_total_data=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7614323132255327635.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,808 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,808 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:51,808 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7614323132255327635.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:51,809 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:51,809 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:51,809 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:51,809 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:51,809 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000172 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000172/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000172&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=116&ts=1731777831801
2024-11-16 17:23:51,835 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:51,835 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:51,835 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.026s
2024-11-16 17:23:51,835 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7614323132255327635.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:51,835 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7614323132255327635.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,835 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7614323132255327635.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,835 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:51,836 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,837 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (stream_write_block_uploads=1) (op_abort=0) (op_abort.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (op_hsync=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (action_executor_acquired=0) (action_executor_acquired.failures=0) (object_put_request=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=26) (op_abort.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=26));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=26, mean=26.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:51,838 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:51,839 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,839 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,840 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:51,840 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000173 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000173&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=221&ts=1731777831839
2024-11-16 17:23:51,844 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:51,844 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:51,845 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,845 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:23:51,846 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:51,846 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:23:51,846 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,847 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,847 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:51,847 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000173 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-4200&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000173&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=118&ts=1731777831839
2024-11-16 17:23:51,849 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:23:51,849 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,849 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,849 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:51,849 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000173 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=16101-16200&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000173&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=120&ts=1731777831839
2024-11-16 17:23:51,861 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:23:51,861 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,866 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:23:51,866 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:23:51,866 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:51,868 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened.failures=0) (stream_read_total_bytes=300) (stream_read_block_read.failures=0) (stream_read_vectored_combined_ranges=2) (stream_read_vectored_incoming_ranges=3) (stream_read_vectored_read_bytes_discarded=4001) (stream_read_seek_operations=0) (stream_read_seek_backward_operations=0) (stream_read_fully_operations=0) (stream_read_exceptions=0) (stream_read_block_read=0) (stream_read_close_operations=1) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations=0) (stream_read_seek_policy_changed=1) (stream_read_opened=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=0) (action_http_get_request.failures=0) (action_http_get_request=2) (stream_read_operations=0) (stream_read_remote_stream_drain=0) (stream_aborted=0) (stream_read_closed=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired.failures=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_operations=1) (stream_read_bytes=300) (stream_read_remote_stream_aborted=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=5) (action_http_get_request.min=12) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=19) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=5) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=31, mean=15.5000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:51,869 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:51,870 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,870 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,871 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=221&ts=1731777831869
2024-11-16 17:23:51,885 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,885 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,886 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=221&ts=1731777831869
2024-11-16 17:23:51,895 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:23:51,896 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:51,896 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:51,896 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:51,896 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:51,897 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:51,897 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:51,897 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:51,897 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:51,897 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:51,897 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:51,897 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:51,898 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:51,898 [s3a-transfer-leg-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:51,898 [s3a-transfer-leg-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,899 [s3a-transfer-leg-bucket-unbounded-pool2-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [222] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=222&ts=1731777831869
2024-11-16 17:23:51,904 [s3a-transfer-leg-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:51,904 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:51,905 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:51,905 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:51,905 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:51,906 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777831826; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:51,906 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:51,906 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:51,906 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:51,906 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:51,906 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:51,906 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:51,907 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:51,907 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:51,907 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,907 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,907 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:51,907 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,907 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=122&ts=1731777831869
2024-11-16 17:23:51,913 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:51,913 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:51,913 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:23:51,913 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:51,913 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:51,913 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:51,913 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:51,913 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:51,913 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:51,913 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000174&t0=221&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=122&ts=1731777831869
2024-11-16 17:23:51,920 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:23:51,920 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:51,920 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:51,920 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.014s
2024-11-16 17:23:51,920 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.014s
2024-11-16 17:23:51,920 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.023s
2024-11-16 17:23:51,921 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:51,921 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:51,922 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:51,934 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 45, active threads = 0, queued tasks = 0, completed tasks = 45], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_remote_stream_drain.failures=0) (op_list_status=0) (op_openfile=0) (committer_tasks_completed=0) (stream_write_block_uploads_aborted=0) (committer_load_single_pending_file.failures=0) (op_create=36) (op_get_delegation_token=0) (op_is_directory.failures=0) (op_createfile.failures=0) (multipart_upload_part_put=0) (op_list_files=0) (store_io_retry=0) (committer_bytes_uploaded=0) (op_delete.failures=0) (object_list_request=144) (stream_read_bytes=10387) (files_copied=0) (op_rename.failures=0) (delegation_tokens_issued=0) (audit_request_execution=424) (committer_jobs_failed=0) (store_io_request=424) (stream_read_version_mismatches=0) (directories_created=36) (action_http_head_request=102) (object_continue_list_request=0) (op_get_file_status=2) (op_exists=0) (object_copy_requests=0) (stream_read_seek_forward_operations=0) (audit_span_creation=141) (committer_bytes_committed=0) (stream_read_vectored_read_bytes_discarded=34508) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_started=0) (op_list_files.failures=0) (stream_read_close_operations=30) (object_put_request_completed=72) (fake_directories_deleted=36) (object_multipart_aborted=0) (op_access.failures=0) (files_created=36) (stream_read_vectored_incoming_ranges=80) (op_copy_from_local_file=0) (committer_commit_job.failures=0) (op_get_content_summary=0) (committer_commits_completed=0) (action_file_opened=30) (committer_stage_file_upload=0) (fake_directories_created=0) (action_http_get_request=34) (action_http_get_request.failures=0) (op_abort.failures=0) (stream_read_opened=5) (op_xattr_get_map.failures=0) (directories_deleted=0) (ignored_errors=0) (committer_magic_marker_put.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_exists.failures=0) (op_get_file_checksum=0) (stream_write_queue_duration.failures=0) (audit_failure=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (op_glob_status=0) (stream_read_total_bytes=337067) (stream_read_remote_stream_drain=5) (files_copied_bytes=0) (op_xattr_get_map=0) (stream_write_block_uploads_committed=0) (stream_read_fully_operations=1) (stream_write_exceptions_completing_upload=0) (object_continue_list_request.failures=0) (committer_tasks_failed=0) (op_list_located_status=0) (stream_read_remote_stream_aborted=0) (object_delete_objects=72) (committer_stage_file_upload.failures=0) (stream_read_seek_operations=0) (op_createfile=0) (store_exists_probe.failures=0) (action_executor_acquired.failures=0) (stream_read_closed=5) (op_delete=36) (multipart_upload_aborted=0) (store_io_throttled=0) (committer_commit_job=0) (stream_read_vectored_combined_ranges=33) (stream_read_seek_bytes_discarded=0) (files_deleted=36) (stream_write_total_data=4718592) (op_is_file.failures=0) (op_xattr_get_named_map.failures=0) (object_select_requests=0) (op_copy_from_local_file.failures=0) (stream_read_seek_backward_operations=0) (stream_write_exceptions=0) (op_xattr_get_named.failures=0) (action_http_head_request.failures=0) (multipart_upload_completed=0) (object_put_bytes=2359296) (stream_read_vectored_operations=25) (multipart_upload_list.failures=0) (stream_write_block_uploads=36) (op_is_directory=0) (multipart_upload_part_put_bytes=0) (stream_write_queue_duration=0) (committer_load_single_pending_file=0) (stream_read_seek_bytes_skipped=0) (object_multipart_aborted.failures=0) (op_list_status.failures=0) (audit_access_check_failure=0) (op_xattr_get_named_map=0) (object_multipart_initiated=0) (committer_commits_aborted=0) (stream_aborted=0) (stream_read_operations_incomplete=0) (stream_write_total_time=0) (object_list_request.failures=0) (op_get_file_status.failures=0) (object_multipart_initiated.failures=0) (action_file_opened.failures=0) (op_get_file_checksum.failures=0) (stream_read_exceptions=0) (op_hsync=0) (object_put_request=72) (object_metadata_request=102) (op_mkdirs.failures=0) (stream_write_bytes=2359296) (stream_read_bytes_discarded_in_close=326680) (multipart_upload_abort_under_path_invoked=0) (op_abort=0) (stream_read_operations=5) (store_exists_probe=0) (committer_commits_created=0) (committer_materialize_file.failures=0) (stream_read_unbuffered=2) (op_xattr_list.failures=0) (multipart_instantiated=0) (object_delete_request=0) (op_mkdirs=36) (action_executor_acquired=0) (op_hflush=0) (committer_materialize_file=0) (op_xattr_get_named=0) (committer_magic_files_created=0) (op_open=30) (committer_jobs_completed=0) (object_delete_request.failures=0) (op_create.failures=0) (op_get_delegation_token.failures=0) (op_get_content_summary.failures=0) (op_create_non_recursive=0) (object_bulk_delete_request=72) (multipart_upload_list=0) (committer_commits_reverted=0) (stream_read_seek_policy_changed=32) (op_rename=0) (files_delete_rejected=0) (op_glob_status.failures=0) (object_bulk_delete_request.failures=0) (op_access=0) (op_is_file=0) (op_xattr_list=0) (delegation_tokens_issued.failures=0));
gauges=((stream_write_block_uploads_pending=36) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0));
minimums=((object_multipart_initiated.min=-1) (object_put_request.min=26) (op_is_file.min=-1) (multipart_upload_list.min=-1) (action_file_opened.min=5) (delegation_tokens_issued.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_mkdirs.min=17) (object_bulk_delete_request.min=5) (action_http_head_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_list_request.min=4) (store_exists_probe.failures.min=-1) (op_createfile.failures.min=-1) (op_create.failures.min=-1) (op_mkdirs.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_stage_file_upload.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named.min=-1) (op_list_files.failures.min=-1) (op_glob_status.min=-1) (op_delete.min=19) (action_http_head_request.min=2) (committer_commit_job.failures.min=-1) (op_exists.min=-1) (op_delete.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_map.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_file.failures.min=-1) (op_is_directory.min=-1) (op_is_directory.failures.min=-1) (op_get_file_status.min=5) (op_access.min=-1) (stream_write_queue_duration.min=-1) (object_put_request.failures.min=-1) (op_create.min=5) (action_http_get_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_abort.failures.min=-1) (op_rename.min=-1) (stream_read_remote_stream_drain.min=0) (op_xattr_list.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=12) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (op_access.failures.min=-1) (op_glob_status.failures.min=-1) (op_list_status.min=-1) (committer_commit_job.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_delegation_token.min=-1) (object_multipart_aborted.failures.min=-1) (op_rename.failures.min=-1) (store_exists_probe.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_exists.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_checksum.min=-1) (object_delete_request.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_list_files.min=-1) (committer_load_single_pending_file.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_executor_acquired.min=-1) (op_get_content_summary.min=-1));
maximums=((op_glob_status.failures.max=-1) (op_create.max=45) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named.max=-1) (op_createfile.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_executor_acquired.max=-1) (object_delete_request.max=-1) (op_xattr_get_map.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_bulk_delete_request.max=17) (multipart_upload_list.failures.max=-1) (object_put_request.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_get_map.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_drain.max=4) (op_get_delegation_token.failures.max=-1) (op_is_directory.max=-1) (op_xattr_list.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.max=-1) (object_delete_request.failures.max=-1) (op_list_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_createfile.failures.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.max=167) (action_file_opened.max=12) (op_is_file.failures.max=-1) (op_abort.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_file.max=-1) (committer_stage_file_upload.failures.max=-1) (op_rename.failures.max=-1) (op_abort.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_glob_status.max=-1) (op_create.failures.max=-1) (object_list_request.failures.max=-1) (op_mkdirs.max=263) (action_http_get_request.max=26) (delegation_tokens_issued.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.max=-1) (op_get_file_status.max=8) (stream_read_remote_stream_aborted.failures.max=-1) (op_access.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_exists.max=-1) (object_continue_list_request.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_delegation_token.max=-1) (op_rename.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_put_request.max=71) (op_is_directory.failures.max=-1) (op_access.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (store_exists_probe.failures.max=-1) (multipart_upload_list.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_exists.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (op_copy_from_local_file.failures.max=-1) (op_delete.max=58) (committer_load_single_pending_file.failures.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.max=15) (action_http_get_request.failures.max=-1));
means=((op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=30, sum=154, mean=5.1333)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=34, sum=467, mean=13.7353)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=36, sum=378, mean=10.5000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=102, sum=449, mean=4.4020)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=72, sum=548, mean=7.6111)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=144, sum=1227, mean=8.5208)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=36, sum=1170, mean=32.5000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=72, sum=1341, mean=18.6250)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=36, sum=1184, mean=32.8889)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:51,935 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:51,935 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,935 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,935 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,935 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,935 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000175 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000175&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=223&ts=1731777831934
2024-11-16 17:23:51,939 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:51,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:51,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,940 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000175 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000175&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=223&ts=1731777831934
2024-11-16 17:23:51,942 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:51,942 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:51,942 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:51,942 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:51,942 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000175 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000175&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=223&ts=1731777831934
2024-11-16 17:23:51,953 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:51,953 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:51,953 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:23:51,953 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:51,954 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,954 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,954 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,954 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,954 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000176 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000176/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000176&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=223&ts=1731777831953
2024-11-16 17:23:51,958 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:51,958 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,958 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:51,958 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17371130972534957808.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:51,959 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17371130972534957808.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (op_hflush=0) (committer_magic_marker_put=0) (stream_write_total_data=0) (multipart_upload_completed=0) (object_put_request=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (op_hsync=0) (stream_write_bytes=65536) (op_abort=0) (object_multipart_initiated=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17371130972534957808.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,959 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,959 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:51,960 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17371130972534957808.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:51,960 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:51,961 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:51,961 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:51,961 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:51,961 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000176 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000176/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000176&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=123&ts=1731777831953
2024-11-16 17:23:51,975 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:51,975 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:51,975 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.014s
2024-11-16 17:23:51,975 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17371130972534957808.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:51,975 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17371130972534957808.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,975 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17371130972534957808.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:51,975 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:51,975 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:51,976 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put=0) (stream_write_total_time=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (op_hflush=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (op_abort.failures=0) (object_put_request.failures=0) (object_multipart_aborted=0) (op_abort=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (stream_write_total_data=65536) (multipart_upload_part_put.failures=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (op_hsync=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=14) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1));
maximums=((object_put_request.max=14) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=14, mean=14.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:51,976 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:51,977 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:51,977 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:51,977 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:51,978 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000177 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000177/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000177&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=223&ts=1731777831977
2024-11-16 17:23:51,980 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:51,980 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:51,981 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:51,982 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (stream_read_block_acquire_read.failures=0) (stream_read_close_operations=1) (action_executor_acquired=0) (stream_read_block_acquire_read=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened.failures=0) (action_http_get_request.failures=0) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (stream_read_total_bytes=0) (stream_read_exceptions=0) (stream_read_vectored_combined_ranges=0) (stream_read_prefetch_operations.failures=0) (stream_read_opened=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_operations=0) (stream_read_operations_incomplete=0) (stream_read_block_read=0) (action_http_get_request=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_fully_operations=0) (stream_read_bytes=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read.failures=0) (action_file_opened=1) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=0) (stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:51,983 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:51,983 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:51,983 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:51,983 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=223&ts=1731777831983
2024-11-16 17:23:51,985 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:51,985 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,986 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=223&ts=1731777831983
2024-11-16 17:23:51,991 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:51,991 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:51,991 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:51,992 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:51,992 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:51,992 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:51,992 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:51,992 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:51,992 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:51,992 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:51,993 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:51,993 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:51,993 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:51,993 [s3a-transfer-leg-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:51,993 [s3a-transfer-leg-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:51,994 [s3a-transfer-leg-bucket-unbounded-pool2-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=224&ts=1731777831983
2024-11-16 17:23:51,998 [s3a-transfer-leg-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:51,998 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:23:51,999 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:51,999 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:51,999 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:51,999 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777831973; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:51,999 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:51,999 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:52,000 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:52,000 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:52,000 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:52,000 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:52,000 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:52,001 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:52,001 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,001 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,001 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:52,001 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,001 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=125&ts=1731777831983
2024-11-16 17:23:52,006 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:52,006 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:52,006 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:23:52,006 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:52,006 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:52,006 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,006 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,006 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:52,006 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,006 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000178&t0=223&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=125&ts=1731777831983
2024-11-16 17:23:52,011 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:52,011 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:52,011 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:23:52,011 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.011s
2024-11-16 17:23:52,011 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.011s
2024-11-16 17:23:52,011 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.019s
2024-11-16 17:23:52,011 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:52,011 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:52,018 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:52,029 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 46, active threads = 0, queued tasks = 0, completed tasks = 46], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((files_copied_bytes=0) (committer_magic_marker_put=0) (op_xattr_get_named.failures=0) (op_list_files.failures=0) (stream_aborted=0) (action_executor_acquired=0) (op_xattr_list=0) (op_access=0) (directories_deleted=0) (op_rename=0) (multipart_upload_part_put=0) (stream_read_exceptions=0) (object_list_request=148) (op_open=31) (op_abort=0) (stream_write_block_uploads=37) (op_get_content_summary.failures=0) (op_get_delegation_token=0) (stream_write_queue_duration=0) (committer_load_single_pending_file=0) (object_bulk_delete_request.failures=0) (object_multipart_initiated=0) (multipart_upload_started=0) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=34508) (committer_magic_files_created=0) (committer_bytes_committed=0) (object_select_requests=0) (object_delete_request=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_total_time=0) (op_list_files=0) (object_put_request.failures=0) (op_exists=0) (audit_request_execution=435) (stream_read_seek_operations=0) (stream_read_total_bytes=337067) (stream_read_vectored_combined_ranges=33) (op_delete=37) (object_multipart_aborted.failures=0) (committer_tasks_completed=0) (stream_write_block_uploads_aborted=0) (stream_read_closed=5) (op_is_directory=0) (stream_write_total_data=4849664) (files_copied=0) (op_hsync=0) (object_put_request_completed=74) (files_delete_rejected=0) (committer_materialize_file=0) (stream_read_seek_forward_operations=0) (op_xattr_get_named=0) (ignored_errors=0) (action_executor_acquired.failures=0) (op_get_file_checksum=0) (op_xattr_list.failures=0) (stream_write_queue_duration.failures=0) (op_exists.failures=0) (fake_directories_deleted=37) (store_exists_probe.failures=0) (op_create=37) (committer_commits_aborted=0) (audit_access_check_failure=0) (committer_materialize_file.failures=0) (op_glob_status.failures=0) (op_get_content_summary=0) (op_createfile.failures=0) (store_io_throttled=0) (stream_read_bytes_discarded_in_abort=0) (object_delete_objects=74) (object_continue_list_request.failures=0) (audit_failure=0) (committer_jobs_completed=0) (multipart_instantiated=0) (op_openfile=0) (committer_jobs_failed=0) (stream_read_seek_backward_operations=0) (action_file_opened=31) (stream_read_unbuffered=2) (op_hflush=0) (stream_read_close_operations=31) (object_put_bytes=2424832) (files_created=37) (store_exists_probe=0) (stream_read_seek_policy_changed=33) (stream_write_exceptions_completing_upload=0) (stream_read_bytes=10387) (action_http_get_request=34) (multipart_upload_list.failures=0) (directories_created=37) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (object_list_request.failures=0) (object_copy_requests=0) (committer_tasks_failed=0) (op_copy_from_local_file.failures=0) (stream_read_remote_stream_aborted=0) (store_io_retry=0) (op_is_file=0) (stream_write_bytes=2424832) (multipart_upload_completed=0) (object_delete_request.failures=0) (committer_stage_file_upload=0) (multipart_upload_aborted=0) (object_bulk_delete_request=74) (object_multipart_initiated.failures=0) (audit_span_creation=145) (op_list_status=0) (object_multipart_aborted=0) (op_mkdirs=37) (stream_write_exceptions=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (op_list_located_status=0) (op_glob_status=0) (stream_read_operations=5) (stream_write_block_uploads_committed=0) (multipart_upload_part_put_bytes=0) (op_copy_from_local_file=0) (op_createfile=0) (stream_read_bytes_backwards_on_seek=0) (op_mkdirs.failures=0) (op_delete.failures=0) (stream_read_vectored_operations=25) (object_put_request=74) (committer_bytes_uploaded=0) (action_http_head_request=105) (committer_commits_completed=0) (op_get_file_status.failures=0) (op_get_delegation_token.failures=0) (op_xattr_get_named_map=0) (op_create_non_recursive=0) (op_rename.failures=0) (op_get_file_status=2) (stream_read_vectored_incoming_ranges=80) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_close=326680) (committer_commit_job=0) (op_xattr_get_map=0) (op_is_directory.failures=0) (op_is_file.failures=0) (files_deleted=37) (stream_read_remote_stream_drain=5) (stream_read_fully_operations=1) (delegation_tokens_issued.failures=0) (committer_commits_reverted=0) (committer_commits.failures=0) (op_xattr_get_map.failures=0) (action_http_head_request.failures=0) (multipart_upload_list=0) (object_metadata_request=105) (committer_commit_job.failures=0) (delegation_tokens_issued=0) (action_http_get_request.failures=0) (op_create.failures=0) (op_get_file_checksum.failures=0) (object_continue_list_request=0) (committer_stage_file_upload.failures=0) (op_access.failures=0) (store_io_request=435) (fake_directories_created=0) (committer_commits_created=0) (stream_read_opened=5) (op_list_status.failures=0) (op_xattr_get_named_map.failures=0) (committer_load_single_pending_file.failures=0) (action_file_opened.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=37) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0));
minimums=((op_xattr_get_named_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_list_status.failures.min=-1) (op_rename.min=-1) (object_put_request.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_aborted.min=-1) (op_access.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_executor_acquired.min=-1) (op_glob_status.min=-1) (op_get_content_summary.min=-1) (object_multipart_initiated.min=-1) (object_bulk_delete_request.min=5) (op_get_content_summary.failures.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_checksum.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_file_opened.min=3) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.failures.min=-1) (action_http_get_request.min=12) (multipart_upload_list.min=-1) (op_is_file.failures.min=-1) (op_delete.min=19) (op_xattr_list.failures.min=-1) (op_exists.min=-1) (action_http_head_request.min=2) (stream_read_remote_stream_aborted.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_list.min=-1) (op_create.min=4) (committer_commit_job.min=-1) (store_exists_probe.min=-1) (op_xattr_get_named_map.min=-1) (object_list_request.failures.min=-1) (stream_write_queue_duration.min=-1) (multipart_upload_list.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_magic_marker_put.min=-1) (op_glob_status.failures.min=-1) (op_list_files.min=-1) (action_http_get_request.failures.min=-1) (object_continue_list_request.min=-1) (object_continue_list_request.failures.min=-1) (op_rename.failures.min=-1) (action_file_opened.failures.min=-1) (committer_commit_job.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_delegation_token.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_list_request.min=4) (op_exists.failures.min=-1) (op_xattr_get_named.min=-1) (op_abort.min=-1) (op_createfile.min=-1) (committer_magic_marker_put.failures.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_access.failures.min=-1) (op_is_directory.min=-1) (object_put_request.min=14) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_drain.min=0) (op_list_files.failures.min=-1) (committer_materialize_file.min=-1) (op_create.failures.min=-1) (action_http_head_request.failures.min=-1) (delegation_tokens_issued.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_status.min=5) (op_mkdirs.min=17) (op_list_status.min=-1) (op_copy_from_local_file.failures.min=-1));
maximums=((op_createfile.max=-1) (op_exists.failures.max=-1) (op_exists.max=-1) (delegation_tokens_issued.failures.max=-1) (op_list_files.max=-1) (op_abort.failures.max=-1) (op_delete.max=58) (op_xattr_get_named_map.failures.max=-1) (object_put_request.max=71) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=4) (object_bulk_delete_request.max=17) (object_multipart_aborted.max=-1) (op_xattr_get_named.failures.max=-1) (op_glob_status.failures.max=-1) (op_abort.max=-1) (op_mkdirs.max=263) (action_file_opened.failures.max=-1) (op_createfile.failures.max=-1) (op_list_status.max=-1) (op_get_file_status.max=8) (op_rename.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_file.failures.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.max=167) (op_xattr_get_named_map.max=-1) (action_http_head_request.failures.max=-1) (op_get_content_summary.max=-1) (op_is_directory.max=-1) (op_copy_from_local_file.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_list_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_delegation_token.max=-1) (op_copy_from_local_file.max=-1) (op_access.max=-1) (object_delete_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=26) (object_put_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_checksum.failures.max=-1) (store_exists_probe.failures.max=-1) (action_file_opened.max=12) (object_continue_list_request.failures.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.max=-1) (op_get_file_checksum.max=-1) (object_continue_list_request.max=-1) (op_create.failures.max=-1) (action_http_head_request.max=15) (multipart_upload_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_file.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_status.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_map.max=-1) (committer_materialize_file.max=-1) (op_access.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_files.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_rename.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_commit_job.failures.max=-1) (object_delete_request.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named.max=-1) (op_is_directory.failures.max=-1) (committer_commit_job.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (store_exists_probe.max=-1) (op_create.max=45));
means=((op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=37, sum=1202, mean=32.4865)) (action_http_head_request.mean=(samples=105, sum=457, mean=4.3524)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=37, sum=1190, mean=32.1622)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=74, sum=1366, mean=18.4595)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (action_http_get_request.mean=(samples=34, sum=467, mean=13.7353)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=74, sum=558, mean=7.5405)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=31, sum=157, mean=5.0645)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=37, sum=382, mean=10.3243)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=148, sum=1245, mean=8.4122)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:52,029 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:52,029 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,029 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,029 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,029 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,029 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000179 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000179&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=225&ts=1731777832029
2024-11-16 17:23:52,034 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,034 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,035 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,035 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,035 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,035 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000179 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000179&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=225&ts=1731777832029
2024-11-16 17:23:52,037 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,037 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:52,037 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:52,037 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:52,037 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000179 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000179&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=225&ts=1731777832029
2024-11-16 17:23:52,049 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:52,049 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:52,049 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.012s
2024-11-16 17:23:52,049 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:52,050 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,050 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,050 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,050 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,050 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000180 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000180/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000180&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=225&ts=1731777832049
2024-11-16 17:23:52,056 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:52,056 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,056 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:52,056 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6742480968482630769.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:52,057 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6742480968482630769.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (object_put_request=0) (object_multipart_aborted=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (op_abort=0) (stream_write_block_uploads=0) (op_hsync=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (op_hflush=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6742480968482630769.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,057 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,057 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:52,057 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6742480968482630769.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:52,058 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:52,058 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:52,058 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:52,058 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:52,058 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000180 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000180/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000180&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=127&ts=1731777832049
2024-11-16 17:23:52,075 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:52,075 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:52,075 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:23:52,076 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6742480968482630769.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:52,076 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6742480968482630769.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,076 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6742480968482630769.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,076 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:52,076 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,077 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted=0) (stream_write_exceptions=0) (stream_write_block_uploads=1) (op_abort.failures=0) (stream_write_total_time=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (op_hsync=0) (action_executor_acquired=0) (object_put_request=1) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (op_abort=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=17) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=17) (committer_magic_marker_put.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:52,077 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:52,078 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,078 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,078 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:52,078 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000181 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000181/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000181&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=225&ts=1731777832078
2024-11-16 17:23:52,081 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:52,081 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:52,081 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,081 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:23:52,081 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:52,081 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:23:52,081 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:23:52,082 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,082 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,082 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:52,082 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000181 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000181/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=10-1199&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000181&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=128&ts=1731777832078
2024-11-16 17:23:52,096 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:23:52,096 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:23:52,096 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:23:52,096 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:23:52,096 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,097 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_forward_operations=0) (stream_read_vectored_combined_ranges=1) (stream_read_version_mismatches=0) (stream_read_closed=0) (stream_read_prefetch_operations.failures=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_bytes=315) (stream_read_seek_backward_operations=0) (stream_read_block_read.failures=0) (stream_read_close_operations=1) (action_http_get_request.failures=0) (stream_read_operations=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_skipped=0) (action_executor_acquired.failures=0) (stream_read_vectored_operations=1) (stream_read_vectored_incoming_ranges=4) (stream_read_block_read=0) (stream_read_vectored_read_bytes_discarded=875) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (action_http_get_request=1) (action_file_opened.failures=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (stream_read_total_bytes=315));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=14) (stream_read_block_read.min=-1) (action_file_opened.min=3) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=14) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=14, mean=14.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)));

2024-11-16 17:23:52,098 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:52,098 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,099 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,099 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=225&ts=1731777832098
2024-11-16 17:23:52,102 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,102 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,102 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=225&ts=1731777832098
2024-11-16 17:23:52,111 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:23:52,112 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:52,112 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:52,112 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:52,112 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:52,112 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:52,112 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:52,112 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:52,112 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:52,113 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:52,113 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:52,113 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:52,116 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:52,116 [s3a-transfer-leg-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:52,117 [s3a-transfer-leg-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,117 [s3a-transfer-leg-bucket-unbounded-pool2-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=226&ts=1731777832098
2024-11-16 17:23:52,127 [s3a-transfer-leg-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:23:52,127 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:23:52,127 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:52,128 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:52,128 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:52,128 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777832072; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:52,128 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:52,128 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:52,128 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:52,129 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:52,129 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:52,129 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:52,129 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:52,129 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:52,129 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,129 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,129 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:52,129 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,130 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=130&ts=1731777832098
2024-11-16 17:23:52,137 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:52,137 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:52,137 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:23:52,137 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:52,137 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:52,137 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,138 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,138 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:52,138 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,138 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000182&t0=225&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=130&ts=1731777832098
2024-11-16 17:23:52,148 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:23:52,148 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:23:52,148 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:23:52,148 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:23:52,149 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:23:52,149 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.037s
2024-11-16 17:23:52,149 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:52,149 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:52,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:52,161 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 47, active threads = 0, queued tasks = 0, completed tasks = 47], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_exceptions=0) (action_file_opened=32) (object_multipart_initiated=0) (committer_jobs_failed=0) (op_delete=38) (object_put_bytes=2490368) (op_xattr_get_map=0) (op_list_status.failures=0) (op_glob_status.failures=0) (op_exists.failures=0) (committer_tasks_failed=0) (op_rename.failures=0) (object_bulk_delete_request.failures=0) (op_rename=0) (stream_read_vectored_combined_ranges=34) (object_delete_request=0) (stream_write_block_uploads=38) (op_xattr_get_named_map=0) (op_list_files.failures=0) (op_openfile=0) (directories_deleted=0) (multipart_instantiated=0) (stream_write_bytes=2490368) (audit_failure=0) (op_access.failures=0) (op_access=0) (op_xattr_list=0) (files_created=38) (stream_aborted=0) (op_create.failures=0) (op_get_content_summary=0) (op_get_delegation_token=0) (op_hsync=0) (object_delete_request.failures=0) (op_get_file_status.failures=0) (committer_commits_aborted=0) (committer_jobs_completed=0) (stream_write_exceptions_completing_upload=0) (object_bulk_delete_request=76) (stream_read_seek_operations=0) (committer_materialize_file=0) (files_copied=0) (committer_magic_marker_put=0) (stream_read_remote_stream_drain=5) (stream_read_seek_bytes_discarded=0) (committer_commit_job.failures=0) (committer_magic_files_created=0) (stream_write_total_data=4980736) (committer_commits_created=0) (committer_commits_reverted=0) (op_get_content_summary.failures=0) (op_xattr_list.failures=0) (op_createfile=0) (stream_read_bytes_discarded_in_close=326680) (op_list_located_status=0) (store_io_throttled=0) (action_http_get_request=35) (op_xattr_get_named.failures=0) (op_create=38) (object_put_request.failures=0) (files_deleted=38) (multipart_upload_abort_under_path_invoked=0) (stream_read_vectored_incoming_ranges=84) (op_get_file_status=2) (op_delete.failures=0) (committer_load_single_pending_file=0) (audit_access_check_failure=0) (store_exists_probe.failures=0) (action_executor_acquired.failures=0) (stream_read_vectored_read_bytes_discarded=35383) (stream_read_operations=5) (stream_write_queue_duration=0) (audit_span_creation=149) (stream_read_seek_forward_operations=0) (committer_commit_job=0) (stream_write_block_uploads_aborted=0) (op_abort=0) (op_get_file_checksum.failures=0) (object_put_request=76) (files_delete_rejected=0) (fake_directories_created=0) (multipart_upload_list=0) (audit_request_execution=447) (fake_directories_deleted=38) (stream_read_fully_operations=1) (stream_read_remote_stream_drain.failures=0) (store_io_retry=0) (files_copied_bytes=0) (object_list_request=152) (object_copy_requests=0) (op_mkdirs=38) (action_file_opened.failures=0) (op_list_files=0) (directories_created=38) (stream_read_close_operations=32) (op_copy_from_local_file.failures=0) (op_create_non_recursive=0) (committer_commits.failures=0) (op_is_file.failures=0) (stream_read_total_bytes=337382) (action_executor_acquired=0) (store_exists_probe=0) (stream_read_bytes_backwards_on_seek=0) (op_is_directory.failures=0) (committer_commits_completed=0) (multipart_upload_aborted=0) (delegation_tokens_issued=0) (multipart_upload_list.failures=0) (op_copy_from_local_file=0) (ignored_errors=0) (committer_stage_file_upload.failures=0) (object_list_request.failures=0) (object_multipart_initiated.failures=0) (op_is_directory=0) (stream_read_remote_stream_aborted=0) (op_list_status=0) (stream_read_bytes=10702) (stream_read_opened=5) (stream_read_unbuffered=2) (action_http_head_request=108) (object_continue_list_request=0) (op_xattr_get_named_map.failures=0) (multipart_upload_completed=0) (op_hflush=0) (object_multipart_aborted=0) (object_select_requests=0) (stream_read_remote_stream_aborted.failures=0) (committer_bytes_uploaded=0) (stream_read_vectored_operations=26) (object_continue_list_request.failures=0) (op_get_file_checksum=0) (op_xattr_get_named=0) (op_get_delegation_token.failures=0) (object_put_request_completed=76) (stream_write_block_uploads_committed=0) (object_metadata_request=108) (op_mkdirs.failures=0) (stream_read_version_mismatches=0) (op_abort.failures=0) (stream_read_seek_bytes_skipped=0) (committer_bytes_committed=0) (stream_read_closed=5) (op_createfile.failures=0) (multipart_upload_part_put=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (delegation_tokens_issued.failures=0) (stream_read_operations_incomplete=0) (multipart_upload_started=0) (op_xattr_get_map.failures=0) (op_is_file=0) (committer_materialize_file.failures=0) (multipart_upload_part_put_bytes=0) (object_multipart_aborted.failures=0) (committer_tasks_completed=0) (op_exists=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_read_seek_policy_changed=34) (action_http_head_request.failures=0) (op_open=32) (op_glob_status=0) (stream_read_exceptions=0) (committer_stage_file_upload=0) (stream_write_queue_duration.failures=0) (object_delete_objects=76) (stream_read_bytes_discarded_in_abort=0) (store_io_request=447) (committer_load_single_pending_file.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=38));
minimums=((object_delete_request.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.min=17) (op_exists.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_directory.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_status.failures.min=-1) (op_list_files.failures.min=-1) (action_file_opened.failures.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.min=-1) (action_http_head_request.min=2) (op_abort.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_list_status.min=-1) (op_xattr_get_map.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_checksum.min=-1) (op_abort.failures.min=-1) (op_access.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_delegation_token.min=-1) (op_get_content_summary.min=-1) (op_is_file.failures.min=-1) (committer_materialize_file.min=-1) (object_put_request.min=17) (object_multipart_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_delegation_token.failures.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_list.min=-1) (action_http_get_request.min=14) (op_is_file.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_list.min=-1) (op_copy_from_local_file.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.min=-1) (op_rename.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_status.failures.min=-1) (op_createfile.failures.min=-1) (op_rename.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_create.min=4) (op_list_files.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.failures.min=-1) (op_createfile.min=-1) (store_exists_probe.min=-1) (action_file_opened.min=3) (object_continue_list_request.failures.min=-1) (op_delete.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_named.failures.min=-1) (op_exists.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.min=4) (committer_stage_file_upload.min=-1) (op_delete.min=19) (op_is_directory.min=-1) (object_bulk_delete_request.min=5) (op_get_file_status.min=5) (op_glob_status.min=-1) (op_access.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_drain.min=0) (op_glob_status.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.failures.min=-1));
maximums=((op_xattr_get_named_map.failures.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.max=-1) (action_http_get_request.max=26) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_directory.max=-1) (action_http_get_request.failures.max=-1) (committer_commit_job.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_rename.max=-1) (object_bulk_delete_request.max=17) (action_file_opened.max=12) (op_access.failures.max=-1) (op_xattr_get_named.max=-1) (op_exists.max=-1) (object_delete_request.failures.max=-1) (op_mkdirs.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_mkdirs.max=263) (multipart_upload_list.max=-1) (op_xattr_list.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_list.max=-1) (object_delete_request.max=-1) (object_put_request.max=71) (stream_read_remote_stream_drain.max=4) (action_executor_acquired.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_continue_list_request.max=-1) (action_http_head_request.max=15) (op_list_files.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_checksum.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.max=-1) (op_list_status.failures.max=-1) (op_get_file_status.failures.max=-1) (op_create.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_directory.failures.max=-1) (op_access.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (op_glob_status.failures.max=-1) (op_createfile.max=-1) (op_glob_status.max=-1) (op_is_file.max=-1) (op_abort.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_file_opened.failures.max=-1) (op_create.max=45) (op_list_status.max=-1) (op_is_file.failures.max=-1) (committer_commit_job.max=-1) (op_createfile.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_list_request.max=167) (object_put_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_list_files.failures.max=-1) (committer_materialize_file.max=-1) (committer_magic_marker_put.max=-1) (object_continue_list_request.failures.max=-1) (object_list_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named_map.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_status.max=8) (stream_read_remote_stream_aborted.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.max=58) (op_rename.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.max=-1));
means=((op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=108, sum=465, mean=4.3056)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=152, sum=1275, mean=8.3882)) (op_create.mean=(samples=38, sum=389, mean=10.2368)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=76, sum=1395, mean=18.3553)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=32, sum=160, mean=5.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=38, sum=1222, mean=32.1579)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=76, sum=576, mean=7.5789)) (action_http_get_request.mean=(samples=35, sum=481, mean=13.7429)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=38, sum=1227, mean=32.2895)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:52,161 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:52,161 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,161 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,161 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,161 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,161 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000183 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000183&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=227&ts=1731777832161
2024-11-16 17:23:52,166 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,166 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000183 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000183&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=227&ts=1731777832161
2024-11-16 17:23:52,168 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,168 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:52,168 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:52,168 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:52,168 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000183 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000183&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=227&ts=1731777832161
2024-11-16 17:23:52,175 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:52,176 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:52,176 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:23:52,176 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:52,176 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,176 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,176 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,176 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,176 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000184 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000184/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000184&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=227&ts=1731777832176
2024-11-16 17:23:52,181 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,181 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,182 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:52,182 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10175519116451713050.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:52,182 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10175519116451713050.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (stream_write_total_data=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (op_abort=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (op_hsync=0) (stream_write_bytes=65536) (action_executor_acquired=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (op_hflush=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10175519116451713050.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,182 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,183 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:52,183 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10175519116451713050.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:52,183 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:52,183 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:52,183 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:52,183 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:52,183 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000184 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000184/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000184&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=132&ts=1731777832176
2024-11-16 17:23:52,198 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:52,198 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:52,198 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.015s
2024-11-16 17:23:52,199 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10175519116451713050.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:52,199 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10175519116451713050.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,199 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10175519116451713050.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,199 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:52,199 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,200 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (committer_magic_marker_put=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_put_request.failures=0) (stream_write_bytes=65536) (stream_write_total_time=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (op_hsync=0) (op_abort=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=1) (object_put_request=1) (op_hflush=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=15) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=15) (op_abort.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=15, mean=15.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:52,201 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:52,202 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,202 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,202 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:52,202 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000185 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000185/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000185&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=227&ts=1731777832202
2024-11-16 17:23:52,205 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:52,205 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:52,206 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,206 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:23:52,206 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:52,206 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:23:52,206 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:23:52,206 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,206 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,206 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:52,207 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000185 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000185/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-7998&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000185&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=133&ts=1731777832202
2024-11-16 17:23:52,213 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.007s
2024-11-16 17:23:52,214 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:23:52,214 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:23:52,214 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,216 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_bytes=300) (action_http_get_request=1) (stream_read_remote_stream_drain.failures=0) (stream_read_total_bytes=300) (stream_read_unbuffered=0) (stream_read_closed=0) (stream_read_vectored_read_bytes_discarded=7699) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_operations_incomplete=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_policy_changed=1) (stream_read_seek_bytes_skipped=0) (stream_read_operations=0) (action_file_opened=1) (stream_read_vectored_incoming_ranges=3) (action_executor_acquired=0) (stream_read_prefetch_operations.failures=0) (stream_read_opened=0) (stream_read_close_operations=1) (stream_read_vectored_combined_ranges=1) (stream_read_block_read=0) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_file_opened.min=3) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=8) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=8) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=3) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:52,217 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:52,217 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,217 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,218 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=227&ts=1731777832217
2024-11-16 17:23:52,220 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,220 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,220 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=227&ts=1731777832217
2024-11-16 17:23:52,226 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:52,226 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:52,226 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:52,226 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:52,226 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:52,227 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:52,227 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:52,227 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:52,227 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:52,227 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:52,227 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:52,227 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:52,228 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:52,228 [s3a-transfer-leg-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:52,228 [s3a-transfer-leg-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,228 [s3a-transfer-leg-bucket-unbounded-pool2-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=228&ts=1731777832217
2024-11-16 17:23:52,234 [s3a-transfer-leg-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:52,234 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:52,234 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:52,234 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:52,234 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:52,234 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777832196; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:52,234 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:52,234 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:52,234 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:52,234 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:52,234 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:52,234 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:52,235 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:52,235 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:52,235 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,235 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,235 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:52,235 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,235 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=134&ts=1731777832217
2024-11-16 17:23:52,240 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:52,241 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:52,241 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:23:52,241 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:52,241 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:52,241 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,241 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,241 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:52,241 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,241 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000186&t0=227&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=134&ts=1731777832217
2024-11-16 17:23:52,250 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:23:52,251 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:23:52,251 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:23:52,251 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:23:52,251 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:23:52,251 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:23:52,251 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:52,251 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:52,257 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:52,276 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 48, active threads = 0, queued tasks = 0, completed tasks = 48], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_jobs_completed=0) (op_create_non_recursive=0) (op_access.failures=0) (committer_jobs_failed=0) (committer_commits_aborted=0) (stream_read_remote_stream_drain.failures=0) (store_exists_probe=0) (stream_read_vectored_read_bytes_discarded=43082) (stream_read_total_bytes=337682) (directories_deleted=0) (stream_write_total_time=0) (op_is_file=0) (op_list_status.failures=0) (stream_read_fully_operations=1) (stream_write_block_uploads=39) (ignored_errors=0) (op_exists=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_opened=5) (op_xattr_get_named_map=0) (committer_commit_job.failures=0) (op_xattr_get_map.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted=0) (op_get_delegation_token=0) (op_mkdirs.failures=0) (stream_write_exceptions_completing_upload=0) (object_list_request=156) (op_open=33) (committer_magic_marker_put=0) (fake_directories_created=0) (committer_commit_job=0) (stream_read_bytes_discarded_in_close=326680) (stream_write_exceptions=0) (store_io_request=459) (committer_commits_completed=0) (op_openfile=0) (stream_read_closed=5) (fake_directories_deleted=39) (committer_commits.failures=0) (op_xattr_list.failures=0) (store_io_retry=0) (committer_load_single_pending_file=0) (committer_tasks_failed=0) (op_create=39) (op_create.failures=0) (multipart_upload_started=0) (object_put_request=78) (op_xattr_get_named=0) (op_get_file_checksum.failures=0) (stream_read_bytes=11002) (op_rename=0) (stream_write_queue_duration=0) (committer_materialize_file=0) (stream_read_unbuffered=2) (action_file_opened.failures=0) (action_http_head_request=111) (files_deleted=39) (object_delete_objects=78) (object_bulk_delete_request.failures=0) (op_copy_from_local_file=0) (delegation_tokens_issued.failures=0) (stream_read_version_mismatches=0) (op_glob_status.failures=0) (stream_aborted=0) (audit_request_execution=459) (committer_magic_marker_put.failures=0) (committer_load_single_pending_file.failures=0) (audit_access_check_failure=0) (files_copied_bytes=0) (stream_read_seek_forward_operations=0) (audit_failure=0) (op_delete=39) (op_get_delegation_token.failures=0) (op_is_directory.failures=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (op_hflush=0) (op_access=0) (object_metadata_request=111) (op_rename.failures=0) (op_xattr_get_named_map.failures=0) (committer_stage_file_upload=0) (multipart_upload_abort_under_path_invoked=0) (multipart_instantiated=0) (object_delete_request.failures=0) (stream_read_vectored_operations=27) (op_list_status=0) (action_file_opened=33) (object_list_request.failures=0) (stream_write_total_data=5111808) (op_get_content_summary.failures=0) (stream_read_seek_backward_operations=0) (op_get_file_status=2) (stream_read_seek_bytes_discarded=0) (object_continue_list_request=0) (op_createfile=0) (op_copy_from_local_file.failures=0) (op_mkdirs=39) (stream_write_block_uploads_aborted=0) (stream_write_queue_duration.failures=0) (stream_write_block_uploads_committed=0) (stream_read_vectored_combined_ranges=35) (files_delete_rejected=0) (multipart_upload_part_put=0) (stream_read_remote_stream_drain=5) (op_xattr_list=0) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_list.failures=0) (op_get_file_status.failures=0) (object_put_request.failures=0) (files_copied=0) (action_http_head_request.failures=0) (action_http_get_request.failures=0) (object_multipart_initiated=0) (op_abort=0) (action_http_get_request=36) (op_glob_status=0) (stream_read_close_operations=33) (object_multipart_initiated.failures=0) (op_createfile.failures=0) (committer_magic_files_created=0) (action_executor_acquired=0) (op_abort.failures=0) (store_io_throttled=0) (op_xattr_get_map=0) (op_hsync=0) (op_exists.failures=0) (object_put_request_completed=78) (files_created=39) (multipart_upload_list=0) (op_is_file.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_incoming_ranges=87) (object_select_requests=0) (stream_read_operations=5) (stream_read_operations_incomplete=0) (op_get_content_summary=0) (stream_read_exceptions=0) (object_multipart_aborted=0) (committer_bytes_committed=0) (op_list_located_status=0) (delegation_tokens_issued=0) (op_list_files.failures=0) (op_xattr_get_named.failures=0) (audit_span_creation=153) (object_bulk_delete_request=78) (committer_commits_created=0) (store_exists_probe.failures=0) (object_delete_request=0) (op_delete.failures=0) (committer_stage_file_upload.failures=0) (stream_write_bytes=2555904) (op_list_files=0) (stream_read_seek_policy_changed=35) (committer_bytes_uploaded=0) (directories_created=39) (object_multipart_aborted.failures=0) (committer_commits_reverted=0) (object_copy_requests=0) (committer_tasks_completed=0) (op_get_file_checksum=0) (object_continue_list_request.failures=0) (multipart_upload_part_put_bytes=0) (object_put_bytes=2555904) (op_is_directory=0) (stream_read_remote_stream_aborted.failures=0) (committer_materialize_file.failures=0) (multipart_upload_aborted=0));
gauges=((object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=39) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_files.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_file_status.min=5) (op_glob_status.min=-1) (op_exists.min=-1) (committer_commit_job.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_delete.min=19) (action_http_head_request.failures.min=-1) (op_mkdirs.min=15) (action_file_opened.min=3) (committer_load_single_pending_file.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.min=-1) (store_exists_probe.failures.min=-1) (committer_materialize_file.min=-1) (op_exists.failures.min=-1) (op_xattr_get_map.min=-1) (op_access.failures.min=-1) (object_delete_request.failures.min=-1) (op_rename.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (action_file_opened.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_list.min=-1) (op_list_status.failures.min=-1) (object_delete_request.min=-1) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_magic_marker_put.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_file.min=-1) (op_abort.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_content_summary.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (op_get_delegation_token.failures.min=-1) (op_createfile.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_files.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.failures.min=-1) (multipart_upload_list.min=-1) (object_put_request.min=15) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_named.failures.min=-1) (store_exists_probe.min=-1) (action_http_get_request.min=8) (object_list_request.min=4) (op_list_status.min=-1) (op_rename.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.failures.min=-1) (op_abort.failures.min=-1) (op_access.min=-1) (stream_write_queue_duration.failures.min=-1) (op_mkdirs.failures.min=-1) (object_bulk_delete_request.min=5) (op_get_file_status.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_file.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_create.min=4) (op_xattr_get_map.failures.min=-1) (op_is_directory.min=-1) (op_get_file_checksum.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.min=2) (object_continue_list_request.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_drain.min=0) (op_copy_from_local_file.failures.min=-1) (op_is_directory.failures.min=-1));
maximums=((action_http_head_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_drain.max=4) (object_list_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.max=-1) (delegation_tokens_issued.failures.max=-1) (object_put_request.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_directory.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_file.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (op_is_file.failures.max=-1) (op_glob_status.max=-1) (op_exists.max=-1) (op_create.max=45) (multipart_upload_list.max=-1) (op_get_file_status.failures.max=-1) (object_list_request.max=167) (action_file_opened.max=12) (op_delete.failures.max=-1) (op_is_directory.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.failures.max=-1) (op_mkdirs.max=263) (op_mkdirs.failures.max=-1) (action_http_head_request.max=15) (op_get_file_status.max=8) (object_delete_request.failures.max=-1) (op_abort.max=-1) (committer_materialize_file.failures.max=-1) (op_access.max=-1) (op_xattr_list.max=-1) (store_exists_probe.failures.max=-1) (op_createfile.failures.max=-1) (op_get_content_summary.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.failures.max=-1) (op_create.failures.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_rename.max=-1) (op_get_file_checksum.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (op_createfile.max=-1) (op_glob_status.failures.max=-1) (object_bulk_delete_request.max=17) (op_get_file_checksum.max=-1) (delegation_tokens_issued.max=-1) (op_access.failures.max=-1) (object_put_request.max=71) (stream_read_remote_stream_drain.failures.max=-1) (op_exists.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (object_multipart_aborted.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_files.failures.max=-1) (committer_commit_job.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.max=58) (action_http_get_request.max=26) (op_list_status.max=-1) (op_xattr_list.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named.max=-1));
means=((op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=111, sum=473, mean=4.2613)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=33, sum=163, mean=4.9394)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=78, sum=590, mean=7.5641)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=39, sum=395, mean=10.1282)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=39, sum=1237, mean=31.7179)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=39, sum=1251, mean=32.0769)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=156, sum=1297, mean=8.3141)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=36, sum=489, mean=13.5833)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=78, sum=1417, mean=18.1667)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:52,277 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:52,277 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,277 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,277 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,277 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,277 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000187 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000187&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=229&ts=1731777832276
2024-11-16 17:23:52,283 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:52,283 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,283 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,283 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,283 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,283 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000187 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000187&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=229&ts=1731777832276
2024-11-16 17:23:52,286 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,286 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:52,286 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:52,286 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:52,286 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000187 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000187&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=229&ts=1731777832276
2024-11-16 17:23:52,294 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:52,295 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:52,295 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:23:52,295 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:52,295 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,295 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,295 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,295 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,295 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000188 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000188/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000188&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=229&ts=1731777832295
2024-11-16 17:23:52,300 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,300 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:52,301 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17438884145275534805.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:52,301 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17438884145275534805.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (action_executor_acquired=0) (stream_write_bytes=65536) (op_hsync=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (op_abort=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (stream_write_total_time=0) (object_put_request=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17438884145275534805.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,301 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,301 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:52,301 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17438884145275534805.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:52,302 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:52,302 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:52,302 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:52,302 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:52,302 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000188 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000188/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000188&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=135&ts=1731777832295
2024-11-16 17:23:52,320 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:52,321 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:52,321 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.019s
2024-11-16 17:23:52,322 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17438884145275534805.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:52,322 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17438884145275534805.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,322 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17438884145275534805.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,322 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:52,323 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,324 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted=0) (stream_write_queue_duration=0) (op_abort=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (stream_write_total_data=65536) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (action_executor_acquired.failures=0) (object_put_request=1) (action_executor_acquired=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (object_put_request.failures=0) (stream_write_exceptions=0) (op_hflush=0) (op_abort.failures=0) (op_hsync=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=18) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=18) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=18, mean=18.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:52,324 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:52,325 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,325 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,325 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:52,326 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=229&ts=1731777832325
2024-11-16 17:23:52,329 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:52,329 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:52,329 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,329 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:52,330 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:52,330 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:23:52,330 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:23:52,330 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,330 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,330 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:52,330 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=40960-41983&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=145&ts=1731777832325
2024-11-16 17:23:52,330 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,330 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,331 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,331 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:52,331 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=1947-2046&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=142&ts=1731777832325
2024-11-16 17:23:52,331 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,331 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:52,331 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=8192-14435&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000189&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=144&ts=1731777832325
2024-11-16 17:23:52,343 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:23:52,343 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:23:52,343 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:23:52,345 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:23:52,345 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:23:52,345 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,350 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,350 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,351 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0) (stream_read_version_mismatches=0) (stream_read_vectored_operations=1) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=3) (stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (action_http_get_request=3) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_remote_stream_drain=0) (stream_read_vectored_incoming_ranges=5) (stream_read_block_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_forward_operations=0) (action_executor_acquired=0) (stream_read_fully_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=1424) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_bytes=1424) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=12) (action_file_opened.min=4) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1));
maximums=((action_http_get_request.max=15) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=4) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=41, mean=13.6667)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:52,352 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:52,352 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,352 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,352 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=229&ts=1731777832352
2024-11-16 17:23:52,355 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,355 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,355 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=229&ts=1731777832352
2024-11-16 17:23:52,360 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,360 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:52,360 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:52,361 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:52,361 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:52,361 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:52,361 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:52,361 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:52,361 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:52,361 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:52,361 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:52,362 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:52,362 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:52,362 [s3a-transfer-leg-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:52,365 [s3a-transfer-leg-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,365 [s3a-transfer-leg-bucket-unbounded-pool2-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [235] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=235&ts=1731777832352
2024-11-16 17:23:52,370 [s3a-transfer-leg-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,370 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:23:52,370 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:52,370 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:52,370 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:52,370 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777832318; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:52,370 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:52,370 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:52,370 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:52,371 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:52,371 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:52,371 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:52,371 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:52,371 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:52,371 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,371 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,371 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:52,371 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,372 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=147&ts=1731777832352
2024-11-16 17:23:52,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:52,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:52,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:23:52,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:52,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:52,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,377 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:52,377 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,377 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000190&t0=229&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=147&ts=1731777832352
2024-11-16 17:23:52,381 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:23:52,381 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:52,381 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:23:52,381 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.010s
2024-11-16 17:23:52,381 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.010s
2024-11-16 17:23:52,381 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.020s
2024-11-16 17:23:52,381 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:52,381 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:52,382 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:52,393 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 49, active threads = 0, queued tasks = 0, completed tasks = 49], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_bytes_discarded_in_abort=0) (stream_write_bytes=2621440) (stream_read_bytes=12426) (stream_read_vectored_read_bytes_discarded=49026) (stream_write_block_uploads_committed=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_multipart_aborted.failures=0) (committer_materialize_file=0) (committer_commit_job=0) (object_bulk_delete_request.failures=0) (multipart_upload_aborted=0) (op_list_status.failures=0) (op_create=40) (object_list_request=160) (action_file_opened=34) (committer_commit_job.failures=0) (multipart_instantiated=0) (op_rename.failures=0) (object_select_requests=0) (audit_request_execution=473) (op_delete.failures=0) (op_createfile.failures=0) (delegation_tokens_issued.failures=0) (files_delete_rejected=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits_created=0) (object_multipart_aborted=0) (stream_write_total_time=0) (files_copied_bytes=0) (committer_commits.failures=0) (audit_span_creation=157) (store_io_retry=0) (committer_magic_marker_put=0) (op_createfile=0) (object_continue_list_request.failures=0) (directories_created=40) (stream_read_unbuffered=2) (op_abort.failures=0) (fake_directories_created=0) (stream_write_block_uploads_aborted=0) (audit_failure=0) (stream_aborted=0) (object_delete_request=0) (op_create_non_recursive=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (stream_read_exceptions=0) (store_io_throttled=0) (op_delete=40) (stream_read_seek_backward_operations=0) (op_exists=0) (action_executor_acquired=0) (committer_load_single_pending_file.failures=0) (stream_read_vectored_incoming_ranges=92) (committer_tasks_failed=0) (op_get_file_checksum.failures=0) (stream_read_seek_bytes_discarded=0) (store_exists_probe=0) (ignored_errors=0) (multipart_upload_part_put=0) (object_put_request=80) (op_xattr_get_named_map.failures=0) (action_http_get_request=39) (object_put_request_completed=80) (stream_read_operations_incomplete=0) (op_xattr_get_map=0) (store_io_request=473) (op_xattr_get_map.failures=0) (stream_read_close_operations=34) (committer_commits_completed=0) (op_xattr_list=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (action_file_opened.failures=0) (op_access.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_started=0) (op_is_file=0) (committer_commits_reverted=0) (op_copy_from_local_file=0) (op_list_status=0) (committer_load_single_pending_file=0) (op_get_file_status=2) (op_mkdirs.failures=0) (audit_access_check_failure=0) (op_list_located_status=0) (multipart_upload_list=0) (op_is_file.failures=0) (op_rename=0) (committer_bytes_committed=0) (stream_read_bytes_discarded_in_close=326680) (stream_read_vectored_operations=28) (committer_jobs_failed=0) (stream_write_queue_duration.failures=0) (object_delete_request.failures=0) (committer_jobs_completed=0) (stream_write_block_uploads=40) (object_bulk_delete_request=80) (object_metadata_request=114) (op_glob_status=0) (stream_read_operations=5) (delegation_tokens_issued=0) (committer_stage_file_upload=0) (op_is_directory=0) (op_glob_status.failures=0) (op_xattr_list.failures=0) (op_abort=0) (committer_tasks_completed=0) (files_created=40) (stream_read_closed=5) (stream_read_remote_stream_drain=5) (fake_directories_deleted=40) (stream_write_total_data=5242880) (op_list_files.failures=0) (op_get_content_summary=0) (stream_read_remote_stream_aborted=0) (op_list_files=0) (store_exists_probe.failures=0) (stream_read_seek_policy_changed=36) (op_get_delegation_token=0) (op_is_directory.failures=0) (committer_stage_file_upload.failures=0) (object_delete_objects=80) (stream_read_total_bytes=339106) (op_get_file_status.failures=0) (op_mkdirs=40) (op_exists.failures=0) (stream_read_seek_forward_operations=0) (object_copy_requests=0) (stream_read_fully_operations=1) (action_http_head_request.failures=0) (object_continue_list_request=0) (stream_read_vectored_combined_ranges=38) (object_list_request.failures=0) (multipart_upload_part_put_bytes=0) (object_put_bytes=2621440) (op_get_content_summary.failures=0) (stream_read_opened=5) (op_access=0) (files_deleted=40) (op_hflush=0) (directories_deleted=0) (op_xattr_get_named.failures=0) (committer_materialize_file.failures=0) (object_put_request.failures=0) (op_copy_from_local_file.failures=0) (stream_read_version_mismatches=0) (stream_write_queue_duration=0) (op_openfile=0) (object_multipart_initiated.failures=0) (op_xattr_get_named=0) (files_copied=0) (committer_bytes_uploaded=0) (committer_magic_files_created=0) (op_get_delegation_token.failures=0) (op_create.failures=0) (stream_read_seek_operations=0) (op_open=34) (op_get_file_checksum=0) (action_http_get_request.failures=0) (op_xattr_get_named_map=0) (multipart_upload_list.failures=0) (stream_read_seek_bytes_skipped=0) (action_http_head_request=114) (op_hsync=0) (stream_read_remote_stream_drain.failures=0) (committer_commits_aborted=0) (multipart_upload_abort_under_path_invoked=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=40) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0));
minimums=((committer_materialize_file.min=-1) (action_http_get_request.min=12) (store_exists_probe.failures.min=-1) (committer_commit_job.failures.min=-1) (op_list_status.min=-1) (op_is_file.min=-1) (op_mkdirs.min=15) (delegation_tokens_issued.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.min=-1) (op_get_file_checksum.min=-1) (action_file_opened.min=4) (op_is_directory.min=-1) (delegation_tokens_issued.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_status.min=5) (committer_load_single_pending_file.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_content_summary.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_materialize_file.failures.min=-1) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_map.min=-1) (op_get_file_status.failures.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.min=4) (object_delete_request.min=-1) (op_access.min=-1) (op_list_files.failures.min=-1) (object_list_request.failures.min=-1) (op_create.min=4) (op_delete.min=19) (op_exists.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_rename.failures.min=-1) (op_exists.min=-1) (committer_load_single_pending_file.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_glob_status.failures.min=-1) (op_rename.min=-1) (object_multipart_initiated.failures.min=-1) (op_access.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.min=4) (op_xattr_get_named_map.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_list.failures.min=-1) (action_executor_acquired.min=-1) (op_createfile.min=-1) (op_get_delegation_token.min=-1) (action_http_head_request.min=2) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (action_http_head_request.failures.min=-1) (op_list_files.min=-1) (op_glob_status.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named.failures.min=-1) (object_continue_list_request.min=-1) (action_file_opened.failures.min=-1) (op_list_status.failures.min=-1) (object_put_request.min=18) (op_get_delegation_token.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((object_continue_list_request.failures.max=-1) (op_list_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_delete.max=58) (object_delete_request.max=-1) (object_list_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_commit_job.failures.max=-1) (action_http_get_request.max=26) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_commit_job.max=-1) (op_abort.max=-1) (object_put_request.max=71) (op_is_file.max=-1) (multipart_upload_list.max=-1) (op_glob_status.max=-1) (op_createfile.failures.max=-1) (op_get_file_status.max=8) (object_multipart_initiated.max=-1) (action_http_get_request.failures.max=-1) (op_is_file.failures.max=-1) (action_file_opened.failures.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.max=-1) (object_put_request.failures.max=-1) (op_list_files.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_delete.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_drain.max=4) (op_mkdirs.max=263) (op_get_file_status.failures.max=-1) (op_exists.failures.max=-1) (op_rename.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_access.max=-1) (op_is_directory.failures.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_list.max=-1) (op_createfile.max=-1) (stream_write_queue_duration.max=-1) (op_rename.max=-1) (op_create.max=45) (op_list_status.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.max=15) (op_xattr_get_named_map.max=-1) (op_get_content_summary.max=-1) (op_abort.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_directory.max=-1) (op_get_file_checksum.max=-1) (action_file_opened.max=12) (op_xattr_get_named_map.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_content_summary.failures.max=-1) (store_exists_probe.max=-1) (op_create.failures.max=-1) (op_mkdirs.failures.max=-1) (op_access.failures.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.max=17) (object_list_request.max=167) (multipart_upload_list.failures.max=-1) (object_delete_request.failures.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_map.failures.max=-1) (store_exists_probe.failures.max=-1) (op_exists.max=-1) (committer_magic_marker_put.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=80, sum=598, mean=7.4750)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=80, sum=1443, mean=18.0375)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=160, sum=1318, mean=8.2375)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=114, sum=483, mean=4.2368)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=39, sum=530, mean=13.5897)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=40, sum=401, mean=10.0250)) (action_file_opened.mean=(samples=34, sum=167, mean=4.9118)) (op_mkdirs.mean=(samples=40, sum=1255, mean=31.3750)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=40, sum=1271, mean=31.7750)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:52,393 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:52,393 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,393 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,393 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,394 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,394 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000191 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000191&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=236&ts=1731777832393
2024-11-16 17:23:52,398 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:52,398 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,398 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,399 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,399 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,399 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000191 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000191&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=236&ts=1731777832393
2024-11-16 17:23:52,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,402 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:52,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:52,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:52,402 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000191 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000191&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=236&ts=1731777832393
2024-11-16 17:23:52,410 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:52,410 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:52,410 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:23:52,410 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:52,410 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,410 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,410 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,411 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,411 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000192 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000192/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000192&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=236&ts=1731777832410
2024-11-16 17:23:52,415 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:52,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,416 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:52,416 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2336454412033508694.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:52,417 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2336454412033508694.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (object_put_request=0) (op_abort.failures=0) (stream_write_exceptions=0) (op_abort=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (op_hflush=0) (object_multipart_aborted=0) (op_hsync=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1));
maximums=((object_put_request.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2336454412033508694.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,417 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,417 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:52,417 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2336454412033508694.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:52,417 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:52,417 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:52,417 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:52,418 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:52,418 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000192 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000192/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000192&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=149&ts=1731777832410
2024-11-16 17:23:52,434 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:52,434 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:52,434 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:23:52,434 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2336454412033508694.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:52,435 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2336454412033508694.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,435 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2336454412033508694.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,435 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:52,435 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,436 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (op_hsync=0) (stream_write_exceptions=0) (object_put_request=1) (op_abort=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=16) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1));
maximums=((committer_magic_marker_put.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=16) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=16, mean=16.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:52,436 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:52,436 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,437 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,437 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:52,437 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000193 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000193&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=236&ts=1731777832436
2024-11-16 17:23:52,440 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:52,440 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:52,440 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,440 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:23:52,440 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:23:52,440 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:23:52,441 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,441 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,441 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:23:52,441 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000193 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=100-199&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000193&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=152&ts=1731777832436
2024-11-16 17:23:52,442 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:23:52,442 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:23:52,442 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,442 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000193 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=100-65535&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000193&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=236&ts=1731777832436
2024-11-16 17:23:52,450 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.008s
2024-11-16 17:23:52,450 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.009s
2024-11-16 17:23:52,451 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,451 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:23:52,451 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:23:52,451 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:23:52,451 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:23:52,451 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:23:52,452 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 5141 bytes
2024-11-16 17:23:52,452 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:52,452 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:52,452 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:23:52,452 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 11043 bytes
2024-11-16 17:23:52,452 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:23:52,452 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:23:52,453 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_aborted=0) (stream_read_closed=1) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0) (stream_read_total_bytes=65536) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=1) (stream_read_block_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations=1) (stream_read_block_read=0) (stream_read_opened=1) (action_http_get_request=2) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_incoming_ranges=1) (stream_read_bytes=200) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain=1) (stream_read_block_acquire_read=0) (stream_read_seek_backward_operations=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read.failures=0) (action_file_opened=1) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_close=65336) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((action_file_opened.failures.min=-1) (action_http_get_request.min=8) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=4) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((action_file_opened.max=4) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_block_read.max=-1) (action_http_get_request.max=10));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=18, mean=9.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:52,453 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:52,454 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,454 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,454 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=236&ts=1731777832453
2024-11-16 17:23:52,456 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,456 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,456 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=236&ts=1731777832453
2024-11-16 17:23:52,461 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,462 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:52,462 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:52,462 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:52,462 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:52,462 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:52,462 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:52,462 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:52,462 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:52,462 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:52,462 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:52,463 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:52,463 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:52,463 [s3a-transfer-leg-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:52,463 [s3a-transfer-leg-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,463 [s3a-transfer-leg-bucket-unbounded-pool2-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [237] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=237&ts=1731777832453
2024-11-16 17:23:52,468 [s3a-transfer-leg-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,468 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:23:52,468 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:52,469 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:52,469 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:52,469 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777832431; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:52,469 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:52,469 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:52,470 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:52,470 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:52,470 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:52,470 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:52,470 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:52,470 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:52,470 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,470 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,470 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:52,470 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,471 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=154&ts=1731777832453
2024-11-16 17:23:52,486 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:23:52,487 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:23:52,487 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.017s
2024-11-16 17:23:52,487 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:52,487 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:52,487 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,487 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,487 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:52,487 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,487 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000194&t0=236&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=154&ts=1731777832453
2024-11-16 17:23:52,495 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:23:52,495 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:23:52,495 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:23:52,495 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.025s
2024-11-16 17:23:52,496 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.026s
2024-11-16 17:23:52,496 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:23:52,496 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:52,496 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:52,497 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:52,509 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 50, active threads = 0, queued tasks = 0, completed tasks = 50], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((ignored_errors=0) (op_get_content_summary=0) (stream_read_seek_bytes_skipped=0) (op_get_delegation_token=0) (op_xattr_get_named=0) (stream_write_total_data=5373952) (committer_commits_reverted=0) (op_rename.failures=0) (committer_commit_job.failures=0) (object_select_requests=0) (committer_commits_completed=0) (op_create.failures=0) (files_delete_rejected=0) (stream_read_operations=6) (multipart_upload_abort_under_path_invoked=0) (op_abort.failures=0) (files_created=41) (multipart_instantiated=0) (stream_read_remote_stream_aborted=0) (op_list_status.failures=0) (op_open=35) (object_continue_list_request=0) (op_glob_status.failures=0) (stream_write_exceptions_completing_upload=0) (committer_jobs_completed=0) (op_list_files.failures=0) (stream_read_seek_backward_operations=0) (multipart_upload_list.failures=0) (object_continue_list_request.failures=0) (committer_magic_marker_put.failures=0) (stream_read_exceptions=0) (delegation_tokens_issued=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_operations=0) (multipart_upload_list=0) (op_is_file=0) (op_xattr_get_named.failures=0) (object_put_bytes=2686976) (op_is_file.failures=0) (files_deleted=41) (audit_span_creation=161) (committer_commits_aborted=0) (committer_jobs_failed=0) (committer_tasks_failed=0) (multipart_upload_part_put=0) (op_xattr_get_map=0) (op_list_located_status=0) (files_copied_bytes=0) (action_file_opened=35) (stream_read_vectored_combined_ranges=39) (op_copy_from_local_file.failures=0) (committer_commits.failures=0) (store_exists_probe=0) (object_put_request.failures=0) (directories_created=41) (stream_write_queue_duration=0) (op_is_directory=0) (op_hflush=0) (stream_read_total_bytes=404642) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (op_list_files=0) (stream_read_vectored_read_bytes_discarded=49026) (op_copy_from_local_file=0) (multipart_upload_completed=0) (op_get_file_status.failures=0) (stream_read_bytes_discarded_in_close=392016) (stream_write_block_uploads_aborted=0) (object_delete_objects=82) (op_delete=41) (store_exists_probe.failures=0) (object_bulk_delete_request.failures=0) (delegation_tokens_issued.failures=0) (stream_read_bytes=12626) (op_delete.failures=0) (op_abort=0) (object_multipart_initiated=0) (op_access=0) (multipart_upload_aborted=0) (stream_write_queue_duration.failures=0) (stream_read_vectored_operations=29) (object_delete_request.failures=0) (action_http_get_request=41) (op_create_non_recursive=0) (committer_commit_job=0) (files_copied=0) (stream_read_vectored_incoming_ranges=93) (op_xattr_get_map.failures=0) (op_is_directory.failures=0) (object_multipart_initiated.failures=0) (op_rename=0) (action_file_opened.failures=0) (committer_load_single_pending_file.failures=0) (op_get_file_status=2) (stream_read_close_operations=35) (object_put_request_completed=82) (stream_write_bytes=2686976) (op_xattr_get_named_map.failures=0) (object_list_request=164) (stream_read_seek_policy_changed=37) (stream_write_total_time=0) (stream_read_operations_incomplete=0) (audit_request_execution=486) (stream_read_seek_forward_operations=0) (op_get_file_checksum.failures=0) (committer_commits_created=0) (object_metadata_request=117) (op_get_file_checksum=0) (store_io_retry=0) (stream_read_bytes_discarded_in_abort=0) (op_exists=0) (object_delete_request=0) (object_list_request.failures=0) (op_mkdirs.failures=0) (op_access.failures=0) (committer_magic_files_created=0) (op_exists.failures=0) (op_glob_status=0) (multipart_upload_part_put_bytes=0) (stream_read_version_mismatches=0) (fake_directories_deleted=41) (committer_bytes_uploaded=0) (action_executor_acquired=0) (action_http_head_request.failures=0) (committer_load_single_pending_file=0) (op_xattr_get_named_map=0) (action_http_head_request=117) (op_get_delegation_token.failures=0) (action_http_get_request.failures=0) (stream_read_unbuffered=2) (audit_access_check_failure=0) (multipart_upload_started=0) (op_createfile.failures=0) (op_openfile=0) (committer_materialize_file.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_fully_operations=2) (object_put_request=82) (op_create=41) (stream_read_opened=6) (op_xattr_list.failures=0) (op_get_content_summary.failures=0) (op_hsync=0) (store_io_throttled=0) (object_copy_requests=0) (object_multipart_aborted.failures=0) (committer_tasks_completed=0) (stream_aborted=0) (committer_bytes_committed=0) (object_bulk_delete_request=82) (committer_stage_file_upload.failures=0) (stream_read_remote_stream_drain=6) (store_io_request=486) (stream_read_remote_stream_aborted.failures=0) (op_mkdirs=41) (directories_deleted=0) (committer_stage_file_upload=0) (op_list_status=0) (fake_directories_created=0) (stream_write_block_uploads_committed=0) (stream_write_block_uploads=41) (op_createfile=0) (audit_failure=0) (object_multipart_aborted=0) (committer_materialize_file=0) (stream_read_closed=6) (committer_magic_marker_put=0) (stream_read_remote_stream_drain.failures=0) (op_xattr_list=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=41) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0));
minimums=((op_xattr_get_named_map.failures.min=-1) (op_delete.min=19) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.min=-1) (op_list_files.failures.min=-1) (op_get_file_status.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_is_file.min=-1) (store_exists_probe.min=-1) (op_glob_status.min=-1) (object_put_request.min=16) (action_file_opened.min=4) (op_exists.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.min=-1) (object_continue_list_request.min=-1) (op_get_file_status.min=5) (op_rename.min=-1) (op_delete.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_list.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_commit_job.min=-1) (multipart_upload_list.min=-1) (object_bulk_delete_request.min=4) (committer_commit_job.failures.min=-1) (object_multipart_aborted.min=-1) (op_access.failures.min=-1) (op_rename.failures.min=-1) (op_list_status.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_file_checksum.min=-1) (op_exists.min=-1) (object_put_request.failures.min=-1) (op_is_directory.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.min=-1) (op_createfile.min=-1) (op_glob_status.failures.min=-1) (op_copy_from_local_file.min=-1) (action_http_get_request.min=8) (action_http_get_request.failures.min=-1) (object_delete_request.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_multipart_initiated.min=-1) (op_get_delegation_token.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (op_get_file_checksum.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_directory.failures.min=-1) (op_abort.failures.min=-1) (op_xattr_list.min=-1) (object_list_request.min=4) (committer_materialize_file.failures.min=-1) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_head_request.min=2) (op_create.min=4) (op_xattr_get_map.min=-1) (op_get_content_summary.failures.min=-1) (op_mkdirs.min=15) (op_access.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named.min=-1) (op_create.failures.min=-1) (committer_materialize_file.min=-1) (op_createfile.failures.min=-1));
maximums=((delegation_tokens_issued.failures.max=-1) (op_abort.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_access.max=-1) (op_xattr_list.max=-1) (action_http_get_request.failures.max=-1) (op_is_directory.max=-1) (action_http_get_request.max=26) (committer_commit_job.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_materialize_file.failures.max=-1) (op_exists.failures.max=-1) (action_http_head_request.max=15) (object_multipart_initiated.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_get_content_summary.failures.max=-1) (op_access.failures.max=-1) (op_glob_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_list_status.max=-1) (committer_commit_job.max=-1) (op_list_status.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_map.max=-1) (op_create.failures.max=-1) (delegation_tokens_issued.max=-1) (action_file_opened.max=12) (op_glob_status.max=-1) (op_exists.max=-1) (op_get_file_checksum.max=-1) (object_list_request.failures.max=-1) (multipart_upload_list.max=-1) (object_delete_request.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_rename.max=-1) (op_createfile.failures.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.max=-1) (op_mkdirs.failures.max=-1) (op_createfile.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_file_opened.failures.max=-1) (op_abort.max=-1) (object_list_request.max=167) (op_create.max=45) (op_is_file.max=-1) (op_delete.max=58) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_files.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_mkdirs.max=263) (op_get_content_summary.max=-1) (op_get_file_status.max=8) (op_rename.failures.max=-1) (object_put_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_bulk_delete_request.max=17) (op_is_file.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_materialize_file.max=-1) (action_executor_acquired.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_files.max=-1) (object_put_request.max=71) (stream_write_queue_duration.failures.max=-1) (op_is_directory.failures.max=-1) (op_delete.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_list.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=82, sum=621, mean=7.5732)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=35, sum=171, mean=4.8857)) (action_http_head_request.mean=(samples=117, sum=491, mean=4.1966)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=82, sum=1467, mean=17.8902)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=41, sum=1272, mean=31.0244)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=41, sum=1305, mean=31.8293)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=41, sum=548, mean=13.3659)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=164, sum=1336, mean=8.1463)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=41, sum=407, mean=9.9268)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:52,510 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:52,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,510 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,511 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000195 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000195&t0=238&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=238&ts=1731777832510
2024-11-16 17:23:52,516 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:52,516 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,516 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,516 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,516 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,516 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000195 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000195&t0=238&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=238&ts=1731777832510
2024-11-16 17:23:52,519 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,519 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:52,520 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:52,520 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:52,520 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000195 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000195&t0=238&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=238&ts=1731777832510
2024-11-16 17:23:52,534 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:52,534 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:52,534 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.015s
2024-11-16 17:23:52,534 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:52,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,535 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,535 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000196 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000196/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000196&t0=238&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=238&ts=1731777832534
2024-11-16 17:23:52,540 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,540 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,540 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:52,541 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3838702457120178426.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:52,542 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3838702457120178426.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (op_hsync=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (op_abort=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (op_hflush=0) (stream_write_total_time=0) (object_put_request.failures=0) (object_put_request=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1));
maximums=((op_abort.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3838702457120178426.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,542 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,542 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:52,542 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3838702457120178426.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:52,543 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:52,543 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:52,543 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:52,543 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:52,543 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000196 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000196/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000196&t0=238&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=157&ts=1731777832534
2024-11-16 17:23:52,562 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:52,563 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:52,563 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.020s
2024-11-16 17:23:52,563 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3838702457120178426.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:52,563 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3838702457120178426.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,563 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3838702457120178426.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,563 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:52,563 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,564 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (stream_write_block_uploads=1) (op_abort.failures=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (stream_write_total_data=65536) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (op_hflush=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (object_put_request=1) (multipart_upload_completed=0) (op_abort=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=19) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (object_put_request.max=19) (object_put_request.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=19, mean=19.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:52,565 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:52,566 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,566 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,566 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:52,567 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [239] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000197 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000197/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000197&t0=239&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=239&ts=1731777832566
2024-11-16 17:23:52,570 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:52,570 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:52,570 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,570 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:23:52,571 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_close_operations=1) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (action_file_opened=1) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=0) (stream_read_prefetch_operations=0) (stream_read_fully_operations=0) (stream_read_version_mismatches=0) (stream_read_unbuffered=0) (action_http_get_request.failures=0) (stream_read_block_read=0) (action_executor_acquired.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0) (stream_read_bytes=0) (stream_read_remote_stream_drain=0) (stream_read_seek_backward_operations=0) (stream_read_seek_policy_changed=1) (stream_read_opened=0) (stream_read_vectored_operations=0) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_total_bytes=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=4) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=4) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:52,572 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:52,573 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,573 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,573 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198&t0=238&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=238&ts=1731777832572
2024-11-16 17:23:52,575 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,575 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,576 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198&t0=238&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=238&ts=1731777832572
2024-11-16 17:23:52,581 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:52,581 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:52,581 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:52,582 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:52,582 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:52,583 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:52,583 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:52,583 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:52,584 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:52,584 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:52,585 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:52,585 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:52,586 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:52,586 [s3a-transfer-leg-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:52,586 [s3a-transfer-leg-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,586 [s3a-transfer-leg-bucket-unbounded-pool2-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [240] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198&t0=238&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=240&ts=1731777832572
2024-11-16 17:23:52,590 [s3a-transfer-leg-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:52,593 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:23:52,593 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:52,594 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:52,594 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:52,594 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777832560; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:52,594 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:52,594 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:52,594 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:52,595 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:52,595 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:52,595 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:52,595 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:52,595 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,595 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,595 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:52,595 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,595 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198&t0=238&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=159&ts=1731777832572
2024-11-16 17:23:52,596 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:52,600 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:52,600 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:52,600 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:23:52,600 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:52,600 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:52,600 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,600 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,600 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:52,600 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,600 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000198&t0=238&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=159&ts=1731777832572
2024-11-16 17:23:52,607 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:23:52,607 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:52,607 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:52,607 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.012s
2024-11-16 17:23:52,607 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.011s
2024-11-16 17:23:52,607 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.023s
2024-11-16 17:23:52,607 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:52,607 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:52,609 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:52,622 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 52, active threads = 0, queued tasks = 0, completed tasks = 52], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_initiated=0) (op_glob_status=0) (object_put_request=84) (stream_read_seek_bytes_skipped=0) (committer_magic_marker_put=0) (op_hsync=0) (audit_request_execution=497) (committer_commit_job.failures=0) (delegation_tokens_issued.failures=0) (op_get_delegation_token=0) (stream_read_remote_stream_aborted.failures=0) (op_mkdirs=42) (op_xattr_get_map.failures=0) (multipart_upload_abort_under_path_invoked=0) (committer_load_single_pending_file=0) (stream_read_bytes=12626) (stream_aborted=0) (committer_materialize_file=0) (op_get_file_checksum=0) (op_mkdirs.failures=0) (op_hflush=0) (files_copied_bytes=0) (stream_read_operations=6) (op_open=36) (object_continue_list_request.failures=0) (stream_read_seek_forward_operations=0) (object_bulk_delete_request.failures=0) (op_exists.failures=0) (object_delete_request.failures=0) (directories_deleted=0) (stream_read_vectored_incoming_ranges=93) (committer_load_single_pending_file.failures=0) (op_is_file.failures=0) (op_list_files.failures=0) (op_get_content_summary.failures=0) (op_xattr_get_map=0) (stream_write_queue_duration.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_fully_operations=2) (object_delete_objects=84) (stream_read_version_mismatches=0) (action_http_get_request=41) (op_copy_from_local_file=0) (store_io_retry=0) (op_abort=0) (stream_write_total_time=0) (object_copy_requests=0) (action_http_get_request.failures=0) (fake_directories_deleted=42) (files_deleted=42) (op_exists=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain=6) (op_get_file_status=2) (stream_read_exceptions=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named_map.failures=0) (multipart_upload_part_put_bytes=0) (op_get_file_checksum.failures=0) (delegation_tokens_issued=0) (object_select_requests=0) (action_executor_acquired=0) (op_createfile=0) (stream_read_remote_stream_drain.failures=0) (files_created=42) (ignored_errors=0) (op_xattr_get_named_map=0) (object_multipart_aborted.failures=0) (store_exists_probe=0) (committer_commits_created=0) (op_copy_from_local_file.failures=0) (op_is_file=0) (object_multipart_aborted=0) (op_list_files=0) (op_get_delegation_token.failures=0) (op_rename=0) (stream_read_closed=6) (committer_materialize_file.failures=0) (stream_read_opened=6) (action_executor_acquired.failures=0) (committer_commit_job=0) (op_delete.failures=0) (object_list_request=168) (store_io_request=497) (stream_read_bytes_discarded_in_close=392016) (op_get_content_summary=0) (audit_access_check_failure=0) (multipart_upload_list.failures=0) (fake_directories_created=0) (op_create_non_recursive=0) (stream_write_queue_duration=0) (committer_commits_reverted=0) (stream_read_vectored_combined_ranges=39) (stream_write_total_data=5505024) (stream_read_total_bytes=404642) (stream_read_operations_incomplete=0) (op_get_file_status.failures=0) (op_access.failures=0) (stream_write_exceptions=0) (op_is_directory.failures=0) (committer_magic_marker_put.failures=0) (stream_read_seek_policy_changed=38) (action_http_head_request.failures=0) (stream_write_block_uploads_committed=0) (op_create.failures=0) (op_glob_status.failures=0) (directories_created=42) (stream_read_vectored_read_bytes_discarded=49026) (audit_failure=0) (op_list_status.failures=0) (op_list_status=0) (op_rename.failures=0) (stream_read_vectored_operations=29) (object_put_request.failures=0) (stream_read_seek_backward_operations=0) (committer_tasks_failed=0) (store_exists_probe.failures=0) (object_delete_request=0) (object_put_bytes=2752512) (op_is_directory=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted=0) (multipart_upload_started=0) (op_xattr_list=0) (committer_jobs_completed=0) (action_file_opened=36) (committer_bytes_uploaded=0) (op_list_located_status=0) (object_continue_list_request=0) (object_put_request_completed=84) (stream_read_seek_operations=0) (stream_read_close_operations=36) (committer_jobs_failed=0) (committer_stage_file_upload.failures=0) (committer_commits_completed=0) (committer_commits.failures=0) (store_io_throttled=0) (object_multipart_initiated.failures=0) (committer_magic_files_created=0) (files_copied=0) (stream_write_bytes=2752512) (op_xattr_get_named=0) (committer_commits_aborted=0) (action_file_opened.failures=0) (committer_stage_file_upload=0) (stream_read_unbuffered=2) (op_access=0) (multipart_instantiated=0) (op_create=42) (op_abort.failures=0) (stream_write_block_uploads=42) (committer_bytes_committed=0) (object_bulk_delete_request=84) (audit_span_creation=165) (multipart_upload_list=0) (action_http_head_request=120) (object_list_request.failures=0) (committer_tasks_completed=0) (op_xattr_list.failures=0) (multipart_upload_aborted=0) (op_createfile.failures=0) (object_metadata_request=120) (op_delete=42) (files_delete_rejected=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named.failures=0) (op_openfile=0) (multipart_upload_completed=0));
gauges=((client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=42) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((committer_materialize_file.min=-1) (stream_read_remote_stream_drain.min=1) (op_list_files.failures.min=-1) (action_http_head_request.failures.min=-1) (op_create.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_is_directory.failures.min=-1) (object_list_request.min=4) (op_exists.failures.min=-1) (op_xattr_get_named.min=-1) (object_put_request.min=19) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.min=5) (committer_commit_job.min=-1) (committer_commit_job.failures.min=-1) (store_exists_probe.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_named_map.min=-1) (action_http_head_request.min=2) (store_exists_probe.failures.min=-1) (op_get_file_status.failures.min=-1) (op_abort.min=-1) (op_create.min=4) (op_list_status.min=-1) (op_get_content_summary.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_multipart_initiated.min=-1) (action_http_get_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_checksum.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.failures.min=-1) (object_delete_request.min=-1) (op_get_delegation_token.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (op_access.min=-1) (stream_write_queue_duration.min=-1) (action_executor_acquired.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_named.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_file.min=-1) (op_exists.min=-1) (object_continue_list_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=8) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.min=-1) (op_rename.min=-1) (op_rename.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=4) (op_xattr_get_map.min=-1) (object_delete_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_delete.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_status.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_materialize_file.failures.min=-1) (op_glob_status.failures.min=-1) (object_bulk_delete_request.min=4) (op_is_directory.min=-1) (op_createfile.min=-1) (op_copy_from_local_file.min=-1) (op_get_content_summary.min=-1) (op_delete.min=19) (op_xattr_list.failures.min=-1) (op_glob_status.min=-1) (op_is_file.failures.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (op_mkdirs.min=15));
maximums=((op_is_file.max=-1) (object_bulk_delete_request.failures.max=-1) (object_list_request.max=167) (op_get_file_status.max=8) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (op_delete.max=58) (op_xattr_get_named.max=-1) (op_create.failures.max=-1) (action_http_get_request.max=26) (committer_load_single_pending_file.max=-1) (op_abort.failures.max=-1) (op_list_files.failures.max=-1) (op_glob_status.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_list.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_directory.failures.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=71) (op_rename.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_file_opened.max=12) (op_access.failures.max=-1) (op_exists.failures.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_list.max=-1) (action_http_head_request.max=15) (op_get_content_summary.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.max=-1) (object_bulk_delete_request.max=17) (op_copy_from_local_file.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_list.max=-1) (op_mkdirs.max=263) (op_xattr_get_named_map.failures.max=-1) (object_delete_request.max=-1) (op_access.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.max=-1) (op_exists.max=-1) (object_continue_list_request.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_drain.max=4) (delegation_tokens_issued.max=-1) (op_xattr_get_map.max=-1) (op_mkdirs.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_commit_job.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.failures.max=-1) (committer_commit_job.max=-1) (action_file_opened.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_executor_acquired.max=-1) (op_createfile.failures.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_delegation_token.max=-1) (op_is_directory.max=-1) (object_put_request.failures.max=-1) (object_list_request.failures.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.failures.max=-1) (op_create.max=45) (op_list_status.max=-1) (op_list_files.max=-1) (op_rename.failures.max=-1) (op_createfile.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=41, sum=548, mean=13.3659)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=42, sum=413, mean=9.8333)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=168, sum=1355, mean=8.0655)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=84, sum=1500, mean=17.8571)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=42, sum=1329, mean=31.6429)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=120, sum=500, mean=4.1667)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=36, sum=175, mean=4.8611)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=84, sum=633, mean=7.5357)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=42, sum=1296, mean=30.8571)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:52,622 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:52,622 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,622 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,623 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,623 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,623 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000199 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000199&t0=241&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=241&ts=1731777832622
2024-11-16 17:23:52,629 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,629 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,629 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,629 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,629 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,629 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000199 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000199&t0=241&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=241&ts=1731777832622
2024-11-16 17:23:52,632 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,632 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:52,632 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:52,632 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:52,632 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000199 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000199&t0=241&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=241&ts=1731777832622
2024-11-16 17:23:52,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:52,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:52,644 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.012s
2024-11-16 17:23:52,644 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:52,645 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,645 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,645 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,645 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,646 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000200 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000200/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000200&t0=241&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=241&ts=1731777832645
2024-11-16 17:23:52,652 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:23:52,653 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,653 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:52,654 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11622054047331542367.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:52,655 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11622054047331542367.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed.failures=0) (object_multipart_aborted=0) (stream_write_total_data=0) (stream_write_total_time=0) (object_put_request=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (op_abort.failures=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (op_hsync=0) (op_abort=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (object_multipart_initiated=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11622054047331542367.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,655 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,655 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:52,655 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11622054047331542367.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:52,656 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:52,656 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:52,656 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:52,656 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000200 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000200/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000200&t0=241&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=160&ts=1731777832645
2024-11-16 17:23:52,659 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:52,678 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:52,679 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:52,679 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.023s
2024-11-16 17:23:52,679 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11622054047331542367.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:52,679 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11622054047331542367.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,679 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11622054047331542367.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,679 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:52,679 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,680 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (object_put_request.failures=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (op_abort=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (object_put_request=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=22) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=22) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=22, mean=22.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:52,680 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:52,681 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,681 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,682 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:52,682 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000201 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000201/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000201&t0=242&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=242&ts=1731777832681
2024-11-16 17:23:52,687 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:52,687 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:52,687 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,687 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:23:52,688 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_policy_changed=1) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_version_mismatches=0) (stream_read_closed=0) (stream_read_seek_forward_operations=0) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=0) (action_file_opened=1) (stream_read_bytes=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations=0) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_combined_ranges=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_read_bytes_discarded=0) (action_http_get_request=0) (stream_read_close_operations=1) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_fully_operations=0) (stream_aborted=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_opened=0) (stream_read_block_read=0) (stream_read_vectored_operations=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_http_get_request.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=6) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=6) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:52,689 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:52,689 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,689 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,689 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202&t0=241&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=241&ts=1731777832689
2024-11-16 17:23:52,701 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,702 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,702 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202&t0=241&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=241&ts=1731777832689
2024-11-16 17:23:52,710 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:23:52,710 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:52,711 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:52,711 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:52,711 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:52,712 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:52,712 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:52,712 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:52,713 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:52,713 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:52,713 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:52,713 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:52,714 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:52,714 [s3a-transfer-leg-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:52,714 [s3a-transfer-leg-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,714 [s3a-transfer-leg-bucket-unbounded-pool2-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202&t0=241&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=243&ts=1731777832689
2024-11-16 17:23:52,725 [s3a-transfer-leg-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:23:52,727 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:23:52,727 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:52,728 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:52,728 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:52,728 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777832676; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:52,729 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:52,729 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:52,729 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:52,730 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:52,731 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:52,731 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:52,731 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:52,731 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:52,731 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,731 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,731 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:52,731 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,731 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [161] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202&t0=241&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=161&ts=1731777832689
2024-11-16 17:23:52,741 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:23:52,741 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:23:52,741 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:23:52,741 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:52,741 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:52,741 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,741 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,741 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:52,741 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,741 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [161] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000202&t0=241&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=161&ts=1731777832689
2024-11-16 17:23:52,756 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:23:52,756 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:23:52,756 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.015s
2024-11-16 17:23:52,756 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.025s
2024-11-16 17:23:52,757 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.026s
2024-11-16 17:23:52,757 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.045s
2024-11-16 17:23:52,757 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:52,757 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:52,762 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:52,773 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 54, active threads = 0, queued tasks = 0, completed tasks = 54], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((audit_span_creation=169) (op_get_file_checksum.failures=0) (op_get_file_status.failures=0) (multipart_upload_aborted=0) (stream_read_vectored_read_bytes_discarded=49026) (committer_tasks_failed=0) (op_get_file_checksum=0) (stream_read_close_operations=37) (object_multipart_aborted=0) (op_xattr_get_named_map.failures=0) (object_delete_request=0) (stream_read_remote_stream_aborted.failures=0) (op_hsync=0) (object_put_request_completed=86) (object_put_request=86) (stream_write_total_data=5636096) (object_copy_requests=0) (committer_load_single_pending_file.failures=0) (op_is_directory.failures=0) (op_rename.failures=0) (op_createfile=0) (op_xattr_list=0) (action_http_get_request.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (audit_failure=0) (op_abort=0) (op_is_file=0) (op_glob_status=0) (stream_read_vectored_combined_ranges=39) (object_multipart_initiated=0) (delegation_tokens_issued=0) (multipart_upload_started=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (files_created=43) (stream_write_block_uploads_aborted=0) (committer_commits_created=0) (stream_read_remote_stream_drain=6) (op_exists=0) (fake_directories_created=0) (op_delete=43) (stream_read_bytes_discarded_in_abort=0) (object_metadata_request=123) (op_get_file_status=2) (committer_magic_marker_put.failures=0) (stream_read_seek_backward_operations=0) (audit_request_execution=508) (op_create_non_recursive=0) (store_exists_probe.failures=0) (committer_commits_completed=0) (object_delete_request.failures=0) (op_list_status.failures=0) (stream_read_closed=6) (action_http_get_request=41) (stream_read_version_mismatches=0) (committer_commit_job.failures=0) (op_is_directory=0) (multipart_upload_abort_under_path_invoked=0) (object_bulk_delete_request.failures=0) (op_xattr_get_map.failures=0) (op_mkdirs=43) (op_list_files=0) (audit_access_check_failure=0) (op_glob_status.failures=0) (committer_stage_file_upload=0) (stream_read_remote_stream_drain.failures=0) (object_continue_list_request.failures=0) (committer_bytes_committed=0) (committer_materialize_file=0) (stream_write_queue_duration.failures=0) (op_open=37) (op_get_content_summary.failures=0) (object_bulk_delete_request=86) (directories_deleted=0) (action_http_head_request.failures=0) (committer_bytes_uploaded=0) (committer_load_single_pending_file=0) (op_delete.failures=0) (op_get_content_summary=0) (committer_stage_file_upload.failures=0) (object_delete_objects=86) (op_list_files.failures=0) (stream_read_opened=6) (op_xattr_get_named.failures=0) (stream_read_exceptions=0) (ignored_errors=0) (op_get_delegation_token.failures=0) (stream_read_total_bytes=404642) (committer_jobs_failed=0) (directories_created=43) (op_create=43) (stream_read_operations_incomplete=0) (object_put_bytes=2818048) (op_xattr_get_named_map=0) (multipart_upload_list=0) (op_abort.failures=0) (store_io_request=508) (stream_write_block_uploads_committed=0) (op_copy_from_local_file.failures=0) (stream_read_seek_bytes_discarded=0) (stream_write_block_uploads=43) (committer_tasks_completed=0) (object_continue_list_request=0) (op_exists.failures=0) (committer_commits_aborted=0) (stream_read_seek_operations=0) (op_get_delegation_token=0) (op_list_located_status=0) (files_copied_bytes=0) (stream_read_bytes=12626) (committer_materialize_file.failures=0) (op_rename=0) (delegation_tokens_issued.failures=0) (stream_read_fully_operations=2) (op_is_file.failures=0) (op_createfile.failures=0) (stream_read_vectored_incoming_ranges=93) (op_list_status=0) (object_select_requests=0) (stream_read_operations=6) (committer_commit_job=0) (files_copied=0) (multipart_instantiated=0) (object_list_request.failures=0) (stream_read_vectored_operations=29) (multipart_upload_part_put=0) (op_hflush=0) (action_file_opened=37) (multipart_upload_list.failures=0) (multipart_upload_completed=0) (op_xattr_list.failures=0) (action_executor_acquired.failures=0) (op_xattr_get_map=0) (action_file_opened.failures=0) (committer_commits_reverted=0) (multipart_upload_part_put_bytes=0) (files_delete_rejected=0) (object_put_request.failures=0) (op_xattr_get_named=0) (op_copy_from_local_file=0) (stream_read_unbuffered=2) (stream_aborted=0) (committer_magic_files_created=0) (op_create.failures=0) (committer_jobs_completed=0) (op_access.failures=0) (op_openfile=0) (store_io_retry=0) (action_executor_acquired=0) (stream_read_seek_bytes_skipped=0) (store_exists_probe=0) (stream_read_remote_stream_aborted=0) (op_access=0) (op_mkdirs.failures=0) (stream_read_seek_policy_changed=39) (fake_directories_deleted=43) (store_io_throttled=0) (stream_read_bytes_discarded_in_close=392016) (stream_read_bytes_backwards_on_seek=0) (files_deleted=43) (object_list_request=172) (stream_read_seek_forward_operations=0) (action_http_head_request=123) (committer_commits.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (stream_write_bytes=2818048));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_pending=43) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0));
minimums=((op_list_status.failures.min=-1) (op_create.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named.min=-1) (committer_load_single_pending_file.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_list_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_put_request.min=22) (op_xattr_get_map.failures.min=-1) (store_exists_probe.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.min=8) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_continue_list_request.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_content_summary.min=-1) (op_list_files.failures.min=-1) (object_list_request.min=4) (op_xattr_get_named_map.min=-1) (op_createfile.min=-1) (op_exists.failures.min=-1) (committer_materialize_file.min=-1) (op_rename.failures.min=-1) (object_delete_request.min=-1) (op_list_status.min=-1) (op_delete.failures.min=-1) (object_multipart_initiated.min=-1) (action_http_get_request.failures.min=-1) (multipart_upload_list.min=-1) (op_copy_from_local_file.min=-1) (action_file_opened.min=6) (object_bulk_delete_request.min=4) (committer_stage_file_upload.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_access.failures.min=-1) (op_list_files.min=-1) (object_bulk_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (op_rename.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_delegation_token.failures.min=-1) (action_file_opened.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.failures.min=-1) (op_get_file_status.min=5) (stream_write_queue_duration.min=-1) (op_create.min=4) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_aborted.min=-1) (committer_materialize_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (delegation_tokens_issued.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.min=15) (op_access.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_mkdirs.failures.min=-1) (op_is_directory.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_file.min=-1) (op_glob_status.min=-1) (op_xattr_get_map.min=-1) (object_delete_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.failures.min=-1) (op_get_delegation_token.min=-1) (op_delete.min=19) (op_exists.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_head_request.min=2) (multipart_upload_list.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_list.min=-1));
maximums=((committer_materialize_file.failures.max=-1) (op_createfile.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_rename.max=-1) (op_list_files.failures.max=-1) (object_put_request.max=71) (op_is_file.max=-1) (op_create.max=45) (op_access.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_mkdirs.max=263) (object_continue_list_request.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.max=-1) (action_http_head_request.failures.max=-1) (action_http_head_request.max=15) (object_delete_request.max=-1) (action_http_get_request.failures.max=-1) (op_list_status.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_files.max=-1) (op_access.max=-1) (op_get_file_checksum.max=-1) (op_delete.max=58) (committer_commit_job.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=26) (op_xattr_get_named.failures.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (object_put_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_is_file.failures.max=-1) (op_exists.failures.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.failures.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_stage_file_upload.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_drain.max=4) (object_list_request.failures.max=-1) (store_exists_probe.max=-1) (op_is_directory.failures.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.max=-1) (multipart_upload_list.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_list_request.max=167) (op_delete.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_glob_status.max=-1) (object_multipart_aborted.max=-1) (op_exists.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_abort.failures.max=-1) (object_bulk_delete_request.max=17) (op_get_file_status.max=8) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (op_abort.max=-1) (action_file_opened.max=12) (committer_magic_marker_put.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.failures.max=-1));
means=((op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=37, sum=181, mean=4.8919)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=41, sum=548, mean=13.3659)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=43, sum=422, mean=9.8140)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=86, sum=1534, mean=17.8372)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=86, sum=658, mean=7.6512)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=43, sum=1375, mean=31.9767)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=172, sum=1385, mean=8.0523)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=123, sum=520, mean=4.2276)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=43, sum=1319, mean=30.6744)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:52,773 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:52,773 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,773 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,773 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,773 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,773 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000203 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000203&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=244&ts=1731777832773
2024-11-16 17:23:52,779 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:52,779 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,780 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000203 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000203&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=244&ts=1731777832773
2024-11-16 17:23:52,783 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,783 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:52,784 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:52,784 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:52,784 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000203 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000203&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=244&ts=1731777832773
2024-11-16 17:23:52,792 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:52,793 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:52,793 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:23:52,794 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:52,794 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,794 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,795 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,795 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,795 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000204 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000204/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000204&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=244&ts=1731777832794
2024-11-16 17:23:52,800 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,801 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:52,801 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15642395896958874545.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:52,802 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15642395896958874545.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (op_abort=0) (stream_write_block_uploads=0) (multipart_upload_part_put=0) (stream_write_total_data=0) (op_hsync=0) (stream_write_exceptions=0) (action_executor_acquired=0) (object_multipart_aborted=0) (object_put_request.failures=0) (op_abort.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (op_hflush=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15642395896958874545.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,802 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,803 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:52,803 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15642395896958874545.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:52,803 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:52,803 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:52,804 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:52,804 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:52,804 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000204 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000204/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000204&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=163&ts=1731777832794
2024-11-16 17:23:52,820 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:52,820 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:52,820 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:23:52,820 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15642395896958874545.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:52,820 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15642395896958874545.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,820 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15642395896958874545.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,820 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:52,820 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,821 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (op_hflush=0) (object_multipart_initiated=0) (action_executor_acquired=0) (op_abort=0) (object_multipart_initiated.failures=0) (object_put_request=1) (op_hsync=0) (stream_write_exceptions=0) (op_abort.failures=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=16) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_put_request.max=16) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=16, mean=16.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:52,821 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:52,822 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,822 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,822 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:52,822 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000205 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000205&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=244&ts=1731777832822
2024-11-16 17:23:52,825 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:52,825 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:52,825 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,826 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:52,826 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:52,826 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:52,826 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:52,826 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,826 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:52,826 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,826 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:52,826 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:23:52,826 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:23:52,826 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:52,826 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,826 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,826 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:52,826 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000205 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000205&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=165&ts=1731777832822
2024-11-16 17:23:52,827 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000205 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=0-159&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000205&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=168&ts=1731777832822
2024-11-16 17:23:52,838 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:23:52,839 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:52,839 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,841 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:23:52,841 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:23:52,841 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:52,843 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_fully_operations=0) (stream_read_operations=0) (stream_read_seek_policy_changed=1) (stream_read_bytes=300) (stream_read_block_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_close_operations=1) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_incoming_ranges=4) (stream_read_unbuffered=0) (stream_aborted=0) (action_file_opened.failures=0) (stream_read_total_bytes=300) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_opened=0) (stream_read_vectored_operations=2) (action_file_opened=1) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (stream_read_version_mismatches=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_backward_operations=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request=2) (stream_read_vectored_read_bytes_discarded=20) (stream_read_remote_stream_aborted=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=2) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=3) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=13) (action_executor_acquired.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=15) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=28, mean=14.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:52,844 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:52,844 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,844 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,844 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=244&ts=1731777832844
2024-11-16 17:23:52,847 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,847 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,847 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=244&ts=1731777832844
2024-11-16 17:23:52,853 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:52,853 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:52,853 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:52,853 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:52,853 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:52,853 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:52,853 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:52,853 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:52,853 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:52,853 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:52,853 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:52,854 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:52,857 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:52,857 [s3a-transfer-leg-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:52,858 [s3a-transfer-leg-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,858 [s3a-transfer-leg-bucket-unbounded-pool2-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=245&ts=1731777832844
2024-11-16 17:23:52,863 [s3a-transfer-leg-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,863 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:23:52,863 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:52,864 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:52,864 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:52,864 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777832818; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:52,864 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:52,864 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:52,864 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:52,864 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:52,865 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:52,865 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:52,865 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:52,865 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,865 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,865 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:52,865 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,865 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=31&ts=1731777832844
2024-11-16 17:23:52,865 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:52,870 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:52,870 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:52,870 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:23:52,870 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:52,870 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:52,870 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,870 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,870 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:52,870 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,870 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000206&t0=244&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=31&ts=1731777832844
2024-11-16 17:23:52,875 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:52,875 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:23:52,875 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:23:52,875 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.010s
2024-11-16 17:23:52,875 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.010s
2024-11-16 17:23:52,875 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.022s
2024-11-16 17:23:52,876 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:52,876 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:52,877 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:52,888 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 55, active threads = 0, queued tasks = 0, completed tasks = 55], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_bulk_delete_request.failures=0) (committer_commits_reverted=0) (stream_read_vectored_combined_ranges=41) (multipart_upload_completed=0) (stream_read_seek_bytes_skipped=0) (stream_write_queue_duration.failures=0) (stream_read_remote_stream_aborted=0) (action_http_get_request.failures=0) (committer_jobs_completed=0) (action_file_opened.failures=0) (delegation_tokens_issued=0) (op_get_file_checksum=0) (op_get_file_checksum.failures=0) (committer_stage_file_upload=0) (op_mkdirs=44) (op_list_files.failures=0) (op_xattr_list=0) (op_list_files=0) (object_multipart_aborted=0) (object_delete_objects=88) (multipart_upload_list.failures=0) (op_list_located_status=0) (stream_read_opened=6) (op_rename.failures=0) (committer_materialize_file.failures=0) (op_get_content_summary=0) (multipart_instantiated=0) (op_get_content_summary.failures=0) (op_xattr_get_named.failures=0) (op_abort=0) (op_openfile=0) (stream_read_seek_forward_operations=0) (op_xattr_get_map.failures=0) (store_io_request=521) (stream_read_close_operations=38) (object_continue_list_request.failures=0) (committer_magic_files_created=0) (stream_read_fully_operations=2) (stream_write_queue_duration=0) (op_list_status.failures=0) (fake_directories_created=0) (directories_deleted=0) (stream_read_closed=6) (stream_write_block_uploads=44) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_part_put=0) (op_xattr_get_map=0) (object_metadata_request=126) (object_delete_request=0) (store_exists_probe=0) (op_xattr_get_named_map=0) (stream_read_remote_stream_drain=6) (committer_bytes_uploaded=0) (committer_materialize_file=0) (op_create.failures=0) (object_list_request=176) (object_multipart_aborted.failures=0) (files_created=44) (stream_read_remote_stream_drain.failures=0) (multipart_upload_aborted=0) (op_delete.failures=0) (multipart_upload_part_put_bytes=0) (store_exists_probe.failures=0) (op_access=0) (op_delete=44) (audit_access_check_failure=0) (object_multipart_initiated.failures=0) (op_xattr_get_named=0) (stream_write_bytes=2883584) (op_get_delegation_token.failures=0) (op_mkdirs.failures=0) (stream_read_exceptions=0) (op_open=38) (committer_commit_job.failures=0) (stream_write_total_time=0) (object_put_request_completed=88) (multipart_upload_started=0) (committer_load_single_pending_file=0) (op_glob_status=0) (stream_read_remote_stream_aborted.failures=0) (committer_tasks_failed=0) (op_abort.failures=0) (object_select_requests=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=40) (object_put_bytes=2883584) (object_delete_request.failures=0) (op_copy_from_local_file.failures=0) (object_bulk_delete_request=88) (files_copied_bytes=0) (object_multipart_initiated=0) (op_get_file_status.failures=0) (stream_read_seek_operations=0) (stream_write_block_uploads_aborted=0) (op_is_directory.failures=0) (op_create=44) (committer_commits_created=0) (op_xattr_get_named_map.failures=0) (object_copy_requests=0) (audit_request_execution=521) (stream_read_vectored_read_bytes_discarded=49046) (files_deleted=44) (op_createfile.failures=0) (op_copy_from_local_file=0) (stream_write_exceptions=0) (store_io_retry=0) (committer_magic_marker_put=0) (store_io_throttled=0) (committer_commits_aborted=0) (stream_write_total_data=5767168) (ignored_errors=0) (op_exists=0) (committer_load_single_pending_file.failures=0) (action_executor_acquired.failures=0) (op_is_file.failures=0) (committer_commit_job=0) (op_hsync=0) (op_is_directory=0) (committer_commits_completed=0) (delegation_tokens_issued.failures=0) (action_file_opened=38) (audit_failure=0) (stream_read_operations=6) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes=12926) (op_is_file=0) (op_exists.failures=0) (stream_read_bytes_discarded_in_close=392016) (op_create_non_recursive=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_block_uploads_committed=0) (action_http_head_request=126) (committer_jobs_failed=0) (op_list_status=0) (stream_read_vectored_operations=31) (stream_read_seek_backward_operations=0) (files_copied=0) (multipart_upload_list=0) (op_xattr_list.failures=0) (op_get_file_status=2) (op_rename=0) (op_access.failures=0) (stream_read_operations_incomplete=0) (committer_stage_file_upload.failures=0) (stream_aborted=0) (stream_write_exceptions_completing_upload=0) (op_get_delegation_token=0) (directories_created=44) (files_delete_rejected=0) (stream_read_seek_bytes_discarded=0) (object_put_request.failures=0) (op_createfile=0) (object_continue_list_request=0) (stream_read_vectored_incoming_ranges=97) (object_put_request=88) (committer_bytes_committed=0) (action_http_head_request.failures=0) (stream_read_total_bytes=404942) (committer_commits.failures=0) (action_http_get_request=43) (fake_directories_deleted=44) (object_list_request.failures=0) (committer_magic_marker_put.failures=0) (committer_tasks_completed=0) (op_hflush=0) (stream_read_unbuffered=2) (stream_read_version_mismatches=0) (audit_span_creation=173) (op_glob_status.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=44) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0));
minimums=((object_list_request.min=4) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.failures.min=-1) (store_exists_probe.min=-1) (committer_magic_marker_put.failures.min=-1) (op_rename.min=-1) (committer_commit_job.min=-1) (multipart_upload_list.failures.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_status.failures.min=-1) (object_continue_list_request.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.failures.min=-1) (multipart_upload_list.min=-1) (op_xattr_list.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_status.min=5) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.min=-1) (op_list_files.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_files.failures.min=-1) (stream_write_queue_duration.min=-1) (stream_write_queue_duration.failures.min=-1) (op_rename.failures.min=-1) (op_list_status.min=-1) (op_access.failures.min=-1) (op_get_content_summary.min=-1) (object_put_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_access.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_abort.failures.min=-1) (action_file_opened.min=3) (op_is_directory.failures.min=-1) (op_create.failures.min=-1) (action_file_opened.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_map.min=-1) (object_bulk_delete_request.min=4) (delegation_tokens_issued.min=-1) (committer_stage_file_upload.min=-1) (op_mkdirs.failures.min=-1) (op_is_file.failures.min=-1) (object_multipart_aborted.min=-1) (op_create.min=4) (op_exists.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=2) (op_createfile.min=-1) (action_http_get_request.failures.min=-1) (op_exists.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_list_request.failures.min=-1) (op_mkdirs.min=15) (object_put_request.min=16) (object_multipart_aborted.failures.min=-1) (op_copy_from_local_file.min=-1) (op_delete.failures.min=-1) (op_is_file.min=-1) (object_multipart_initiated.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_delete.min=19) (op_get_content_summary.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=13) (store_exists_probe.failures.min=-1) (op_is_directory.min=-1) (op_glob_status.failures.min=-1) (op_list_status.failures.min=-1) (object_delete_request.min=-1) (op_abort.min=-1));
maximums=((op_xattr_get_map.failures.max=-1) (op_xattr_list.failures.max=-1) (op_glob_status.max=-1) (op_createfile.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_aborted.max=-1) (op_rename.failures.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_glob_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_status.failures.max=-1) (op_is_file.failures.max=-1) (op_access.failures.max=-1) (object_multipart_initiated.max=-1) (delegation_tokens_issued.failures.max=-1) (action_file_opened.max=12) (op_access.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named.failures.max=-1) (op_create.failures.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (action_executor_acquired.max=-1) (op_list_files.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_drain.max=4) (store_exists_probe.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_directory.max=-1) (op_create.max=45) (action_http_get_request.failures.max=-1) (action_http_head_request.max=15) (op_abort.failures.max=-1) (op_get_delegation_token.max=-1) (op_mkdirs.max=263) (object_delete_request.max=-1) (op_createfile.max=-1) (action_file_opened.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.failures.max=-1) (object_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_stage_file_upload.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_bulk_delete_request.max=17) (op_abort.max=-1) (store_exists_probe.max=-1) (op_delete.failures.max=-1) (op_is_directory.failures.max=-1) (stream_write_queue_duration.max=-1) (op_delete.max=58) (op_list_status.max=-1) (op_copy_from_local_file.max=-1) (op_rename.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_map.max=-1) (op_is_file.max=-1) (op_get_file_status.max=8) (op_get_delegation_token.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named.max=-1) (op_get_content_summary.max=-1) (object_put_request.max=71) (op_exists.max=-1) (object_list_request.max=167) (committer_commit_job.max=-1) (action_http_get_request.max=26));
means=((op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=43, sum=576, mean=13.3953)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=176, sum=1407, mean=7.9943)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=88, sum=668, mean=7.5909)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=44, sum=429, mean=9.7500)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=44, sum=1340, mean=30.4545)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=38, sum=184, mean=4.8421)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=44, sum=1398, mean=31.7727)) (object_put_request.mean=(samples=88, sum=1558, mean=17.7045)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=126, sum=529, mean=4.1984)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:52,889 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:52,889 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,890 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,890 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000207 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000207&t0=246&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=246&ts=1731777832889
2024-11-16 17:23:52,896 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:23:52,896 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,896 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,896 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,896 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,896 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000207 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000207&t0=246&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=246&ts=1731777832889
2024-11-16 17:23:52,899 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,900 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:52,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:52,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:52,900 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000207 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000207&t0=246&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=246&ts=1731777832889
2024-11-16 17:23:52,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:52,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:52,907 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.007s
2024-11-16 17:23:52,907 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:52,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,908 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,908 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,908 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,908 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000208 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000208/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000208&t0=246&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=246&ts=1731777832907
2024-11-16 17:23:52,912 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:52,912 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,912 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:52,913 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17136815293184292793.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:52,913 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17136815293184292793.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (op_abort=0) (stream_write_bytes=65536) (op_hflush=0) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (object_put_request=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (op_hsync=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17136815293184292793.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,913 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,913 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:52,913 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17136815293184292793.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:52,914 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:52,914 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:52,914 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:52,914 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:52,914 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000208 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000208/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000208&t0=246&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=36&ts=1731777832907
2024-11-16 17:23:52,930 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:52,930 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:52,930 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.016s
2024-11-16 17:23:52,930 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17136815293184292793.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:52,930 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17136815293184292793.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,930 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17136815293184292793.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:52,930 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:52,931 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:52,931 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (op_abort=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (stream_write_total_data=65536) (object_put_request=1) (committer_magic_marker_put=0) (action_executor_acquired=0) (op_hflush=0) (op_abort.failures=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=16) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=16) (object_multipart_aborted.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=16, mean=16.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:52,931 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:52,932 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,932 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,932 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:52,932 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [247] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000209 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000209/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000209&t0=247&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=247&ts=1731777832932
2024-11-16 17:23:52,935 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:52,935 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:52,935 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:52,935 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:23:52,936 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_prefetch_operations=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_total_bytes=0) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_opened=0) (stream_aborted=0) (stream_read_seek_policy_changed=1) (action_http_get_request=0) (stream_read_unbuffered=0) (action_file_opened=1) (stream_read_block_read=0) (stream_read_vectored_operations=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_forward_operations=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_version_mismatches=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read.failures=0) (stream_read_close_operations=1) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=3) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1));
maximums=((stream_read_block_read.max=-1) (action_file_opened.max=3) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:23:52,937 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:52,937 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,938 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,938 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210&t0=246&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=246&ts=1731777832937
2024-11-16 17:23:52,939 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,939 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,939 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210&t0=246&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=246&ts=1731777832937
2024-11-16 17:23:52,944 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,944 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:52,944 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:52,944 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:52,944 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:52,944 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:52,944 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:52,944 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:52,944 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:52,944 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:52,944 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:52,944 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:52,945 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:52,945 [s3a-transfer-leg-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:52,945 [s3a-transfer-leg-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,945 [s3a-transfer-leg-bucket-unbounded-pool2-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [248] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210&t0=246&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=248&ts=1731777832937
2024-11-16 17:23:52,949 [s3a-transfer-leg-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:52,949 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.004s
2024-11-16 17:23:52,949 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:52,949 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:52,949 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:52,950 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777832928; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:52,950 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:52,950 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:52,950 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:52,950 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:52,950 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:52,950 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:52,950 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:52,950 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:52,950 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,951 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,951 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:52,951 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,951 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210&t0=246&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=38&ts=1731777832937
2024-11-16 17:23:52,956 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:52,956 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:52,956 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:23:52,956 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:52,956 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:52,956 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:52,957 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:52,957 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:52,957 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:52,957 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000210&t0=246&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=38&ts=1731777832937
2024-11-16 17:23:52,962 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:23:52,962 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:52,962 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:23:52,962 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.012s
2024-11-16 17:23:52,962 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.012s
2024-11-16 17:23:52,963 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.019s
2024-11-16 17:23:52,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:52,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:52,964 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:23:52,979 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7d8ee6fc, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dcc3b421-341f-448c-8a0e-77e9f97c36a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Running, pool size = 57, active threads = 0, queued tasks = 0, completed tasks = 57], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_fully_operations=2) (op_get_content_summary.failures=0) (op_get_file_checksum=0) (object_continue_list_request=0) (stream_read_seek_policy_changed=41) (op_is_directory=0) (store_io_request=532) (object_multipart_aborted.failures=0) (op_get_delegation_token=0) (committer_stage_file_upload.failures=0) (op_get_delegation_token.failures=0) (object_delete_request.failures=0) (stream_read_remote_stream_drain=6) (op_xattr_list=0) (op_get_content_summary=0) (op_access.failures=0) (stream_read_bytes_backwards_on_seek=0) (audit_request_execution=532) (object_bulk_delete_request.failures=0) (multipart_upload_part_put_bytes=0) (op_mkdirs=45) (object_bulk_delete_request=90) (op_createfile.failures=0) (committer_commit_job=0) (op_glob_status=0) (stream_read_seek_bytes_skipped=0) (committer_magic_marker_put.failures=0) (object_list_request.failures=0) (multipart_upload_list=0) (files_delete_rejected=0) (op_list_status.failures=0) (stream_read_seek_backward_operations=0) (audit_span_creation=177) (multipart_upload_aborted=0) (stream_read_close_operations=39) (fake_directories_created=0) (committer_bytes_committed=0) (committer_bytes_uploaded=0) (multipart_instantiated=0) (files_created=45) (object_put_request.failures=0) (op_hsync=0) (committer_commits_completed=0) (op_openfile=0) (store_io_retry=0) (action_file_opened.failures=0) (op_open=39) (stream_read_seek_operations=0) (op_mkdirs.failures=0) (committer_magic_marker_put=0) (op_xattr_get_map=0) (op_is_file.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_operations=31) (multipart_upload_completed=0) (stream_write_exceptions=0) (action_file_opened=39) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_write_block_uploads_aborted=0) (committer_commits_created=0) (object_multipart_aborted=0) (audit_access_check_failure=0) (object_select_requests=0) (op_rename.failures=0) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_close=392016) (op_xattr_get_named.failures=0) (stream_write_total_data=5898240) (op_delete=45) (ignored_errors=0) (object_multipart_initiated=0) (op_list_located_status=0) (stream_read_opened=6) (op_access=0) (object_continue_list_request.failures=0) (store_exists_probe=0) (stream_read_exceptions=0) (op_is_directory.failures=0) (fake_directories_deleted=45) (op_get_file_status=2) (object_list_request=180) (files_deleted=45) (action_http_get_request.failures=0) (stream_write_exceptions_completing_upload=0) (op_copy_from_local_file=0) (stream_read_operations_incomplete=0) (object_put_request=90) (object_delete_request=0) (object_put_request_completed=90) (op_list_files.failures=0) (op_glob_status.failures=0) (op_list_files=0) (stream_read_version_mismatches=0) (delegation_tokens_issued.failures=0) (op_get_file_checksum.failures=0) (stream_write_queue_duration.failures=0) (multipart_upload_started=0) (op_create_non_recursive=0) (stream_read_operations=6) (stream_write_block_uploads_committed=0) (stream_write_queue_duration=0) (op_create=45) (committer_commits_aborted=0) (stream_read_unbuffered=2) (store_exists_probe.failures=0) (stream_read_closed=6) (action_executor_acquired.failures=0) (op_delete.failures=0) (delegation_tokens_issued=0) (stream_read_seek_forward_operations=0) (op_createfile=0) (committer_commits.failures=0) (audit_failure=0) (stream_read_bytes_discarded_in_abort=0) (committer_load_single_pending_file=0) (stream_aborted=0) (multipart_upload_abort_under_path_invoked=0) (committer_jobs_completed=0) (action_http_get_request=43) (directories_deleted=0) (op_create.failures=0) (object_metadata_request=129) (committer_stage_file_upload=0) (multipart_upload_list.failures=0) (committer_tasks_completed=0) (op_xattr_get_named_map=0) (op_xattr_get_named_map.failures=0) (store_io_throttled=0) (op_copy_from_local_file.failures=0) (multipart_upload_part_put=0) (directories_created=45) (op_list_status=0) (committer_commit_job.failures=0) (committer_materialize_file.failures=0) (files_copied_bytes=0) (committer_commits_reverted=0) (action_executor_acquired=0) (op_exists=0) (stream_read_vectored_read_bytes_discarded=49046) (object_put_bytes=2949120) (stream_read_vectored_combined_ranges=41) (stream_read_vectored_incoming_ranges=97) (op_hflush=0) (committer_materialize_file=0) (op_is_file=0) (action_http_head_request=129) (stream_write_block_uploads=45) (files_copied=0) (action_http_head_request.failures=0) (stream_read_seek_bytes_discarded=0) (object_delete_objects=90) (stream_write_total_time=0) (op_xattr_get_map.failures=0) (committer_load_single_pending_file.failures=0) (object_copy_requests=0) (object_multipart_initiated.failures=0) (stream_write_bytes=2949120) (committer_magic_files_created=0) (op_abort.failures=0) (op_xattr_list.failures=0) (stream_read_bytes=12926) (op_get_file_status.failures=0) (op_abort=0) (op_rename=0) (stream_read_total_bytes=404942) (op_xattr_get_named=0) (committer_tasks_failed=0) (op_exists.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=45) (object_put_request_active=0) (stream_write_block_uploads_active=0));
minimums=((committer_materialize_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_create.min=4) (action_file_opened.min=3) (op_xattr_list.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_list_files.min=-1) (op_xattr_list.failures.min=-1) (action_http_head_request.min=1) (op_copy_from_local_file.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.min=-1) (op_createfile.min=-1) (committer_stage_file_upload.failures.min=-1) (op_exists.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_file.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_map.failures.min=-1) (op_mkdirs.failures.min=-1) (object_put_request.min=16) (object_multipart_aborted.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.min=-1) (op_mkdirs.min=15) (action_executor_acquired.min=-1) (op_createfile.failures.min=-1) (op_list_status.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.min=-1) (action_http_head_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_glob_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_create.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.min=19) (object_list_request.min=4) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.min=-1) (stream_write_queue_duration.min=-1) (op_is_directory.min=-1) (action_http_get_request.min=13) (object_multipart_initiated.min=-1) (op_xattr_get_named.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.min=-1) (action_file_opened.failures.min=-1) (op_list_files.failures.min=-1) (op_exists.min=-1) (action_executor_acquired.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_delete_request.failures.min=-1) (op_glob_status.min=-1) (op_rename.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_content_summary.min=-1) (object_continue_list_request.failures.min=-1) (op_abort.min=-1) (object_bulk_delete_request.min=4) (object_list_request.failures.min=-1) (op_list_status.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_file_status.min=5) (op_access.min=-1) (action_http_get_request.failures.min=-1) (op_abort.failures.min=-1) (op_rename.failures.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_drain.min=1) (store_exists_probe.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (op_get_file_status.max=8) (op_get_content_summary.failures.max=-1) (op_exists.max=-1) (committer_stage_file_upload.max=-1) (op_access.max=-1) (op_glob_status.max=-1) (op_xattr_list.failures.max=-1) (stream_write_queue_duration.max=-1) (action_executor_acquired.max=-1) (op_is_file.max=-1) (op_get_file_checksum.failures.max=-1) (multipart_upload_list.max=-1) (object_continue_list_request.failures.max=-1) (op_abort.max=-1) (op_create.max=45) (object_bulk_delete_request.max=17) (object_delete_request.failures.max=-1) (object_put_request.failures.max=-1) (committer_materialize_file.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_status.failures.max=-1) (op_list_files.failures.max=-1) (action_http_head_request.max=15) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named.max=-1) (object_put_request.max=71) (op_is_directory.max=-1) (action_http_get_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_abort.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_map.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.max=-1) (op_copy_from_local_file.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.max=12) (committer_commit_job.max=-1) (object_multipart_aborted.max=-1) (op_list_files.max=-1) (op_xattr_list.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=26) (op_list_status.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_map.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.max=-1) (object_delete_request.max=-1) (op_list_status.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.max=-1) (object_list_request.failures.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.max=-1) (committer_commit_job.failures.max=-1) (action_http_head_request.failures.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.max=4) (op_copy_from_local_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.max=58) (stream_read_remote_stream_aborted.failures.max=-1) (op_mkdirs.max=263) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.max=-1) (op_glob_status.failures.max=-1) (op_is_file.failures.max=-1) (object_list_request.max=167) (op_access.failures.max=-1) (action_file_opened.failures.max=-1) (store_exists_probe.max=-1) (op_create.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named_map.max=-1));
means=((op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=45, sum=435, mean=9.6667)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=90, sum=1581, mean=17.5667)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=45, sum=1358, mean=30.1778)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=129, sum=536, mean=4.1550)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=45, sum=1417, mean=31.4889)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=43, sum=576, mean=13.3953)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=180, sum=1426, mean=7.9222)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=39, sum=187, mean=4.7949)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=90, sum=678, mean=7.5333)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:23:52,980 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:23:52,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,980 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,980 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000211 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000211&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=249&ts=1731777832980
2024-11-16 17:23:52,985 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:52,986 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,986 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:23:52,986 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:52,987 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:52,987 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000211 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000211&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=249&ts=1731777832980
2024-11-16 17:23:52,990 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:23:52,990 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:23:52,990 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:23:52,990 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:23:52,990 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000211 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000211&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=249&ts=1731777832980
2024-11-16 17:23:52,998 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:23:52,998 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:23:52,998 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:23:52,998 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:23:52,999 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:52,999 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:52,999 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:52,999 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:52,999 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000212 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000212/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000212&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=249&ts=1731777832999
2024-11-16 17:23:53,004 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:23:53,004 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:53,004 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:23:53,005 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12732891876033436724.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:23:53,005 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12732891876033436724.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (op_abort=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (multipart_upload_completed=0) (stream_write_total_data=0) (op_hsync=0) (stream_write_exceptions=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (op_hflush=0) (object_multipart_aborted=0) (object_put_request=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12732891876033436724.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:23:53,005 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:53,005 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:23:53,006 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12732891876033436724.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:23:53,006 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:23:53,006 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:23:53,006 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:23:53,006 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:23:53,006 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000212 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000212/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000212&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=41&ts=1731777832999
2024-11-16 17:23:53,020 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:23:53,020 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:23:53,021 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.014s
2024-11-16 17:23:53,021 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12732891876033436724.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:23:53,021 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12732891876033436724.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:53,021 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12732891876033436724.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:23:53,021 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:23:53,021 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:23:53,022 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (stream_write_block_uploads=1) (op_abort=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (object_put_request=1) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (op_hsync=0) (op_abort.failures=0) (multipart_upload_completed=0) (op_hflush=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=14));
maximums=((object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=14) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=14, mean=14.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:23:53,022 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:23:53,023 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:23:53,023 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:23:53,023 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:23:53,024 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000213 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000213/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000213&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=249&ts=1731777833023
2024-11-16 17:23:53,026 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:23:53,026 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:23:53,026 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:53,026 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:23:53,026 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:23:53,027 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:23:53,027 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:53,027 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:23:53,027 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:23:53,027 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000213 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000213/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&rg=500-899&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000213&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=43&ts=1731777833023
2024-11-16 17:23:53,027 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:23:53,034 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.007s
2024-11-16 17:23:53,034 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:23:53,035 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (stream_read_exceptions=0) (stream_read_vectored_operations=1) (stream_read_seek_policy_changed=1) (action_executor_acquired=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_vectored_incoming_ranges=3) (stream_read_unbuffered=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_total_bytes=400) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=0) (stream_aborted=0) (stream_read_fully_operations=0) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=0) (stream_read_operations=0) (stream_read_operations_incomplete=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_close_operations=1) (action_http_get_request=1) (stream_read_version_mismatches=0) (stream_read_bytes=400) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=7) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1));
maximums=((action_file_opened.max=3) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=7) (action_http_get_request.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=7, mean=7.0000)));

2024-11-16 17:23:53,036 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:23:53,036 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:23:53,036 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:23:53,036 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=249&ts=1731777833036
2024-11-16 17:23:53,039 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:23:53,039 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:53,039 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=249&ts=1731777833036
2024-11-16 17:23:53,043 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:23:53,043 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:23:53,043 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:23:53,044 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:23:53,044 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:23:53,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:23:53,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:23:53,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:23:53,044 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:23:53,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:23:53,044 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:23:53,044 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:23:53,044 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:23:53,044 [s3a-transfer-leg-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:23:53,045 [s3a-transfer-leg-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:23:53,045 [s3a-transfer-leg-bucket-unbounded-pool2-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=250&ts=1731777833036
2024-11-16 17:23:53,048 [s3a-transfer-leg-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.003s
2024-11-16 17:23:53,048 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.004s
2024-11-16 17:23:53,048 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:23:53,049 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:23:53,049 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:23:53,049 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777833018; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:23:53,049 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:23:53,049 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:23:53,049 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:23:53,049 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:23:53,050 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:23:53,050 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:23:53,050 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:23:53,050 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:53,050 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:53,050 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:23:53,050 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:53,050 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=44&ts=1731777833036
2024-11-16 17:23:53,051 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:23:53,056 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:53,056 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:23:53,056 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:23:53,056 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:23:53,056 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:23:53,056 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:23:53,057 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:23:53,057 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:23:53,057 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:23:53,057 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=17bf6f0b-ffb0-4fb0-ac04-fa89ed9f0e2b&ks=1&id=dcc3b421-341f-448c-8a0e-77e9f97c36a2-00000214&t0=249&fs=dcc3b421-341f-448c-8a0e-77e9f97c36a2&t1=44&ts=1731777833036
2024-11-16 17:23:53,063 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:23:53,063 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:23:53,063 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:23:53,063 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.013s
2024-11-16 17:23:53,063 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.012s
2024-11-16 17:23:53,064 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.020s
2024-11-16 17:23:53,064 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:23:53,064 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:23:53,078 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:23:53,088 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:23:53,088 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:53,088 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@6f9c05e3[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 58]. Waiting max 30 SECONDS
2024-11-16 17:23:53,089 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:23:53,089 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics1-leg-bucket
2024-11-16 17:23:53,090 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(733)) - Shutting down metrics publisher
2024-11-16 17:23:53,090 [shutdown-hook-0] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:23:53,091 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:53,091 [shutdown-hook-0] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:23:53,092 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_rename=0) (stream_read_bytes_discarded_in_close=392016) (op_is_file.failures=0) (op_glob_status=0) (object_select_requests=0) (committer_bytes_committed=0) (committer_commits_reverted=0) (stream_read_seek_bytes_discarded=0) (op_mkdirs=46) (object_metadata_request=132) (op_get_content_summary.failures=0) (stream_read_closed=6) (op_xattr_get_map.failures=0) (audit_request_execution=544) (stream_read_total_bytes=405342) (stream_read_vectored_read_bytes_discarded=49046) (committer_bytes_uploaded=0) (files_copied=0) (stream_write_total_data=6029312) (object_list_request=184) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_operations_incomplete=0) (store_exists_probe=0) (stream_read_vectored_combined_ranges=42) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0) (stream_read_opened=6) (fake_directories_deleted=46) (delegation_tokens_issued.failures=0) (op_xattr_list=0) (stream_read_remote_stream_aborted=0) (op_open=40) (stream_read_remote_stream_drain=6) (object_delete_objects=92) (object_put_request=92) (files_copied_bytes=0) (op_get_content_summary=0) (action_executor_acquired=0) (op_delete=46) (committer_magic_marker_put.failures=0) (stream_read_version_mismatches=0) (op_exists.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_list=0) (committer_commit_job=0) (op_hflush=0) (op_list_located_status=0) (committer_commits_aborted=0) (committer_commits_completed=0) (committer_materialize_file.failures=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named_map.failures=0) (multipart_upload_completed=0) (object_continue_list_request=0) (op_xattr_get_named.failures=0) (object_delete_request=0) (op_list_files.failures=0) (committer_commits.failures=0) (stream_read_bytes=13326) (op_xattr_get_named_map=0) (op_glob_status.failures=0) (committer_tasks_failed=0) (stream_read_vectored_incoming_ranges=100) (committer_commits_created=0) (op_list_status=0) (op_list_status.failures=0) (op_copy_from_local_file.failures=0) (stream_read_vectored_operations=32) (committer_commit_job.failures=0) (op_hsync=0) (op_createfile.failures=0) (action_executor_acquired.failures=0) (multipart_instantiated=0) (op_exists=0) (op_create=46) (op_is_directory.failures=0) (op_access.failures=0) (op_get_delegation_token.failures=0) (files_created=46) (op_access=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_block_uploads=46) (directories_created=46) (multipart_upload_started=0) (committer_jobs_completed=0) (stream_read_seek_operations=0) (store_io_request=544) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0) (op_createfile=0) (op_create_non_recursive=0) (stream_read_exceptions=0) (stream_write_block_uploads_aborted=0) (object_list_request.failures=0) (op_xattr_list.failures=0) (committer_load_single_pending_file.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_backward_operations=0) (op_get_file_checksum=0) (op_openfile=0) (ignored_errors=0) (committer_load_single_pending_file=0) (stream_read_fully_operations=2) (op_get_delegation_token=0) (op_is_directory=0) (object_put_request.failures=0) (stream_write_bytes=3014656) (op_get_file_status=2) (op_xattr_get_map=0) (op_get_file_checksum.failures=0) (object_put_bytes=3014656) (object_copy_requests=0) (action_http_get_request=44) (stream_read_operations=6) (action_http_head_request.failures=0) (stream_read_seek_bytes_skipped=0) (object_bulk_delete_request.failures=0) (stream_read_close_operations=40) (delegation_tokens_issued=0) (object_multipart_initiated.failures=0) (store_io_retry=0) (object_multipart_initiated=0) (store_io_throttled=0) (op_create.failures=0) (committer_tasks_completed=0) (audit_failure=0) (action_http_head_request=132) (committer_magic_marker_put=0) (store_exists_probe.failures=0) (op_list_files=0) (op_is_file=0) (directories_deleted=0) (stream_read_unbuffered=2) (multipart_upload_part_put=0) (committer_stage_file_upload.failures=0) (op_delete.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_write_block_uploads_committed=0) (stream_aborted=0) (op_abort=0) (files_delete_rejected=0) (fake_directories_created=0) (audit_access_check_failure=0) (stream_read_seek_policy_changed=42) (stream_write_queue_duration=0) (op_rename.failures=0) (committer_jobs_failed=0) (object_multipart_aborted=0) (object_delete_request.failures=0) (files_deleted=46) (multipart_upload_aborted=0) (multipart_upload_list.failures=0) (committer_stage_file_upload=0) (audit_span_creation=181) (committer_materialize_file=0) (object_continue_list_request.failures=0) (object_put_request_completed=92) (stream_write_exceptions=0) (object_bulk_delete_request=92) (op_xattr_get_named=0) (stream_write_total_time=0) (op_get_file_status.failures=0) (stream_write_queue_duration.failures=0) (committer_magic_files_created=0) (op_mkdirs.failures=0) (action_file_opened=40) (op_copy_from_local_file=0));
gauges=((stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=46) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.failures.min=-1) (op_glob_status.failures.min=-1) (store_exists_probe.min=-1) (committer_load_single_pending_file.min=-1) (object_delete_request.failures.min=-1) (op_exists.min=-1) (op_is_file.failures.min=-1) (committer_materialize_file.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=1) (op_get_file_status.failures.min=-1) (action_http_get_request.min=7) (op_get_delegation_token.failures.min=-1) (op_xattr_get_map.min=-1) (op_abort.min=-1) (op_access.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_list.min=-1) (op_rename.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_file.min=-1) (op_mkdirs.min=15) (op_delete.min=19) (op_abort.failures.min=-1) (op_xattr_list.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_checksum.min=-1) (stream_write_queue_duration.min=-1) (committer_magic_marker_put.min=-1) (op_access.min=-1) (op_createfile.min=-1) (op_delete.failures.min=-1) (delegation_tokens_issued.min=-1) (op_is_directory.failures.min=-1) (object_put_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.min=-1) (stream_write_queue_duration.failures.min=-1) (object_bulk_delete_request.min=4) (op_create.min=4) (op_create.failures.min=-1) (op_xattr_get_named.min=-1) (multipart_upload_list.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_list_files.min=-1) (committer_commit_job.failures.min=-1) (op_glob_status.min=-1) (op_mkdirs.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_commit_job.min=-1) (object_put_request.min=14) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_list_request.min=3) (committer_materialize_file.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.min=-1) (op_rename.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_status.failures.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (multipart_upload_list.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_createfile.failures.min=-1) (action_file_opened.min=3) (object_continue_list_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.min=5) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.min=-1));
maximums=((object_bulk_delete_request.max=17) (object_delete_request.failures.max=-1) (op_abort.max=-1) (op_xattr_list.max=-1) (object_put_request.max=71) (op_rename.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_stage_file_upload.max=-1) (object_continue_list_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_is_directory.failures.max=-1) (op_delete.failures.max=-1) (store_exists_probe.max=-1) (op_createfile.failures.max=-1) (op_get_file_status.failures.max=-1) (op_copy_from_local_file.max=-1) (action_http_head_request.max=15) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_status.max=-1) (op_glob_status.failures.max=-1) (op_mkdirs.max=263) (op_createfile.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_commit_job.max=-1) (op_get_delegation_token.failures.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_is_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.max=58) (op_list_status.failures.max=-1) (action_http_get_request.max=26) (op_exists.failures.max=-1) (op_exists.max=-1) (op_access.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_glob_status.max=-1) (op_create.max=45) (op_list_files.max=-1) (object_multipart_initiated.max=-1) (action_http_head_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_list.failures.max=-1) (op_is_directory.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.max=4) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.max=167) (committer_magic_marker_put.failures.max=-1) (op_is_file.max=-1) (op_get_file_status.max=8) (object_continue_list_request.max=-1) (op_get_file_checksum.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_rename.max=-1) (committer_materialize_file.max=-1) (multipart_upload_list.failures.max=-1) (op_access.max=-1) (committer_commit_job.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_delete_request.max=-1) (object_put_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=12) (object_list_request.failures.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=46, sum=1437, mean=31.2391)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=46, sum=441, mean=9.5870)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=40, sum=190, mean=4.7500)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=44, sum=583, mean=13.2500)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=46, sum=1376, mean=29.9130)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=13, mean=6.5000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=132, sum=545, mean=4.1288)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=184, sum=1443, mean=7.8424)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=92, sum=1603, mean=17.4239)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=92, sum=690, mean=7.5000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)));

