2024-11-16 17:27:09,385 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:09,653 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:27:09,657 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:27:09,669 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:09,672 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:09,739 [setup] WARN  impl.MetricsConfig (MetricsConfig.java:loadFirst(136)) - Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
2024-11-16 17:27:09,866 [setup] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:getMetricsSystem(250)) - Metrics system inited org.apache.hadoop.metrics2.impl.MetricsSystemImpl@65537b46
2024-11-16 17:27:09,875 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:27:09,878 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:27:09,879 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:27:09,879 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:27:09,880 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:27:09,880 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:27:09,880 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:27:09,883 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:27:09,884 [setup] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:27:09,889 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:27:09,894 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:09,896 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:09,897 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:27:09,897 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:27:09,898 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:27:09,907 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:27:09,908 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:27:09,909 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:27:09,910 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:27:10,090 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4]
2024-11-16 17:27:10,090 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4]
2024-11-16 17:27:10,102 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:27:10,238 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:27:10,239 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:27:10,239 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:27:10,239 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:27:10,240 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:27:10,242 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:27:10,244 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:10,305 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:27:10,316 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:27:10,335 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:27:10,336 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:27:10,490 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:27:10,491 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:27:10,493 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:27:10,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:27:10,499 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:27:10,500 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:27:10,503 [setup] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:27:10,503 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:27:10,504 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:27:10,504 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:27:10,506 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:27:10,506 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:27:10,506 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:27:10,507 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:27:10,507 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:27:10,507 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:27:10,539 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4], delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_access=0) (stream_read_remote_stream_drain=0) (stream_write_queue_duration.failures=0) (delegation_tokens_issued=0) (op_is_directory=0) (op_abort=0) (committer_commits_aborted=0) (delegation_tokens_issued.failures=0) (ignored_errors=0) (object_bulk_delete_request.failures=0) (stream_read_seek_bytes_skipped=0) (object_put_bytes=0) (committer_magic_files_created=0) (files_created=0) (stream_read_version_mismatches=0) (stream_read_vectored_combined_ranges=0) (committer_stage_file_upload.failures=0) (object_select_requests=0) (stream_read_vectored_read_bytes_discarded=0) (op_delete.failures=0) (stream_read_opened=0) (committer_load_single_pending_file.failures=0) (op_get_delegation_token.failures=0) (stream_read_operations=0) (op_abort.failures=0) (op_exists.failures=0) (op_mkdirs.failures=0) (op_glob_status.failures=0) (stream_read_vectored_incoming_ranges=0) (op_openfile=0) (op_list_files.failures=0) (committer_magic_marker_put=0) (committer_commits.failures=0) (op_get_file_checksum.failures=0) (stream_write_bytes=0) (committer_tasks_completed=0) (op_get_delegation_token=0) (op_hflush=0) (op_rename=0) (stream_read_operations_incomplete=0) (committer_commit_job.failures=0) (multipart_upload_part_put=0) (op_list_files=0) (stream_write_exceptions=0) (committer_bytes_committed=0) (op_is_directory.failures=0) (store_exists_probe=0) (op_is_file.failures=0) (op_list_status.failures=0) (audit_access_check_failure=0) (object_put_request_completed=0) (op_create_non_recursive=0) (op_copy_from_local_file.failures=0) (stream_write_total_time=0) (stream_write_block_uploads_committed=0) (op_rename.failures=0) (op_exists=0) (object_delete_request=0) (op_createfile.failures=0) (committer_commits_reverted=0) (committer_jobs_failed=0) (op_open=0) (object_continue_list_request=0) (committer_tasks_failed=0) (object_list_request=0) (committer_bytes_uploaded=0) (files_copied=0) (stream_write_queue_duration=0) (stream_write_block_uploads=0) (stream_read_seek_operations=0) (stream_write_exceptions_completing_upload=0) (committer_load_single_pending_file=0) (op_xattr_get_named_map=0) (object_continue_list_request.failures=0) (op_xattr_get_map=0) (object_multipart_aborted.failures=0) (action_http_head_request.failures=0) (stream_read_seek_backward_operations=0) (op_is_file=0) (op_xattr_get_named.failures=0) (stream_read_close_operations=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (audit_request_execution=0) (op_xattr_get_named_map.failures=0) (multipart_upload_list.failures=0) (object_list_request.failures=0) (fake_directories_deleted=0) (audit_failure=0) (store_exists_probe.failures=0) (object_multipart_initiated=0) (store_io_retry=0) (op_get_file_status=0) (fake_directories_created=0) (committer_materialize_file.failures=0) (committer_stage_file_upload=0) (files_delete_rejected=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named=0) (action_file_opened=0) (action_executor_acquired.failures=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_aborted=0) (committer_magic_marker_put.failures=0) (object_delete_request.failures=0) (op_list_located_status=0) (object_multipart_initiated.failures=0) (op_glob_status=0) (action_http_get_request.failures=0) (op_createfile=0) (files_copied_bytes=0) (object_multipart_aborted=0) (action_file_opened.failures=0) (object_delete_objects=0) (op_create.failures=0) (stream_read_fully_operations=0) (action_http_head_request=0) (op_list_status=0) (store_io_request=0) (committer_commits_created=0) (multipart_upload_aborted=0) (committer_jobs_completed=0) (op_get_content_summary=0) (committer_commit_job=0) (op_get_file_status.failures=0) (action_http_get_request=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_list=0) (multipart_upload_abort_under_path_invoked=0) (op_copy_from_local_file=0) (op_hsync=0) (object_copy_requests=0) (stream_read_exceptions=0) (directories_created=0) (op_xattr_list=0) (stream_aborted=0) (committer_commits_completed=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_completed=0) (multipart_instantiated=0) (stream_write_total_data=0) (op_xattr_get_map.failures=0) (action_executor_acquired=0) (multipart_upload_started=0) (stream_read_unbuffered=0) (store_io_throttled=0) (object_put_request.failures=0) (committer_materialize_file=0) (op_get_content_summary.failures=0) (stream_read_seek_policy_changed=0) (directories_deleted=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes=0) (stream_read_closed=0) (stream_write_block_uploads_aborted=0) (op_create=0) (object_bulk_delete_request=0) (multipart_upload_part_put_bytes=0) (object_metadata_request=0) (audit_span_creation=1) (op_delete=0) (files_deleted=0) (stream_read_total_bytes=0) (op_xattr_list.failures=0) (object_put_request=0) (op_get_file_checksum=0) (op_access.failures=0) (op_mkdirs=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.failures.min=-1) (store_exists_probe.min=-1) (op_list_files.min=-1) (op_access.failures.min=-1) (op_list_files.failures.min=-1) (op_delete.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.failures.min=-1) (op_abort.min=-1) (multipart_upload_list.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_list.min=-1) (committer_commit_job.failures.min=-1) (action_executor_acquired.min=-1) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_bulk_delete_request.min=-1) (object_list_request.failures.min=-1) (op_rename.min=-1) (action_http_get_request.min=-1) (op_createfile.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_file.failures.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_file.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.failures.min=-1) (stream_write_queue_duration.min=-1) (op_delete.min=-1) (committer_magic_marker_put.min=-1) (op_copy_from_local_file.min=-1) (op_get_delegation_token.min=-1) (op_exists.min=-1) (op_xattr_get_map.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_copy_from_local_file.failures.min=-1) (op_createfile.failures.min=-1) (op_glob_status.min=-1) (op_get_content_summary.min=-1) (op_is_directory.min=-1) (op_create.min=-1) (op_exists.failures.min=-1) (action_http_head_request.failures.min=-1) (op_list_status.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named.min=-1) (op_xattr_list.failures.min=-1) (op_mkdirs.min=-1) (object_delete_request.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named_map.min=-1) (object_delete_request.failures.min=-1) (op_mkdirs.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_commit_job.min=-1) (op_access.min=-1) (op_create.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.failures.min=-1) (op_list_status.min=-1) (object_continue_list_request.failures.min=-1) (action_file_opened.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_glob_status.failures.min=-1) (multipart_upload_list.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (delegation_tokens_issued.min=-1) (op_rename.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.min=-1) (action_http_head_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.failures.min=-1));
maximums=((committer_load_single_pending_file.failures.max=-1) (op_access.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.failures.max=-1) (multipart_upload_list.max=-1) (op_get_content_summary.max=-1) (op_delete.failures.max=-1) (op_createfile.max=-1) (committer_load_single_pending_file.max=-1) (store_exists_probe.max=-1) (action_file_opened.max=-1) (op_get_delegation_token.max=-1) (op_abort.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_put_request.failures.max=-1) (op_rename.max=-1) (op_list_files.max=-1) (op_list_files.failures.max=-1) (object_multipart_initiated.max=-1) (op_copy_from_local_file.failures.max=-1) (op_glob_status.max=-1) (store_exists_probe.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_file_status.max=-1) (object_bulk_delete_request.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_directory.failures.max=-1) (op_delete.max=-1) (object_multipart_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (delegation_tokens_issued.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_list.max=-1) (op_exists.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named.max=-1) (op_create.max=-1) (committer_commit_job.max=-1) (op_abort.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_is_directory.max=-1) (action_executor_acquired.failures.max=-1) (op_mkdirs.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_aborted.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_exists.max=-1) (multipart_upload_list.failures.max=-1) (object_list_request.max=-1) (op_create.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.failures.max=-1) (object_list_request.failures.max=-1) (object_continue_list_request.max=-1) (op_copy_from_local_file.max=-1) (object_put_request.max=-1) (op_is_file.max=-1) (op_list_status.max=-1) (op_access.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_file.failures.max=-1) (action_http_head_request.max=-1) (op_rename.failures.max=-1) (action_file_opened.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.failures.max=-1) (committer_materialize_file.max=-1) (action_http_get_request.max=-1) (committer_stage_file_upload.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:10,549 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:10,550 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:10,551 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:10,553 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:10,554 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:10,555 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000005 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000005&t0=16&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=16&ts=1731778030548
2024-11-16 17:27:10,569 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:27:10,603 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.034s
2024-11-16 17:27:10,604 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:27:10,606 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:27:10,775 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.221s
2024-11-16 17:27:10,776 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:10,776 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:10,776 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:10,778 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:10,779 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000005 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000005&t0=16&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=16&ts=1731778030548
2024-11-16 17:27:10,796 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:10,798 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:10,805 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:10,806 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:10,810 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000005 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000005&t0=16&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=16&ts=1731778030548
2024-11-16 17:27:10,870 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:10,870 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:10,870 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.072s
2024-11-16 17:27:10,870 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:10,875 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:10,875 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:10,875 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:10,875 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:10,876 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000006 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000006&t0=16&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=16&ts=1731778030873
2024-11-16 17:27:10,886 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:27:10,886 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:10,892 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:10,931 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8858626666916628861.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:10,936 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8858626666916628861.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (stream_write_total_data=0) (op_abort=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (action_executor_acquired=0) (op_hflush=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (op_hsync=0) (object_put_request=0) (stream_write_queue_duration=0) (stream_write_block_uploads=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8858626666916628861.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:10,937 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:10,937 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:10,938 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8858626666916628861.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:10,953 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:10,955 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:10,956 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:10,956 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:10,957 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000006 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000006&t0=16&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=31&ts=1731778030873
2024-11-16 17:27:11,005 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:11,006 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:11,006 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.051s
2024-11-16 17:27:11,007 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8858626666916628861.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:11,008 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8858626666916628861.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,008 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8858626666916628861.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,009 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:11,011 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:11,033 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_time=0) (stream_write_total_data=65536) (multipart_upload_completed=0) (stream_write_queue_duration=0) (op_abort=0) (op_abort.failures=0) (op_hflush=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_put_request=1) (object_multipart_initiated=0) (stream_write_block_uploads=1) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (multipart_upload_part_put=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.min=48) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (object_put_request.max=48) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=48, mean=48.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:11,035 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:11,036 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:27:11,036 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:27:11,037 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:11,038 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:11,042 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:27:11,042 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:27:11,042 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:27:11,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:27:11,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:27:11,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:27:11,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:27:11,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:27:11,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:27:11,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:27:11,044 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='7bc35d10-94cd-401c-9c7f-83f01070ecbc', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:11,044 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='7bc35d10-94cd-401c-9c7f-83f01070ecbc', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:11,044 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7bc35d10-94cd-401c-9c7f-83f01070ecbc', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:27:11,044 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:27:11,045 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:27:11,045 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:27:11,045 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:27:11,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:27:11,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:27:11,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@20accbfa]
2024-11-16 17:27:11,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@20accbfa]
2024-11-16 17:27:11,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:27:11,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:27:11,047 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:27:11,047 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:27:11,047 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:27:11,047 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:27:11,047 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:27:11,048 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:11,048 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:27:11,048 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:27:11,048 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:27:11,048 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:27:11,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:27:11,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:27:11,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:27:11,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:27:11,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:27:11,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:27:11,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:27:11,052 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:27:11,052 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:27:11,052 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:27:11,052 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:27:11,052 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:27:11,052 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:27:11,052 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:27:11,053 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:27:11,053 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:27:11,058 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:11,058 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,058 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:11,059 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 7bc35d10-94cd-401c-9c7f-83f01070ecbc-00000009 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7bc35d10-94cd-401c-9c7f-83f01070ecbc-00000009/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7bc35d10-94cd-401c-9c7f-83f01070ecbc-00000009&t0=16&fs=7bc35d10-94cd-401c-9c7f-83f01070ecbc&t1=16&ts=1731778031057
2024-11-16 17:27:11,059 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:27:11,059 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:27:11,060 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:27:11,063 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:27:11,070 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:11,072 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:11,074 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:11,111 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (stream_read_total_bytes=0) (stream_read_version_mismatches=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=1) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_unbuffered=0) (stream_read_seek_backward_operations=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=0) (stream_read_fully_operations=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=1) (stream_read_seek_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read=0) (action_http_get_request.failures=0) (stream_read_bytes=0) (stream_read_operations_incomplete=0) (stream_read_exceptions=0) (stream_read_operations=0) (stream_read_vectored_operations=0) (stream_read_block_read.failures=0) (action_http_get_request=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=14) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=14) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=14, mean=14.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:11,116 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:27:11,117 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:27:11,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:11,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@4d28f10c[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:27:11,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:11,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics2-fso-bucket
2024-11-16 17:27:11,119 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:27:11,119 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@20accbfa] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:11,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@20accbfa] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:11,127 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_exceptions=0) (op_is_file=0) (committer_commits.failures=0) (action_http_head_request.failures=0) (op_list_status.failures=0) (stream_write_block_uploads_committed=0) (store_exists_probe.failures=0) (stream_read_vectored_combined_ranges=0) (ignored_errors=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (action_file_opened.failures=0) (op_xattr_get_map.failures=0) (object_continue_list_request.failures=0) (fake_directories_created=0) (object_multipart_aborted.failures=0) (op_create_non_recursive=0) (op_access=0) (stream_read_seek_policy_changed=1) (op_xattr_get_named_map=0) (store_io_request=1) (multipart_upload_started=0) (committer_load_single_pending_file=0) (stream_read_bytes=0) (stream_read_version_mismatches=0) (op_delete=0) (stream_read_opened=0) (stream_write_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (audit_access_check_failure=0) (object_continue_list_request=0) (op_get_delegation_token=0) (op_get_file_status.failures=0) (action_executor_acquired.failures=0) (committer_stage_file_upload=0) (action_http_get_request.failures=0) (stream_write_queue_duration=0) (committer_stage_file_upload.failures=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_map=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (op_create.failures=0) (delegation_tokens_issued.failures=0) (multipart_upload_aborted=0) (op_exists.failures=0) (stream_write_queue_duration.failures=0) (committer_commits_reverted=0) (op_mkdirs=0) (stream_read_close_operations=1) (committer_magic_files_created=0) (op_glob_status=0) (stream_read_seek_forward_operations=0) (op_copy_from_local_file=0) (op_list_status=0) (audit_span_creation=2) (committer_jobs_failed=0) (op_list_located_status=0) (op_hflush=0) (directories_created=0) (object_metadata_request=1) (files_delete_rejected=0) (op_xattr_get_named=0) (op_exists=0) (directories_deleted=0) (stream_write_exceptions_completing_upload=0) (op_open=1) (committer_bytes_uploaded=0) (committer_materialize_file.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_total_data=0) (files_copied_bytes=0) (stream_read_fully_operations=0) (op_abort.failures=0) (op_get_content_summary.failures=0) (stream_read_closed=0) (stream_read_operations=0) (object_copy_requests=0) (files_deleted=0) (multipart_upload_list=0) (object_bulk_delete_request=0) (stream_read_total_bytes=0) (op_rename=0) (action_file_opened=1) (object_list_request.failures=0) (op_xattr_get_named.failures=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (object_put_bytes=0) (op_is_directory.failures=0) (stream_write_block_uploads=0) (committer_bytes_committed=0) (stream_read_seek_bytes_discarded=0) (object_multipart_initiated=0) (store_io_retry=0) (files_created=0) (committer_materialize_file=0) (op_list_files=0) (op_xattr_list=0) (op_delete.failures=0) (action_executor_acquired=0) (op_is_directory=0) (op_get_content_summary=0) (op_is_file.failures=0) (committer_commits_created=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (audit_failure=0) (op_get_file_checksum=0) (fake_directories_deleted=0) (object_delete_request=0) (action_http_get_request=0) (op_openfile=0) (committer_commits_aborted=0) (op_glob_status.failures=0) (op_rename.failures=0) (op_get_file_checksum.failures=0) (committer_jobs_completed=0) (op_get_file_status=0) (object_put_request.failures=0) (op_createfile=0) (op_xattr_list.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_aborted=0) (store_exists_probe=0) (committer_tasks_completed=0) (stream_aborted=0) (stream_read_vectored_operations=0) (object_put_request_completed=0) (files_copied=0) (committer_commit_job.failures=0) (multipart_instantiated=0) (stream_write_total_time=0) (committer_load_single_pending_file.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain=0) (object_select_requests=0) (stream_read_seek_bytes_skipped=0) (committer_commits_completed=0) (op_access.failures=0) (multipart_upload_list.failures=0) (multipart_upload_completed=0) (object_bulk_delete_request.failures=0) (stream_read_unbuffered=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations_incomplete=0) (committer_tasks_failed=0) (audit_request_execution=1) (op_abort=0) (object_delete_request.failures=0) (committer_commit_job=0) (op_copy_from_local_file.failures=0) (store_io_throttled=0) (object_delete_objects=0) (object_put_request=0) (op_xattr_get_named_map.failures=0) (action_http_head_request=1) (delegation_tokens_issued=0) (op_list_files.failures=0) (op_create=0) (stream_read_bytes_discarded_in_close=0) (multipart_upload_part_put_bytes=0) (op_get_delegation_token.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_createfile.failures=0) (multipart_upload_abort_under_path_invoked=0) (object_list_request=0) (object_multipart_aborted=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_write_queue_duration.min=-1) (action_http_get_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (action_file_opened.failures.min=-1) (object_delete_request.failures.min=-1) (object_bulk_delete_request.min=-1) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_createfile.failures.min=-1) (op_access.failures.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_drain.min=-1) (op_get_file_status.min=-1) (committer_materialize_file.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.min=-1) (op_create.min=-1) (op_xattr_get_named.min=-1) (multipart_upload_list.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_access.min=-1) (action_executor_acquired.min=-1) (op_list_files.min=-1) (op_delete.failures.min=-1) (op_rename.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_is_directory.failures.min=-1) (object_put_request.min=-1) (op_get_content_summary.min=-1) (op_mkdirs.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.min=-1) (op_list_status.failures.min=-1) (action_http_head_request.min=12) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_list_request.failures.min=-1) (op_get_file_status.failures.min=-1) (store_exists_probe.min=-1) (op_glob_status.failures.min=-1) (op_is_file.min=-1) (object_list_request.min=-1) (op_abort.failures.min=-1) (op_xattr_get_map.min=-1) (op_list_files.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_delete.min=-1) (op_get_file_checksum.min=-1) (multipart_upload_list.min=-1) (object_delete_request.min=-1) (committer_commit_job.min=-1) (op_glob_status.min=-1) (committer_magic_marker_put.failures.min=-1) (action_http_get_request.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_createfile.min=-1) (object_put_request.failures.min=-1) (action_file_opened.min=14) (op_is_directory.min=-1) (op_get_delegation_token.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (op_get_delegation_token.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_content_summary.failures.min=-1));
maximums=((committer_load_single_pending_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_mkdirs.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_rename.failures.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.failures.max=-1) (delegation_tokens_issued.max=-1) (multipart_upload_list.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_get_request.max=-1) (object_continue_list_request.max=-1) (op_access.max=-1) (object_delete_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_file_opened.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_commit_job.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_content_summary.max=-1) (op_create.max=-1) (multipart_upload_list.failures.max=-1) (op_delete.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_content_summary.failures.max=-1) (store_exists_probe.max=-1) (op_list_files.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.max=-1) (committer_stage_file_upload.max=-1) (op_get_delegation_token.failures.max=-1) (op_exists.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_rename.max=-1) (object_list_request.failures.max=-1) (op_abort.max=-1) (op_xattr_list.failures.max=-1) (action_http_head_request.max=12) (op_is_directory.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_file_opened.max=14) (op_get_file_checksum.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (committer_materialize_file.max=-1) (object_put_request.failures.max=-1) (op_is_file.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_initiated.max=-1) (op_createfile.failures.max=-1) (object_list_request.max=-1) (op_xattr_get_named.max=-1) (op_is_directory.max=-1) (op_access.failures.max=-1) (op_create.failures.max=-1) (committer_commit_job.failures.max=-1) (op_createfile.max=-1) (op_glob_status.max=-1) (action_executor_acquired.failures.max=-1) (op_get_delegation_token.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_delete_request.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_drain.max=-1) (op_get_file_status.failures.max=-1) (op_list_status.max=-1) (action_http_head_request.failures.max=-1) (action_http_get_request.failures.max=-1) (op_delete.max=-1) (op_list_files.failures.max=-1) (op_xattr_list.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_status.max=-1) (committer_stage_file_upload.failures.max=-1) (op_copy_from_local_file.failures.max=-1));
means=((op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=12, mean=12.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=14, mean=14.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:11,129 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:11,129 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,129 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:11,130 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010&t0=16&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=16&ts=1731778031128
2024-11-16 17:27:11,136 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,136 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,137 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010&t0=16&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=16&ts=1731778031128
2024-11-16 17:27:11,147 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:27:11,147 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:11,147 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:11,147 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:11,147 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:11,148 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:11,149 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:11,149 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:11,149 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:11,149 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:11,149 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:11,150 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:11,152 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:11,152 [s3a-transfer-fso-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:11,152 [s3a-transfer-fso-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,153 [s3a-transfer-fso-bucket-unbounded-pool2-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [35] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010&t0=16&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=35&ts=1731778031128
2024-11-16 17:27:11,161 [s3a-transfer-fso-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:11,162 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:27:11,162 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:11,162 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:11,162 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:11,163 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778030997; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:11,163 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:11,165 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:11,167 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:11,168 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:11,169 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:11,169 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:11,169 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:11,170 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:11,170 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:11,171 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:11,171 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:11,172 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:11,173 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010&t0=16&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=36&ts=1731778031128
2024-11-16 17:27:11,185 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:27:11,186 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:27:11,186 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.016s
2024-11-16 17:27:11,187 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:11,187 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:11,187 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:11,187 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:11,187 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:11,188 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:11,188 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000010&t0=16&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=36&ts=1731778031128
2024-11-16 17:27:11,196 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:27:11,196 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:27:11,196 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:27:11,197 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.028s
2024-11-16 17:27:11,197 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.028s
2024-11-16 17:27:11,197 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.048s
2024-11-16 17:27:11,197 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:11,198 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:11,206 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:11,235 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_bulk_delete_request=2) (op_get_content_summary=0) (stream_read_fully_operations=0) (op_glob_status.failures=0) (op_createfile=0) (stream_read_seek_operations=0) (object_select_requests=0) (stream_write_block_uploads_aborted=0) (action_http_get_request=0) (op_rename=0) (object_multipart_aborted=0) (op_abort=0) (object_copy_requests=0) (stream_write_block_uploads=1) (store_io_retry=0) (committer_commits.failures=0) (store_io_request=10) (op_rename.failures=0) (multipart_upload_started=0) (stream_read_version_mismatches=0) (op_xattr_list=0) (op_list_located_status=0) (op_access=0) (stream_read_seek_policy_changed=0) (op_delete.failures=0) (op_delete=1) (action_file_opened=0) (stream_write_queue_duration=0) (op_open=0) (stream_read_bytes=0) (op_copy_from_local_file=0) (committer_commit_job=0) (object_multipart_initiated.failures=0) (op_xattr_get_named=0) (object_list_request=4) (stream_read_vectored_read_bytes_discarded=0) (files_deleted=1) (delegation_tokens_issued.failures=0) (stream_read_exceptions=0) (files_copied_bytes=0) (op_create_non_recursive=0) (directories_deleted=0) (committer_commits_aborted=0) (op_list_status.failures=0) (multipart_upload_list.failures=0) (op_get_file_checksum.failures=0) (committer_load_single_pending_file.failures=0) (fake_directories_deleted=1) (op_hflush=0) (committer_bytes_committed=0) (op_list_files=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named.failures=0) (op_createfile.failures=0) (op_xattr_get_map.failures=0) (op_get_file_status.failures=0) (object_delete_request=0) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (op_is_file=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads_committed=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (multipart_instantiated=0) (action_executor_acquired.failures=0) (files_copied=0) (audit_access_check_failure=0) (op_exists=0) (object_multipart_initiated=0) (directories_created=1) (op_list_status=0) (committer_tasks_completed=0) (stream_write_total_data=131072) (op_get_delegation_token=0) (op_list_files.failures=0) (op_openfile=0) (delegation_tokens_issued=0) (committer_load_single_pending_file=0) (multipart_upload_part_put=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (object_delete_objects=2) (op_xattr_get_named_map=0) (op_xattr_get_map=0) (op_get_delegation_token.failures=0) (op_glob_status=0) (committer_stage_file_upload=0) (stream_read_bytes_discarded_in_close=0) (multipart_upload_aborted=0) (object_put_bytes=65536) (stream_read_opened=0) (committer_magic_marker_put.failures=0) (audit_span_creation=4) (committer_commits_reverted=0) (audit_request_execution=10) (action_http_head_request=2) (op_create=1) (action_http_get_request.failures=0) (op_access.failures=0) (committer_commit_job.failures=0) (action_http_head_request.failures=0) (op_create.failures=0) (stream_read_close_operations=0) (fake_directories_created=0) (stream_read_remote_stream_drain.failures=0) (committer_jobs_failed=0) (object_list_request.failures=0) (stream_read_seek_forward_operations=0) (audit_failure=0) (op_xattr_get_named_map.failures=0) (stream_read_seek_backward_operations=0) (object_put_request.failures=0) (stream_read_operations_incomplete=0) (stream_read_vectored_incoming_ranges=0) (op_is_directory=0) (committer_commits_created=0) (op_get_file_status=0) (committer_materialize_file=0) (op_get_content_summary.failures=0) (multipart_upload_completed=0) (object_metadata_request=2) (stream_read_operations=0) (committer_materialize_file.failures=0) (op_mkdirs=1) (store_exists_probe=0) (op_xattr_list.failures=0) (files_delete_rejected=0) (op_exists.failures=0) (op_copy_from_local_file.failures=0) (object_continue_list_request=0) (object_bulk_delete_request.failures=0) (stream_read_remote_stream_drain=0) (op_is_directory.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_bytes_skipped=0) (op_abort.failures=0) (committer_bytes_uploaded=0) (op_hsync=0) (committer_commits_completed=0) (object_put_request_completed=2) (committer_tasks_failed=0) (action_file_opened.failures=0) (multipart_upload_part_put_bytes=0) (op_get_file_checksum=0) (stream_write_exceptions=0) (multipart_upload_list=0) (op_is_file.failures=0) (stream_read_total_bytes=0) (object_put_request=2) (files_created=1) (stream_read_seek_bytes_discarded=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_closed=0) (ignored_errors=0) (committer_stage_file_upload.failures=0) (op_mkdirs.failures=0) (committer_jobs_completed=0) (object_delete_request.failures=0) (stream_read_vectored_operations=0) (stream_write_queue_duration.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (store_io_throttled=0) (object_continue_list_request.failures=0) (committer_magic_files_created=0) (store_exists_probe.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0));
minimums=((action_http_get_request.failures.min=-1) (object_delete_request.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.min=-1) (committer_stage_file_upload.min=-1) (multipart_upload_list.failures.min=-1) (committer_magic_marker_put.min=-1) (op_copy_from_local_file.min=-1) (op_exists.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.min=7) (op_list_status.min=-1) (committer_materialize_file.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_write_queue_duration.min=-1) (action_file_opened.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_status.failures.min=-1) (op_abort.min=-1) (stream_read_remote_stream_aborted.min=-1) (store_exists_probe.min=-1) (store_exists_probe.failures.min=-1) (op_get_content_summary.min=-1) (action_file_opened.min=-1) (op_xattr_list.min=-1) (op_rename.min=-1) (op_createfile.failures.min=-1) (object_continue_list_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.min=-1) (op_mkdirs.min=322) (op_glob_status.failures.min=-1) (op_get_file_status.min=-1) (op_get_delegation_token.min=-1) (op_is_file.failures.min=-1) (object_multipart_aborted.min=-1) (object_continue_list_request.failures.min=-1) (action_http_get_request.min=-1) (op_access.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_http_head_request.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_bulk_delete_request.min=8) (action_executor_acquired.failures.min=-1) (op_list_files.min=-1) (op_get_file_checksum.min=-1) (object_put_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_delete_request.min=-1) (object_put_request.min=48) (op_mkdirs.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_named.failures.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_drain.min=-1) (op_create.min=59) (op_is_directory.failures.min=-1) (delegation_tokens_issued.min=-1) (op_list_status.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_map.min=-1) (op_create.failures.min=-1) (multipart_upload_list.min=-1) (op_rename.failures.min=-1) (committer_commit_job.min=-1) (object_multipart_initiated.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.min=8) (op_abort.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_delete.min=50) (op_createfile.min=-1) (op_access.failures.min=-1) (op_glob_status.min=-1));
maximums=((delegation_tokens_issued.max=-1) (op_get_file_checksum.max=-1) (op_list_status.failures.max=-1) (op_createfile.failures.max=-1) (op_delete.max=50) (action_http_head_request.max=18) (object_delete_request.failures.max=-1) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (op_create.failures.max=-1) (object_multipart_aborted.max=-1) (op_glob_status.max=-1) (op_glob_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_commit_job.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_map.max=-1) (action_http_get_request.failures.max=-1) (store_exists_probe.max=-1) (op_list_status.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_files.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_delete_request.max=-1) (op_delete.failures.max=-1) (op_access.failures.max=-1) (op_exists.max=-1) (object_multipart_initiated.max=-1) (op_get_delegation_token.max=-1) (op_is_file.max=-1) (op_is_directory.failures.max=-1) (op_is_directory.max=-1) (op_abort.max=-1) (committer_load_single_pending_file.max=-1) (object_continue_list_request.max=-1) (op_get_file_status.max=-1) (action_file_opened.max=-1) (multipart_upload_list.max=-1) (op_get_file_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_rename.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_mkdirs.max=322) (object_put_request.max=63) (op_is_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_list_request.max=220) (stream_write_queue_duration.failures.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_exists.failures.max=-1) (op_mkdirs.failures.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (committer_commit_job.max=-1) (object_continue_list_request.failures.max=-1) (op_create.max=59) (object_list_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named.max=-1) (committer_stage_file_upload.failures.max=-1) (action_file_opened.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_content_summary.max=-1) (op_abort.failures.max=-1) (object_bulk_delete_request.max=12) (op_list_files.max=-1) (op_xattr_list.max=-1) (stream_read_remote_stream_drain.max=-1) (store_exists_probe.failures.max=-1) (action_http_get_request.max=-1));
means=((op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=1, sum=322, mean=322.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=4, sum=250, mean=62.5000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=1, sum=59, mean=59.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=2, sum=20, mean=10.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=2, sum=111, mean=55.5000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=1, sum=50, mean=50.0000)) (action_http_head_request.mean=(samples=2, sum=25, mean=12.5000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:11,236 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:11,237 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:11,237 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,238 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,238 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,238 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000011 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000011&t0=37&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=37&ts=1731778031236
2024-11-16 17:27:11,248 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:27:11,248 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:11,248 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:11,249 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,249 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:11,249 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000011 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000011&t0=37&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=37&ts=1731778031236
2024-11-16 17:27:11,254 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:11,254 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:11,255 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:11,255 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:11,256 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000011 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000011&t0=37&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=37&ts=1731778031236
2024-11-16 17:27:11,263 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:11,264 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:11,264 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:27:11,265 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:11,266 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:11,266 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,267 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,267 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,268 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000012 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000012&t0=37&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=37&ts=1731778031266
2024-11-16 17:27:11,276 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:11,277 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,277 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:11,278 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4335004688384850481.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:11,281 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4335004688384850481.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated=0) (object_put_request=0) (object_put_request.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (op_hsync=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (op_hflush=0) (stream_write_bytes=65536) (stream_write_total_data=0) (action_executor_acquired=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4335004688384850481.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,281 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:11,281 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:11,281 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4335004688384850481.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:11,281 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:11,282 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:11,282 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:11,282 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:11,283 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000012 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000012&t0=37&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=38&ts=1731778031266
2024-11-16 17:27:11,304 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:11,304 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:11,305 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.023s
2024-11-16 17:27:11,305 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4335004688384850481.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:11,305 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4335004688384850481.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,306 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4335004688384850481.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,306 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:11,306 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:11,308 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (stream_write_total_data=65536) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (op_abort.failures=0) (object_put_request.failures=0) (object_multipart_aborted=0) (op_hsync=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (op_abort=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (op_hflush=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (object_put_request=1) (action_executor_acquired=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=22) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=22) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=22, mean=22.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:11,309 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:11,310 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:27:11,310 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:27:11,313 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:11,313 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:11,318 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:27:11,318 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:27:11,319 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:27:11,319 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:27:11,320 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:27:11,321 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:27:11,321 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:27:11,322 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:27:11,322 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:27:11,323 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:27:11,324 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='971266c6-6b06-4471-8186-c04ee09acb8c', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:11,325 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='971266c6-6b06-4471-8186-c04ee09acb8c', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:11,325 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='971266c6-6b06-4471-8186-c04ee09acb8c', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:27:11,326 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:27:11,326 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:27:11,328 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:27:11,328 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:27:11,329 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:27:11,329 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:27:11,330 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5cb11f85]
2024-11-16 17:27:11,331 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5cb11f85]
2024-11-16 17:27:11,331 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:27:11,332 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:27:11,332 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:27:11,332 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:27:11,333 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:27:11,333 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:27:11,334 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:27:11,335 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:11,336 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:27:11,336 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:27:11,337 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:27:11,337 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:27:11,341 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:27:11,341 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:27:11,342 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:27:11,342 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:27:11,343 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:27:11,343 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:27:11,344 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:27:11,344 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:27:11,344 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:27:11,345 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:27:11,345 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:27:11,346 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:27:11,346 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:27:11,346 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:27:11,347 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:27:11,347 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:27:11,349 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:11,349 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,350 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:11,350 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 971266c6-6b06-4471-8186-c04ee09acb8c-00000015 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/971266c6-6b06-4471-8186-c04ee09acb8c-00000015/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=971266c6-6b06-4471-8186-c04ee09acb8c-00000015&t0=37&fs=971266c6-6b06-4471-8186-c04ee09acb8c&t1=37&ts=1731778031349
2024-11-16 17:27:11,351 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:27:11,352 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:27:11,352 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:27:11,353 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:27:11,359 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:11,359 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:11,360 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:11,362 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened.failures=0) (stream_read_unbuffered=0) (stream_read_total_bytes=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_exceptions=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (stream_read_seek_policy_changed=1) (action_executor_acquired.failures=0) (stream_read_bytes=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_operations=0) (action_http_get_request.failures=0) (action_file_opened=1) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (action_http_get_request=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations=0) (stream_read_close_operations=1) (stream_read_seek_backward_operations=0) (stream_read_fully_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_operations=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=10) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=10) (action_http_get_request.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:11,364 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:27:11,365 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:27:11,366 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:11,366 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@2fbe1904[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:27:11,367 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:11,367 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics3-fso-bucket
2024-11-16 17:27:11,368 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:27:11,368 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5cb11f85] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:11,369 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5cb11f85] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:11,374 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_fully_operations=0) (op_get_content_summary.failures=0) (stream_read_opened=0) (op_createfile.failures=0) (object_put_request=0) (op_xattr_list=0) (op_is_directory=0) (committer_stage_file_upload.failures=0) (multipart_upload_part_put=0) (op_get_delegation_token.failures=0) (delegation_tokens_issued=0) (op_list_status.failures=0) (stream_write_block_uploads=0) (op_list_status=0) (stream_read_closed=0) (object_continue_list_request=0) (op_openfile=0) (stream_read_operations=0) (committer_materialize_file.failures=0) (op_mkdirs=0) (object_put_bytes=0) (object_delete_request=0) (delegation_tokens_issued.failures=0) (op_list_located_status=0) (op_get_file_checksum=0) (committer_load_single_pending_file=0) (committer_commits_completed=0) (stream_read_seek_operations=0) (stream_write_queue_duration=0) (object_select_requests=0) (op_is_file=0) (action_http_head_request=1) (op_exists.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put_bytes=0) (store_exists_probe=0) (files_copied_bytes=0) (committer_stage_file_upload=0) (op_hsync=0) (op_create.failures=0) (committer_tasks_failed=0) (files_copied=0) (op_exists=0) (audit_access_check_failure=0) (op_access=0) (files_created=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_list.failures=0) (committer_commits.failures=0) (op_delete=0) (stream_read_remote_stream_aborted.failures=0) (object_metadata_request=1) (op_xattr_get_named_map=0) (stream_read_total_bytes=0) (committer_tasks_completed=0) (object_put_request.failures=0) (stream_read_seek_forward_operations=0) (action_file_opened=1) (action_executor_acquired.failures=0) (fake_directories_created=0) (committer_commits_reverted=0) (op_copy_from_local_file.failures=0) (action_executor_acquired=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_completed=0) (stream_read_vectored_combined_ranges=0) (store_io_retry=0) (audit_request_execution=1) (multipart_upload_started=0) (store_io_throttled=0) (directories_deleted=0) (op_get_content_summary=0) (committer_commits_created=0) (fake_directories_deleted=0) (stream_write_exceptions_completing_upload=0) (op_copy_from_local_file=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_map=0) (action_http_get_request=0) (committer_jobs_completed=0) (stream_read_vectored_operations=0) (multipart_instantiated=0) (object_delete_request.failures=0) (committer_jobs_failed=0) (op_createfile=0) (committer_magic_files_created=0) (committer_commit_job.failures=0) (op_is_file.failures=0) (op_is_directory.failures=0) (committer_magic_marker_put=0) (stream_read_remote_stream_drain.failures=0) (object_continue_list_request.failures=0) (stream_read_operations_incomplete=0) (op_list_files=0) (stream_write_block_uploads_committed=0) (object_put_request_completed=0) (op_get_file_status.failures=0) (op_create=0) (action_http_get_request.failures=0) (stream_read_bytes=0) (stream_read_remote_stream_aborted=0) (multipart_upload_list=0) (object_bulk_delete_request.failures=0) (op_access.failures=0) (op_open=1) (op_list_files.failures=0) (stream_read_close_operations=1) (op_create_non_recursive=0) (stream_read_vectored_read_bytes_discarded=0) (committer_load_single_pending_file.failures=0) (op_get_file_checksum.failures=0) (stream_read_seek_policy_changed=1) (object_delete_objects=0) (stream_write_total_time=0) (action_http_head_request.failures=0) (op_mkdirs.failures=0) (multipart_upload_aborted=0) (committer_bytes_committed=0) (op_abort.failures=0) (committer_materialize_file=0) (store_io_request=1) (files_deleted=0) (op_delete.failures=0) (committer_commit_job=0) (stream_read_exceptions=0) (op_glob_status.failures=0) (op_rename.failures=0) (object_bulk_delete_request=0) (op_abort=0) (action_file_opened.failures=0) (object_copy_requests=0) (stream_aborted=0) (op_get_delegation_token=0) (stream_read_remote_stream_drain=0) (committer_magic_marker_put.failures=0) (committer_bytes_uploaded=0) (op_xattr_get_named=0) (op_hflush=0) (object_multipart_initiated=0) (stream_write_queue_duration.failures=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_close=0) (files_delete_rejected=0) (object_multipart_aborted.failures=0) (op_get_file_status=0) (op_glob_status=0) (op_xattr_get_map.failures=0) (committer_commits_aborted=0) (object_multipart_aborted=0) (op_rename=0) (audit_span_creation=2) (directories_created=0) (object_list_request=0) (ignored_errors=0) (stream_write_block_uploads_aborted=0) (audit_failure=0) (op_xattr_get_named.failures=0) (op_xattr_list.failures=0) (stream_write_bytes=0) (stream_read_vectored_incoming_ranges=0) (op_xattr_get_named_map.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_exceptions=0) (stream_write_total_data=0) (store_exists_probe.failures=0) (stream_read_seek_backward_operations=0) (object_list_request.failures=0));
gauges=((client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_list.min=-1) (op_get_delegation_token.min=-1) (object_delete_request.min=-1) (object_put_request.min=-1) (stream_write_queue_duration.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.min=-1) (committer_magic_marker_put.min=-1) (op_mkdirs.failures.min=-1) (op_delete.failures.min=-1) (op_rename.failures.min=-1) (op_list_files.failures.min=-1) (op_get_file_status.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_map.min=-1) (op_create.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_file_checksum.min=-1) (action_http_head_request.min=9) (committer_commit_job.failures.min=-1) (action_http_get_request.min=-1) (op_get_delegation_token.failures.min=-1) (action_executor_acquired.min=-1) (op_create.min=-1) (op_is_directory.min=-1) (committer_commit_job.min=-1) (action_file_opened.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.min=-1) (op_get_file_status.failures.min=-1) (op_abort.failures.min=-1) (op_exists.min=-1) (op_glob_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_access.min=-1) (object_multipart_initiated.min=-1) (op_list_files.min=-1) (op_delete.min=-1) (op_copy_from_local_file.min=-1) (op_is_directory.failures.min=-1) (op_xattr_list.min=-1) (op_get_file_checksum.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_status.min=-1) (delegation_tokens_issued.failures.min=-1) (action_file_opened.min=10) (op_access.failures.min=-1) (op_is_file.failures.min=-1) (op_abort.min=-1) (op_get_content_summary.min=-1) (object_continue_list_request.failures.min=-1) (op_list_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_rename.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_drain.min=-1) (store_exists_probe.min=-1) (action_http_head_request.failures.min=-1) (object_continue_list_request.min=-1) (op_createfile.failures.min=-1) (committer_materialize_file.min=-1) (op_exists.failures.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_mkdirs.min=-1) (object_list_request.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_bulk_delete_request.min=-1) (object_multipart_aborted.failures.min=-1) (store_exists_probe.failures.min=-1));
maximums=((op_rename.max=-1) (op_exists.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_list_request.failures.max=-1) (op_glob_status.max=-1) (op_get_content_summary.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_directory.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.max=-1) (object_multipart_aborted.failures.max=-1) (op_list_status.failures.max=-1) (committer_commit_job.max=-1) (op_createfile.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_initiated.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (committer_load_single_pending_file.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_delete_request.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_commit_job.failures.max=-1) (store_exists_probe.max=-1) (committer_stage_file_upload.max=-1) (object_bulk_delete_request.max=-1) (op_list_files.max=-1) (object_list_request.max=-1) (op_create.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_status.max=-1) (op_is_directory.failures.max=-1) (op_delete.max=-1) (op_abort.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.max=-1) (action_executor_acquired.max=-1) (op_exists.max=-1) (action_http_head_request.max=9) (action_file_opened.failures.max=-1) (action_file_opened.max=10) (op_create.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_aborted.max=-1) (action_http_get_request.max=-1) (committer_materialize_file.max=-1) (op_access.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_file_status.max=-1) (op_access.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_delete.failures.max=-1) (store_exists_probe.failures.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_list.max=-1) (op_mkdirs.failures.max=-1) (op_list_files.failures.max=-1) (op_mkdirs.max=-1) (multipart_upload_list.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_get_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_file.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=9, mean=9.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:11,375 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:11,376 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,377 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:11,377 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016&t0=37&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=37&ts=1731778031375
2024-11-16 17:27:11,381 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,382 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,382 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016&t0=37&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=37&ts=1731778031375
2024-11-16 17:27:11,390 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:11,390 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:11,390 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:11,390 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:11,390 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:11,390 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:11,390 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:11,391 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:11,391 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:11,391 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:11,391 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:11,391 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:11,391 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:11,392 [s3a-transfer-fso-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:11,392 [s3a-transfer-fso-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,393 [s3a-transfer-fso-bucket-unbounded-pool2-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [40] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016&t0=37&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=40&ts=1731778031375
2024-11-16 17:27:11,401 [s3a-transfer-fso-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:11,401 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:27:11,401 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:11,401 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:11,402 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:11,402 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778031299; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:11,402 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:11,402 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:11,402 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:11,403 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:11,405 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:11,405 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:11,405 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:11,405 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:11,405 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:11,405 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:11,406 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:11,406 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:11,406 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016&t0=37&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=41&ts=1731778031375
2024-11-16 17:27:11,416 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:27:11,417 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:27:11,417 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:27:11,417 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:11,417 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:11,417 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:11,418 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:11,418 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:11,418 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:11,418 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000016&t0=37&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=41&ts=1731778031375
2024-11-16 17:27:11,425 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:27:11,426 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:27:11,426 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:27:11,426 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.021s
2024-11-16 17:27:11,426 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.022s
2024-11-16 17:27:11,427 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.036s
2024-11-16 17:27:11,427 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:11,427 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:11,430 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:11,445 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_list_request.failures=0) (committer_bytes_committed=0) (committer_commits_created=0) (op_delete.failures=0) (ignored_errors=0) (stream_write_queue_duration=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_aborted.failures=0) (op_create=2) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (op_abort.failures=0) (op_openfile=0) (stream_read_remote_stream_drain.failures=0) (op_create.failures=0) (action_http_get_request=0) (directories_created=2) (op_exists=0) (store_io_throttled=0) (object_continue_list_request.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (op_rename.failures=0) (stream_read_operations_incomplete=0) (op_is_directory.failures=0) (op_is_directory=0) (object_delete_objects=4) (op_is_file.failures=0) (multipart_upload_aborted=0) (op_xattr_get_map=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put_bytes=0) (op_get_content_summary=0) (op_xattr_get_named_map.failures=0) (committer_commit_job.failures=0) (stream_read_seek_bytes_skipped=0) (action_http_head_request=4) (stream_write_bytes=131072) (store_io_request=20) (committer_jobs_failed=0) (delegation_tokens_issued=0) (fake_directories_deleted=2) (stream_read_remote_stream_aborted=0) (committer_magic_files_created=0) (files_delete_rejected=0) (op_get_content_summary.failures=0) (directories_deleted=0) (delegation_tokens_issued.failures=0) (op_xattr_get_named.failures=0) (op_createfile.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_backwards_on_seek=0) (op_get_delegation_token.failures=0) (stream_read_seek_backward_operations=0) (stream_write_total_data=262144) (committer_commits_reverted=0) (op_list_status=0) (op_get_file_checksum=0) (store_io_retry=0) (multipart_upload_abort_under_path_invoked=0) (committer_bytes_uploaded=0) (stream_write_queue_duration.failures=0) (op_access=0) (op_hsync=0) (files_deleted=2) (stream_write_block_uploads_committed=0) (stream_write_exceptions=0) (committer_commit_job=0) (multipart_upload_started=0) (committer_commits_completed=0) (object_bulk_delete_request=4) (stream_read_seek_policy_changed=0) (committer_materialize_file=0) (object_select_requests=0) (op_get_file_status=0) (op_open=0) (op_xattr_get_named=0) (op_xattr_get_map.failures=0) (committer_stage_file_upload.failures=0) (object_metadata_request=4) (files_created=2) (op_get_delegation_token=0) (multipart_upload_list.failures=0) (op_createfile=0) (committer_materialize_file.failures=0) (committer_tasks_failed=0) (op_get_file_status.failures=0) (op_glob_status.failures=0) (op_hflush=0) (op_glob_status=0) (stream_write_total_time=0) (action_http_head_request.failures=0) (stream_aborted=0) (stream_read_bytes=0) (audit_access_check_failure=0) (stream_read_fully_operations=0) (op_get_file_checksum.failures=0) (stream_write_exceptions_completing_upload=0) (op_xattr_list.failures=0) (committer_stage_file_upload=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (committer_commits.failures=0) (files_copied_bytes=0) (audit_span_creation=7) (stream_write_block_uploads=2) (multipart_upload_part_put=0) (stream_read_unbuffered=0) (committer_commits_aborted=0) (object_bulk_delete_request.failures=0) (action_file_opened=0) (object_continue_list_request=0) (stream_read_opened=0) (op_list_located_status=0) (stream_read_close_operations=0) (object_list_request=8) (committer_tasks_completed=0) (stream_read_closed=0) (op_delete=2) (op_xattr_list=0) (action_executor_acquired.failures=0) (object_put_request_completed=4) (stream_read_vectored_combined_ranges=0) (op_rename=0) (object_put_request=4) (store_exists_probe.failures=0) (committer_magic_marker_put=0) (object_delete_request=0) (object_multipart_aborted.failures=0) (op_exists.failures=0) (op_abort=0) (stream_read_bytes_discarded_in_close=0) (fake_directories_created=0) (op_copy_from_local_file.failures=0) (stream_write_block_uploads_aborted=0) (op_create_non_recursive=0) (object_multipart_initiated=0) (committer_load_single_pending_file=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (object_put_request.failures=0) (op_list_status.failures=0) (committer_load_single_pending_file.failures=0) (audit_failure=0) (files_copied=0) (op_is_file=0) (op_list_files=0) (multipart_instantiated=0) (stream_read_seek_bytes_discarded=0) (object_delete_request.failures=0) (multipart_upload_completed=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain=0) (op_access.failures=0) (stream_read_total_bytes=0) (stream_read_seek_operations=0) (multipart_upload_list=0) (object_copy_requests=0) (op_copy_from_local_file=0) (audit_request_execution=20) (op_list_files.failures=0) (object_put_bytes=131072) (stream_read_operations=0) (store_exists_probe=0) (committer_jobs_completed=0) (op_xattr_get_named_map=0) (op_mkdirs.failures=0) (op_mkdirs=2));
gauges=((stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=2) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0));
minimums=((op_copy_from_local_file.min=-1) (op_xattr_get_named_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_list.min=-1) (op_list_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_get_request.failures.min=-1) (object_bulk_delete_request.min=7) (op_abort.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_glob_status.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_file.failures.min=-1) (op_access.min=-1) (op_mkdirs.min=29) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_directory.min=-1) (object_multipart_initiated.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_map.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.min=-1) (multipart_upload_list.min=-1) (object_list_request.min=8) (op_get_delegation_token.min=-1) (object_continue_list_request.min=-1) (committer_commit_job.failures.min=-1) (committer_commit_job.min=-1) (op_glob_status.min=-1) (action_http_head_request.min=4) (object_put_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_files.failures.min=-1) (op_delete.failures.min=-1) (action_http_get_request.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_initiated.min=-1) (op_access.failures.min=-1) (op_is_file.min=-1) (op_abort.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_delete.min=37) (op_exists.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_status.min=-1) (multipart_upload_list.failures.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_create.min=13) (op_xattr_get_map.failures.min=-1) (object_put_request.min=22) (object_multipart_aborted.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.min=-1) (op_createfile.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_list.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named.min=-1) (object_continue_list_request.failures.min=-1) (object_delete_request.failures.min=-1) (op_list_status.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.min=-1) (op_get_content_summary.failures.min=-1) (op_create.failures.min=-1) (op_rename.min=-1) (committer_materialize_file.min=-1) (store_exists_probe.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.failures.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_drain.min=-1) (op_rename.failures.min=-1) (op_createfile.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((op_copy_from_local_file.max=-1) (op_get_content_summary.max=-1) (op_exists.max=-1) (object_continue_list_request.failures.max=-1) (op_list_status.failures.max=-1) (op_is_file.failures.max=-1) (op_access.max=-1) (op_copy_from_local_file.failures.max=-1) (op_delete.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_status.max=-1) (action_http_get_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named_map.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_delete_request.failures.max=-1) (action_http_get_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_file_opened.max=-1) (object_bulk_delete_request.max=12) (op_rename.max=-1) (committer_stage_file_upload.max=-1) (object_list_request.max=220) (op_create.max=59) (op_is_directory.failures.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_map.max=-1) (op_is_directory.max=-1) (op_mkdirs.max=322) (op_glob_status.max=-1) (op_access.failures.max=-1) (op_rename.failures.max=-1) (op_get_content_summary.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_initiated.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.max=-1) (op_create.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.max=18) (op_exists.failures.max=-1) (committer_materialize_file.max=-1) (op_abort.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_abort.max=-1) (object_delete_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.max=-1) (op_get_file_checksum.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_list.failures.max=-1) (op_createfile.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=63) (op_get_file_checksum.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_file.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_list_files.max=-1) (store_exists_probe.max=-1) (multipart_upload_list.max=-1) (object_list_request.failures.max=-1) (op_delete.max=50) (op_list_files.failures.max=-1) (committer_commit_job.failures.max=-1));
means=((op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=2, sum=72, mean=36.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=4, sum=34, mean=8.5000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=4, sum=37, mean=9.2500)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=2, sum=87, mean=43.5000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=2, sum=351, mean=175.5000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=4, sum=140, mean=35.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=8, sum=285, mean=35.6250)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:11,446 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:11,446 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:11,446 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,446 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,446 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,447 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000017 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000017&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=42&ts=1731778031446
2024-11-16 17:27:11,454 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:11,454 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:11,454 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:11,454 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,454 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:11,454 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000017 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000017&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=42&ts=1731778031446
2024-11-16 17:27:11,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:11,460 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:11,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:11,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:11,461 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000017 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000017&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=42&ts=1731778031446
2024-11-16 17:27:11,467 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:11,467 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:11,467 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.007s
2024-11-16 17:27:11,468 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:11,468 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:11,468 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,468 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,470 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,470 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000018 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000018&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=42&ts=1731778031468
2024-11-16 17:27:11,480 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:27:11,480 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,481 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:11,481 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17331848187821990987.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:11,483 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17331848187821990987.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (stream_write_block_uploads=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (object_put_request.failures=0) (op_abort=0) (stream_write_total_data=0) (object_put_request=0) (op_hflush=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17331848187821990987.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,483 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:11,483 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:11,484 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17331848187821990987.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:11,485 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:11,486 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:11,486 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:11,486 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:11,487 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000018 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000018&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=43&ts=1731778031468
2024-11-16 17:27:11,508 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:11,508 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:11,508 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.022s
2024-11-16 17:27:11,509 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17331848187821990987.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:11,509 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17331848187821990987.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,509 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17331848187821990987.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,509 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:11,509 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:11,512 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (multipart_upload_completed=0) (op_abort=0) (op_hsync=0) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (object_put_request=1) (stream_write_total_data=65536) (committer_magic_marker_put=0) (op_abort.failures=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=21) (object_put_request.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=21) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=21, mean=21.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:11,512 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:11,514 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:11,515 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,515 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:11,515 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000019 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000019/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000019&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=42&ts=1731778031514
2024-11-16 17:27:11,522 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:11,522 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:11,522 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:11,523 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:11,525 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:11,526 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:11,529 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:11,531 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations=0) (stream_read_closed=0) (stream_read_unbuffered=0) (stream_read_remote_stream_drain=0) (stream_read_seek_policy_changed=1) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_exceptions=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_incoming_ranges=2) (action_http_get_request=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (stream_read_operations=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_total_bytes=0) (stream_read_seek_operations=0) (stream_read_close_operations=1) (stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_operations=1) (stream_read_fully_operations=0) (action_http_get_request.failures=0) (action_file_opened.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_opened=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=8) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=8) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:11,538 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:11,539 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:27:11,542 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:11,544 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:11,545 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,545 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:11,546 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000020 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000020&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=42&ts=1731778031544
2024-11-16 17:27:11,552 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:11,552 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:11,553 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:11,553 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:11,554 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:11,554 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:11,555 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:11,555 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:11,557 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:11,558 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:11,559 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000020 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000020&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=45&ts=1731778031544
2024-11-16 17:27:11,574 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:27:11,576 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:11,577 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:11,578 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_fully_operations=0) (stream_read_seek_operations=0) (stream_read_exceptions=0) (stream_read_total_bytes=150) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=1) (stream_read_vectored_operations=1) (stream_read_operations_incomplete=0) (stream_aborted=0) (action_http_get_request=1) (action_executor_acquired=0) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_opened=0) (action_http_get_request.failures=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_incoming_ranges=2) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=150) (stream_read_unbuffered=0) (stream_read_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=1) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_skipped=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=17) (stream_read_block_read.min=-1) (action_file_opened.min=8) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=17) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=8) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.mean=(samples=1, sum=17, mean=17.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:11,581 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:11,581 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,581 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:11,581 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=42&ts=1731778031580
2024-11-16 17:27:11,587 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,587 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,588 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=42&ts=1731778031580
2024-11-16 17:27:11,597 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:27:11,598 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:11,598 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:11,599 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:11,599 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:11,600 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:11,601 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:11,601 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:11,602 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:11,602 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:11,602 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:11,603 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:11,603 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:11,603 [s3a-transfer-fso-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:11,604 [s3a-transfer-fso-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,604 [s3a-transfer-fso-bucket-unbounded-pool2-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [46] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=46&ts=1731778031580
2024-11-16 17:27:11,633 [s3a-transfer-fso-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.029s
2024-11-16 17:27:11,634 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.031s
2024-11-16 17:27:11,634 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:11,635 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:11,636 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:11,636 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778031504; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:11,637 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:11,637 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:11,638 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:11,639 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:11,650 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:11,651 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:11,651 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:11,652 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:11,652 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:11,653 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:11,653 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:11,654 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:11,654 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=47&ts=1731778031580
2024-11-16 17:27:11,665 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:27:11,666 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:27:11,666 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:27:11,667 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:11,667 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:11,668 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:11,668 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:11,669 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:11,669 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:11,670 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000021&t0=42&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=47&ts=1731778031580
2024-11-16 17:27:11,678 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:27:11,679 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:27:11,679 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:27:11,680 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.029s
2024-11-16 17:27:11,680 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.030s
2024-11-16 17:27:11,680 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.079s
2024-11-16 17:27:11,680 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:11,680 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:11,683 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:11,702 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_list_request.failures=0) (op_rename=0) (ignored_errors=0) (store_exists_probe.failures=0) (op_list_files.failures=0) (object_continue_list_request.failures=0) (op_get_file_checksum.failures=0) (committer_tasks_completed=0) (committer_commit_job=0) (op_abort=0) (object_continue_list_request=0) (stream_read_operations_incomplete=0) (stream_read_closed=0) (object_multipart_aborted=0) (op_list_status.failures=0) (stream_read_vectored_read_bytes_discarded=10) (store_io_throttled=0) (stream_read_remote_stream_drain.failures=0) (op_exists.failures=0) (stream_read_operations=0) (committer_commits_completed=0) (action_http_head_request.failures=0) (op_copy_from_local_file.failures=0) (op_xattr_get_named.failures=0) (stream_read_seek_forward_operations=0) (committer_jobs_failed=0) (op_open=2) (audit_span_creation=12) (committer_magic_marker_put=0) (directories_deleted=0) (stream_read_total_bytes=150) (stream_write_bytes=196608) (files_created=3) (stream_read_seek_bytes_skipped=0) (op_mkdirs.failures=0) (stream_read_vectored_combined_ranges=2) (action_http_head_request=8) (committer_magic_marker_put.failures=0) (store_io_request=33) (stream_write_block_uploads=3) (stream_read_seek_policy_changed=2) (committer_materialize_file.failures=0) (object_delete_request.failures=0) (object_delete_objects=6) (op_is_file=0) (op_get_file_checksum=0) (delegation_tokens_issued=0) (op_access=0) (committer_tasks_failed=0) (committer_load_single_pending_file=0) (files_copied_bytes=0) (object_multipart_initiated=0) (op_get_file_status.failures=0) (multipart_upload_list=0) (op_create.failures=0) (op_get_file_status=0) (multipart_upload_started=0) (stream_read_remote_stream_drain=0) (stream_write_exceptions=0) (stream_read_seek_operations=0) (multipart_upload_list.failures=0) (op_list_status=0) (stream_write_queue_duration.failures=0) (op_access.failures=0) (multipart_upload_aborted=0) (stream_read_unbuffered=0) (stream_read_opened=0) (object_bulk_delete_request=6) (op_xattr_get_named_map.failures=0) (stream_write_total_data=393216) (object_delete_request=0) (op_get_delegation_token=0) (op_xattr_get_named=0) (stream_write_total_time=0) (committer_stage_file_upload.failures=0) (stream_read_close_operations=2) (op_get_delegation_token.failures=0) (stream_read_seek_backward_operations=0) (op_create=3) (multipart_upload_part_put_bytes=0) (op_xattr_get_map.failures=0) (stream_read_fully_operations=0) (fake_directories_created=0) (files_delete_rejected=0) (files_copied=0) (stream_write_queue_duration=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes=150) (multipart_instantiated=0) (op_glob_status=0) (audit_request_execution=33) (stream_read_remote_stream_aborted=0) (committer_bytes_committed=0) (stream_read_vectored_operations=2) (op_createfile.failures=0) (directories_created=3) (fake_directories_deleted=3) (stream_read_vectored_incoming_ranges=4) (stream_read_remote_stream_aborted.failures=0) (committer_jobs_completed=0) (store_io_retry=0) (object_bulk_delete_request.failures=0) (stream_write_exceptions_completing_upload=0) (op_delete.failures=0) (committer_stage_file_upload=0) (op_hsync=0) (action_file_opened=2) (object_put_request_completed=6) (committer_commits.failures=0) (op_get_content_summary.failures=0) (audit_access_check_failure=0) (op_abort.failures=0) (stream_read_bytes_discarded_in_close=0) (store_exists_probe=0) (op_xattr_list.failures=0) (op_list_files=0) (object_put_request=6) (op_is_directory.failures=0) (action_http_get_request.failures=0) (committer_bytes_uploaded=0) (stream_write_block_uploads_aborted=0) (action_executor_acquired=0) (object_put_request.failures=0) (op_rename.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_abort_under_path_invoked=0) (audit_failure=0) (stream_read_bytes_backwards_on_seek=0) (stream_aborted=0) (committer_commits_reverted=0) (committer_materialize_file=0) (op_hflush=0) (committer_magic_files_created=0) (committer_load_single_pending_file.failures=0) (committer_commit_job.failures=0) (stream_read_bytes_discarded_in_abort=0) (object_copy_requests=0) (op_is_directory=0) (stream_read_version_mismatches=0) (op_glob_status.failures=0) (object_list_request=12) (action_file_opened.failures=0) (stream_read_exceptions=0) (op_exists=0) (op_list_located_status=0) (op_copy_from_local_file=0) (committer_commits_created=0) (object_multipart_initiated.failures=0) (op_xattr_get_named_map=0) (stream_write_block_uploads_committed=0) (op_xattr_list=0) (op_createfile=0) (object_select_requests=0) (action_http_get_request=1) (multipart_upload_part_put=0) (op_openfile=0) (op_delete=3) (multipart_upload_completed=0) (op_mkdirs=3) (files_deleted=3) (op_get_content_summary=0) (delegation_tokens_issued.failures=0) (action_executor_acquired.failures=0) (object_put_bytes=196608) (committer_commits_aborted=0) (op_is_file.failures=0) (op_create_non_recursive=0) (object_metadata_request=8) (op_xattr_get_map=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=3) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((committer_commit_job.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_list.min=-1) (object_list_request.failures.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_initiated.min=-1) (committer_materialize_file.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_is_directory.failures.min=-1) (object_put_request.failures.min=-1) (op_create.min=13) (store_exists_probe.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_files.min=-1) (op_is_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_glob_status.failures.min=-1) (op_get_content_summary.min=-1) (op_copy_from_local_file.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_magic_marker_put.min=-1) (op_exists.min=-1) (object_put_request.min=21) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (object_list_request.min=7) (committer_materialize_file.min=-1) (op_glob_status.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_file_opened.min=8) (op_get_delegation_token.failures.min=-1) (op_createfile.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_map.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named_map.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_abort.failures.min=-1) (delegation_tokens_issued.min=-1) (op_rename.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_list.min=-1) (op_list_files.failures.min=-1) (op_createfile.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_continue_list_request.min=-1) (action_http_head_request.min=4) (object_bulk_delete_request.min=7) (committer_load_single_pending_file.failures.min=-1) (op_create.failures.min=-1) (op_get_file_status.min=-1) (op_abort.min=-1) (op_exists.failures.min=-1) (action_http_get_request.min=17) (action_file_opened.failures.min=-1) (op_delete.min=37) (op_mkdirs.min=22) (op_get_delegation_token.min=-1) (op_access.min=-1) (object_continue_list_request.failures.min=-1) (op_access.failures.min=-1) (op_list_status.min=-1) (op_rename.min=-1) (committer_stage_file_upload.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_commit_job.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_map.failures.min=-1) (object_delete_request.failures.min=-1) (object_delete_request.min=-1) (op_mkdirs.failures.min=-1) (action_http_get_request.failures.min=-1));
maximums=((op_is_directory.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_list.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_access.failures.max=-1) (op_glob_status.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_aborted.failures.max=-1) (action_http_get_request.max=17) (op_glob_status.failures.max=-1) (op_rename.max=-1) (object_bulk_delete_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (object_list_request.max=220) (delegation_tokens_issued.failures.max=-1) (store_exists_probe.max=-1) (op_list_status.failures.max=-1) (action_http_head_request.max=18) (committer_materialize_file.max=-1) (multipart_upload_list.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.max=-1) (op_access.max=-1) (committer_commit_job.failures.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.max=-1) (op_abort.failures.max=-1) (op_is_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_files.failures.max=-1) (object_multipart_aborted.max=-1) (op_rename.failures.max=-1) (action_file_opened.max=8) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_exists.max=-1) (op_delete.max=81) (op_get_content_summary.failures.max=-1) (op_delete.failures.max=-1) (op_list_status.max=-1) (object_continue_list_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_createfile.failures.max=-1) (op_get_content_summary.max=-1) (object_continue_list_request.max=-1) (op_abort.max=-1) (op_create.max=59) (object_delete_request.max=-1) (action_file_opened.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.failures.max=-1) (action_http_get_request.failures.max=-1) (object_bulk_delete_request.max=12) (multipart_upload_list.failures.max=-1) (action_executor_acquired.max=-1) (op_get_file_checksum.failures.max=-1) (op_create.failures.max=-1) (op_get_delegation_token.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=63) (object_multipart_initiated.max=-1) (op_mkdirs.max=322) (op_get_delegation_token.failures.max=-1) (op_exists.failures.max=-1) (committer_commit_job.max=-1) (delegation_tokens_issued.max=-1) (committer_load_single_pending_file.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_is_file.max=-1) (op_list_files.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_file_checksum.max=-1));
means=((op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=6, sum=56, mean=9.3333)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=16, mean=8.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=3, sum=373, mean=124.3333)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=12, sum=340, mean=28.3333)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=6, sum=167, mean=27.8333)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=17, mean=17.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=3, sum=168, mean=56.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=8, sum=60, mean=7.5000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=3, sum=86, mean=28.6667)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:11,703 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:11,703 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:11,704 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,705 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,705 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,706 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000022 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000022&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=48&ts=1731778031703
2024-11-16 17:27:11,714 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:11,715 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:11,715 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:11,716 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,716 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:11,717 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000022 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000022&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=48&ts=1731778031703
2024-11-16 17:27:11,721 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:11,722 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:11,722 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:11,722 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:11,723 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000022 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000022&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=48&ts=1731778031703
2024-11-16 17:27:11,729 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:11,730 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:11,730 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:27:11,730 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:11,731 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:11,732 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,732 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,733 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,733 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000023 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000023&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=48&ts=1731778031731
2024-11-16 17:27:11,742 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:11,743 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,743 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:11,744 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11063713484527866023.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:11,745 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11063713484527866023.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (op_hsync=0) (multipart_upload_completed.failures=0) (op_hflush=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (op_abort.failures=0) (op_abort=0) (object_put_request.failures=0) (stream_write_total_time=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11063713484527866023.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,745 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:11,746 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:11,746 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11063713484527866023.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:11,748 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:11,748 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:11,748 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:11,749 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:11,749 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [49] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000023 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000023&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=49&ts=1731778031731
2024-11-16 17:27:11,766 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:11,766 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:11,766 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.018s
2024-11-16 17:27:11,766 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11063713484527866023.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:11,767 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11063713484527866023.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,767 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11063713484527866023.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,767 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:11,767 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:11,769 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (op_hsync=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (stream_write_total_data=65536) (op_abort.failures=0) (stream_write_block_uploads=1) (action_executor_acquired=0) (stream_write_total_time=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (object_put_request=1) (op_abort=0) (committer_magic_marker_put=0) (op_hflush=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=17) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((object_put_request.max=17) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:11,772 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:11,774 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:11,774 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,775 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:11,776 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000024 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000024&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=48&ts=1731778031773
2024-11-16 17:27:11,781 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:11,781 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:11,782 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:11,782 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:11,783 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:11,783 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:11,784 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:11,784 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:11,785 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:11,787 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((stream_read_seek_operations=0) (stream_read_total_bytes=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_closed=0) (action_file_opened=1) (action_executor_acquired=0) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (stream_read_fully_operations=0) (stream_read_close_operations=0) (stream_read_block_read=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_unbuffered=1) (action_http_get_request=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_bytes_discarded=0) (action_file_opened.failures=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=0) (stream_read_vectored_operations=1) (stream_read_bytes=0) (stream_read_vectored_incoming_ranges=2) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (stream_read_block_read.failures=0) (stream_aborted=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_executor_acquired.min=-1) (action_file_opened.min=7) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=7) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:11,790 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:11,790 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.000s
2024-11-16 17:27:11,791 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$getS3Object$7(S3AInputStream.java:1132)
	at org.apache.hadoop.fs.s3a.Invoker.once(Invoker.java:122)
	at org.apache.hadoop.fs.s3a.Invoker.lambda$retry$4(Invoker.java:376)
	at org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:468)
	at org.apache.hadoop.fs.s3a.Invoker.retry(Invoker.java:372)
	at org.apache.hadoop.fs.s3a.Invoker.retry(Invoker.java:347)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3Object(S3AInputStream.java:1130)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1050)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:27:11,792 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:11,792 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:27:11,793 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:11,793 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:11,794 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:11,794 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:11,805 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:11,806 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:11,806 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:11,807 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:11,807 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000024 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000024&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=51&ts=1731778031773
2024-11-16 17:27:11,816 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.009s
2024-11-16 17:27:11,817 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:11,818 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:11,820 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations=0) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read.failures=0) (stream_read_unbuffered=1) (stream_read_opened=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (stream_read_bytes=150) (action_executor_acquired=0) (stream_read_block_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (action_http_get_request=2) (stream_read_fully_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted=0) (action_file_opened=1) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_prefetch_operations.failures=0) (stream_read_total_bytes=150) (stream_aborted=0) (stream_read_exceptions=0) (action_executor_acquired.failures=0) (stream_read_operations=0) (stream_read_seek_policy_changed=2) (stream_read_vectored_incoming_ranges=4) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_operations=2) (stream_read_vectored_combined_ranges=2) (action_http_get_request.failures=1) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_gauge_input_policy=1) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=10) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=0) (action_file_opened.min=7) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=7) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=10) (action_http_get_request.failures.max=0) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_http_get_request.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:11,824 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:11,825 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,826 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:11,826 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=48&ts=1731778031824
2024-11-16 17:27:11,833 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,834 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,835 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=48&ts=1731778031824
2024-11-16 17:27:11,861 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.027s
2024-11-16 17:27:11,864 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:11,865 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:11,865 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:11,866 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:11,866 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:11,867 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:11,867 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:11,868 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:11,868 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:11,869 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:11,870 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:11,871 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:11,872 [s3a-transfer-fso-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:11,872 [s3a-transfer-fso-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,872 [s3a-transfer-fso-bucket-unbounded-pool2-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [52] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=52&ts=1731778031824
2024-11-16 17:27:11,881 [s3a-transfer-fso-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:11,881 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:27:11,882 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:11,882 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:11,882 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:11,882 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778031763; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:11,882 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:11,882 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:11,882 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:11,883 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:11,885 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:11,886 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:11,886 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:11,886 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:11,886 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:11,886 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:11,886 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:11,886 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:11,886 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=53&ts=1731778031824
2024-11-16 17:27:11,895 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:27:11,895 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:27:11,896 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:27:11,896 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:11,896 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:11,896 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:11,896 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:11,896 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:11,896 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:11,896 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000025&t0=48&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=53&ts=1731778031824
2024-11-16 17:27:11,903 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:27:11,903 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:27:11,903 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:27:11,903 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:27:11,903 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:27:11,904 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.036s
2024-11-16 17:27:11,904 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:11,904 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:11,906 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:11,924 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 4], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_is_file.failures=0) (committer_tasks_completed=0) (stream_read_vectored_read_bytes_discarded=20) (op_get_content_summary.failures=0) (op_abort=0) (committer_commits.failures=0) (op_create=4) (op_list_status=0) (committer_magic_marker_put=0) (stream_read_bytes=300) (object_put_bytes=262144) (object_bulk_delete_request.failures=0) (fake_directories_created=0) (files_copied=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (files_copied_bytes=0) (stream_read_operations_incomplete=0) (committer_jobs_completed=0) (op_copy_from_local_file.failures=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=1) (stream_read_opened=0) (stream_read_seek_operations=0) (store_io_throttled=0) (object_delete_request=0) (stream_write_total_data=524288) (op_mkdirs=4) (audit_access_check_failure=0) (op_list_status.failures=0) (op_access.failures=0) (op_xattr_list=0) (stream_write_block_uploads_aborted=0) (stream_read_remote_stream_aborted.failures=0) (object_list_request=16) (audit_request_execution=45) (op_hsync=0) (op_abort.failures=0) (object_delete_objects=8) (files_delete_rejected=0) (op_is_file=0) (committer_commit_job.failures=0) (stream_read_exceptions=0) (committer_magic_files_created=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=300) (op_is_directory=0) (op_get_file_status=0) (op_delete.failures=0) (store_exists_probe.failures=0) (op_get_file_checksum=0) (object_continue_list_request=0) (op_xattr_get_named_map=0) (stream_read_version_mismatches=0) (committer_commits_aborted=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration.failures=0) (audit_span_creation=16) (object_multipart_aborted=0) (object_list_request.failures=0) (stream_read_fully_operations=0) (op_create_non_recursive=0) (stream_read_close_operations=3) (files_created=4) (stream_read_bytes_discarded_in_close=0) (committer_commits_created=0) (audit_failure=0) (stream_write_exceptions_completing_upload=0) (store_exists_probe=0) (multipart_upload_aborted=0) (multipart_upload_part_put=0) (op_access=0) (directories_deleted=0) (committer_magic_marker_put.failures=0) (op_rename=0) (multipart_upload_completed=0) (multipart_upload_abort_under_path_invoked=0) (committer_load_single_pending_file.failures=0) (multipart_instantiated=0) (committer_tasks_failed=0) (committer_bytes_uploaded=0) (object_put_request.failures=0) (object_select_requests=0) (action_http_get_request=3) (op_xattr_get_map.failures=0) (op_createfile=0) (op_get_file_checksum.failures=0) (op_create.failures=0) (committer_commits_completed=0) (committer_stage_file_upload.failures=0) (op_hflush=0) (stream_write_block_uploads=4) (committer_bytes_committed=0) (committer_commits_reverted=0) (stream_read_seek_bytes_discarded=0) (op_get_file_status.failures=0) (op_exists=0) (op_get_delegation_token=0) (ignored_errors=0) (delegation_tokens_issued=0) (stream_read_remote_stream_aborted=0) (committer_jobs_failed=0) (stream_write_block_uploads_committed=0) (op_xattr_get_map=0) (object_put_request=8) (op_createfile.failures=0) (object_bulk_delete_request=8) (store_io_retry=0) (stream_aborted=0) (action_http_head_request.failures=0) (multipart_upload_list.failures=0) (op_xattr_get_named.failures=0) (object_copy_requests=0) (delegation_tokens_issued.failures=0) (op_delete=4) (op_copy_from_local_file=0) (stream_read_seek_backward_operations=0) (op_list_files.failures=0) (multipart_upload_started=0) (committer_materialize_file=0) (op_exists.failures=0) (store_io_request=45) (directories_created=4) (op_list_files=0) (object_delete_request.failures=0) (action_executor_acquired=0) (op_get_content_summary=0) (stream_read_vectored_combined_ranges=4) (stream_read_vectored_incoming_ranges=8) (stream_read_vectored_operations=4) (stream_read_seek_policy_changed=4) (op_xattr_list.failures=0) (multipart_upload_list=0) (object_continue_list_request.failures=0) (multipart_upload_part_put_bytes=0) (op_openfile=0) (op_glob_status=0) (action_executor_acquired.failures=0) (op_get_delegation_token.failures=0) (files_deleted=4) (object_multipart_initiated=0) (stream_read_remote_stream_drain=0) (committer_materialize_file.failures=0) (stream_read_closed=0) (op_is_directory.failures=0) (stream_read_unbuffered=1) (op_xattr_get_named=0) (object_multipart_aborted.failures=0) (object_put_request_completed=8) (fake_directories_deleted=4) (stream_write_total_time=0) (stream_read_seek_bytes_skipped=0) (committer_stage_file_upload=0) (op_glob_status.failures=0) (committer_load_single_pending_file=0) (op_rename.failures=0) (action_file_opened=3) (op_open=3) (object_metadata_request=11) (action_file_opened.failures=0) (stream_read_operations=0) (op_xattr_get_named_map.failures=0) (committer_commit_job=0) (op_list_located_status=0) (stream_write_bytes=262144) (action_http_head_request=11) (stream_write_queue_duration=0) (op_mkdirs.failures=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=4));
minimums=((op_get_file_checksum.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.min=7) (object_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_head_request.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_delete_request.min=-1) (op_delete.failures.min=-1) (action_http_get_request.min=10) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_delete.min=37) (op_xattr_get_named.min=-1) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.failures.min=-1) (op_is_file.failures.min=-1) (action_http_get_request.failures.min=0) (committer_materialize_file.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_head_request.min=4) (op_access.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.min=-1) (object_delete_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_rename.failures.min=-1) (committer_commit_job.min=-1) (op_list_files.failures.min=-1) (op_abort.min=-1) (op_mkdirs.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_create.min=13) (committer_magic_marker_put.min=-1) (op_get_file_status.min=-1) (op_createfile.failures.min=-1) (op_create.failures.min=-1) (op_list_status.min=-1) (op_xattr_list.min=-1) (op_is_file.min=-1) (action_file_opened.min=7) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.min=-1) (action_file_opened.failures.min=-1) (op_get_content_summary.min=-1) (object_multipart_aborted.min=-1) (op_exists.failures.min=-1) (op_rename.min=-1) (op_glob_status.failures.min=-1) (object_list_request.min=7) (committer_stage_file_upload.min=-1) (op_mkdirs.min=22) (op_glob_status.min=-1) (multipart_upload_list.min=-1) (object_continue_list_request.min=-1) (action_executor_acquired.min=-1) (op_get_file_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_access.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_commit_job.failures.min=-1) (op_exists.min=-1) (stream_write_queue_duration.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_write_queue_duration.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_createfile.min=-1) (op_is_directory.min=-1) (op_copy_from_local_file.failures.min=-1) (object_put_request.min=17) (object_multipart_aborted.failures.min=-1) (op_is_directory.failures.min=-1));
maximums=((action_http_get_request.max=17) (op_list_files.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.max=59) (op_mkdirs.failures.max=-1) (object_put_request.max=63) (op_xattr_get_map.failures.max=-1) (op_rename.max=-1) (object_put_request.failures.max=-1) (store_exists_probe.max=-1) (stream_write_queue_duration.max=-1) (op_create.failures.max=-1) (object_bulk_delete_request.max=12) (op_xattr_get_map.max=-1) (op_abort.max=-1) (op_mkdirs.max=322) (op_get_file_status.failures.max=-1) (op_glob_status.max=-1) (action_file_opened.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_access.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_file.max=-1) (op_list_status.max=-1) (action_file_opened.max=8) (op_xattr_get_named.max=-1) (op_list_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_list_files.failures.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.failures.max=-1) (op_delete.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_createfile.failures.max=-1) (op_exists.failures.max=-1) (op_abort.failures.max=-1) (op_copy_from_local_file.max=-1) (op_exists.max=-1) (object_delete_request.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_rename.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_delegation_token.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (object_list_request.max=220) (action_http_head_request.max=18) (op_access.max=-1) (action_executor_acquired.max=-1) (op_delete.max=81) (committer_magic_marker_put.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_directory.failures.max=-1) (op_createfile.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_content_summary.max=-1) (object_delete_request.failures.max=-1) (object_multipart_initiated.max=-1) (action_http_get_request.failures.max=0) (op_get_file_status.max=-1) (action_executor_acquired.failures.max=-1) (committer_commit_job.max=-1) (op_is_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_checksum.failures.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (multipart_upload_list.max=-1) (committer_materialize_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1));
means=((op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=11, sum=78, mean=7.0909)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=8, sum=190, mean=23.7500)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=23, mean=7.6667)) (op_delete.mean=(samples=4, sum=206, mean=51.5000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=4, sum=401, mean=100.2500)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=27, mean=13.5000)) (object_list_request.mean=(samples=16, sum=393, mean=24.5625)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=4, sum=99, mean=24.7500)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=8, sum=72, mean=9.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:11,925 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:11,925 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:11,925 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,925 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,925 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,925 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000026 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000026&t0=54&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=54&ts=1731778031924
2024-11-16 17:27:11,933 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:11,933 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:11,933 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:11,937 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:11,937 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:11,938 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000026 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000026&t0=54&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=54&ts=1731778031924
2024-11-16 17:27:11,942 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:11,947 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:11,949 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:11,949 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:11,950 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000026 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000026&t0=54&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=54&ts=1731778031924
2024-11-16 17:27:11,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:11,957 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:11,957 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:27:11,957 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:11,957 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:11,958 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,958 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:11,958 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:11,958 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000027 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000027&t0=54&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=54&ts=1731778031957
2024-11-16 17:27:11,966 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:11,966 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:11,966 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:11,967 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17207160193431557403.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:11,969 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17207160193431557403.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (object_multipart_initiated=0) (stream_write_total_time=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (op_hflush=0) (op_hsync=0) (op_abort=0) (stream_write_block_uploads=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17207160193431557403.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,969 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:11,969 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:11,969 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17207160193431557403.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:11,971 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:11,971 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:11,972 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:11,972 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:11,972 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [55] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000027 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000027&t0=54&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=55&ts=1731778031957
2024-11-16 17:27:11,993 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:11,994 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:11,994 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.023s
2024-11-16 17:27:11,995 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17207160193431557403.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:11,995 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17207160193431557403.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,995 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17207160193431557403.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:11,996 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:11,996 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:11,997 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (object_multipart_aborted=0) (object_put_request=1) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (multipart_upload_completed=0) (op_abort=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=1) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (op_hsync=0) (committer_magic_marker_put=0) (op_abort.failures=0) (stream_write_total_data=65536) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=21) (op_abort.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=21) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=21, mean=21.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:11,998 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:11,998 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:27:11,998 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:27:12,000 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:12,000 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:12,004 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:27:12,005 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:27:12,005 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:27:12,005 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:27:12,005 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:27:12,006 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:27:12,006 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:27:12,006 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:27:12,006 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:27:12,006 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:27:12,007 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='d7ec3ce2-accc-400b-976e-2fa9f00bc445', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:12,007 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='d7ec3ce2-accc-400b-976e-2fa9f00bc445', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:12,007 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='d7ec3ce2-accc-400b-976e-2fa9f00bc445', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:27:12,007 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:27:12,008 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:27:12,008 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:27:12,008 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:27:12,008 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:27:12,009 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:27:12,010 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@335aec9]
2024-11-16 17:27:12,010 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@335aec9]
2024-11-16 17:27:12,010 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:27:12,011 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:27:12,011 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:27:12,011 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:27:12,012 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:27:12,012 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:27:12,012 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:27:12,012 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:12,013 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:27:12,013 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:27:12,013 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:27:12,013 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:27:12,016 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:27:12,017 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:27:12,017 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:27:12,017 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:27:12,018 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:27:12,018 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:27:12,018 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:27:12,019 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:27:12,019 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:27:12,020 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:27:12,020 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:27:12,020 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:27:12,021 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:27:12,021 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:27:12,021 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:27:12,021 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:27:12,023 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,023 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,023 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:12,024 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] d7ec3ce2-accc-400b-976e-2fa9f00bc445-00000030 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/d7ec3ce2-accc-400b-976e-2fa9f00bc445-00000030/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=d7ec3ce2-accc-400b-976e-2fa9f00bc445-00000030&t0=54&fs=d7ec3ce2-accc-400b-976e-2fa9f00bc445&t1=54&ts=1731778032022
2024-11-16 17:27:12,024 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:27:12,025 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:27:12,025 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:27:12,025 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:27:12,030 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:12,035 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778031000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:12,038 [s3a-transfer-fso-bucket-unbounded-pool9-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:12,038 [s3a-transfer-fso-bucket-unbounded-pool9-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,039 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:27:12,039 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:12,039 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:12,041 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:27:12,041 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:27:12,041 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:12,041 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:12,042 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,042 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,042 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:12,042 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [58] d7ec3ce2-accc-400b-976e-2fa9f00bc445-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/d7ec3ce2-accc-400b-976e-2fa9f00bc445-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=100-1099&id=d7ec3ce2-accc-400b-976e-2fa9f00bc445-00000031&t0=57&fs=d7ec3ce2-accc-400b-976e-2fa9f00bc445&t1=58&ts=1731778032037
2024-11-16 17:27:12,043 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:27:12,043 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,045 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,047 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:12,047 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [59] d7ec3ce2-accc-400b-976e-2fa9f00bc445-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/d7ec3ce2-accc-400b-976e-2fa9f00bc445-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=100-1099&id=d7ec3ce2-accc-400b-976e-2fa9f00bc445-00000031&t0=57&fs=d7ec3ce2-accc-400b-976e-2fa9f00bc445&t1=59&ts=1731778032037
2024-11-16 17:27:12,053 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:27:12,054 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,065 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:27:12,067 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,074 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_vectored_operations=2) (action_file_opened=1) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_fully_operations=0) (stream_read_seek_policy_changed=1) (action_http_get_request=2) (stream_read_block_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=2) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired=0) (stream_read_version_mismatches=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_read=0) (stream_read_closed=0) (action_executor_acquired.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_incoming_ranges=4) (stream_read_seek_bytes_skipped=0) (stream_read_operations=0) (stream_read_opened=0) (stream_read_prefetch_operations.failures=0) (stream_read_total_bytes=2000) (stream_read_bytes=2000) (stream_read_block_acquire_read=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_aborted=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=11) (action_file_opened.min=0) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=0) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=21) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=32, mean=16.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:12,075 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:27:12,077 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:27:12,078 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:12,078 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@55a14a9c[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:27:12,078 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:12,078 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics4-fso-bucket
2024-11-16 17:27:12,079 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:27:12,079 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@335aec9] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:12,079 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@335aec9] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:12,081 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_rename=0) (stream_read_remote_stream_aborted=0) (action_http_get_request=2) (stream_aborted=0) (files_deleted=0) (op_is_file.failures=0) (object_delete_objects=0) (op_list_status=0) (stream_write_block_uploads_committed=0) (op_xattr_get_named.failures=0) (object_copy_requests=0) (stream_read_close_operations=1) (op_xattr_get_named_map.failures=0) (op_delete=0) (committer_commits_reverted=0) (stream_read_seek_policy_changed=1) (action_http_head_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_queue_duration=0) (op_get_content_summary.failures=0) (stream_read_opened=0) (stream_write_exceptions=0) (action_http_head_request=1) (files_copied_bytes=0) (object_put_bytes=0) (op_is_directory=0) (multipart_upload_started=0) (store_exists_probe=0) (object_put_request_completed=0) (action_file_opened=1) (multipart_instantiated=0) (object_continue_list_request.failures=0) (op_abort.failures=0) (multipart_upload_aborted=0) (op_hsync=0) (op_xattr_get_map.failures=0) (multipart_upload_list.failures=0) (committer_materialize_file=0) (committer_commit_job.failures=0) (multipart_upload_part_put_bytes=0) (stream_write_queue_duration.failures=0) (committer_commits.failures=0) (op_list_located_status=0) (committer_bytes_uploaded=0) (op_get_content_summary=0) (stream_read_seek_bytes_skipped=0) (op_createfile=0) (stream_read_bytes_backwards_on_seek=0) (object_continue_list_request=0) (op_get_file_checksum.failures=0) (committer_stage_file_upload.failures=0) (op_openfile=0) (committer_commit_job=0) (committer_commits_created=0) (op_xattr_get_named=0) (object_list_request=0) (object_delete_request=0) (object_multipart_initiated.failures=0) (committer_magic_files_created=0) (stream_read_total_bytes=2000) (multipart_upload_list=0) (op_list_files=0) (committer_load_single_pending_file=0) (op_xattr_list=0) (op_list_status.failures=0) (action_executor_acquired.failures=0) (object_bulk_delete_request.failures=0) (op_mkdirs=0) (store_io_request=3) (op_list_files.failures=0) (op_hflush=0) (op_xattr_list.failures=0) (op_access=0) (audit_request_execution=3) (object_multipart_aborted=0) (committer_magic_marker_put=0) (stream_read_seek_forward_operations=0) (store_io_throttled=0) (op_get_file_status=1) (audit_span_creation=3) (stream_read_operations=0) (object_bulk_delete_request=0) (object_put_request.failures=0) (committer_jobs_failed=0) (committer_commits_aborted=0) (committer_tasks_completed=0) (stream_write_exceptions_completing_upload=0) (op_copy_from_local_file=0) (multipart_upload_abort_under_path_invoked=0) (op_delete.failures=0) (stream_read_fully_operations=0) (op_get_file_status.failures=0) (op_mkdirs.failures=0) (files_created=0) (committer_materialize_file.failures=0) (store_io_retry=0) (stream_read_exceptions=0) (delegation_tokens_issued.failures=0) (stream_read_unbuffered=0) (object_delete_request.failures=0) (op_is_directory.failures=0) (op_rename.failures=0) (committer_jobs_completed=0) (op_create.failures=0) (object_put_request=0) (committer_bytes_committed=0) (stream_read_seek_bytes_discarded=0) (op_get_delegation_token.failures=0) (op_open=1) (op_exists=0) (directories_created=0) (stream_read_bytes_discarded_in_close=0) (op_create=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_combined_ranges=2) (op_copy_from_local_file.failures=0) (ignored_errors=0) (stream_read_remote_stream_drain=0) (op_access.failures=0) (audit_failure=0) (stream_read_bytes=2000) (stream_write_total_data=0) (stream_read_seek_operations=0) (op_glob_status=0) (delegation_tokens_issued=0) (fake_directories_deleted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_read_bytes_discarded=0) (directories_deleted=0) (object_list_request.failures=0) (stream_read_vectored_incoming_ranges=4) (stream_read_operations_incomplete=0) (audit_access_check_failure=0) (op_get_file_checksum=0) (op_exists.failures=0) (committer_stage_file_upload=0) (stream_read_remote_stream_aborted.failures=0) (files_delete_rejected=0) (store_exists_probe.failures=0) (stream_write_bytes=0) (files_copied=0) (op_get_delegation_token=0) (op_abort=0) (stream_read_version_mismatches=0) (stream_write_block_uploads=0) (committer_load_single_pending_file.failures=0) (op_create_non_recursive=0) (object_multipart_initiated=0) (op_xattr_get_named_map=0) (committer_magic_marker_put.failures=0) (op_xattr_get_map=0) (stream_write_block_uploads_aborted=0) (stream_read_closed=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (op_is_file=0) (action_file_opened.failures=0) (committer_commits_completed=0) (op_createfile.failures=0) (object_metadata_request=1) (committer_tasks_failed=0) (stream_read_vectored_operations=2) (action_http_get_request.failures=0) (object_select_requests=0) (fake_directories_created=0) (op_glob_status.failures=0) (action_executor_acquired=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0));
minimums=((op_createfile.min=-1) (object_multipart_aborted.failures.min=-1) (object_list_request.min=-1) (op_get_file_checksum.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_rename.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.failures.min=-1) (object_delete_request.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_create.min=-1) (action_http_get_request.min=11) (op_list_status.min=-1) (store_exists_probe.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_checksum.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_rename.failures.min=-1) (op_delete.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_file.failures.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_drain.min=-1) (object_list_request.failures.min=-1) (op_access.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_head_request.min=7) (op_list_status.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_status.min=7) (object_multipart_aborted.min=-1) (op_glob_status.min=-1) (op_get_delegation_token.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_access.failures.min=-1) (object_put_request.min=-1) (object_continue_list_request.min=-1) (object_multipart_initiated.failures.min=-1) (object_bulk_delete_request.min=-1) (multipart_upload_list.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (op_list_files.min=-1) (op_mkdirs.min=-1) (op_xattr_list.min=-1) (op_exists.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.failures.min=-1) (op_abort.min=-1) (op_get_content_summary.failures.min=-1) (op_is_directory.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.min=0) (committer_load_single_pending_file.min=-1) (op_xattr_get_named_map.min=-1) (op_glob_status.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_materialize_file.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_map.min=-1) (multipart_upload_list.failures.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (op_is_directory.min=-1) (committer_commit_job.min=-1) (op_delete.min=-1) (object_delete_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_content_summary.min=-1) (op_exists.failures.min=-1));
maximums=((op_list_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_checksum.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_is_directory.max=-1) (object_bulk_delete_request.max=-1) (op_delete.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.max=0) (op_mkdirs.max=-1) (action_http_get_request.failures.max=-1) (op_is_directory.failures.max=-1) (object_multipart_initiated.max=-1) (op_access.failures.max=-1) (op_exists.max=-1) (op_rename.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.max=7) (op_glob_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (op_get_file_status.max=7) (op_mkdirs.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.max=-1) (store_exists_probe.max=-1) (committer_commit_job.max=-1) (stream_write_queue_duration.max=-1) (op_is_file.failures.max=-1) (op_get_content_summary.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_createfile.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_create.max=-1) (delegation_tokens_issued.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.max=-1) (multipart_upload_list.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_materialize_file.failures.max=-1) (committer_stage_file_upload.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_delegation_token.failures.max=-1) (op_access.max=-1) (op_xattr_get_named_map.max=-1) (store_exists_probe.failures.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_map.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=21) (object_list_request.failures.max=-1) (object_list_request.max=-1) (op_xattr_list.failures.max=-1) (action_file_opened.failures.max=-1) (committer_magic_marker_put.max=-1) (object_continue_list_request.max=-1) (op_createfile.failures.max=-1) (op_delete.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (op_rename.max=-1) (op_xattr_list.max=-1) (op_create.failures.max=-1) (action_http_head_request.failures.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1) (committer_materialize_file.max=-1) (object_bulk_delete_request.failures.max=-1));
means=((op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=7, mean=7.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=32, mean=16.0000)) (op_get_file_status.mean=(samples=1, sum=7, mean=7.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:12,082 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:12,082 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,082 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,083 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032&t0=54&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=54&ts=1731778032082
2024-11-16 17:27:12,089 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,089 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,090 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032&t0=54&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=54&ts=1731778032082
2024-11-16 17:27:12,103 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:27:12,103 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:12,103 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:12,103 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:12,104 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:12,104 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:12,104 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:12,104 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:12,104 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:12,104 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:12,105 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:12,105 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:12,105 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:12,105 [s3a-transfer-fso-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:12,106 [s3a-transfer-fso-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,106 [s3a-transfer-fso-bucket-unbounded-pool2-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [62] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032&t0=54&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=62&ts=1731778032082
2024-11-16 17:27:12,114 [s3a-transfer-fso-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:12,114 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:27:12,114 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:12,115 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:12,115 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:12,115 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778031988; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:12,115 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:12,115 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:12,115 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:12,115 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:12,116 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:12,116 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:12,116 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:12,117 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:12,117 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,117 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,117 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:12,117 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,117 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032&t0=54&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=63&ts=1731778032082
2024-11-16 17:27:12,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:27:12,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:27:12,128 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:27:12,128 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:12,129 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:12,129 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,130 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,130 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:12,130 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,131 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000032&t0=54&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=63&ts=1731778032082
2024-11-16 17:27:12,138 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:27:12,139 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:27:12,139 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:27:12,139 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:27:12,140 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.024s
2024-11-16 17:27:12,140 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.036s
2024-11-16 17:27:12,140 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:12,140 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:12,143 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:12,159 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 5, active threads = 0, queued tasks = 0, completed tasks = 5], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_closed=0) (committer_commits_created=0) (object_list_request.failures=0) (committer_commits_aborted=0) (stream_read_vectored_incoming_ranges=8) (op_get_file_status.failures=0) (object_metadata_request=13) (op_xattr_get_named=0) (op_list_files.failures=0) (action_http_get_request.failures=1) (op_list_located_status=0) (object_copy_requests=0) (multipart_upload_list.failures=0) (audit_access_check_failure=0) (files_copied=0) (op_abort=0) (object_put_bytes=327680) (multipart_upload_part_put_bytes=0) (committer_magic_files_created=0) (committer_stage_file_upload.failures=0) (op_copy_from_local_file.failures=0) (op_rename=0) (object_put_request=10) (op_rename.failures=0) (object_select_requests=0) (object_continue_list_request.failures=0) (action_http_head_request.failures=0) (op_xattr_list.failures=0) (object_continue_list_request=0) (stream_read_vectored_operations=4) (stream_read_seek_forward_operations=0) (multipart_upload_started=0) (op_xattr_get_map.failures=0) (op_list_files=0) (op_list_status.failures=0) (op_get_file_status=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_block_uploads_committed=0) (op_copy_from_local_file=0) (op_get_content_summary.failures=0) (stream_write_block_uploads_aborted=0) (stream_write_exceptions_completing_upload=0) (committer_load_single_pending_file=0) (op_xattr_get_map=0) (op_create=5) (op_get_delegation_token.failures=0) (committer_commits_completed=0) (stream_read_exceptions=0) (op_abort.failures=0) (committer_bytes_committed=0) (stream_read_operations=0) (action_http_get_request=3) (object_delete_request=0) (op_exists=0) (stream_aborted=0) (object_bulk_delete_request.failures=0) (committer_materialize_file.failures=0) (op_xattr_get_named.failures=0) (object_list_request=20) (op_is_directory=0) (committer_tasks_completed=0) (op_is_file=0) (committer_commits_reverted=0) (stream_read_opened=0) (audit_span_creation=19) (store_io_request=55) (stream_read_bytes_discarded_in_abort=0) (op_createfile.failures=0) (op_xattr_get_named_map.failures=0) (stream_write_total_data=655360) (committer_magic_marker_put=0) (op_is_directory.failures=0) (committer_jobs_failed=0) (op_create.failures=0) (fake_directories_deleted=5) (committer_materialize_file=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_close=0) (files_copied_bytes=0) (stream_read_version_mismatches=0) (files_deleted=5) (object_delete_objects=10) (audit_request_execution=55) (stream_read_seek_bytes_skipped=0) (op_hflush=0) (multipart_upload_abort_under_path_invoked=0) (object_put_request.failures=0) (op_createfile=0) (action_file_opened=3) (committer_commits.failures=0) (action_file_opened.failures=0) (op_delete.failures=0) (op_exists.failures=0) (directories_created=5) (stream_write_total_time=0) (op_list_status=0) (op_get_file_checksum=0) (delegation_tokens_issued.failures=0) (stream_read_vectored_read_bytes_discarded=20) (op_mkdirs=5) (fake_directories_created=0) (ignored_errors=0) (multipart_instantiated=0) (stream_read_seek_operations=0) (store_io_retry=0) (stream_read_seek_policy_changed=4) (op_access.failures=0) (op_mkdirs.failures=0) (op_access=0) (committer_bytes_uploaded=0) (stream_read_seek_backward_operations=0) (store_exists_probe.failures=0) (op_open=3) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (op_get_content_summary=0) (stream_read_remote_stream_drain=0) (op_get_file_checksum.failures=0) (stream_read_fully_operations=0) (committer_load_single_pending_file.failures=0) (files_created=5) (object_put_request_completed=10) (op_openfile=0) (stream_read_close_operations=3) (stream_read_seek_bytes_discarded=0) (object_multipart_aborted=0) (op_get_delegation_token=0) (object_multipart_initiated=0) (committer_commit_job=0) (multipart_upload_completed=0) (committer_commit_job.failures=0) (committer_jobs_completed=0) (store_exists_probe=0) (stream_write_exceptions=0) (op_glob_status.failures=0) (multipart_upload_aborted=0) (action_http_head_request=13) (object_delete_request.failures=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (committer_tasks_failed=0) (op_xattr_get_named_map=0) (stream_read_total_bytes=300) (stream_read_remote_stream_aborted=0) (object_bulk_delete_request=10) (directories_deleted=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=4) (stream_read_bytes=300) (stream_write_bytes=327680) (op_delete=5) (files_delete_rejected=0) (stream_write_queue_duration.failures=0) (audit_failure=0) (store_io_throttled=0) (op_hsync=0) (op_xattr_list=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=5) (multipart_upload_list=0) (op_is_file.failures=0) (object_multipart_aborted.failures=0) (stream_read_remote_stream_aborted.failures=0) (committer_stage_file_upload=0) (op_create_non_recursive=0) (action_executor_acquired=0) (op_glob_status=0) (stream_read_unbuffered=1) (delegation_tokens_issued=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=5) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((committer_load_single_pending_file.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_map.min=-1) (op_delete.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.min=-1) (op_get_content_summary.failures.min=-1) (op_list_status.failures.min=-1) (op_copy_from_local_file.min=-1) (object_continue_list_request.min=-1) (op_glob_status.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_rename.min=-1) (op_get_file_checksum.failures.min=-1) (op_exists.min=-1) (action_executor_acquired.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_createfile.failures.min=-1) (op_is_file.min=-1) (committer_magic_marker_put.min=-1) (op_create.failures.min=-1) (op_exists.failures.min=-1) (action_http_head_request.min=4) (op_delete.min=36) (op_copy_from_local_file.failures.min=-1) (op_access.failures.min=-1) (store_exists_probe.min=-1) (op_is_file.failures.min=-1) (object_multipart_aborted.min=-1) (committer_commit_job.failures.min=-1) (op_access.min=-1) (op_xattr_get_named.failures.min=-1) (object_delete_request.min=-1) (op_list_status.min=-1) (op_mkdirs.min=22) (object_list_request.failures.min=-1) (object_list_request.min=7) (stream_read_remote_stream_aborted.min=-1) (op_create.min=10) (store_exists_probe.failures.min=-1) (action_file_opened.min=7) (object_multipart_initiated.failures.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_drain.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.min=7) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.failures.min=0) (action_executor_acquired.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_delegation_token.min=-1) (committer_commit_job.min=-1) (multipart_upload_list.min=-1) (op_xattr_list.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_list.min=-1) (op_get_delegation_token.failures.min=-1) (action_file_opened.failures.min=-1) (op_is_directory.failures.min=-1) (delegation_tokens_issued.min=-1) (action_http_get_request.min=10) (op_createfile.min=-1) (op_rename.failures.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.min=-1) (multipart_upload_list.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.min=-1) (op_xattr_get_map.failures.min=-1) (committer_stage_file_upload.min=-1) (op_list_files.failures.min=-1) (object_delete_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named.min=-1) (object_put_request.min=21) (op_list_files.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (op_list_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_list_files.failures.max=-1) (op_create.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.failures.max=-1) (action_executor_acquired.max=-1) (object_bulk_delete_request.max=12) (op_glob_status.max=-1) (op_xattr_list.max=-1) (op_glob_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (store_exists_probe.failures.max=-1) (op_abort.failures.max=-1) (action_http_get_request.max=17) (op_is_file.failures.max=-1) (action_file_opened.max=8) (op_get_file_checksum.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named.max=-1) (action_file_opened.failures.max=-1) (op_is_directory.max=-1) (committer_materialize_file.max=-1) (op_create.max=59) (op_get_content_summary.max=-1) (object_put_request.max=63) (committer_stage_file_upload.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.max=322) (stream_read_remote_stream_drain.failures.max=-1) (op_delete.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.max=-1) (stream_write_queue_duration.max=-1) (op_rename.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_exists.failures.max=-1) (op_createfile.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_list_request.max=220) (op_access.max=-1) (op_xattr_get_map.max=-1) (op_list_files.max=-1) (committer_commit_job.max=-1) (action_http_head_request.failures.max=-1) (op_get_file_status.max=-1) (store_exists_probe.max=-1) (op_xattr_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_exists.max=-1) (action_http_head_request.max=18) (object_multipart_aborted.max=-1) (op_is_directory.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_status.max=-1) (delegation_tokens_issued.max=-1) (op_rename.max=-1) (op_delete.max=81) (object_continue_list_request.max=-1) (action_http_get_request.failures.max=0) (object_put_request.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_createfile.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_delegation_token.max=-1));
means=((action_file_opened.mean=(samples=3, sum=23, mean=7.6667)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=20, sum=431, mean=21.5500)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=5, sum=242, mean=48.4000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=10, sum=89, mean=8.9000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=5, sum=109, mean=21.8000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=5, sum=433, mean=86.6000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=10, sum=218, mean=21.8000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=27, mean=13.5000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=13, sum=90, mean=6.9231)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:12,161 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:12,161 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:12,161 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,161 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,161 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,162 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000033 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000033&t0=64&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=64&ts=1731778032160
2024-11-16 17:27:12,169 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:12,169 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:12,169 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:12,169 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,170 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,170 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000033 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000033&t0=64&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=64&ts=1731778032160
2024-11-16 17:27:12,173 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:12,173 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:12,173 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:12,173 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:12,173 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000033 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000033&t0=64&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=64&ts=1731778032160
2024-11-16 17:27:12,179 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:12,179 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:12,179 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:12,179 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:12,180 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,180 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,180 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,181 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,181 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000034 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000034&t0=64&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=64&ts=1731778032180
2024-11-16 17:27:12,188 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:12,188 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,188 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:12,189 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8568919015887763551.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:12,190 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8568919015887763551.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (op_abort=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (op_hsync=0) (object_put_request=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (stream_write_total_time=0) (stream_write_total_data=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (op_hflush=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8568919015887763551.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,190 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:12,191 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:12,191 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8568919015887763551.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:12,191 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:12,191 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:12,192 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:12,192 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:12,192 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000034 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000034&t0=64&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=65&ts=1731778032180
2024-11-16 17:27:12,217 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:12,218 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:12,219 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:27:12,219 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8568919015887763551.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:12,220 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8568919015887763551.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,220 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8568919015887763551.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,220 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:12,220 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:12,222 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (action_executor_acquired=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (op_abort=0) (committer_magic_marker_put=0) (op_abort.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (stream_write_total_time=0) (stream_write_bytes=65536) (object_put_request=1) (object_multipart_aborted.failures=0) (op_hflush=0) (multipart_upload_completed.failures=0) (op_hsync=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=1) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=25) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=25) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:12,222 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:12,222 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:27:12,222 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:27:12,224 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:12,224 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:12,227 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:27:12,227 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:27:12,228 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:27:12,228 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:27:12,228 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:27:12,228 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:27:12,228 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:27:12,228 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:27:12,229 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:27:12,230 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:27:12,230 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='71819095-1d71-45c6-bf6c-0890c66156e5', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:12,230 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='71819095-1d71-45c6-bf6c-0890c66156e5', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:12,230 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='71819095-1d71-45c6-bf6c-0890c66156e5', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:27:12,230 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:27:12,230 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:27:12,231 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:27:12,232 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:27:12,232 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:27:12,232 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:27:12,232 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5cf96859]
2024-11-16 17:27:12,232 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5cf96859]
2024-11-16 17:27:12,233 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:27:12,233 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:27:12,234 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:27:12,234 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:27:12,234 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:27:12,234 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:27:12,234 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:27:12,235 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:12,235 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:27:12,236 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:27:12,236 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:27:12,236 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:27:12,240 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:27:12,240 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:27:12,240 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:27:12,241 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:27:12,241 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:27:12,241 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:27:12,241 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:27:12,241 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:27:12,241 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:27:12,242 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:27:12,243 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:27:12,243 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:27:12,243 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:27:12,243 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:27:12,243 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:27:12,243 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:27:12,244 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,244 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,244 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:12,245 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 71819095-1d71-45c6-bf6c-0890c66156e5-00000037 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/71819095-1d71-45c6-bf6c-0890c66156e5-00000037/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=71819095-1d71-45c6-bf6c-0890c66156e5-00000037&t0=64&fs=71819095-1d71-45c6-bf6c-0890c66156e5&t1=64&ts=1731778032244
2024-11-16 17:27:12,246 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:27:12,246 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:27:12,246 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:27:12,246 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:27:12,253 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:12,253 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778032000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:12,256 [s3a-transfer-fso-bucket-unbounded-pool11-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:12,257 [s3a-transfer-fso-bucket-unbounded-pool11-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,257 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:12,258 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:12,258 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:27:12,258 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,258 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,258 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:12,259 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [68] 71819095-1d71-45c6-bf6c-0890c66156e5-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/71819095-1d71-45c6-bf6c-0890c66156e5-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=1947-2046&id=71819095-1d71-45c6-bf6c-0890c66156e5-00000038&t0=67&fs=71819095-1d71-45c6-bf6c-0890c66156e5&t1=68&ts=1731778032256
2024-11-16 17:27:12,266 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,266 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,266 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:12,266 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [70] 71819095-1d71-45c6-bf6c-0890c66156e5-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/71819095-1d71-45c6-bf6c-0890c66156e5-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=8192-14435&id=71819095-1d71-45c6-bf6c-0890c66156e5-00000038&t0=67&fs=71819095-1d71-45c6-bf6c-0890c66156e5&t1=70&ts=1731778032256
2024-11-16 17:27:12,269 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:12,270 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,271 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,271 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:12,276 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [71] 71819095-1d71-45c6-bf6c-0890c66156e5-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/71819095-1d71-45c6-bf6c-0890c66156e5-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=40960-41983&id=71819095-1d71-45c6-bf6c-0890c66156e5-00000038&t0=67&fs=71819095-1d71-45c6-bf6c-0890c66156e5&t1=71&ts=1731778032256
2024-11-16 17:27:12,277 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:27:12,277 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,284 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:27:12,287 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:27:12,287 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:27:12,289 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,296 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.025s
2024-11-16 17:27:12,296 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,299 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=18));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=25));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=62, mean=20.6667)));

2024-11-16 17:27:12,300 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_incoming_ranges=5) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_seek_policy_changed=1) (stream_read_bytes=1424) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_closed=0) (stream_read_unbuffered=0) (stream_read_total_bytes=1424) (action_file_opened.failures=0) (stream_read_block_read=0) (action_file_opened=1) (stream_read_vectored_combined_ranges=3) (stream_read_exceptions=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_close_operations=1) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_operations=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_opened=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (stream_read_block_acquire_read=0) (action_http_get_request=3));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.min=-1) (action_file_opened.min=0) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=18) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1));
maximums=((action_http_get_request.max=25) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=0) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=62, mean=20.6667)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:12,302 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778032000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:12,307 [s3a-transfer-fso-bucket-unbounded-pool11-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:12,307 [s3a-transfer-fso-bucket-unbounded-pool11-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,309 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:12,310 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:27:12,310 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,311 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 71819095-1d71-45c6-bf6c-0890c66156e5-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/71819095-1d71-45c6-bf6c-0890c66156e5-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=10240-65535&id=71819095-1d71-45c6-bf6c-0890c66156e5-00000039&t0=74&fs=71819095-1d71-45c6-bf6c-0890c66156e5&t1=64&ts=1731778032306
2024-11-16 17:27:12,321 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.012s
2024-11-16 17:27:12,323 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:12,323 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:12,324 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:12,324 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:27:12,324 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:27:12,326 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:27:12,326 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,327 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://fso-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:27:12,328 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:27:12,328 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,329 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 71819095-1d71-45c6-bf6c-0890c66156e5-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/71819095-1d71-45c6-bf6c-0890c66156e5-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=8192-8291&id=71819095-1d71-45c6-bf6c-0890c66156e5-00000039&t0=74&fs=71819095-1d71-45c6-bf6c-0890c66156e5&t1=64&ts=1731778032306
2024-11-16 17:27:12,341 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.017s
2024-11-16 17:27:12,341 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:12,341 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:12,341 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:12,341 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:27:12,342 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:27:12,342 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:12,342 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:27:12,342 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,342 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 71819095-1d71-45c6-bf6c-0890c66156e5-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/71819095-1d71-45c6-bf6c-0890c66156e5-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=14336-14435&id=71819095-1d71-45c6-bf6c-0890c66156e5-00000039&t0=74&fs=71819095-1d71-45c6-bf6c-0890c66156e5&t1=64&ts=1731778032306
2024-11-16 17:27:12,352 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.011s
2024-11-16 17:27:12,353 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:12,353 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:12,353 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:12,353 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:27:12,353 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:27:12,353 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:12,354 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:27:12,354 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,354 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 71819095-1d71-45c6-bf6c-0890c66156e5-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/71819095-1d71-45c6-bf6c-0890c66156e5-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=1947-2046&id=71819095-1d71-45c6-bf6c-0890c66156e5-00000039&t0=74&fs=71819095-1d71-45c6-bf6c-0890c66156e5&t1=64&ts=1731778032306
2024-11-16 17:27:12,363 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.010s
2024-11-16 17:27:12,363 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:12,364 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:27:12,364 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:12,365 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:27:12,365 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:27:12,365 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:12,366 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:27:12,366 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,367 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 71819095-1d71-45c6-bf6c-0890c66156e5-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/71819095-1d71-45c6-bf6c-0890c66156e5-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=40960-41983&id=71819095-1d71-45c6-bf6c-0890c66156e5-00000039&t0=74&fs=71819095-1d71-45c6-bf6c-0890c66156e5&t1=64&ts=1731778032306
2024-11-16 17:27:12,376 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.012s
2024-11-16 17:27:12,376 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:12,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:27:12,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=8)
(stream_read_remote_stream_aborted.min=3)
(stream_read_remote_stream_drain.min=1));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=12)
(stream_read_remote_stream_aborted.max=3)
(stream_read_remote_stream_drain.max=1));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=49, mean=9.8000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)));

2024-11-16 17:27:12,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:27:12,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:27:12,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:12,381 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=1) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_combined_ranges=0) (action_file_opened=1) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=4) (stream_read_fully_operations=5) (stream_read_block_acquire_read=0) (stream_read_total_bytes=1424) (stream_read_vectored_operations=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=2) (stream_read_exceptions=0) (stream_read_vectored_incoming_ranges=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (action_http_get_request=5) (stream_aborted=1) (stream_read_seek_bytes_skipped=44957) (stream_read_seek_policy_changed=2) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes=1424) (stream_read_opened=5) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_abort=55196) (action_executor_acquired=0) (stream_read_seek_forward_operations=2) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_unbuffered=0) (action_executor_acquired.failures=0) (stream_read_closed=4) (stream_read_bytes_backwards_on_seek=14637) (stream_read_operations=5) (stream_read_seek_operations=4) (action_file_opened.failures=0) (stream_read_block_read=0) (stream_read_operations_incomplete=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=1) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((action_file_opened.min=0) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=3) (action_http_get_request.min=8) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=0) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_remote_stream_aborted.max=3) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=12) (stream_read_block_read.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=49, mean=9.8000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:12,382 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:27:12,390 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:27:12,391 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:12,391 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@6e937d76[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:27:12,392 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:12,392 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics5-fso-bucket
2024-11-16 17:27:12,393 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:27:12,393 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5cf96859] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:12,393 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5cf96859] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:12,395 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_openfile=0) (op_create.failures=0) (files_copied_bytes=0) (multipart_upload_started=0) (op_exists.failures=0) (stream_read_seek_bytes_discarded=0) (op_get_content_summary.failures=0) (delegation_tokens_issued=0) (committer_tasks_completed=0) (object_multipart_aborted.failures=0) (stream_write_total_data=0) (object_continue_list_request.failures=0) (committer_stage_file_upload.failures=0) (stream_read_vectored_incoming_ranges=5) (action_file_opened.failures=0) (stream_read_close_operations=2) (committer_materialize_file=0) (fake_directories_deleted=0) (op_get_file_status=1) (op_hflush=0) (stream_read_bytes_backwards_on_seek=14637) (action_http_get_request.failures=0) (committer_load_single_pending_file=0) (store_exists_probe.failures=0) (stream_read_closed=4) (op_glob_status=0) (op_xattr_get_named_map.failures=0) (op_createfile.failures=0) (files_created=0) (committer_commits_created=0) (multipart_upload_list=0) (stream_write_block_uploads=0) (stream_aborted=1) (committer_commits.failures=0) (multipart_upload_completed=0) (store_io_request=9) (stream_read_bytes=2848) (committer_load_single_pending_file.failures=0) (op_is_file=0) (files_deleted=0) (action_executor_acquired.failures=0) (op_get_content_summary=0) (object_put_request_completed=0) (files_delete_rejected=0) (committer_bytes_committed=0) (stream_write_queue_duration.failures=0) (op_list_files=0) (delegation_tokens_issued.failures=0) (op_is_directory.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (committer_commits_aborted=0) (audit_failure=0) (object_delete_request=0) (files_copied=0) (multipart_upload_list.failures=0) (op_list_status=0) (object_put_request.failures=0) (op_access.failures=0) (op_abort.failures=0) (op_list_files.failures=0) (op_xattr_list.failures=0) (ignored_errors=0) (op_is_directory=0) (op_xattr_list=0) (stream_read_operations_incomplete=0) (op_delete.failures=0) (stream_write_block_uploads_aborted=0) (op_abort=0) (op_copy_from_local_file.failures=0) (multipart_upload_aborted=0) (stream_read_remote_stream_drain.failures=0) (committer_magic_marker_put=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits_reverted=0) (object_copy_requests=0) (op_delete=0) (op_xattr_get_map=0) (object_put_request=0) (op_createfile=0) (committer_magic_files_created=0) (store_io_throttled=0) (multipart_upload_part_put=0) (stream_read_seek_backward_operations=2) (audit_access_check_failure=0) (op_get_file_status.failures=0) (committer_bytes_uploaded=0) (committer_commits_completed=0) (object_delete_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened=2) (stream_write_bytes=0) (op_list_status.failures=0) (audit_request_execution=9) (committer_jobs_failed=0) (stream_read_seek_policy_changed=3) (op_get_delegation_token=0) (action_http_head_request.failures=0) (op_is_file.failures=0) (object_multipart_aborted=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_bytes_discarded_in_abort=55196) (action_http_get_request=8) (stream_read_seek_operations=4) (op_hsync=0) (fake_directories_created=0) (committer_stage_file_upload=0) (op_list_located_status=0) (action_http_head_request=1) (op_get_file_checksum.failures=0) (stream_read_unbuffered=0) (stream_read_opened=5) (op_access=0) (op_mkdirs.failures=0) (stream_read_seek_bytes_skipped=44957) (op_create=0) (stream_read_version_mismatches=0) (op_xattr_get_named_map=0) (stream_write_total_time=0) (stream_read_seek_forward_operations=2) (object_put_bytes=0) (object_bulk_delete_request.failures=0) (op_rename=0) (committer_materialize_file.failures=0) (op_exists=0) (committer_commit_job.failures=0) (object_metadata_request=1) (object_multipart_initiated=0) (stream_read_remote_stream_drain=4) (object_continue_list_request=0) (stream_write_exceptions=0) (audit_span_creation=4) (stream_read_operations=5) (stream_read_vectored_combined_ranges=3) (op_get_file_checksum=0) (stream_write_block_uploads_committed=0) (object_select_requests=0) (op_get_delegation_token.failures=0) (stream_read_fully_operations=5) (op_rename.failures=0) (op_mkdirs=0) (op_xattr_get_named.failures=0) (committer_magic_marker_put.failures=0) (directories_deleted=0) (store_exists_probe=0) (op_glob_status.failures=0) (op_open=2) (stream_read_exceptions=0) (object_list_request=0) (stream_write_exceptions_completing_upload=0) (stream_read_vectored_operations=1) (committer_commit_job=0) (object_multipart_initiated.failures=0) (multipart_instantiated=0) (committer_jobs_completed=0) (object_delete_objects=0) (committer_tasks_failed=0) (directories_created=0) (stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=2848) (op_xattr_get_named=0) (stream_read_remote_stream_aborted=1) (op_xattr_get_map.failures=0) (object_bulk_delete_request=0) (op_copy_from_local_file=0) (multipart_upload_part_put_bytes=0) (op_create_non_recursive=0) (object_list_request.failures=0) (store_io_retry=0));
gauges=((stream_write_block_uploads_pending=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0));
minimums=((op_is_directory.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_delegation_token.min=-1) (object_multipart_initiated.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_file_checksum.min=-1) (op_exists.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_list_request.min=-1) (action_http_head_request.min=9) (store_exists_probe.min=-1) (object_bulk_delete_request.min=-1) (object_delete_request.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_map.min=-1) (op_delete.failures.min=-1) (op_is_directory.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_list.min=-1) (action_executor_acquired.failures.min=-1) (committer_commit_job.min=-1) (op_createfile.min=-1) (action_http_get_request.min=8) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (op_list_status.min=-1) (action_http_head_request.failures.min=-1) (stream_write_queue_duration.min=-1) (stream_write_queue_duration.failures.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.min=-1) (op_rename.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_is_file.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (op_access.failures.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_aborted.min=3) (action_file_opened.min=0) (object_continue_list_request.min=-1) (multipart_upload_list.min=-1) (object_delete_request.failures.min=-1) (op_list_status.failures.min=-1) (object_put_request.failures.min=-1) (op_access.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_aborted.min=-1) (op_mkdirs.min=-1) (op_list_files.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.min=9) (op_is_file.failures.min=-1) (committer_materialize_file.min=-1) (op_abort.min=-1) (object_continue_list_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_delete.min=-1) (op_create.min=-1) (committer_commit_job.failures.min=-1) (op_list_files.failures.min=-1) (op_createfile.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_status.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_content_summary.min=-1) (object_put_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_exists.failures.min=-1) (op_rename.failures.min=-1) (op_abort.failures.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.failures.min=-1));
maximums=((store_exists_probe.max=-1) (stream_write_queue_duration.max=-1) (committer_materialize_file.failures.max=-1) (op_is_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_directory.failures.max=-1) (committer_commit_job.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_file_status.failures.max=-1) (op_glob_status.max=-1) (committer_commit_job.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.max=9) (op_access.failures.max=-1) (delegation_tokens_issued.max=-1) (op_create.failures.max=-1) (op_create.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.max=-1) (action_http_head_request.max=9) (op_list_status.max=-1) (op_is_file.failures.max=-1) (op_access.max=-1) (action_executor_acquired.failures.max=-1) (object_list_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_list.failures.max=-1) (action_file_opened.max=0) (op_rename.failures.max=-1) (object_bulk_delete_request.max=-1) (object_delete_request.max=-1) (op_get_delegation_token.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_multipart_aborted.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_exists.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_delete_request.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_get_request.max=25) (op_get_delegation_token.max=-1) (op_exists.max=-1) (object_list_request.max=-1) (multipart_upload_list.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.max=3) (op_list_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_copy_from_local_file.max=-1) (op_rename.max=-1) (multipart_upload_list.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.max=-1) (op_list_files.max=-1) (op_xattr_get_map.max=-1) (op_delete.max=-1) (op_createfile.failures.max=-1) (op_delete.failures.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.failures.max=-1) (op_list_files.failures.max=-1) (object_put_request.max=-1) (object_continue_list_request.max=-1) (op_get_content_summary.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_abort.max=-1));
means=((stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=111, mean=13.8750)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=9, mean=9.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:12,396 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:12,397 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,397 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,398 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040&t0=64&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=64&ts=1731778032396
2024-11-16 17:27:12,401 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,401 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,402 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040&t0=64&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=64&ts=1731778032396
2024-11-16 17:27:12,408 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:12,408 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:12,408 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:12,408 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:12,408 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:12,408 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:12,409 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:12,409 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:12,409 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:12,409 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:12,409 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:12,409 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:12,410 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:12,410 [s3a-transfer-fso-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:12,410 [s3a-transfer-fso-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,410 [s3a-transfer-fso-bucket-unbounded-pool2-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [76] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040&t0=64&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=76&ts=1731778032396
2024-11-16 17:27:12,418 [s3a-transfer-fso-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:12,419 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:27:12,420 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:12,420 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:12,420 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:12,420 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778032212; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:12,420 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:12,420 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:12,421 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:12,422 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:12,422 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:12,422 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:12,422 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:12,422 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:12,422 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,422 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,422 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:12,423 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,423 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040&t0=64&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=77&ts=1731778032396
2024-11-16 17:27:12,429 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:12,429 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:27:12,429 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:27:12,429 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:12,430 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:12,430 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,430 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,430 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:12,430 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,430 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000040&t0=64&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=77&ts=1731778032396
2024-11-16 17:27:12,436 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:12,437 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:12,437 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:27:12,437 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:27:12,437 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:27:12,437 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.028s
2024-11-16 17:27:12,437 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:12,437 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:12,439 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:12,457 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 6, active threads = 0, queued tasks = 0, completed tasks = 6], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_file_opened=3) (object_multipart_initiated=0) (op_xattr_get_named_map=0) (committer_tasks_completed=0) (committer_bytes_uploaded=0) (multipart_upload_started=0) (stream_read_operations_incomplete=0) (object_bulk_delete_request.failures=0) (multipart_upload_list.failures=0) (files_deleted=6) (directories_deleted=0) (op_xattr_get_map=0) (stream_write_block_uploads_aborted=0) (object_multipart_aborted=0) (stream_read_bytes_discarded_in_abort=0) (op_copy_from_local_file.failures=0) (committer_stage_file_upload=0) (stream_read_vectored_read_bytes_discarded=20) (stream_read_operations=0) (op_xattr_get_named=0) (op_rename=0) (stream_read_exceptions=0) (object_continue_list_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted=0) (object_delete_request=0) (object_continue_list_request=0) (object_delete_request.failures=0) (op_xattr_list=0) (op_is_directory=0) (stream_read_total_bytes=300) (committer_bytes_committed=0) (committer_commits_aborted=0) (action_http_get_request=3) (object_put_request.failures=0) (op_delete.failures=0) (committer_commits_reverted=0) (op_glob_status.failures=0) (stream_read_bytes_discarded_in_close=0) (committer_magic_files_created=0) (action_http_get_request.failures=1) (stream_read_close_operations=3) (op_hflush=0) (stream_read_seek_backward_operations=0) (op_xattr_get_named_map.failures=0) (committer_commits_completed=0) (op_xattr_get_named.failures=0) (stream_write_queue_duration.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_version_mismatches=0) (store_io_retry=0) (stream_read_bytes=300) (audit_span_creation=22) (committer_jobs_completed=0) (op_is_directory.failures=0) (object_metadata_request=15) (stream_read_vectored_combined_ranges=4) (multipart_upload_completed=0) (op_mkdirs.failures=0) (audit_request_execution=65) (delegation_tokens_issued=0) (op_xattr_list.failures=0) (multipart_upload_aborted=0) (committer_jobs_failed=0) (audit_failure=0) (op_create_non_recursive=0) (committer_commits.failures=0) (op_get_content_summary=0) (audit_access_check_failure=0) (action_executor_acquired=0) (stream_read_vectored_operations=4) (delegation_tokens_issued.failures=0) (stream_read_closed=0) (op_create=6) (op_xattr_get_map.failures=0) (op_get_file_checksum.failures=0) (committer_commit_job.failures=0) (object_put_request_completed=12) (multipart_instantiated=0) (fake_directories_deleted=6) (stream_write_bytes=393216) (committer_tasks_failed=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (op_get_content_summary.failures=0) (committer_commits_created=0) (stream_read_fully_operations=0) (object_delete_objects=12) (multipart_upload_part_put=0) (stream_read_seek_bytes_skipped=0) (op_is_file=0) (object_bulk_delete_request=12) (op_get_file_checksum=0) (multipart_upload_list=0) (committer_materialize_file.failures=0) (stream_read_unbuffered=1) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_opened=0) (stream_read_remote_stream_aborted.failures=0) (op_exists=0) (committer_stage_file_upload.failures=0) (stream_write_exceptions=0) (stream_aborted=0) (committer_materialize_file=0) (store_io_throttled=0) (op_list_located_status=0) (op_get_delegation_token.failures=0) (files_delete_rejected=0) (store_io_request=65) (stream_read_seek_forward_operations=0) (stream_write_block_uploads_committed=0) (store_exists_probe=0) (op_rename.failures=0) (op_abort=0) (op_hsync=0) (object_put_bytes=393216) (op_list_files=0) (op_get_file_status.failures=0) (op_get_file_status=0) (op_createfile.failures=0) (stream_write_total_time=0) (multipart_upload_part_put_bytes=0) (op_exists.failures=0) (object_list_request.failures=0) (files_created=6) (op_open=3) (action_file_opened.failures=0) (object_multipart_initiated.failures=0) (op_mkdirs=6) (op_delete=6) (op_list_status.failures=0) (op_list_status=0) (stream_write_queue_duration=0) (stream_read_vectored_incoming_ranges=8) (op_openfile=0) (files_copied_bytes=0) (object_copy_requests=0) (op_access.failures=0) (op_copy_from_local_file=0) (directories_created=6) (stream_read_seek_bytes_discarded=0) (action_executor_acquired.failures=0) (fake_directories_created=0) (committer_load_single_pending_file.failures=0) (op_list_files.failures=0) (stream_read_remote_stream_drain=0) (op_createfile=0) (files_copied=0) (ignored_errors=0) (committer_load_single_pending_file=0) (op_glob_status=0) (committer_commit_job=0) (object_select_requests=0) (op_create.failures=0) (op_is_file.failures=0) (stream_read_seek_operations=0) (op_access=0) (stream_read_seek_policy_changed=4) (stream_read_remote_stream_drain.failures=0) (op_get_delegation_token=0) (stream_write_total_data=786432) (object_list_request=24) (committer_magic_marker_put.failures=0) (object_put_request=12) (stream_write_block_uploads=6) (action_http_head_request=15) (action_http_head_request.failures=0) (store_exists_probe.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=6) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0));
minimums=((committer_materialize_file.failures.min=-1) (action_http_head_request.failures.min=-1) (op_glob_status.failures.min=-1) (object_put_request.min=25) (op_get_delegation_token.min=-1) (object_bulk_delete_request.min=6) (op_list_status.min=-1) (op_mkdirs.min=19) (op_xattr_get_named_map.min=-1) (op_list_status.failures.min=-1) (object_multipart_initiated.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_delete.min=30) (store_exists_probe.min=-1) (op_list_files.min=-1) (delegation_tokens_issued.failures.min=-1) (action_file_opened.min=7) (op_xattr_list.min=-1) (op_access.failures.min=-1) (committer_commit_job.min=-1) (op_rename.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (multipart_upload_list.min=-1) (op_copy_from_local_file.min=-1) (op_rename.failures.min=-1) (object_put_request.failures.min=-1) (object_list_request.failures.min=-1) (object_delete_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (delegation_tokens_issued.min=-1) (object_continue_list_request.min=-1) (op_get_file_checksum.failures.min=-1) (op_create.min=9) (op_abort.failures.min=-1) (committer_materialize_file.min=-1) (action_http_head_request.min=3) (multipart_upload_list.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_file_checksum.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_glob_status.min=-1) (op_is_file.min=-1) (object_multipart_aborted.min=-1) (op_get_content_summary.min=-1) (action_http_get_request.failures.min=0) (op_abort.min=-1) (object_delete_request.min=-1) (op_get_file_status.failures.min=-1) (op_create.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_directory.min=-1) (op_createfile.min=-1) (op_is_file.failures.min=-1) (action_http_get_request.min=10) (object_bulk_delete_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.min=-1) (op_get_content_summary.failures.min=-1) (op_exists.min=-1) (stream_read_remote_stream_drain.min=-1) (op_get_file_status.min=-1) (op_xattr_get_map.min=-1) (op_access.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_list_request.min=7) (op_is_directory.failures.min=-1) (op_exists.failures.min=-1) (op_list_files.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.failures.min=-1) (action_file_opened.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named.min=-1) (op_createfile.failures.min=-1));
maximums=((op_xattr_get_named.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_map.max=-1) (op_glob_status.max=-1) (object_multipart_aborted.max=-1) (object_delete_request.max=-1) (op_is_file.failures.max=-1) (committer_commit_job.max=-1) (object_continue_list_request.max=-1) (action_http_head_request.failures.max=-1) (op_is_directory.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_list_request.failures.max=-1) (multipart_upload_list.max=-1) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_createfile.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (stream_write_queue_duration.max=-1) (object_delete_request.failures.max=-1) (op_is_file.max=-1) (object_multipart_initiated.max=-1) (op_get_file_status.failures.max=-1) (op_abort.failures.max=-1) (action_http_head_request.max=18) (object_multipart_initiated.failures.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.failures.max=-1) (op_list_status.max=-1) (op_copy_from_local_file.max=-1) (op_exists.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_list_request.max=220) (object_put_request.max=63) (op_get_content_summary.max=-1) (stream_write_queue_duration.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_list.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (delegation_tokens_issued.max=-1) (op_rename.max=-1) (op_createfile.max=-1) (op_create.failures.max=-1) (action_http_get_request.failures.max=0) (op_delete.max=81) (op_mkdirs.max=322) (op_get_file_status.max=-1) (op_list_files.max=-1) (op_create.max=59) (op_mkdirs.failures.max=-1) (action_file_opened.max=8) (committer_materialize_file.failures.max=-1) (op_list_files.failures.max=-1) (object_bulk_delete_request.max=12) (committer_materialize_file.max=-1) (op_exists.failures.max=-1) (op_xattr_list.max=-1) (op_delete.failures.max=-1) (committer_commit_job.failures.max=-1) (op_access.failures.max=-1) (op_is_directory.failures.max=-1) (op_access.max=-1) (action_http_get_request.max=17) (committer_stage_file_upload.failures.max=-1));
means=((object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=12, sum=249, mean=20.7500)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=6, sum=118, mean=19.6667)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=6, sum=272, mean=45.3333)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=12, sum=101, mean=8.4167)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=15, sum=97, mean=6.4667)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=27, mean=13.5000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=6, sum=452, mean=75.3333)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=23, mean=7.6667)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=24, sum=461, mean=19.2083)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:12,458 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:12,458 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:12,458 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,459 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,459 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,460 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000041 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000041&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=78&ts=1731778032458
2024-11-16 17:27:12,467 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:12,468 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:12,468 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:12,468 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,469 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,469 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000041 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000041&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=78&ts=1731778032458
2024-11-16 17:27:12,473 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:12,473 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:12,474 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:12,474 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:12,475 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000041 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000041&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=78&ts=1731778032458
2024-11-16 17:27:12,481 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:12,481 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:12,482 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:27:12,482 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:12,483 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,484 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,484 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,485 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,485 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000042 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000042&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=78&ts=1731778032483
2024-11-16 17:27:12,494 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:12,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,494 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:12,495 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-508096993871063578.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:12,496 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-508096993871063578.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (stream_write_total_time=0) (op_abort=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (stream_write_total_data=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (op_hsync=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-508096993871063578.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,496 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:12,496 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:12,496 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-508096993871063578.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:12,496 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:12,497 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:12,497 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:12,497 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:12,497 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000042 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000042&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=79&ts=1731778032483
2024-11-16 17:27:12,522 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:12,522 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:12,522 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.025s
2024-11-16 17:27:12,522 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-508096993871063578.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:12,522 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-508096993871063578.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,522 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-508096993871063578.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,522 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:12,523 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:12,524 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (op_abort.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (committer_magic_marker_put=0) (op_hflush=0) (object_put_request=1) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (op_abort=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (stream_write_total_data=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=25));
maximums=((object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=25) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:12,524 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:12,525 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,525 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,525 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:12,525 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000043 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000043&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=78&ts=1731778032525
2024-11-16 17:27:12,529 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:12,529 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:12,529 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,529 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:12,529 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:12,530 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:12,533 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:12,533 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:12,533 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:27:12,534 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,534 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-65535&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000043&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=78&ts=1731778032525
2024-11-16 17:27:12,534 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,535 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,535 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:12,535 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000043&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=80&ts=1731778032525
2024-11-16 17:27:12,547 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:27:12,548 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:12,548 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,547 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.014s
2024-11-16 17:27:12,549 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:12,549 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:12,551 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:27:12,551 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:27:12,551 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:27:12,551 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7437 bytes
2024-11-16 17:27:12,551 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:12,551 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:12,551 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:12,552 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8747 bytes
2024-11-16 17:27:12,552 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:27:12,552 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:12,553 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_backward_operations=0) (stream_read_total_bytes=65686) (stream_read_prefetch_operations.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_exceptions=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=1) (stream_read_close_operations=1) (stream_read_seek_policy_changed=1) (stream_read_vectored_incoming_ranges=2) (stream_read_opened=1) (stream_read_vectored_operations=1) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_block_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_seek_operations=0) (stream_read_operations_incomplete=0) (stream_read_seek_forward_operations=0) (action_http_get_request=2) (stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_closed=1) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (action_executor_acquired=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_operations=1) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_block_read=0) (stream_read_bytes=350));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=1) (action_file_opened.min=4) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=13) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_http_get_request.max=13) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=26, mean=13.0000)));

2024-11-16 17:27:12,555 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:12,555 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,555 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,555 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=78&ts=1731778032555
2024-11-16 17:27:12,560 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,560 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,560 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=78&ts=1731778032555
2024-11-16 17:27:12,567 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:12,567 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:12,567 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:12,567 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:12,568 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:12,568 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:12,568 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:12,568 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:12,568 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:12,568 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:12,568 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:12,568 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:12,569 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:12,570 [s3a-transfer-fso-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:12,570 [s3a-transfer-fso-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,570 [s3a-transfer-fso-bucket-unbounded-pool2-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [81] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=81&ts=1731778032555
2024-11-16 17:27:12,576 [s3a-transfer-fso-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:12,576 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:27:12,576 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:12,576 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:12,576 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:12,577 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778032516; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:12,577 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:12,577 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:12,577 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:12,577 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:12,578 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:12,578 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:12,578 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:12,579 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:12,579 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,579 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,580 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:12,580 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,580 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=82&ts=1731778032555
2024-11-16 17:27:12,586 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:12,586 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:27:12,586 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:27:12,586 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:12,587 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:12,587 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,587 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,588 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:12,588 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,588 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000044&t0=78&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=82&ts=1731778032555
2024-11-16 17:27:12,593 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:12,593 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:12,593 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:27:12,594 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.016s
2024-11-16 17:27:12,594 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.016s
2024-11-16 17:27:12,594 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.026s
2024-11-16 17:27:12,594 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:12,594 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:12,595 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:12,606 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 7, active threads = 0, queued tasks = 0, completed tasks = 7], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_materialize_file=0) (committer_commit_job=0) (committer_stage_file_upload.failures=0) (stream_read_bytes_backwards_on_seek=0) (object_put_request.failures=0) (op_delete.failures=0) (store_io_retry=0) (stream_read_remote_stream_drain=1) (stream_read_remote_stream_drain.failures=0) (op_exists=0) (stream_read_vectored_combined_ranges=5) (op_xattr_list.failures=0) (committer_commit_job.failures=0) (op_is_file=0) (op_get_content_summary=0) (object_put_request_completed=14) (stream_write_block_uploads=7) (op_glob_status=0) (committer_bytes_committed=0) (stream_write_queue_duration=0) (op_is_directory=0) (stream_read_operations_incomplete=0) (op_list_files=0) (op_create=7) (op_rename.failures=0) (stream_read_seek_policy_changed=5) (object_metadata_request=18) (op_get_delegation_token=0) (stream_write_exceptions_completing_upload=0) (store_io_throttled=0) (action_http_head_request=18) (stream_read_remote_stream_aborted=0) (op_mkdirs.failures=0) (committer_load_single_pending_file=0) (op_access=0) (action_http_get_request=5) (op_is_file.failures=0) (stream_write_block_uploads_aborted=0) (object_continue_list_request=0) (op_list_status=0) (stream_read_closed=1) (object_list_request=28) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=65986) (delegation_tokens_issued=0) (action_http_get_request.failures=1) (committer_stage_file_upload=0) (committer_tasks_completed=0) (op_get_file_status.failures=0) (ignored_errors=0) (committer_magic_files_created=0) (multipart_upload_part_put_bytes=0) (audit_span_creation=26) (audit_request_execution=78) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (op_get_file_status=0) (committer_commits_aborted=0) (stream_write_exceptions=0) (stream_read_bytes=650) (op_xattr_get_named=0) (stream_read_vectored_operations=5) (op_copy_from_local_file.failures=0) (committer_commits_created=0) (files_delete_rejected=0) (op_abort=0) (stream_read_vectored_read_bytes_discarded=30) (stream_read_seek_backward_operations=0) (op_get_delegation_token.failures=0) (stream_read_operations=1) (op_xattr_get_map=0) (action_file_opened=4) (op_mkdirs=7) (fake_directories_created=0) (stream_read_unbuffered=1) (committer_bytes_uploaded=0) (multipart_upload_completed=0) (fake_directories_deleted=7) (committer_magic_marker_put=0) (op_copy_from_local_file=0) (directories_deleted=0) (object_multipart_aborted=0) (op_rename=0) (action_executor_acquired=0) (delegation_tokens_issued.failures=0) (committer_commits.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_glob_status.failures=0) (op_delete=7) (committer_materialize_file.failures=0) (multipart_instantiated=0) (stream_write_total_data=917504) (op_get_file_checksum=0) (stream_read_seek_forward_operations=0) (committer_tasks_failed=0) (object_bulk_delete_request=14) (object_copy_requests=0) (stream_read_close_operations=4) (object_multipart_initiated=0) (action_file_opened.failures=0) (op_list_files.failures=0) (op_is_directory.failures=0) (committer_magic_marker_put.failures=0) (action_http_head_request.failures=0) (multipart_upload_started=0) (op_xattr_list=0) (op_list_status.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_aborted=0) (op_get_content_summary.failures=0) (files_copied_bytes=0) (store_exists_probe=0) (committer_jobs_completed=0) (op_xattr_get_named_map.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_openfile=0) (files_copied=0) (files_created=7) (op_get_file_checksum.failures=0) (store_exists_probe.failures=0) (multipart_upload_list.failures=0) (op_exists.failures=0) (op_xattr_get_map.failures=0) (store_io_request=78) (object_list_request.failures=0) (op_list_located_status=0) (op_access.failures=0) (committer_jobs_failed=0) (stream_write_bytes=458752) (stream_write_queue_duration.failures=0) (object_bulk_delete_request.failures=0) (op_create.failures=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (stream_aborted=0) (object_delete_request.failures=0) (stream_read_vectored_incoming_ranges=10) (object_put_request=14) (committer_load_single_pending_file.failures=0) (op_xattr_get_named_map=0) (op_createfile.failures=0) (stream_write_total_time=0) (multipart_upload_abort_under_path_invoked=0) (op_open=4) (audit_failure=0) (op_createfile=0) (committer_commits_reverted=0) (committer_commits_completed=0) (op_create_non_recursive=0) (stream_read_version_mismatches=0) (stream_read_opened=1) (directories_created=7) (op_xattr_get_named.failures=0) (stream_read_exceptions=0) (object_select_requests=0) (stream_read_bytes_discarded_in_close=65336) (object_delete_request=0) (stream_read_seek_operations=0) (op_hflush=0) (op_hsync=0) (stream_read_fully_operations=0) (files_deleted=7) (multipart_upload_list=0) (object_delete_objects=14) (stream_write_block_uploads_committed=0) (object_multipart_aborted.failures=0) (object_put_bytes=458752) (object_continue_list_request.failures=0) (audit_access_check_failure=0));
gauges=((client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=7) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((committer_commit_job.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_map.min=-1) (op_is_directory.min=-1) (op_is_file.min=-1) (action_http_head_request.min=3) (op_abort.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_get_request.failures.min=0) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (stream_write_queue_duration.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.min=-1) (action_http_head_request.failures.min=-1) (op_exists.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_glob_status.min=-1) (op_get_file_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_list_request.min=6) (op_delete.failures.min=-1) (committer_commit_job.min=-1) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_rename.min=-1) (object_multipart_aborted.min=-1) (op_list_files.min=-1) (op_create.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_bulk_delete_request.min=5) (committer_materialize_file.failures.min=-1) (op_glob_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.failures.min=-1) (op_get_delegation_token.min=-1) (op_create.min=9) (op_list_status.failures.min=-1) (multipart_upload_list.min=-1) (action_http_get_request.min=13) (op_xattr_list.min=-1) (store_exists_probe.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_status.min=-1) (op_access.failures.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_drain.min=1) (op_rename.failures.min=-1) (op_mkdirs.min=19) (op_list_files.failures.min=-1) (object_put_request.min=25) (op_access.min=-1) (op_exists.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_named.min=-1) (multipart_upload_list.failures.min=-1) (object_put_request.failures.min=-1) (committer_materialize_file.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_file.failures.min=-1) (store_exists_probe.min=-1) (op_get_file_checksum.min=-1) (object_multipart_initiated.min=-1) (object_delete_request.failures.min=-1) (op_delete.min=26) (object_multipart_initiated.failures.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_content_summary.failures.min=-1) (op_createfile.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.failures.min=-1) (action_file_opened.min=4) (op_get_content_summary.min=-1) (op_xattr_get_map.failures.min=-1) (op_createfile.failures.min=-1));
maximums=((op_abort.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (op_delete.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_status.failures.max=-1) (op_mkdirs.max=322) (op_create.max=59) (op_get_file_checksum.max=-1) (op_copy_from_local_file.max=-1) (action_file_opened.failures.max=-1) (op_xattr_list.max=-1) (op_is_directory.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_status.max=-1) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_map.max=-1) (op_glob_status.failures.max=-1) (op_is_file.max=-1) (multipart_upload_list.max=-1) (object_bulk_delete_request.max=12) (stream_write_queue_duration.max=-1) (committer_commit_job.max=-1) (op_createfile.failures.max=-1) (op_list_files.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.max=1) (object_list_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.max=-1) (action_http_get_request.failures.max=0) (object_multipart_initiated.max=-1) (object_continue_list_request.max=-1) (op_list_status.max=-1) (store_exists_probe.failures.max=-1) (op_is_file.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_list_files.failures.max=-1) (op_create.failures.max=-1) (object_delete_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_directory.failures.max=-1) (op_get_content_summary.failures.max=-1) (store_exists_probe.max=-1) (action_http_get_request.max=17) (object_bulk_delete_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_checksum.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.max=8) (op_xattr_get_map.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_named.max=-1) (op_rename.max=-1) (object_continue_list_request.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.failures.max=-1) (op_delete.max=81) (action_http_head_request.failures.max=-1) (action_http_head_request.max=18) (op_access.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_commit_job.failures.max=-1) (object_list_request.max=220) (object_delete_request.max=-1) (op_mkdirs.failures.max=-1) (object_put_request.max=63) (op_rename.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_access.max=-1) (op_list_status.failures.max=-1) (op_exists.max=-1) (op_get_content_summary.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.failures.max=-1));
means=((op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=53, mean=13.2500)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=7, sum=130, mean=18.5714)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=14, sum=280, mean=20.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=4, sum=27, mean=6.7500)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=18, sum=110, mean=6.1111)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=28, sum=490, mean=17.5000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=7, sum=477, mean=68.1429)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (object_bulk_delete_request.mean=(samples=14, sum=111, mean=7.9286)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=7, sum=298, mean=42.5714)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:12,606 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:12,606 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:12,606 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,606 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,607 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,607 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000045 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000045&t0=83&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=83&ts=1731778032606
2024-11-16 17:27:12,613 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:12,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:12,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:12,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,614 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000045 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000045&t0=83&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=83&ts=1731778032606
2024-11-16 17:27:12,617 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:12,617 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:12,617 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:12,617 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:12,617 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000045 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000045&t0=83&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=83&ts=1731778032606
2024-11-16 17:27:12,624 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:12,624 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:12,624 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.007s
2024-11-16 17:27:12,624 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:12,624 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,624 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,625 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,625 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,625 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000046 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000046&t0=83&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=83&ts=1731778032624
2024-11-16 17:27:12,631 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:12,631 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,631 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:12,632 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18118213811450096828.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:12,632 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18118213811450096828.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=0) (object_put_request.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (op_hsync=0) (op_abort=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1));
maximums=((object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18118213811450096828.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,632 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:12,633 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:12,633 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18118213811450096828.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:12,633 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:12,633 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:12,633 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:12,633 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:12,634 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000046 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000046&t0=83&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=84&ts=1731778032624
2024-11-16 17:27:12,647 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:12,647 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:12,647 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.014s
2024-11-16 17:27:12,648 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18118213811450096828.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:12,648 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18118213811450096828.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,648 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18118213811450096828.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,648 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:12,648 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:12,650 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (op_abort.failures=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (object_put_request=1) (op_abort=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (op_hflush=0) (stream_write_block_uploads=1) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_put_request.min=14));
maximums=((object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=14) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=14, mean=14.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:12,650 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:12,651 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,651 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,652 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:12,652 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [85] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000047 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000047/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000047&t0=85&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=85&ts=1731778032651
2024-11-16 17:27:12,655 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:12,655 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:12,655 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,656 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:27:12,657 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_closed=0) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations_incomplete=0) (stream_aborted=0) (stream_read_seek_operations=0) (stream_read_unbuffered=0) (stream_read_block_read=0) (stream_read_vectored_operations=0) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_operations=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (action_http_get_request=0) (stream_read_total_bytes=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_seek_policy_changed=1) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (action_executor_acquired=0) (stream_read_close_operations=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=4) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=4) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:12,658 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:12,658 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,658 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,658 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048&t0=83&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=83&ts=1731778032658
2024-11-16 17:27:12,661 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,661 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,661 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048&t0=83&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=83&ts=1731778032658
2024-11-16 17:27:12,667 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:12,667 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:12,667 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:12,667 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:12,667 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:12,667 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:12,667 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:12,667 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:12,668 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:12,668 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:12,668 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:12,668 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:12,669 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:12,669 [s3a-transfer-fso-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:12,670 [s3a-transfer-fso-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,670 [s3a-transfer-fso-bucket-unbounded-pool2-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [86] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048&t0=83&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=86&ts=1731778032658
2024-11-16 17:27:12,675 [s3a-transfer-fso-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:12,676 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:27:12,676 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:12,676 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:12,676 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:12,677 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778032645; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:12,677 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:12,677 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:12,677 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:12,678 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:12,678 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:12,678 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:12,678 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:12,679 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:12,679 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,679 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,679 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:12,679 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,680 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048&t0=83&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=87&ts=1731778032658
2024-11-16 17:27:12,685 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:12,685 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:12,686 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:27:12,686 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:12,686 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:12,686 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,686 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,686 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:12,686 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,687 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000048&t0=83&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=87&ts=1731778032658
2024-11-16 17:27:12,692 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:12,692 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:12,692 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:27:12,692 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.014s
2024-11-16 17:27:12,693 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.014s
2024-11-16 17:27:12,693 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.025s
2024-11-16 17:27:12,693 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:12,693 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:12,694 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:12,705 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_list=0) (stream_read_vectored_read_bytes_discarded=30) (stream_read_seek_operations=0) (multipart_upload_list.failures=0) (stream_write_queue_duration.failures=0) (op_mkdirs.failures=0) (op_list_located_status=0) (op_hsync=0) (action_executor_acquired.failures=0) (op_get_content_summary=0) (stream_read_fully_operations=0) (op_rename=0) (op_is_directory.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_exceptions=0) (multipart_upload_abort_under_path_invoked=0) (op_abort=0) (op_xattr_get_named_map=0) (stream_read_bytes=650) (object_continue_list_request.failures=0) (op_list_status=0) (op_openfile=0) (files_created=8) (multipart_upload_aborted=0) (object_delete_request=0) (action_http_get_request=5) (op_glob_status=0) (stream_read_remote_stream_aborted=0) (object_put_request_completed=16) (op_delete=8) (stream_read_remote_stream_drain=1) (files_copied=0) (audit_span_creation=30) (audit_failure=0) (op_xattr_get_map=0) (op_xattr_list=0) (fake_directories_created=0) (committer_magic_files_created=0) (stream_write_bytes=524288) (committer_stage_file_upload=0) (ignored_errors=0) (committer_materialize_file.failures=0) (committer_commit_job.failures=0) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=10) (committer_load_single_pending_file=0) (multipart_instantiated=0) (op_get_delegation_token.failures=0) (stream_read_version_mismatches=0) (committer_commits_reverted=0) (op_copy_from_local_file=0) (op_create=8) (committer_commit_job=0) (object_put_bytes=524288) (multipart_upload_completed=0) (committer_stage_file_upload.failures=0) (op_rename.failures=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=8) (store_io_throttled=0) (op_mkdirs=8) (stream_read_unbuffered=1) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (op_get_file_checksum.failures=0) (multipart_upload_part_put=0) (stream_read_operations_incomplete=0) (store_exists_probe=0) (audit_request_execution=89) (stream_read_closed=1) (op_get_delegation_token=0) (committer_jobs_completed=0) (op_xattr_list.failures=0) (op_glob_status.failures=0) (committer_load_single_pending_file.failures=0) (delegation_tokens_issued.failures=0) (committer_commits_completed=0) (op_is_directory=0) (stream_aborted=0) (object_bulk_delete_request.failures=0) (action_file_opened=5) (store_io_request=89) (stream_write_total_time=0) (object_copy_requests=0) (op_xattr_get_map.failures=0) (object_metadata_request=21) (object_continue_list_request=0) (op_createfile.failures=0) (committer_jobs_failed=0) (op_list_status.failures=0) (action_http_head_request.failures=0) (stream_read_opened=1) (op_exists.failures=0) (stream_write_total_data=1048576) (op_get_file_status=0) (stream_read_remote_stream_aborted.failures=0) (op_open=5) (audit_access_check_failure=0) (multipart_upload_started=0) (op_list_files=0) (action_http_head_request=21) (op_xattr_get_named.failures=0) (stream_write_queue_duration=0) (op_get_file_status.failures=0) (committer_materialize_file=0) (op_delete.failures=0) (committer_bytes_committed=0) (op_createfile=0) (stream_write_block_uploads_aborted=0) (object_select_requests=0) (directories_deleted=0) (committer_tasks_failed=0) (files_copied_bytes=0) (stream_read_vectored_operations=5) (object_list_request=32) (op_is_file=0) (op_is_file.failures=0) (op_abort.failures=0) (stream_write_block_uploads_committed=0) (stream_read_remote_stream_drain.failures=0) (op_create.failures=0) (action_http_get_request.failures=1) (delegation_tokens_issued=0) (committer_magic_marker_put.failures=0) (stream_read_bytes_discarded_in_abort=0) (files_deleted=8) (object_put_request.failures=0) (files_delete_rejected=0) (fake_directories_deleted=8) (committer_bytes_uploaded=0) (store_io_retry=0) (op_create_non_recursive=0) (object_put_request=16) (stream_read_total_bytes=65986) (stream_read_seek_backward_operations=0) (store_exists_probe.failures=0) (op_access=0) (committer_magic_marker_put=0) (op_get_file_checksum=0) (committer_tasks_completed=0) (stream_read_close_operations=5) (directories_created=8) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named_map.failures=0) (stream_read_vectored_combined_ranges=5) (object_list_request.failures=0) (op_hflush=0) (committer_commits_created=0) (op_xattr_get_named=0) (object_multipart_initiated=0) (op_access.failures=0) (object_delete_request.failures=0) (stream_read_seek_forward_operations=0) (op_get_content_summary.failures=0) (action_executor_acquired=0) (object_bulk_delete_request=16) (multipart_upload_part_put_bytes=0) (committer_commits_aborted=0) (stream_read_bytes_discarded_in_close=65336) (op_copy_from_local_file.failures=0) (stream_read_seek_policy_changed=6) (op_list_files.failures=0) (op_exists=0) (object_delete_objects=16) (stream_read_seek_bytes_skipped=0) (committer_commits.failures=0) (stream_read_operations=1) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_write_block_uploads_pending=8) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (client_side_encryption_enabled=0));
minimums=((op_list_files.failures.min=-1) (op_rename.min=-1) (action_file_opened.failures.min=-1) (op_get_file_checksum.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.failures.min=-1) (action_file_opened.min=4) (op_get_content_summary.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.min=-1) (op_exists.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named.min=-1) (op_abort.failures.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named.failures.min=-1) (object_delete_request.failures.min=-1) (stream_write_queue_duration.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_map.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_file_checksum.failures.min=-1) (op_abort.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_magic_marker_put.min=-1) (delegation_tokens_issued.failures.min=-1) (op_delete.min=26) (op_xattr_list.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=13) (committer_magic_marker_put.failures.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.min=5) (object_put_request.min=14) (op_create.min=8) (op_is_file.min=-1) (multipart_upload_list.min=-1) (op_list_status.failures.min=-1) (object_delete_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_map.min=-1) (committer_commit_job.min=-1) (op_delete.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_continue_list_request.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.failures.min=-1) (object_bulk_delete_request.min=5) (object_put_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_status.min=-1) (op_glob_status.failures.min=-1) (op_mkdirs.min=18) (op_rename.failures.min=-1) (op_list_status.min=-1) (committer_load_single_pending_file.min=-1) (action_executor_acquired.min=-1) (op_get_delegation_token.failures.min=-1) (op_exists.min=-1) (op_is_directory.failures.min=-1) (op_create.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.failures.min=-1) (op_createfile.min=-1) (store_exists_probe.min=-1) (committer_materialize_file.min=-1) (committer_commit_job.failures.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.min=-1) (op_is_directory.min=-1) (object_multipart_aborted.failures.min=-1) (op_createfile.failures.min=-1) (op_list_files.min=-1) (op_get_delegation_token.min=-1) (op_get_file_status.failures.min=-1) (action_http_head_request.min=3) (action_http_get_request.failures.min=0) (op_access.min=-1));
maximums=((op_delete.max=81) (op_get_content_summary.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_create.max=59) (op_exists.max=-1) (delegation_tokens_issued.max=-1) (object_delete_request.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_map.max=-1) (action_http_get_request.failures.max=0) (op_abort.failures.max=-1) (op_access.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_list.failures.max=-1) (op_access.max=-1) (multipart_upload_list.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_file.max=-1) (op_get_file_checksum.max=-1) (op_get_file_status.max=-1) (stream_write_queue_duration.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.max=8) (object_multipart_aborted.max=-1) (op_mkdirs.max=322) (op_createfile.failures.max=-1) (op_exists.failures.max=-1) (op_list_status.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_commit_job.max=-1) (op_is_file.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_continue_list_request.max=-1) (store_exists_probe.max=-1) (store_exists_probe.failures.max=-1) (object_list_request.max=220) (action_http_get_request.max=17) (op_glob_status.failures.max=-1) (op_copy_from_local_file.max=-1) (op_list_files.max=-1) (committer_load_single_pending_file.max=-1) (op_rename.max=-1) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.max=12) (object_multipart_initiated.max=-1) (op_xattr_list.max=-1) (action_http_head_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.max=-1) (object_continue_list_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_drain.max=1) (action_executor_acquired.failures.max=-1) (multipart_upload_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_stage_file_upload.max=-1) (committer_stage_file_upload.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_put_request.max=63) (op_createfile.max=-1) (object_delete_request.max=-1) (op_list_files.failures.max=-1) (action_http_head_request.max=18) (object_put_request.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_glob_status.max=-1));
means=((store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=53, mean=13.2500)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=32, sum=513, mean=16.0313)) (op_delete.mean=(samples=8, sum=324, mean=40.5000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=21, sum=119, mean=5.6667)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=5, sum=31, mean=6.2000)) (object_bulk_delete_request.mean=(samples=16, sum=122, mean=7.6250)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=8, sum=138, mean=17.2500)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=8, sum=495, mean=61.8750)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=16, sum=300, mean=18.7500)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:12,706 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:12,706 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:12,706 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,706 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,706 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,706 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000049 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000049&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=88&ts=1731778032706
2024-11-16 17:27:12,712 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:12,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:12,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:12,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,713 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000049 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000049&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=88&ts=1731778032706
2024-11-16 17:27:12,715 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:12,715 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:12,715 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:12,716 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:12,716 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000049 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000049&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=88&ts=1731778032706
2024-11-16 17:27:12,721 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:12,721 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:12,721 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:12,721 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:12,721 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,722 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,722 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,722 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,722 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000050 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000050&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=88&ts=1731778032721
2024-11-16 17:27:12,728 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:12,728 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,729 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:12,729 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6146629397076847487.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:12,730 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6146629397076847487.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted=0) (multipart_upload_completed=0) (object_put_request.failures=0) (op_abort=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (object_put_request=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (action_executor_acquired=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (op_hflush=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (op_abort.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_put_request.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6146629397076847487.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,730 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:12,730 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:12,730 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6146629397076847487.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:12,731 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:12,731 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:12,731 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:12,731 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:12,731 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000050 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000050&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=89&ts=1731778032721
2024-11-16 17:27:12,749 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:12,749 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:12,749 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.018s
2024-11-16 17:27:12,749 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6146629397076847487.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:12,749 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6146629397076847487.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,750 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6146629397076847487.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,750 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:12,750 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:12,751 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (stream_write_total_time=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (op_abort.failures=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (op_hsync=0) (op_abort=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=18));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_put_request.max=18) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=18, mean=18.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:12,751 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:12,752 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,752 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,752 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:12,752 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000051 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000051&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=88&ts=1731778032752
2024-11-16 17:27:12,756 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:12,757 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:12,757 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,757 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:27:12,757 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:12,757 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:27:12,765 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:27:12,765 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,766 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,766 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:12,766 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000051 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-999&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000051&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=90&ts=1731778032752
2024-11-16 17:27:12,774 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:27:12,776 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_total_bytes=1000) (stream_read_bytes=1000) (action_file_opened.failures=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (action_http_get_request=1) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_block_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_closed=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_policy_changed=1) (stream_read_close_operations=1) (stream_read_seek_bytes_skipped=0) (stream_read_opened=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_incoming_ranges=10) (stream_read_block_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_prefetch_operations=0) (stream_read_operations=0) (stream_read_vectored_operations=1) (stream_read_block_acquire_read.failures=0) (stream_read_seek_forward_operations=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=8) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=8) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=5) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=8, mean=8.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:12,777 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:12,778 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,778 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,778 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=88&ts=1731778032777
2024-11-16 17:27:12,781 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,783 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,783 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,783 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=88&ts=1731778032777
2024-11-16 17:27:12,790 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:12,791 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:12,791 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:12,791 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:12,791 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:12,791 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:12,791 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:12,791 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:12,791 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:12,792 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:12,792 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:12,792 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:12,792 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:12,792 [s3a-transfer-fso-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:12,793 [s3a-transfer-fso-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,793 [s3a-transfer-fso-bucket-unbounded-pool2-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [91] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=91&ts=1731778032777
2024-11-16 17:27:12,801 [s3a-transfer-fso-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:12,801 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:27:12,802 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:12,802 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:12,802 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:12,802 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778032746; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:12,802 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:12,802 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:12,802 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:12,803 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:12,804 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:12,804 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:12,804 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:12,804 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:12,804 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,805 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,805 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:12,805 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,805 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=92&ts=1731778032777
2024-11-16 17:27:12,813 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:27:12,813 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:27:12,813 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:27:12,813 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:12,814 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:12,814 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,814 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,814 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:12,814 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,814 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000052&t0=88&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=92&ts=1731778032777
2024-11-16 17:27:12,820 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:12,821 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:27:12,821 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:27:12,821 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:27:12,821 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:27:12,821 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.030s
2024-11-16 17:27:12,821 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:12,821 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:12,826 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:12,841 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 10, active threads = 0, queued tasks = 0, completed tasks = 10], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_access.failures=0) (committer_tasks_completed=0) (stream_write_total_data=1179648) (multipart_instantiated=0) (stream_read_unbuffered=1) (stream_read_remote_stream_aborted=0) (object_delete_objects=18) (stream_read_fully_operations=0) (committer_commit_job=0) (stream_read_version_mismatches=0) (object_copy_requests=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (op_hflush=0) (object_delete_request=0) (op_is_file.failures=0) (stream_read_operations_incomplete=0) (committer_commits_completed=0) (multipart_upload_part_put=0) (committer_bytes_uploaded=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=30) (op_create.failures=0) (stream_read_vectored_operations=6) (stream_read_remote_stream_aborted.failures=0) (op_rename.failures=0) (op_get_content_summary.failures=0) (committer_commits_reverted=0) (stream_read_bytes=1650) (op_is_directory=0) (audit_span_creation=34) (stream_read_seek_backward_operations=0) (stream_read_total_bytes=66986) (op_get_file_checksum=0) (stream_read_seek_bytes_discarded=0) (op_glob_status.failures=0) (object_put_request=18) (committer_commit_job.failures=0) (action_http_get_request=6) (op_xattr_get_named=0) (committer_magic_files_created=0) (op_exists=0) (action_http_get_request.failures=1) (fake_directories_deleted=9) (delegation_tokens_issued=0) (stream_read_seek_policy_changed=7) (op_xattr_get_map=0) (files_deleted=9) (object_multipart_aborted=0) (stream_write_queue_duration.failures=0) (op_create_non_recursive=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_opened=1) (op_hsync=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (op_get_file_status=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired.failures=0) (object_bulk_delete_request.failures=0) (op_abort.failures=0) (directories_created=9) (op_is_file=0) (op_is_directory.failures=0) (audit_failure=0) (store_io_request=101) (object_put_request_completed=18) (files_delete_rejected=0) (stream_write_queue_duration=0) (op_list_status.failures=0) (committer_commits_aborted=0) (committer_load_single_pending_file.failures=0) (op_list_status=0) (op_xattr_get_named_map.failures=0) (op_rename=0) (stream_write_bytes=589824) (object_multipart_initiated=0) (op_get_file_status.failures=0) (stream_write_total_time=0) (stream_read_remote_stream_drain=1) (store_exists_probe.failures=0) (object_continue_list_request.failures=0) (delegation_tokens_issued.failures=0) (stream_read_vectored_combined_ranges=6) (stream_write_exceptions=0) (audit_request_execution=101) (op_copy_from_local_file=0) (committer_tasks_failed=0) (store_io_retry=0) (object_metadata_request=24) (op_list_files=0) (stream_write_block_uploads=9) (files_created=9) (stream_read_close_operations=6) (action_file_opened.failures=0) (op_list_files.failures=0) (op_createfile=0) (fake_directories_created=0) (multipart_upload_list.failures=0) (committer_materialize_file=0) (stream_read_vectored_incoming_ranges=20) (op_xattr_get_named_map=0) (multipart_upload_started=0) (stream_read_operations=1) (multipart_upload_list=0) (store_io_throttled=0) (op_abort=0) (committer_stage_file_upload=0) (files_copied_bytes=0) (committer_jobs_completed=0) (stream_read_remote_stream_drain.failures=0) (audit_access_check_failure=0) (object_delete_request.failures=0) (op_mkdirs.failures=0) (object_continue_list_request=0) (action_executor_acquired=0) (multipart_upload_part_put_bytes=0) (committer_bytes_committed=0) (committer_magic_marker_put=0) (committer_materialize_file.failures=0) (stream_read_closed=1) (op_exists.failures=0) (op_create=9) (committer_magic_marker_put.failures=0) (op_access=0) (multipart_upload_abort_under_path_invoked=0) (op_createfile.failures=0) (store_exists_probe=0) (action_http_head_request=24) (op_xattr_get_named.failures=0) (stream_read_exceptions=0) (op_openfile=0) (object_list_request.failures=0) (op_xattr_list=0) (directories_deleted=0) (object_put_bytes=589824) (stream_read_bytes_discarded_in_close=65336) (op_delete.failures=0) (op_open=6) (files_copied=0) (op_xattr_get_map.failures=0) (ignored_errors=0) (committer_commits_created=0) (op_get_delegation_token=0) (stream_aborted=0) (op_get_delegation_token.failures=0) (object_select_requests=0) (op_mkdirs=9) (action_file_opened=6) (op_copy_from_local_file.failures=0) (op_xattr_list.failures=0) (committer_stage_file_upload.failures=0) (committer_commits.failures=0) (object_list_request=36) (stream_write_block_uploads_aborted=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_forward_operations=0) (object_bulk_delete_request=18) (op_glob_status=0) (op_list_located_status=0) (committer_load_single_pending_file=0) (multipart_upload_aborted=0) (committer_jobs_failed=0) (op_get_file_checksum.failures=0) (action_http_head_request.failures=0) (stream_read_seek_operations=0) (op_get_content_summary=0) (stream_write_block_uploads_committed=0) (op_delete=9));
gauges=((stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_pending=9) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0));
minimums=((op_abort.failures.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_checksum.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_status.min=-1) (op_rename.failures.min=-1) (op_is_file.failures.min=-1) (op_exists.min=-1) (object_multipart_aborted.min=-1) (object_continue_list_request.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_map.min=-1) (delegation_tokens_issued.min=-1) (op_is_file.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_mkdirs.min=15) (op_get_file_status.failures.min=-1) (op_glob_status.failures.min=-1) (action_executor_acquired.min=-1) (op_rename.min=-1) (op_xattr_list.min=-1) (op_mkdirs.failures.min=-1) (object_continue_list_request.min=-1) (object_delete_request.failures.min=-1) (op_createfile.min=-1) (op_delete.min=26) (committer_commit_job.min=-1) (object_bulk_delete_request.min=5) (object_multipart_aborted.failures.min=-1) (op_xattr_list.failures.min=-1) (action_http_get_request.min=8) (stream_read_remote_stream_drain.min=1) (store_exists_probe.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.min=-1) (object_list_request.min=5) (op_access.min=-1) (op_list_status.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_create.min=8) (committer_stage_file_upload.failures.min=-1) (committer_stage_file_upload.min=-1) (multipart_upload_list.min=-1) (op_copy_from_local_file.min=-1) (action_file_opened.min=5) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_materialize_file.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_files.min=-1) (object_list_request.failures.min=-1) (object_put_request.min=18) (object_delete_request.min=-1) (op_list_files.failures.min=-1) (op_list_status.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_http_get_request.failures.min=0) (multipart_upload_list.failures.min=-1) (op_glob_status.min=-1) (action_file_opened.failures.min=-1) (store_exists_probe.min=-1) (op_get_content_summary.min=-1) (committer_materialize_file.min=-1) (action_executor_acquired.failures.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_abort.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_delete.failures.min=-1) (op_create.failures.min=-1) (action_http_head_request.min=3));
maximums=((multipart_upload_list.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.failures.max=-1) (op_create.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_drain.max=1) (object_multipart_aborted.failures.max=-1) (op_mkdirs.max=322) (object_multipart_initiated.failures.max=-1) (object_list_request.max=220) (action_http_head_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_rename.failures.max=-1) (action_file_opened.max=8) (op_exists.max=-1) (op_mkdirs.failures.max=-1) (op_list_files.failures.max=-1) (action_file_opened.failures.max=-1) (op_glob_status.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_access.max=-1) (object_multipart_aborted.max=-1) (committer_materialize_file.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.max=18) (object_bulk_delete_request.max=12) (op_createfile.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_abort.failures.max=-1) (op_copy_from_local_file.max=-1) (object_delete_request.max=-1) (object_continue_list_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_get_request.failures.max=0) (op_delete.max=81) (delegation_tokens_issued.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_delegation_token.failures.max=-1) (store_exists_probe.failures.max=-1) (op_rename.max=-1) (op_xattr_get_map.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_file.failures.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.max=-1) (action_http_get_request.max=17) (action_executor_acquired.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_list_files.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_commit_job.max=-1) (op_is_directory.failures.max=-1) (object_put_request.max=63) (op_xattr_get_named.max=-1) (op_is_directory.max=-1) (op_access.failures.max=-1) (op_get_file_checksum.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_map.max=-1) (op_delete.failures.max=-1) (op_get_delegation_token.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_abort.max=-1) (object_delete_request.failures.max=-1) (store_exists_probe.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.max=-1) (object_continue_list_request.max=-1) (op_list_status.failures.max=-1) (op_is_file.max=-1) (object_put_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_createfile.failures.max=-1) (op_create.max=59));
means=((committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=61, mean=12.2000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=9, sum=510, mean=56.6667)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=18, sum=136, mean=7.5556)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=9, sum=354, mean=39.3333)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=6, sum=36, mean=6.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=9, sum=146, mean=16.2222)) (object_list_request.mean=(samples=36, sum=540, mean=15.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=18, sum=323, mean=17.9444)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=24, sum=131, mean=5.4583)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:12,842 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:12,842 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:12,843 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,843 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,843 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,844 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000053 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000053&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=93&ts=1731778032842
2024-11-16 17:27:12,852 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:12,852 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:12,852 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:12,852 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,853 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,853 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000053 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000053&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=93&ts=1731778032842
2024-11-16 17:27:12,856 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:12,856 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:12,856 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:12,856 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:12,856 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000053 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000053&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=93&ts=1731778032842
2024-11-16 17:27:12,861 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:12,861 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:12,861 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:12,861 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:12,862 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,862 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,862 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,862 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,862 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000054 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000054&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=93&ts=1731778032861
2024-11-16 17:27:12,867 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:12,867 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,868 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:12,868 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1824130584191966618.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:12,869 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1824130584191966618.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (op_hflush=0) (action_executor_acquired.failures=0) (op_abort=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (op_abort.failures=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (op_hsync=0) (stream_write_bytes=65536) (stream_write_total_data=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1824130584191966618.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,869 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:12,869 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:12,869 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1824130584191966618.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:12,869 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:12,870 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:12,870 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:12,870 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:12,870 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000054 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000054&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=94&ts=1731778032861
2024-11-16 17:27:12,890 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:12,890 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:12,891 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.021s
2024-11-16 17:27:12,891 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1824130584191966618.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:12,891 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1824130584191966618.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,891 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1824130584191966618.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:12,891 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:12,891 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:12,892 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_queue_duration=0) (op_abort=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (op_hflush=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (object_put_request=1) (op_hsync=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=20) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=20) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=20, mean=20.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:12,893 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:12,894 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:12,894 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:12,894 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:12,894 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000055 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000055/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000055&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=93&ts=1731778032893
2024-11-16 17:27:12,898 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:12,898 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778032000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:12,899 [s3a-transfer-fso-bucket-unbounded-pool2-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:12,899 [s3a-transfer-fso-bucket-unbounded-pool2-t11] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,900 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:12,901 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:12,901 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:27:12,902 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,902 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,902 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:12,903 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,903 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=1947-2046&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000056&t0=95&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=96&ts=1731778032899
2024-11-16 17:27:12,903 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,903 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:12,903 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=8192-14435&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000056&t0=95&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=97&ts=1731778032899
2024-11-16 17:27:12,904 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:12,905 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,910 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:12,912 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:12,912 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=40960-41983&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000056&t0=95&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=98&ts=1731778032899
2024-11-16 17:27:12,914 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:27:12,914 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,915 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:27:12,916 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:27:12,916 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:27:12,916 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,922 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:27:12,923 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:12,925 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request=3) (stream_read_operations=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=1424) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_closed=0) (action_file_opened.failures=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=3) (stream_read_total_bytes=1424) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_version_mismatches=0) (stream_read_block_read=0) (stream_read_exceptions=0) (stream_read_vectored_incoming_ranges=5) (action_file_opened=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_fully_operations=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations=0) (stream_read_opened=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_prefetch_operations.min=-1) (action_http_get_request.min=10) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=0) (stream_read_prefetch_operations.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=12) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=34, mean=11.3333)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:12,928 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:12,928 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:12,928 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:12,928 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=93&ts=1731778032928
2024-11-16 17:27:12,932 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:12,932 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,932 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=93&ts=1731778032928
2024-11-16 17:27:12,939 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:12,940 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:12,940 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:12,940 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:12,941 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:12,941 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:12,942 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:12,942 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:12,942 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:12,943 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:12,943 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:12,944 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:12,945 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:12,945 [s3a-transfer-fso-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:12,945 [s3a-transfer-fso-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:12,945 [s3a-transfer-fso-bucket-unbounded-pool2-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [99] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=99&ts=1731778032928
2024-11-16 17:27:12,952 [s3a-transfer-fso-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:12,953 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:27:12,953 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:12,954 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:12,954 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:12,955 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778032888; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:12,955 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:12,956 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:12,956 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:12,957 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:12,957 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:12,957 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:12,958 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:12,958 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:12,958 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,958 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,958 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:12,958 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,959 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=100&ts=1731778032928
2024-11-16 17:27:12,968 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:27:12,968 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:27:12,969 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:27:12,969 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:12,969 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:12,969 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:12,969 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:12,969 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:12,969 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:12,969 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000057&t0=93&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=100&ts=1731778032928
2024-11-16 17:27:12,974 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:12,974 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:12,974 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:12,975 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.018s
2024-11-16 17:27:12,975 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:27:12,975 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.033s
2024-11-16 17:27:12,975 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:12,975 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:12,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:13,003 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 12], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_http_get_request.failures=1) (committer_materialize_file.failures=0) (stream_write_total_time=0) (audit_failure=0) (object_list_request.failures=0) (committer_bytes_uploaded=0) (object_put_request.failures=0) (op_get_delegation_token=0) (stream_write_queue_duration=0) (multipart_instantiated=0) (stream_read_seek_policy_changed=8) (multipart_upload_started=0) (object_delete_request=0) (store_exists_probe.failures=0) (stream_read_operations_incomplete=0) (op_get_delegation_token.failures=0) (object_continue_list_request.failures=0) (stream_read_exceptions=0) (committer_materialize_file=0) (op_get_content_summary.failures=0) (object_bulk_delete_request.failures=0) (op_rename=0) (files_copied=0) (op_delete.failures=0) (stream_read_total_bytes=68410) (committer_magic_files_created=0) (op_hflush=0) (object_delete_request.failures=0) (op_list_located_status=0) (action_http_get_request=9) (object_put_request_completed=20) (stream_read_bytes_discarded_in_abort=0) (committer_magic_marker_put=0) (op_xattr_get_named.failures=0) (directories_deleted=0) (multipart_upload_part_put_bytes=0) (committer_commit_job=0) (stream_read_close_operations=7) (object_put_request=20) (stream_read_remote_stream_aborted.failures=0) (files_copied_bytes=0) (committer_commits_completed=0) (store_io_throttled=0) (multipart_upload_completed=0) (committer_stage_file_upload=0) (action_file_opened.failures=0) (op_list_files=0) (object_list_request=40) (audit_access_check_failure=0) (op_is_directory.failures=0) (fake_directories_created=0) (stream_read_unbuffered=1) (delegation_tokens_issued.failures=0) (object_continue_list_request=0) (op_openfile=0) (stream_write_block_uploads_aborted=0) (op_is_file.failures=0) (op_mkdirs.failures=0) (op_is_directory=0) (committer_commits_created=0) (committer_tasks_completed=0) (committer_commit_job.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_list.failures=0) (stream_read_vectored_incoming_ranges=25) (stream_write_total_data=1310720) (store_io_request=115) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (committer_jobs_completed=0) (committer_stage_file_upload.failures=0) (action_executor_acquired.failures=0) (op_delete=10) (stream_read_opened=1) (action_http_head_request.failures=0) (stream_read_seek_backward_operations=0) (delegation_tokens_issued=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_operations=0) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_list=0) (multipart_upload_aborted=0) (op_createfile=0) (op_xattr_list=0) (op_abort=0) (stream_aborted=0) (committer_magic_marker_put.failures=0) (op_get_file_status.failures=0) (stream_read_closed=1) (ignored_errors=0) (op_xattr_get_named_map=0) (stream_read_seek_bytes_skipped=0) (op_list_files.failures=0) (op_open=7) (committer_jobs_failed=0) (stream_write_block_uploads=10) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=65336) (op_abort.failures=0) (action_executor_acquired=0) (object_delete_objects=20) (op_get_file_status=1) (op_copy_from_local_file.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_vectored_read_bytes_discarded=5974) (stream_write_exceptions=0) (object_copy_requests=0) (op_xattr_get_named_map.failures=0) (audit_span_creation=39) (stream_read_vectored_combined_ranges=9) (op_glob_status=0) (store_io_retry=0) (stream_read_operations=1) (fake_directories_deleted=10) (stream_read_version_mismatches=0) (op_xattr_get_map=0) (stream_write_queue_duration.failures=0) (stream_write_bytes=655360) (object_multipart_aborted=0) (object_select_requests=0) (stream_read_bytes=3074) (op_createfile.failures=0) (op_create_non_recursive=0) (directories_created=10) (op_get_file_checksum=0) (op_list_status.failures=0) (object_metadata_request=27) (op_hsync=0) (stream_read_seek_forward_operations=0) (object_put_bytes=655360) (stream_read_vectored_operations=7) (op_get_content_summary=0) (stream_read_fully_operations=0) (op_list_status=0) (op_is_file=0) (audit_request_execution=115) (op_access.failures=0) (stream_read_remote_stream_drain.failures=0) (op_rename.failures=0) (action_file_opened=7) (op_mkdirs=10) (committer_tasks_failed=0) (files_delete_rejected=0) (stream_read_remote_stream_aborted=0) (op_exists.failures=0) (committer_commits.failures=0) (op_access=0) (files_deleted=10) (committer_load_single_pending_file=0) (committer_commits_aborted=0) (stream_write_block_uploads_committed=0) (op_create=10) (object_bulk_delete_request=20) (object_multipart_aborted.failures=0) (committer_bytes_committed=0) (op_get_file_checksum.failures=0) (stream_read_remote_stream_drain=1) (op_xattr_get_map.failures=0) (action_http_head_request=27) (files_created=10) (op_xattr_list.failures=0) (op_xattr_get_named=0) (op_glob_status.failures=0) (op_exists=0) (store_exists_probe=0) (op_copy_from_local_file=0) (op_create.failures=0) (committer_commits_reverted=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=10) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0));
minimums=((op_get_content_summary.min=-1) (op_xattr_get_named.failures.min=-1) (op_exists.min=-1) (op_rename.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_map.failures.min=-1) (object_delete_request.min=-1) (op_access.failures.min=-1) (action_file_opened.failures.min=-1) (object_list_request.min=5) (committer_materialize_file.min=-1) (op_get_delegation_token.failures.min=-1) (op_delete.min=26) (op_is_file.min=-1) (object_bulk_delete_request.min=5) (object_bulk_delete_request.failures.min=-1) (op_delete.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.min=-1) (object_continue_list_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_head_request.min=3) (object_put_request.min=20) (object_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_list_status.failures.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_list.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_get_request.failures.min=0) (action_executor_acquired.failures.min=-1) (op_glob_status.failures.min=-1) (op_copy_from_local_file.min=-1) (multipart_upload_list.min=-1) (op_glob_status.min=-1) (op_get_delegation_token.min=-1) (object_continue_list_request.min=-1) (op_list_status.min=-1) (op_rename.min=-1) (op_get_content_summary.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (committer_materialize_file.failures.min=-1) (action_http_get_request.min=10) (op_xattr_get_named_map.min=-1) (action_http_head_request.failures.min=-1) (store_exists_probe.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_magic_marker_put.min=-1) (op_access.min=-1) (delegation_tokens_issued.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_file_checksum.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (op_is_directory.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.failures.min=-1) (op_get_file_status.min=5) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.failures.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_list_files.failures.min=-1) (committer_commit_job.min=-1) (op_list_files.min=-1) (op_xattr_list.min=-1) (op_create.failures.min=-1) (op_mkdirs.min=15) (multipart_upload_list.failures.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_put_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_file.failures.min=-1) (action_file_opened.min=0) (op_create.min=6) (op_createfile.min=-1));
maximums=((op_get_file_status.max=5) (committer_commit_job.max=-1) (action_file_opened.max=8) (action_http_head_request.max=18) (object_list_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_named.max=-1) (object_list_request.max=220) (op_list_files.failures.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.max=-1) (committer_stage_file_upload.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_drain.max=1) (op_list_status.failures.max=-1) (store_exists_probe.failures.max=-1) (op_create.failures.max=-1) (action_http_get_request.max=17) (committer_load_single_pending_file.failures.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_exists.max=-1) (op_exists.failures.max=-1) (action_http_get_request.failures.max=0) (op_copy_from_local_file.max=-1) (op_get_delegation_token.max=-1) (op_create.max=59) (stream_write_queue_duration.failures.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (op_glob_status.failures.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_content_summary.max=-1) (op_mkdirs.max=322) (op_xattr_list.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.failures.max=-1) (op_rename.max=-1) (object_put_request.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_materialize_file.max=-1) (object_put_request.max=63) (op_xattr_get_named_map.max=-1) (store_exists_probe.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_is_directory.failures.max=-1) (object_continue_list_request.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.failures.max=-1) (op_delete.max=81) (op_xattr_list.max=-1) (op_get_file_checksum.failures.max=-1) (op_abort.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.max=-1) (op_access.max=-1) (op_createfile.failures.max=-1) (op_is_file.failures.max=-1) (op_access.failures.max=-1) (op_rename.failures.max=-1) (object_delete_request.max=-1) (object_bulk_delete_request.max=12) (action_http_head_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_is_file.max=-1) (action_file_opened.failures.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_status.max=-1) (committer_magic_marker_put.max=-1) (delegation_tokens_issued.max=-1));
means=((committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=27, sum=142, mean=5.2593)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=10, sum=152, mean=15.2000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=10, sum=388, mean=38.8000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=10, sum=529, mean=52.9000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=20, sum=348, mean=17.4000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=7, sum=36, mean=5.1429)) (object_list_request.mean=(samples=40, sum=567, mean=14.1750)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=20, sum=151, mean=7.5500)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=95, mean=11.8750)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:13,004 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:13,004 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,004 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,004 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,005 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,005 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000058 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000058&t0=101&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=101&ts=1731778033004
2024-11-16 17:27:13,010 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:13,010 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,010 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,010 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,010 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,010 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000058 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000058&t0=101&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=101&ts=1731778033004
2024-11-16 17:27:13,012 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,013 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:13,013 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:13,013 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:13,013 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000058 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000058&t0=101&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=101&ts=1731778033004
2024-11-16 17:27:13,018 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:13,018 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:13,018 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:13,018 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:13,019 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,019 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,019 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,019 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,019 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000059 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000059&t0=101&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=101&ts=1731778033019
2024-11-16 17:27:13,023 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:13,024 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,024 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:13,024 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16632620502186604710.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:13,025 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16632620502186604710.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions=0) (op_hflush=0) (action_executor_acquired=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (op_abort=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (op_hsync=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (op_abort.failures=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16632620502186604710.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,025 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,025 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:13,025 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16632620502186604710.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:13,026 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:13,026 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:13,026 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:13,026 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:13,026 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000059 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000059&t0=101&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=102&ts=1731778033019
2024-11-16 17:27:13,043 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:13,043 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:13,043 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:27:13,044 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16632620502186604710.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:13,044 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16632620502186604710.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,044 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16632620502186604710.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,044 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:13,044 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,045 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (op_abort=0) (op_hflush=0) (op_abort.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (object_put_request=1) (stream_write_total_data=65536) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (object_put_request.min=17) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=17) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:13,045 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:13,047 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,047 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,047 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:13,047 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [103] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000060 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000060/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000060&t0=103&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=103&ts=1731778033046
2024-11-16 17:27:13,050 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:13,050 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:13,051 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,051 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:27:13,051 [JUnit-testEOFRanges[Buffer type : direct]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,052 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request.failures=0) (stream_read_close_operations=1) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_skipped=0) (action_executor_acquired=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=0) (action_executor_acquired.failures=0) (stream_read_bytes=0) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (stream_read_closed=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations_incomplete=0) (stream_read_block_read=0) (stream_read_vectored_combined_ranges=0) (stream_read_total_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (action_http_get_request=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_vectored_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (stream_read_seek_backward_operations=0) (stream_read_fully_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=3));
maximums=((action_file_opened.max=3) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:13,056 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:13,056 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,056 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,056 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061&t0=101&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=101&ts=1731778033056
2024-11-16 17:27:13,059 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,060 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,060 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061&t0=101&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=101&ts=1731778033056
2024-11-16 17:27:13,067 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:13,067 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:13,067 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:13,067 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:13,067 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:13,068 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:13,068 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:13,068 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:13,068 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:13,068 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:13,068 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:13,068 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:13,068 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:13,068 [s3a-transfer-fso-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:13,069 [s3a-transfer-fso-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,072 [s3a-transfer-fso-bucket-unbounded-pool2-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [104] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061&t0=101&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=104&ts=1731778033056
2024-11-16 17:27:13,086 [s3a-transfer-fso-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:27:13,087 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.019s
2024-11-16 17:27:13,087 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:13,087 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:13,088 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:13,088 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778033041; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:13,088 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:13,088 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:13,088 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:13,088 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:13,089 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:13,089 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:13,089 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:13,089 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:13,089 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,090 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,090 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:13,090 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,090 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061&t0=101&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=105&ts=1731778033056
2024-11-16 17:27:13,100 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:27:13,101 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:27:13,101 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:27:13,101 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:13,101 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:13,101 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,101 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,101 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:13,101 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,102 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000061&t0=101&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=105&ts=1731778033056
2024-11-16 17:27:13,119 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:27:13,119 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:27:13,119 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.018s
2024-11-16 17:27:13,119 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.030s
2024-11-16 17:27:13,119 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.030s
2024-11-16 17:27:13,119 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.051s
2024-11-16 17:27:13,119 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:13,119 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:13,124 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:13,139 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 14, active threads = 0, queued tasks = 0, completed tasks = 14], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_mkdirs=11) (op_hsync=0) (files_created=11) (op_list_files=0) (op_abort=0) (multipart_upload_list.failures=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_map=0) (object_put_request.failures=0) (action_file_opened=8) (op_copy_from_local_file.failures=0) (committer_tasks_failed=0) (committer_commits.failures=0) (op_is_directory=0) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=1) (object_multipart_initiated.failures=0) (action_http_get_request.failures=1) (op_get_delegation_token.failures=0) (audit_span_creation=43) (delegation_tokens_issued=0) (op_is_file=0) (op_get_file_status=1) (op_is_file.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_aborted=0) (committer_jobs_completed=0) (committer_commits_reverted=0) (committer_commits_completed=0) (stream_read_vectored_incoming_ranges=25) (committer_magic_marker_put.failures=0) (multipart_upload_started=0) (object_delete_objects=22) (fake_directories_created=0) (op_exists.failures=0) (multipart_upload_list=0) (store_io_retry=0) (object_delete_request.failures=0) (op_xattr_get_map.failures=0) (stream_read_version_mismatches=0) (directories_created=11) (committer_magic_marker_put=0) (committer_materialize_file=0) (stream_write_block_uploads=11) (action_executor_acquired.failures=0) (op_get_content_summary=0) (store_io_throttled=0) (files_copied=0) (ignored_errors=0) (stream_aborted=0) (stream_read_operations_incomplete=0) (op_delete=11) (op_is_directory.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_createfile.failures=0) (op_create=11) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named.failures=0) (op_get_file_checksum.failures=0) (directories_deleted=0) (files_delete_rejected=0) (audit_access_check_failure=0) (op_list_located_status=0) (op_glob_status=0) (op_mkdirs.failures=0) (committer_bytes_committed=0) (stream_read_remote_stream_drain=1) (op_rename=0) (stream_write_total_time=0) (op_get_file_checksum=0) (object_put_bytes=720896) (object_select_requests=0) (op_list_files.failures=0) (op_glob_status.failures=0) (committer_load_single_pending_file=0) (op_open=8) (object_list_request=44) (object_bulk_delete_request=22) (audit_request_execution=126) (op_openfile=0) (stream_read_vectored_operations=7) (stream_read_seek_policy_changed=9) (committer_stage_file_upload=0) (committer_magic_files_created=0) (stream_write_block_uploads_aborted=0) (stream_read_closed=1) (delegation_tokens_issued.failures=0) (object_continue_list_request.failures=0) (multipart_upload_part_put_bytes=0) (committer_load_single_pending_file.failures=0) (committer_commits_created=0) (op_createfile=0) (committer_materialize_file.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=5974) (stream_read_seek_backward_operations=0) (multipart_upload_completed=0) (action_http_get_request=9) (op_list_status=0) (op_abort.failures=0) (multipart_instantiated=0) (committer_commits_aborted=0) (stream_write_queue_duration=0) (fake_directories_deleted=11) (stream_write_exceptions=0) (object_delete_request=0) (op_xattr_get_named_map.failures=0) (stream_write_bytes=720896) (files_copied_bytes=0) (audit_failure=0) (object_multipart_aborted.failures=0) (object_put_request_completed=22) (action_executor_acquired=0) (action_http_head_request=30) (committer_commit_job=0) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_close=65336) (object_copy_requests=0) (stream_read_operations=1) (stream_read_exceptions=0) (object_bulk_delete_request.failures=0) (op_get_content_summary.failures=0) (op_get_delegation_token=0) (stream_read_seek_operations=0) (stream_read_fully_operations=0) (stream_read_vectored_combined_ranges=9) (op_copy_from_local_file=0) (op_hflush=0) (stream_read_opened=1) (op_list_status.failures=0) (stream_read_close_operations=8) (committer_stage_file_upload.failures=0) (committer_commit_job.failures=0) (op_access.failures=0) (object_multipart_initiated=0) (action_file_opened.failures=0) (stream_read_total_bytes=68410) (object_list_request.failures=0) (op_exists=0) (stream_read_remote_stream_aborted=0) (op_delete.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_list=0) (op_rename.failures=0) (object_continue_list_request=0) (stream_read_seek_forward_operations=0) (stream_write_block_uploads_committed=0) (object_multipart_aborted=0) (op_get_file_status.failures=0) (store_io_request=126) (object_metadata_request=30) (object_put_request=22) (store_exists_probe.failures=0) (store_exists_probe=0) (stream_write_queue_duration.failures=0) (committer_bytes_uploaded=0) (stream_read_bytes=3074) (action_http_head_request.failures=0) (multipart_upload_part_put=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_named=0) (op_create.failures=0) (op_create_non_recursive=0) (stream_write_total_data=1441792) (op_access=0) (files_deleted=11) (committer_tasks_completed=0) (op_xattr_get_named_map=0) (op_xattr_list.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=11) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0));
minimums=((op_createfile.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_status.min=-1) (action_file_opened.min=3) (committer_stage_file_upload.min=-1) (op_exists.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.failures.min=-1) (op_rename.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_map.failures.min=-1) (op_create.min=5) (committer_commit_job.failures.min=-1) (op_get_delegation_token.min=-1) (object_put_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_abort.failures.min=-1) (op_glob_status.min=-1) (committer_materialize_file.failures.min=-1) (committer_materialize_file.min=-1) (op_is_file.failures.min=-1) (committer_magic_marker_put.min=-1) (op_get_file_checksum.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_put_request.min=17) (op_abort.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_mkdirs.min=15) (op_xattr_list.min=-1) (op_delete.min=26) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_access.min=-1) (op_get_delegation_token.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.min=-1) (op_exists.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.failures.min=-1) (op_create.failures.min=-1) (op_get_file_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (delegation_tokens_issued.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_file_status.min=5) (op_get_content_summary.min=-1) (op_list_files.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.failures.min=-1) (object_bulk_delete_request.min=5) (object_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_file.min=-1) (multipart_upload_list.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_named.min=-1) (stream_write_queue_duration.min=-1) (op_mkdirs.failures.min=-1) (store_exists_probe.min=-1) (op_copy_from_local_file.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_get_request.failures.min=0) (object_continue_list_request.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=10) (action_http_head_request.min=2) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_status.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_list_request.min=4) (action_file_opened.failures.min=-1) (op_get_file_checksum.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_createfile.min=-1) (stream_write_queue_duration.failures.min=-1) (op_access.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_rename.min=-1));
maximums=((object_list_request.max=220) (committer_materialize_file.max=-1) (committer_commit_job.max=-1) (action_http_head_request.max=18) (committer_load_single_pending_file.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_get_delegation_token.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_list.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_file.max=-1) (op_mkdirs.max=322) (object_multipart_aborted.failures.max=-1) (committer_stage_file_upload.max=-1) (delegation_tokens_issued.failures.max=-1) (action_file_opened.max=8) (op_rename.max=-1) (op_access.failures.max=-1) (object_list_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_access.max=-1) (op_list_files.max=-1) (op_exists.failures.max=-1) (stream_write_queue_duration.max=-1) (action_executor_acquired.max=-1) (op_list_files.failures.max=-1) (op_get_file_checksum.max=-1) (op_rename.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_delete_request.max=-1) (op_create.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named.failures.max=-1) (object_put_request.failures.max=-1) (op_createfile.max=-1) (action_http_get_request.max=17) (op_abort.failures.max=-1) (op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (op_mkdirs.failures.max=-1) (action_http_get_request.failures.max=0) (op_list_status.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=63) (committer_stage_file_upload.failures.max=-1) (op_get_file_status.max=5) (op_xattr_get_map.failures.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_is_directory.max=-1) (multipart_upload_list.max=-1) (op_create.max=59) (op_createfile.failures.max=-1) (op_get_file_status.failures.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.failures.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.max=-1) (op_is_directory.failures.max=-1) (object_multipart_aborted.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_file.failures.max=-1) (op_abort.max=-1) (object_continue_list_request.max=-1) (op_glob_status.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.max=16) (op_delete.max=81) (op_exists.max=-1) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.failures.max=-1));
means=((committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=11, sum=441, mean=40.0909)) (object_bulk_delete_request.mean=(samples=22, sum=177, mean=8.0455)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=30, sum=150, mean=5.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=22, sum=370, mean=16.8182)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=11, sum=157, mean=14.2727)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=8, sum=39, mean=4.8750)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=11, sum=544, mean=49.4545)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=44, sum=600, mean=13.6364)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=95, mean=11.8750)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:13,140 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:13,140 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,140 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,140 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,140 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,141 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000062 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000062&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=106&ts=1731778033140
2024-11-16 17:27:13,147 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:13,148 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,148 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,148 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,148 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,148 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000062 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000062&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=106&ts=1731778033140
2024-11-16 17:27:13,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,151 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:13,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:13,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:13,152 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000062 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000062&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=106&ts=1731778033140
2024-11-16 17:27:13,156 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:13,156 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:13,157 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:13,157 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:13,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,158 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,158 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,158 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000063 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000063&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=106&ts=1731778033157
2024-11-16 17:27:13,167 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:13,167 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,168 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:13,168 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18009160972659033254.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:13,169 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18009160972659033254.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (stream_write_total_time=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (op_hflush=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (stream_write_total_data=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (op_abort=0) (multipart_upload_part_put=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18009160972659033254.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,169 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,169 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:13,169 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18009160972659033254.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:13,170 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:13,170 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:13,170 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:13,170 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:13,170 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000063 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000063&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=107&ts=1731778033157
2024-11-16 17:27:13,193 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:13,193 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:13,193 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.023s
2024-11-16 17:27:13,194 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18009160972659033254.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:13,194 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18009160972659033254.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,194 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18009160972659033254.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,194 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:13,194 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,195 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (op_hflush=0) (multipart_upload_completed.failures=0) (stream_write_total_data=65536) (op_hsync=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (stream_write_exceptions=0) (object_put_request=1) (multipart_upload_part_put=0) (op_abort=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (op_abort.failures=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (object_put_request.min=23) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=23) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=23, mean=23.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:13,195 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:13,196 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,197 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,197 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:13,197 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000064 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000064&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=106&ts=1731778033196
2024-11-16 17:27:13,202 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:13,203 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:13,203 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,203 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:13,203 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:27:13,203 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,203 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-65535&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000064&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=106&ts=1731778033196
2024-11-16 17:27:13,212 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.009s
2024-11-16 17:27:13,213 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:13,213 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:13,213 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:13,213 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:13,213 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:13,214 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:13,214 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,214 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,214 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:13,214 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000064&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=108&ts=1731778033196
2024-11-16 17:27:13,227 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:27:13,227 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:13,227 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,227 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:27:13,228 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:27:13,228 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:27:13,228 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7442 bytes
2024-11-16 17:27:13,228 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:13,228 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:13,228 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:13,228 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8742 bytes
2024-11-16 17:27:13,228 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:27:13,228 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:13,229 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened=1) (stream_read_closed=1) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (action_executor_acquired=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_drain=1) (stream_read_vectored_read_bytes_discarded=10) (action_http_get_request.failures=0) (stream_read_opened=1) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=65336) (action_file_opened.failures=0) (stream_read_vectored_operations=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations=1) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=2) (stream_read_vectored_combined_ranges=1) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_forward_operations=0) (action_http_get_request=2) (stream_read_fully_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain.failures=0) (stream_read_total_bytes=65686) (stream_read_block_acquire_read.failures=0) (stream_read_bytes=350) (stream_read_prefetch_operations=0) (stream_read_block_read=0) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (stream_read_block_read.failures=0) (stream_read_seek_policy_changed=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=9) (action_file_opened.min=7) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=7) (stream_read_remote_stream_drain.max=1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=13) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=22, mean=11.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:13,230 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:13,230 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,231 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,231 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=106&ts=1731778033230
2024-11-16 17:27:13,235 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,235 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,235 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=106&ts=1731778033230
2024-11-16 17:27:13,243 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:13,244 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:13,244 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:13,245 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:13,245 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:13,245 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:13,246 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:13,246 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:13,246 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:13,247 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:13,247 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:13,247 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:13,248 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:13,248 [s3a-transfer-fso-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:13,249 [s3a-transfer-fso-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,250 [s3a-transfer-fso-bucket-unbounded-pool2-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [109] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=109&ts=1731778033230
2024-11-16 17:27:13,256 [s3a-transfer-fso-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:13,257 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:27:13,257 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:13,257 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:13,257 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:13,257 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778033190; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:13,257 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:13,257 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:13,258 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:13,258 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:13,258 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:13,258 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:13,258 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:13,258 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:13,258 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,259 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,259 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:13,260 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,261 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=110&ts=1731778033230
2024-11-16 17:27:13,269 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:27:13,269 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:27:13,269 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:27:13,269 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:13,269 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:13,269 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,269 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,270 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:13,270 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,270 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000065&t0=106&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=110&ts=1731778033230
2024-11-16 17:27:13,279 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:27:13,279 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:27:13,279 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:27:13,279 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.021s
2024-11-16 17:27:13,280 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.021s
2024-11-16 17:27:13,280 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:27:13,280 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:13,280 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:13,282 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:13,294 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 15, active threads = 0, queued tasks = 0, completed tasks = 15], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((files_delete_rejected=0) (files_deleted=12) (op_glob_status.failures=0) (stream_write_block_uploads=12) (op_get_file_checksum.failures=0) (committer_tasks_failed=0) (action_file_opened=9) (stream_aborted=0) (op_abort.failures=0) (action_http_head_request.failures=0) (committer_commits_created=0) (multipart_instantiated=0) (stream_read_vectored_incoming_ranges=27) (action_http_get_request=11) (op_get_delegation_token=0) (stream_read_version_mismatches=0) (store_io_request=139) (action_executor_acquired.failures=0) (stream_write_block_uploads_aborted=0) (object_delete_request.failures=0) (committer_load_single_pending_file=0) (op_copy_from_local_file.failures=0) (op_xattr_get_map.failures=0) (stream_read_closed=2) (object_multipart_initiated.failures=0) (files_copied=0) (op_is_directory.failures=0) (stream_write_bytes=786432) (object_continue_list_request=0) (op_is_directory=0) (action_http_head_request=33) (object_put_request_completed=24) (committer_bytes_committed=0) (object_put_request=24) (op_delete.failures=0) (stream_write_queue_duration.failures=0) (op_glob_status=0) (committer_jobs_completed=0) (op_createfile.failures=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_completed=0) (object_select_requests=0) (store_io_retry=0) (op_rename=0) (committer_materialize_file=0) (stream_read_vectored_combined_ranges=10) (object_copy_requests=0) (op_xattr_get_named.failures=0) (op_is_file=0) (op_xattr_get_named=0) (op_list_located_status=0) (multipart_upload_list=0) (stream_read_vectored_read_bytes_discarded=5984) (committer_stage_file_upload=0) (stream_write_total_data=1572864) (object_multipart_aborted=0) (object_bulk_delete_request=24) (committer_load_single_pending_file.failures=0) (op_create=12) (stream_write_exceptions_completing_upload=0) (committer_commits_reverted=0) (op_abort=0) (op_get_content_summary=0) (audit_failure=0) (fake_directories_created=0) (object_continue_list_request.failures=0) (multipart_upload_started=0) (committer_commit_job.failures=0) (stream_read_bytes_discarded_in_close=130672) (op_get_delegation_token.failures=0) (action_http_get_request.failures=1) (op_open=9) (delegation_tokens_issued.failures=0) (object_delete_request=0) (stream_read_operations=2) (op_list_files.failures=0) (stream_read_bytes=3424) (op_hflush=0) (committer_commits_aborted=0) (action_file_opened.failures=0) (committer_materialize_file.failures=0) (op_rename.failures=0) (object_list_request=48) (op_xattr_get_map=0) (committer_magic_marker_put.failures=0) (op_list_status=0) (stream_read_operations_incomplete=0) (op_create.failures=0) (object_metadata_request=33) (committer_bytes_uploaded=0) (op_openfile=0) (stream_read_opened=2) (object_multipart_initiated=0) (op_hsync=0) (stream_read_exceptions=0) (op_list_files=0) (stream_read_remote_stream_aborted=0) (op_access.failures=0) (op_create_non_recursive=0) (audit_access_check_failure=0) (committer_stage_file_upload.failures=0) (action_executor_acquired=0) (directories_created=12) (multipart_upload_part_put=0) (audit_span_creation=47) (store_exists_probe=0) (op_xattr_get_named_map.failures=0) (delegation_tokens_issued=0) (stream_read_seek_backward_operations=0) (committer_magic_marker_put=0) (stream_read_remote_stream_drain.failures=0) (committer_jobs_failed=0) (stream_read_remote_stream_aborted.failures=0) (ignored_errors=0) (object_multipart_aborted.failures=0) (object_put_bytes=786432) (multipart_upload_part_put_bytes=0) (stream_read_seek_policy_changed=10) (multipart_upload_abort_under_path_invoked=0) (committer_magic_files_created=0) (multipart_upload_list.failures=0) (op_delete=12) (committer_commits_completed=0) (stream_write_total_time=0) (object_delete_objects=24) (stream_read_bytes_discarded_in_abort=0) (fake_directories_deleted=12) (stream_read_remote_stream_drain=2) (op_access=0) (stream_read_seek_forward_operations=0) (stream_read_unbuffered=1) (stream_read_close_operations=9) (op_xattr_list.failures=0) (committer_commits.failures=0) (op_get_content_summary.failures=0) (op_mkdirs=12) (stream_read_vectored_operations=8) (files_created=12) (object_put_request.failures=0) (committer_commit_job=0) (directories_deleted=0) (stream_read_total_bytes=134096) (stream_read_seek_bytes_skipped=0) (op_get_file_status=1) (op_get_file_status.failures=0) (stream_write_queue_duration=0) (stream_read_bytes_backwards_on_seek=0) (store_exists_probe.failures=0) (store_io_throttled=0) (stream_read_seek_operations=0) (op_copy_from_local_file=0) (op_get_file_checksum=0) (committer_tasks_completed=0) (multipart_upload_aborted=0) (op_exists=0) (object_list_request.failures=0) (op_xattr_get_named_map=0) (op_exists.failures=0) (stream_write_block_uploads_committed=0) (audit_request_execution=139) (op_is_file.failures=0) (object_bulk_delete_request.failures=0) (op_list_status.failures=0) (files_copied_bytes=0) (op_createfile=0) (op_mkdirs.failures=0) (stream_write_exceptions=0) (op_xattr_list=0) (stream_read_fully_operations=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=12) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0));
minimums=((op_xattr_list.failures.min=-1) (op_xattr_get_named.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_executor_acquired.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_drain.min=1) (object_list_request.min=4) (committer_stage_file_upload.failures.min=-1) (delegation_tokens_issued.min=-1) (op_exists.min=-1) (object_multipart_initiated.failures.min=-1) (op_rename.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.min=-1) (object_put_request.min=23) (op_delete.failures.min=-1) (object_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.min=5) (op_abort.min=-1) (object_multipart_initiated.min=-1) (committer_materialize_file.failures.min=-1) (object_delete_request.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_delete.min=26) (action_http_head_request.min=2) (op_glob_status.failures.min=-1) (op_get_file_checksum.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.min=-1) (op_create.failures.min=-1) (op_rename.failures.min=-1) (action_http_get_request.min=9) (op_is_file.failures.min=-1) (committer_commit_job.min=-1) (committer_load_single_pending_file.min=-1) (object_bulk_delete_request.min=5) (op_xattr_get_map.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_access.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_get_request.failures.min=0) (action_file_opened.min=7) (op_get_content_summary.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_status.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (op_create.min=5) (op_mkdirs.failures.min=-1) (op_createfile.min=-1) (multipart_upload_list.failures.min=-1) (store_exists_probe.failures.min=-1) (op_is_file.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_put_request.failures.min=-1) (op_list_status.failures.min=-1) (op_list_files.failures.min=-1) (op_abort.failures.min=-1) (committer_stage_file_upload.min=-1) (op_exists.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_files.min=-1) (op_createfile.failures.min=-1) (multipart_upload_list.min=-1) (op_copy_from_local_file.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.min=15) (action_executor_acquired.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1));
maximums=((op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_checksum.max=-1) (object_list_request.failures.max=-1) (action_http_get_request.max=17) (op_is_directory.max=-1) (op_list_status.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_commit_job.max=-1) (action_http_head_request.max=18) (committer_commit_job.failures.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_glob_status.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_stage_file_upload.max=-1) (object_multipart_aborted.failures.max=-1) (object_bulk_delete_request.max=16) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_file_status.failures.max=-1) (op_rename.failures.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.failures.max=-1) (object_put_request.failures.max=-1) (object_list_request.max=220) (delegation_tokens_issued.max=-1) (op_delete.failures.max=-1) (op_list_files.max=-1) (op_delete.max=81) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_rename.max=-1) (op_abort.max=-1) (op_access.failures.max=-1) (op_get_file_status.max=5) (action_http_head_request.failures.max=-1) (op_glob_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_map.failures.max=-1) (object_multipart_aborted.max=-1) (action_file_opened.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_content_summary.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_mkdirs.max=322) (multipart_upload_list.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_delete_request.max=-1) (op_access.max=-1) (object_continue_list_request.max=-1) (op_create.failures.max=-1) (store_exists_probe.max=-1) (op_is_file.failures.max=-1) (object_put_request.max=63) (action_executor_acquired.max=-1) (op_createfile.failures.max=-1) (action_http_get_request.failures.max=0) (committer_load_single_pending_file.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=8) (op_copy_from_local_file.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_exists.failures.max=-1) (op_create.max=59) (object_continue_list_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.max=-1) (op_createfile.max=-1) (committer_materialize_file.max=-1) (op_is_directory.failures.max=-1) (op_exists.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_delegation_token.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=24, sum=397, mean=16.5417)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=33, sum=161, mean=4.8788)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=24, sum=195, mean=8.1250)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=9, sum=46, mean=5.1111)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=12, sum=561, mean=46.7500)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=12, sum=168, mean=14.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=10, sum=117, mean=11.7000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=12, sum=476, mean=39.6667)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=48, sum=630, mean=13.1250)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:13,294 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:13,295 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,295 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,295 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,295 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,295 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000066 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000066&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=111&ts=1731778033294
2024-11-16 17:27:13,303 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:13,303 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,303 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,303 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,303 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,303 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000066 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000066&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=111&ts=1731778033294
2024-11-16 17:27:13,306 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,306 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:13,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:13,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:13,308 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000066 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000066&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=111&ts=1731778033294
2024-11-16 17:27:13,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:13,314 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:13,314 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:27:13,314 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:13,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,316 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,317 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000067 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000067&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=111&ts=1731778033315
2024-11-16 17:27:13,322 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:13,322 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,322 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:13,322 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4449768313680797122.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:13,323 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4449768313680797122.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (object_put_request=0) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (op_abort.failures=0) (op_hflush=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (stream_write_total_time=0) (multipart_upload_completed=0) (object_put_request.failures=0) (op_abort=0) (stream_write_block_uploads=0) (stream_write_total_data=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4449768313680797122.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,323 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,323 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:13,323 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4449768313680797122.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:13,324 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:13,324 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:13,324 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:13,324 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:13,324 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000067 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000067&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=112&ts=1731778033315
2024-11-16 17:27:13,340 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:13,340 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:13,340 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.016s
2024-11-16 17:27:13,341 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4449768313680797122.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:13,341 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4449768313680797122.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,341 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4449768313680797122.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,341 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:13,342 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,343 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (op_hflush=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (action_executor_acquired=0) (op_hsync=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (object_put_request=1) (multipart_upload_part_put=0) (object_put_request.failures=0) (op_abort=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=16) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=16) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=16, mean=16.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:13,343 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:13,344 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,344 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,344 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:13,344 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000068 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000068&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=111&ts=1731778033343
2024-11-16 17:27:13,347 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:13,347 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:13,347 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,347 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:27:13,347 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:13,348 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:27:13,348 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,348 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,348 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,348 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:13,348 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:27:13,348 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=16101-16200&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000068&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=114&ts=1731778033343
2024-11-16 17:27:13,348 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,349 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:13,349 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-4200&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000068&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=113&ts=1731778033343
2024-11-16 17:27:13,358 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.009s
2024-11-16 17:27:13,358 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:27:13,359 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,361 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:27:13,362 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,362 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_aborted=0) (action_executor_acquired=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_operations=0) (stream_read_bytes=300) (stream_read_vectored_operations=1) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired.failures=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_read_bytes_discarded=4001) (stream_read_block_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_total_bytes=300) (stream_read_remote_stream_drain=0) (stream_read_vectored_combined_ranges=2) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=3) (stream_read_opened=0) (stream_aborted=0) (stream_read_operations_incomplete=0) (stream_read_close_operations=1) (stream_read_closed=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0) (action_http_get_request.failures=0) (action_http_get_request=2) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=3) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=9) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_http_get_request.max=13) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=3) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1));
means=((action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=22, mean=11.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:13,364 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:13,364 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,364 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,364 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=111&ts=1731778033364
2024-11-16 17:27:13,367 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,367 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,367 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=111&ts=1731778033364
2024-11-16 17:27:13,373 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:13,373 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:13,373 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:13,373 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:13,374 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:13,374 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:13,374 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:13,374 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:13,374 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:13,374 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:13,374 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:13,374 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:13,375 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:13,375 [s3a-transfer-fso-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:13,375 [s3a-transfer-fso-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,375 [s3a-transfer-fso-bucket-unbounded-pool2-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [115] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=115&ts=1731778033364
2024-11-16 17:27:13,381 [s3a-transfer-fso-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:13,381 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:27:13,381 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:13,381 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:13,381 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:13,381 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778033338; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:13,381 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:13,382 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:13,382 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:13,382 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:13,384 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:13,384 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:13,384 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:13,384 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:13,384 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,384 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,384 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:13,384 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,385 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=116&ts=1731778033364
2024-11-16 17:27:13,390 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:13,390 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:13,390 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:27:13,390 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:13,390 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:13,390 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,390 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,390 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:13,390 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,391 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000069&t0=111&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=116&ts=1731778033364
2024-11-16 17:27:13,395 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:13,395 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:13,395 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:13,396 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.012s
2024-11-16 17:27:13,396 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.012s
2024-11-16 17:27:13,396 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.022s
2024-11-16 17:27:13,396 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:13,396 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:13,397 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:13,408 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 16], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_part_put=0) (op_list_located_status=0) (object_bulk_delete_request=26) (committer_load_single_pending_file=0) (committer_jobs_completed=0) (object_continue_list_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=134396) (committer_magic_files_created=0) (stream_read_unbuffered=1) (stream_read_vectored_combined_ranges=12) (op_delete=13) (op_abort=0) (stream_read_operations=2) (stream_write_block_uploads_aborted=0) (multipart_upload_started=0) (object_select_requests=0) (op_list_status=0) (stream_read_bytes=3724) (files_copied=0) (op_access.failures=0) (object_put_request.failures=0) (op_glob_status.failures=0) (action_executor_acquired=0) (object_metadata_request=36) (stream_read_remote_stream_drain=2) (op_list_status.failures=0) (stream_read_bytes_discarded_in_close=130672) (op_xattr_list.failures=0) (store_io_retry=0) (op_is_directory.failures=0) (stream_write_block_uploads=13) (stream_write_exceptions=0) (object_list_request=52) (stream_read_vectored_read_bytes_discarded=9985) (op_xattr_get_map.failures=0) (op_create.failures=0) (op_exists.failures=0) (op_xattr_get_named_map.failures=0) (op_openfile=0) (object_delete_request=0) (delegation_tokens_issued=0) (stream_read_seek_backward_operations=0) (files_copied_bytes=0) (op_is_file.failures=0) (op_is_directory=0) (object_put_request=26) (committer_jobs_failed=0) (committer_magic_marker_put.failures=0) (action_http_head_request.failures=0) (op_list_files.failures=0) (op_get_delegation_token.failures=0) (stream_read_seek_operations=0) (op_createfile=0) (op_hflush=0) (stream_read_vectored_incoming_ranges=30) (committer_bytes_uploaded=0) (fake_directories_deleted=13) (op_exists=0) (committer_commit_job.failures=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_list.failures=0) (action_http_get_request=13) (multipart_upload_list=0) (op_xattr_get_map=0) (op_get_file_status=1) (stream_write_queue_duration=0) (stream_read_opened=2) (stream_read_remote_stream_aborted.failures=0) (object_copy_requests=0) (directories_deleted=0) (object_multipart_aborted=0) (committer_load_single_pending_file.failures=0) (store_exists_probe=0) (stream_read_seek_bytes_discarded=0) (files_deleted=13) (files_created=13) (stream_write_queue_duration.failures=0) (object_delete_request.failures=0) (op_xattr_get_named.failures=0) (object_put_request_completed=26) (audit_access_check_failure=0) (stream_write_block_uploads_committed=0) (stream_read_closed=2) (op_hsync=0) (action_file_opened=10) (multipart_upload_aborted=0) (committer_materialize_file=0) (op_get_file_status.failures=0) (op_get_content_summary=0) (op_xattr_list=0) (stream_read_remote_stream_aborted=0) (committer_tasks_completed=0) (audit_span_creation=51) (multipart_upload_part_put_bytes=0) (action_http_head_request=36) (committer_commits_created=0) (op_is_file=0) (op_rename=0) (stream_write_bytes=851968) (op_copy_from_local_file=0) (op_get_delegation_token=0) (stream_read_bytes_discarded_in_abort=0) (object_put_bytes=851968) (ignored_errors=0) (object_list_request.failures=0) (stream_read_remote_stream_drain.failures=0) (committer_tasks_failed=0) (audit_failure=0) (op_abort.failures=0) (op_createfile.failures=0) (multipart_upload_completed=0) (stream_read_seek_policy_changed=11) (committer_bytes_committed=0) (op_delete.failures=0) (object_multipart_initiated=0) (object_continue_list_request=0) (stream_read_close_operations=10) (committer_commits_aborted=0) (op_access=0) (op_create=13) (committer_commits.failures=0) (op_copy_from_local_file.failures=0) (delegation_tokens_issued.failures=0) (fake_directories_created=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (store_exists_probe.failures=0) (stream_aborted=0) (op_list_files=0) (multipart_upload_abort_under_path_invoked=0) (op_get_file_checksum=0) (op_open=10) (op_mkdirs.failures=0) (committer_materialize_file.failures=0) (store_io_request=152) (stream_read_vectored_operations=9) (stream_read_operations_incomplete=0) (committer_stage_file_upload=0) (audit_request_execution=152) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (directories_created=13) (stream_read_fully_operations=0) (object_bulk_delete_request.failures=0) (op_mkdirs=13) (op_get_content_summary.failures=0) (committer_commits_reverted=0) (multipart_instantiated=0) (action_http_get_request.failures=1) (stream_write_total_data=1703936) (op_get_file_checksum.failures=0) (op_glob_status=0) (stream_read_exceptions=0) (object_delete_objects=26) (stream_write_total_time=0) (committer_commits_completed=0) (op_create_non_recursive=0) (committer_stage_file_upload.failures=0) (committer_magic_marker_put=0) (store_io_throttled=0) (op_xattr_get_named_map=0) (object_multipart_aborted.failures=0) (op_rename.failures=0) (committer_commit_job=0) (files_delete_rejected=0) (object_multipart_initiated.failures=0) (op_xattr_get_named=0));
gauges=((object_put_bytes_pending=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=13) (stream_read_blocks_in_cache=0));
minimums=((object_multipart_initiated.failures.min=-1) (op_list_status.min=-1) (store_exists_probe.min=-1) (object_delete_request.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_commit_job.min=-1) (op_is_directory.failures.min=-1) (op_mkdirs.min=15) (action_http_get_request.failures.min=0) (op_xattr_get_named_map.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (action_file_opened.min=3) (op_access.failures.min=-1) (object_multipart_initiated.min=-1) (op_delete.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_head_request.failures.min=-1) (delegation_tokens_issued.min=-1) (action_http_get_request.min=9) (object_multipart_aborted.min=-1) (multipart_upload_list.failures.min=-1) (op_get_delegation_token.min=-1) (op_mkdirs.failures.min=-1) (stream_write_queue_duration.min=-1) (op_is_directory.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_map.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_drain.min=1) (op_access.min=-1) (committer_stage_file_upload.min=-1) (op_exists.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_put_request.min=16) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=4) (multipart_upload_list.min=-1) (op_rename.failures.min=-1) (op_rename.min=-1) (op_get_file_checksum.min=-1) (object_continue_list_request.min=-1) (op_is_file.min=-1) (op_glob_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_status.min=5) (op_xattr_list.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_list.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_glob_status.min=-1) (op_get_content_summary.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.min=-1) (op_create.failures.min=-1) (op_exists.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.min=-1) (store_exists_probe.failures.min=-1) (op_list_files.min=-1) (op_create.min=5) (committer_magic_marker_put.failures.min=-1) (action_http_head_request.min=2) (op_abort.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.min=4) (op_copy_from_local_file.failures.min=-1) (op_list_files.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_delete.min=22) (committer_magic_marker_put.min=-1));
maximums=((op_xattr_get_named.failures.max=-1) (op_exists.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_delegation_token.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_files.failures.max=-1) (op_create.max=59) (store_exists_probe.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_map.failures.max=-1) (action_http_head_request.max=18) (committer_load_single_pending_file.failures.max=-1) (op_rename.max=-1) (committer_commit_job.max=-1) (op_list_status.failures.max=-1) (op_delete.max=81) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.max=-1) (object_list_request.max=220) (committer_stage_file_upload.max=-1) (object_delete_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_is_directory.max=-1) (op_mkdirs.failures.max=-1) (action_http_head_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_content_summary.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_get_request.max=17) (op_is_directory.failures.max=-1) (committer_commit_job.failures.max=-1) (op_access.failures.max=-1) (op_list_files.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.max=-1) (object_multipart_aborted.failures.max=-1) (action_file_opened.max=8) (op_mkdirs.max=322) (op_glob_status.failures.max=-1) (op_createfile.max=-1) (object_delete_request.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.max=16) (committer_materialize_file.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=63) (stream_read_remote_stream_aborted.max=-1) (op_copy_from_local_file.failures.max=-1) (op_abort.max=-1) (op_is_file.max=-1) (action_http_get_request.failures.max=0) (object_list_request.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_get_delegation_token.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_list.max=-1) (action_executor_acquired.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_list.max=-1) (op_get_file_status.max=5) (stream_write_queue_duration.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.max=-1) (op_is_file.failures.max=-1) (op_get_file_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_exists.max=-1) (op_create.failures.max=-1) (op_access.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_map.max=-1) (op_list_status.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=10, sum=49, mean=4.9000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=13, sum=582, mean=44.7692)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=13, sum=498, mean=38.3077)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=36, sum=170, mean=4.7222)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=26, sum=205, mean=7.8846)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=52, sum=655, mean=12.5962)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=13, sum=176, mean=13.5385)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=26, sum=418, mean=16.0769)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=139, mean=11.5833)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:13,408 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:13,409 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,409 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,409 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,409 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,409 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000070 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000070&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=117&ts=1731778033408
2024-11-16 17:27:13,415 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:13,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,416 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,416 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,416 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000070 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000070&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=117&ts=1731778033408
2024-11-16 17:27:13,419 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,419 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:13,419 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:13,419 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:13,419 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000070 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000070&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=117&ts=1731778033408
2024-11-16 17:27:13,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:13,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:13,423 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.004s
2024-11-16 17:27:13,423 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:13,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,424 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,424 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000071 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000071&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=117&ts=1731778033424
2024-11-16 17:27:13,428 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:13,429 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,429 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:13,429 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17588095934054426670.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:13,430 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17588095934054426670.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (object_put_request.failures=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (object_put_request=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (op_abort=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17588095934054426670.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,430 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,430 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:13,431 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17588095934054426670.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:13,431 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:13,431 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:13,432 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:13,432 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:13,433 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000071 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000071&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=118&ts=1731778033424
2024-11-16 17:27:13,453 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:13,453 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:13,453 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.022s
2024-11-16 17:27:13,454 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17588095934054426670.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:13,454 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17588095934054426670.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,454 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17588095934054426670.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,454 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:13,454 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,455 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (object_put_request=1) (stream_write_queue_duration=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (object_put_request.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (op_hsync=0) (op_abort.failures=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (op_hflush=0) (multipart_upload_completed=0) (op_abort=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_put_request.min=20) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=20) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=20, mean=20.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:13,455 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:13,456 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,456 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,456 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:13,456 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000072 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000072/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000072&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=117&ts=1731778033456
2024-11-16 17:27:13,459 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:13,459 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:13,459 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,460 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_backward_operations=0) (stream_read_exceptions=0) (stream_read_unbuffered=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (action_http_get_request.failures=0) (stream_read_block_read=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=0) (stream_read_operations=0) (stream_read_prefetch_operations=0) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_closed=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_read.failures=0) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_opened=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_total_bytes=0) (stream_read_seek_forward_operations=0) (action_file_opened=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_vectored_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=0) (action_http_get_request=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=3) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=-1));
maximums=((stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=3) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:13,461 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:13,461 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,461 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,461 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=117&ts=1731778033461
2024-11-16 17:27:13,468 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,468 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,468 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=117&ts=1731778033461
2024-11-16 17:27:13,478 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:13,478 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:13,478 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:13,478 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:13,478 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:13,478 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:13,478 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:13,478 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:13,478 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:13,479 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:13,479 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:13,479 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:13,479 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:13,479 [s3a-transfer-fso-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:13,480 [s3a-transfer-fso-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,480 [s3a-transfer-fso-bucket-unbounded-pool2-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [119] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=119&ts=1731778033461
2024-11-16 17:27:13,486 [s3a-transfer-fso-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:13,486 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:27:13,487 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:13,487 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:13,487 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:13,487 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778033449; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:13,487 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:13,487 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:13,487 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:13,488 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:13,488 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:13,488 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:13,488 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:13,488 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:13,488 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,489 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,489 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:13,489 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,489 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=120&ts=1731778033461
2024-11-16 17:27:13,495 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:13,495 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:27:13,495 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:27:13,495 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:13,495 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:13,496 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,496 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,496 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:13,496 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,496 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000073&t0=117&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=120&ts=1731778033461
2024-11-16 17:27:13,501 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:13,502 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:13,502 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:27:13,502 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.014s
2024-11-16 17:27:13,502 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.014s
2024-11-16 17:27:13,502 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:27:13,502 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:13,502 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:13,503 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:13,514 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 17, active threads = 0, queued tasks = 0, completed tasks = 17], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_put_bytes=917504) (object_copy_requests=0) (committer_commits_reverted=0) (directories_created=14) (op_openfile=0) (object_list_request.failures=0) (op_hsync=0) (stream_write_bytes=917504) (stream_read_seek_backward_operations=0) (op_exists.failures=0) (store_io_throttled=0) (op_get_file_checksum=0) (op_xattr_get_named=0) (stream_aborted=0) (files_delete_rejected=0) (stream_write_block_uploads=14) (object_bulk_delete_request=28) (files_copied_bytes=0) (committer_materialize_file.failures=0) (stream_read_remote_stream_drain.failures=0) (object_put_request.failures=0) (multipart_upload_aborted=0) (multipart_instantiated=0) (stream_read_vectored_combined_ranges=12) (object_continue_list_request=0) (op_exists=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_aborted=0) (stream_write_block_uploads_aborted=0) (op_create=14) (stream_read_remote_stream_drain=2) (stream_write_queue_duration=0) (op_access=0) (stream_write_queue_duration.failures=0) (op_is_file.failures=0) (op_mkdirs=14) (op_glob_status=0) (op_xattr_list.failures=0) (ignored_errors=0) (op_list_files=0) (stream_read_unbuffered=1) (committer_load_single_pending_file.failures=0) (op_access.failures=0) (object_continue_list_request.failures=0) (op_get_content_summary.failures=0) (committer_stage_file_upload=0) (op_rename=0) (committer_commits_aborted=0) (committer_commits_created=0) (op_abort.failures=0) (committer_magic_marker_put=0) (stream_read_operations_incomplete=0) (stream_read_closed=2) (multipart_upload_started=0) (action_executor_acquired=0) (op_get_file_status=1) (object_delete_objects=28) (stream_read_seek_bytes_skipped=0) (stream_read_opened=2) (op_xattr_get_named_map.failures=0) (committer_commits_completed=0) (committer_materialize_file=0) (op_xattr_get_map.failures=0) (op_xattr_get_map=0) (op_list_files.failures=0) (stream_read_seek_forward_operations=0) (op_xattr_get_named_map=0) (op_createfile.failures=0) (multipart_upload_abort_under_path_invoked=0) (fake_directories_deleted=14) (op_get_delegation_token.failures=0) (stream_read_total_bytes=134396) (op_get_delegation_token=0) (multipart_upload_list=0) (op_create_non_recursive=0) (op_glob_status.failures=0) (committer_commit_job.failures=0) (object_bulk_delete_request.failures=0) (committer_commits.failures=0) (action_executor_acquired.failures=0) (audit_request_execution=163) (object_multipart_aborted.failures=0) (stream_read_bytes=3724) (stream_read_bytes_discarded_in_abort=0) (op_get_file_status.failures=0) (op_is_directory=0) (audit_access_check_failure=0) (stream_read_seek_policy_changed=12) (object_delete_request.failures=0) (committer_bytes_committed=0) (committer_tasks_failed=0) (op_create.failures=0) (delegation_tokens_issued.failures=0) (op_mkdirs.failures=0) (object_multipart_initiated=0) (object_metadata_request=39) (op_open=11) (object_multipart_initiated.failures=0) (stream_read_seek_operations=0) (op_abort=0) (committer_tasks_completed=0) (stream_read_vectored_operations=9) (object_delete_request=0) (op_rename.failures=0) (op_xattr_get_named.failures=0) (op_is_file=0) (op_copy_from_local_file.failures=0) (op_createfile=0) (committer_load_single_pending_file=0) (stream_write_exceptions_completing_upload=0) (action_http_get_request.failures=1) (files_deleted=14) (op_is_directory.failures=0) (op_delete=14) (stream_read_fully_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=13) (audit_span_creation=55) (object_put_request_completed=28) (action_file_opened=11) (store_io_request=163) (committer_magic_files_created=0) (audit_failure=0) (committer_jobs_failed=0) (fake_directories_created=0) (multipart_upload_part_put=0) (stream_read_version_mismatches=0) (action_file_opened.failures=0) (stream_write_total_data=1835008) (op_copy_from_local_file=0) (op_list_located_status=0) (stream_write_block_uploads_committed=0) (object_multipart_aborted=0) (object_list_request=56) (multipart_upload_part_put_bytes=0) (committer_bytes_uploaded=0) (stream_read_bytes_discarded_in_close=130672) (multipart_upload_list.failures=0) (stream_read_vectored_incoming_ranges=30) (object_put_request=28) (delegation_tokens_issued=0) (stream_write_total_time=0) (op_get_content_summary=0) (committer_magic_marker_put.failures=0) (action_http_head_request.failures=0) (op_list_status=0) (action_http_head_request=39) (committer_jobs_completed=0) (stream_read_close_operations=11) (object_select_requests=0) (multipart_upload_completed=0) (committer_commit_job=0) (files_copied=0) (op_get_file_checksum.failures=0) (stream_read_operations=2) (op_list_status.failures=0) (files_created=14) (op_xattr_list=0) (store_exists_probe=0) (op_delete.failures=0) (stream_read_exceptions=0) (committer_stage_file_upload.failures=0) (store_io_retry=0) (op_hflush=0) (directories_deleted=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=9985) (store_exists_probe.failures=0) (stream_write_exceptions=0));
gauges=((stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=14) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0));
minimums=((op_abort.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=9) (object_delete_request.failures.min=-1) (op_exists.failures.min=-1) (object_list_request.min=4) (op_xattr_get_named.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_file_status.failures.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_files.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_commit_job.failures.min=-1) (object_list_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_checksum.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_abort.failures.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (object_continue_list_request.min=-1) (op_is_file.failures.min=-1) (action_file_opened.min=3) (op_rename.failures.min=-1) (op_exists.min=-1) (op_mkdirs.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.min=22) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_createfile.min=-1) (multipart_upload_list.failures.min=-1) (multipart_upload_list.min=-1) (op_glob_status.min=-1) (stream_write_queue_duration.failures.min=-1) (op_glob_status.failures.min=-1) (delegation_tokens_issued.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_delegation_token.failures.min=-1) (committer_commit_job.min=-1) (op_access.min=-1) (op_get_file_status.min=5) (committer_materialize_file.min=-1) (op_delete.failures.min=-1) (op_list_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.min=2) (op_xattr_list.min=-1) (object_bulk_delete_request.min=4) (action_http_get_request.failures.min=0) (op_access.failures.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_file_opened.failures.min=-1) (store_exists_probe.failures.min=-1) (op_is_directory.min=-1) (op_create.min=5) (committer_stage_file_upload.min=-1) (committer_stage_file_upload.failures.min=-1) (op_mkdirs.min=15) (object_put_request.min=20) (op_list_files.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_drain.min=1) (object_delete_request.min=-1) (op_get_file_checksum.min=-1) (op_list_status.min=-1) (committer_materialize_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_delegation_token.min=-1) (object_continue_list_request.failures.min=-1) (stream_write_queue_duration.min=-1));
maximums=((op_get_content_summary.failures.max=-1) (op_createfile.max=-1) (object_list_request.failures.max=-1) (object_put_request.failures.max=-1) (committer_commit_job.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (op_get_file_checksum.max=-1) (object_delete_request.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_list.failures.max=-1) (object_list_request.max=220) (committer_commit_job.max=-1) (action_http_get_request.failures.max=0) (committer_load_single_pending_file.max=-1) (store_exists_probe.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_map.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.failures.max=-1) (committer_materialize_file.max=-1) (op_copy_from_local_file.failures.max=-1) (op_access.max=-1) (op_access.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.max=5) (delegation_tokens_issued.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_files.max=-1) (action_http_head_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_exists.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_aborted.max=-1) (object_continue_list_request.max=-1) (op_is_directory.max=-1) (object_multipart_initiated.max=-1) (op_rename.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.max=322) (action_http_get_request.max=17) (object_bulk_delete_request.failures.max=-1) (op_create.max=59) (op_get_content_summary.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named.max=-1) (op_get_delegation_token.failures.max=-1) (object_delete_request.max=-1) (object_put_request.max=63) (object_bulk_delete_request.max=16) (op_is_file.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.failures.max=-1) (op_create.failures.max=-1) (action_file_opened.max=8) (action_file_opened.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_mkdirs.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_head_request.max=18) (op_rename.failures.max=-1) (multipart_upload_list.max=-1) (op_exists.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_list_status.failures.max=-1) (op_is_directory.failures.max=-1) (op_abort.max=-1) (op_list_status.max=-1) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.max=-1) (op_glob_status.max=-1) (op_createfile.failures.max=-1) (op_delete.max=81) (stream_read_remote_stream_drain.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_list.max=-1));
means=((store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=11, sum=52, mean=4.7273)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=139, mean=11.5833)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=56, sum=680, mean=12.1429)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=28, sum=442, mean=15.7857)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=14, sum=181, mean=12.9286)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=39, sum=183, mean=4.6923)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=14, sum=522, mean=37.2857)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=14, sum=597, mean=42.6429)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=28, sum=216, mean=7.7143)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:13,515 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:13,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,515 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,515 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000074 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000074&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=121&ts=1731778033515
2024-11-16 17:27:13,521 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:13,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,521 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000074 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000074&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=121&ts=1731778033515
2024-11-16 17:27:13,524 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,524 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:13,524 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:13,524 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:13,524 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000074 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000074&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=121&ts=1731778033515
2024-11-16 17:27:13,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:13,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:13,528 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.004s
2024-11-16 17:27:13,528 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:13,529 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,529 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,529 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,529 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,529 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000075 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000075&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=121&ts=1731778033529
2024-11-16 17:27:13,534 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:13,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,535 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:13,535 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11677633873494454588.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:13,536 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11677633873494454588.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (op_abort=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (op_hsync=0) (object_put_request.failures=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1));
maximums=((object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11677633873494454588.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,536 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,536 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:13,536 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11677633873494454588.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:13,537 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:13,537 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:13,537 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:13,537 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:13,537 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000075 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000075&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=122&ts=1731778033529
2024-11-16 17:27:13,552 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:13,552 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:13,553 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.016s
2024-11-16 17:27:13,553 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11677633873494454588.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:13,553 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11677633873494454588.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,553 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11677633873494454588.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,553 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:13,553 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,554 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (object_put_request=1) (multipart_upload_part_put=0) (op_abort=0) (op_abort.failures=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (op_hflush=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=15) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=15) (object_multipart_aborted.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=15, mean=15.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:13,554 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:13,555 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,555 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,556 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:13,556 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000076 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000076&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=121&ts=1731778033555
2024-11-16 17:27:13,559 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:13,559 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:13,559 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,559 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:27:13,560 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:13,560 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:27:13,560 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:27:13,560 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,560 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,560 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:13,561 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000076 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=10-1199&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000076&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=123&ts=1731778033555
2024-11-16 17:27:13,570 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:27:13,570 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:27:13,571 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:27:13,571 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:27:13,571 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,572 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=315) (stream_read_vectored_operations=1) (stream_read_block_read=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_opened=0) (stream_read_fully_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (stream_read_block_read.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=875) (action_file_opened=1) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_closed=0) (stream_read_operations=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations_incomplete=0) (stream_read_exceptions=0) (stream_read_seek_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_remote_stream_drain=0) (stream_read_total_bytes=315) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request=1) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=4) (stream_read_remote_stream_aborted=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=4) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=10));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=10) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_aborted.failures.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:13,572 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:13,572 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,573 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,573 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=121&ts=1731778033572
2024-11-16 17:27:13,576 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,576 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,576 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=121&ts=1731778033572
2024-11-16 17:27:13,585 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:13,585 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:13,585 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:13,585 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:13,585 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:13,585 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:13,586 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:13,586 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:13,586 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:13,586 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:13,588 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:13,588 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:13,588 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:13,588 [s3a-transfer-fso-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:13,589 [s3a-transfer-fso-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,589 [s3a-transfer-fso-bucket-unbounded-pool2-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [124] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=124&ts=1731778033572
2024-11-16 17:27:13,595 [s3a-transfer-fso-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:13,595 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:27:13,596 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:13,596 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:13,596 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:13,596 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778033550; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:13,596 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:13,596 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:13,597 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:13,597 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:13,598 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:13,598 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:13,598 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:13,598 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:13,598 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,598 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,598 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:13,598 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,598 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=125&ts=1731778033572
2024-11-16 17:27:13,604 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:13,604 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:13,604 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:27:13,604 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:13,604 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:13,605 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,605 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,605 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:13,605 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,605 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000077&t0=121&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=125&ts=1731778033572
2024-11-16 17:27:13,610 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:13,610 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:13,610 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:27:13,610 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.012s
2024-11-16 17:27:13,610 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.012s
2024-11-16 17:27:13,610 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:27:13,610 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:13,610 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:13,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:13,624 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 18, active threads = 0, queued tasks = 0, completed tasks = 18], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_http_head_request.failures=0) (op_mkdirs=15) (op_access=0) (op_get_file_checksum.failures=0) (stream_read_close_operations=12) (object_multipart_initiated.failures=0) (stream_aborted=0) (op_get_content_summary.failures=0) (op_get_file_checksum=0) (op_is_file=0) (committer_stage_file_upload.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_seek_backward_operations=0) (op_xattr_get_map.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_fully_operations=0) (audit_span_creation=59) (committer_commit_job.failures=0) (multipart_upload_completed=0) (multipart_upload_started=0) (object_put_request=30) (stream_read_vectored_incoming_ranges=34) (stream_read_vectored_combined_ranges=13) (object_continue_list_request=0) (op_create.failures=0) (object_put_bytes=983040) (stream_read_seek_policy_changed=13) (op_list_status=0) (object_list_request=60) (committer_commits.failures=0) (stream_write_queue_duration=0) (committer_commits_created=0) (op_xattr_list=0) (action_http_get_request.failures=1) (stream_read_vectored_read_bytes_discarded=10860) (stream_write_block_uploads=15) (committer_commits_completed=0) (fake_directories_created=0) (op_xattr_get_map=0) (op_get_file_status.failures=0) (object_select_requests=0) (op_hsync=0) (op_xattr_get_named=0) (op_xattr_list.failures=0) (directories_deleted=0) (committer_stage_file_upload=0) (op_copy_from_local_file.failures=0) (object_metadata_request=42) (store_io_retry=0) (audit_failure=0) (committer_bytes_committed=0) (action_executor_acquired.failures=0) (object_delete_objects=30) (stream_read_seek_operations=0) (object_bulk_delete_request.failures=0) (stream_write_exceptions=0) (stream_write_bytes=983040) (stream_read_version_mismatches=0) (op_is_directory=0) (op_get_delegation_token.failures=0) (files_copied=0) (stream_read_remote_stream_aborted=0) (files_created=15) (stream_read_total_bytes=134711) (op_open=12) (files_delete_rejected=0) (op_hflush=0) (store_exists_probe=0) (op_exists=0) (stream_read_closed=2) (object_list_request.failures=0) (op_list_files.failures=0) (op_glob_status.failures=0) (multipart_instantiated=0) (object_put_request_completed=30) (stream_read_exceptions=0) (stream_write_exceptions_completing_upload=0) (files_deleted=15) (stream_read_remote_stream_drain.failures=0) (multipart_upload_part_put=0) (op_is_directory.failures=0) (op_xattr_get_named_map.failures=0) (op_rename.failures=0) (object_multipart_initiated=0) (op_list_status.failures=0) (stream_read_bytes=4039) (action_http_get_request=14) (stream_read_bytes_backwards_on_seek=0) (op_glob_status=0) (multipart_upload_abort_under_path_invoked=0) (object_put_request.failures=0) (store_io_request=175) (committer_magic_marker_put.failures=0) (op_create_non_recursive=0) (committer_magic_files_created=0) (committer_materialize_file=0) (op_xattr_get_named_map=0) (stream_write_total_time=0) (stream_read_operations=2) (op_create=15) (action_file_opened.failures=0) (op_copy_from_local_file=0) (action_http_head_request=42) (committer_commit_job=0) (op_delete.failures=0) (ignored_errors=0) (op_createfile=0) (op_get_delegation_token=0) (op_get_content_summary=0) (op_createfile.failures=0) (action_file_opened=12) (committer_tasks_completed=0) (object_delete_request.failures=0) (op_abort.failures=0) (committer_commits_aborted=0) (stream_write_queue_duration.failures=0) (audit_access_check_failure=0) (object_continue_list_request.failures=0) (committer_jobs_completed=0) (object_delete_request=0) (stream_read_seek_bytes_skipped=0) (stream_read_opened=2) (op_delete=15) (stream_read_seek_forward_operations=0) (stream_write_block_uploads_committed=0) (object_multipart_aborted=0) (committer_load_single_pending_file=0) (committer_commits_reverted=0) (store_exists_probe.failures=0) (committer_materialize_file.failures=0) (op_is_file.failures=0) (audit_request_execution=175) (action_executor_acquired=0) (object_copy_requests=0) (stream_read_vectored_operations=10) (op_rename=0) (op_xattr_get_named.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_list.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_exists.failures=0) (fake_directories_deleted=15) (committer_magic_marker_put=0) (multipart_upload_list=0) (committer_jobs_failed=0) (op_access.failures=0) (stream_read_operations_incomplete=0) (files_copied_bytes=0) (stream_read_unbuffered=1) (op_list_located_status=0) (stream_write_total_data=1966080) (op_list_files=0) (object_bulk_delete_request=30) (op_get_file_status=1) (op_openfile=0) (directories_created=15) (committer_tasks_failed=0) (stream_read_remote_stream_drain=2) (store_io_throttled=0) (stream_read_bytes_discarded_in_close=130672) (delegation_tokens_issued.failures=0) (op_abort=0) (multipart_upload_part_put_bytes=0) (op_mkdirs.failures=0) (multipart_upload_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (delegation_tokens_issued=0) (committer_bytes_uploaded=0));
gauges=((client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=15) (object_put_bytes_pending=0));
minimums=((stream_write_queue_duration.min=-1) (multipart_upload_list.min=-1) (action_executor_acquired.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.min=13) (committer_materialize_file.min=-1) (op_create.min=5) (op_xattr_list.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_file_status.min=5) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.min=-1) (op_xattr_get_map.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.failures.min=-1) (action_http_head_request.min=2) (object_delete_request.min=-1) (op_is_file.min=-1) (op_is_directory.min=-1) (op_exists.min=-1) (op_mkdirs.failures.min=-1) (op_list_files.failures.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_glob_status.min=-1) (op_create.failures.min=-1) (store_exists_probe.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_file.failures.min=-1) (committer_magic_marker_put.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_initiated.min=-1) (op_get_file_status.failures.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_delete.min=22) (op_delete.failures.min=-1) (object_bulk_delete_request.min=4) (op_copy_from_local_file.min=-1) (op_rename.failures.min=-1) (committer_commit_job.min=-1) (object_list_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_put_request.failures.min=-1) (op_createfile.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named.failures.min=-1) (op_exists.failures.min=-1) (action_http_head_request.failures.min=-1) (action_file_opened.min=4) (op_access.min=-1) (object_multipart_aborted.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_put_request.min=15) (delegation_tokens_issued.min=-1) (op_xattr_get_named_map.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_createfile.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_files.min=-1) (op_list_status.min=-1) (action_http_get_request.min=10) (action_executor_acquired.min=-1) (object_continue_list_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_delete_request.failures.min=-1) (object_list_request.min=4) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=0) (object_continue_list_request.min=-1) (op_rename.min=-1) (op_is_directory.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_file_checksum.failures.min=-1));
maximums=((op_get_content_summary.failures.max=-1) (action_executor_acquired.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_create.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.max=-1) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_delete_request.failures.max=-1) (op_list_files.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_map.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_stage_file_upload.max=-1) (op_delete.max=81) (action_file_opened.failures.max=-1) (op_list_status.failures.max=-1) (object_multipart_initiated.max=-1) (op_is_directory.failures.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.max=-1) (action_http_get_request.failures.max=0) (op_list_files.max=-1) (op_xattr_list.failures.max=-1) (op_is_file.max=-1) (object_put_request.max=63) (stream_read_remote_stream_drain.max=1) (op_exists.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.max=-1) (op_createfile.failures.max=-1) (op_rename.max=-1) (object_delete_request.max=-1) (op_create.max=59) (op_get_file_status.max=5) (op_delete.failures.max=-1) (object_list_request.max=220) (object_continue_list_request.failures.max=-1) (op_abort.failures.max=-1) (op_access.max=-1) (stream_write_queue_duration.max=-1) (op_mkdirs.max=322) (object_put_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_get_map.max=-1) (object_list_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (action_file_opened.max=8) (committer_load_single_pending_file.failures.max=-1) (op_list_status.max=-1) (delegation_tokens_issued.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_head_request.max=18) (store_exists_probe.max=-1) (op_rename.failures.max=-1) (committer_materialize_file.max=-1) (op_abort.max=-1) (op_copy_from_local_file.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_commit_job.max=-1) (op_mkdirs.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_access.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.max=-1) (committer_load_single_pending_file.max=-1) (object_bulk_delete_request.max=16) (object_continue_list_request.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_directory.max=-1) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.failures.max=-1) (action_http_get_request.max=17));
means=((op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=30, sum=227, mean=7.5667)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=30, sum=461, mean=15.3667)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=12, sum=56, mean=4.6667)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=60, sum=706, mean=11.7667)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=15, sum=188, mean=12.5333)) (action_http_get_request.mean=(samples=13, sum=149, mean=11.4615)) (op_delete.mean=(samples=15, sum=548, mean=36.5333)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=42, sum=190, mean=4.5238)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=15, sum=610, mean=40.6667)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:13,625 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:13,625 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,625 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,625 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,625 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,625 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000078 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000078&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=126&ts=1731778033624
2024-11-16 17:27:13,631 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:13,631 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,631 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,631 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,631 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,631 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000078 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000078&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=126&ts=1731778033624
2024-11-16 17:27:13,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,633 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:13,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:13,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:13,634 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000078 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000078&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=126&ts=1731778033624
2024-11-16 17:27:13,638 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:13,638 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:13,639 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:13,639 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:13,639 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,639 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,639 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,639 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,640 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000079 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000079&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=126&ts=1731778033639
2024-11-16 17:27:13,647 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:13,648 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,648 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:13,649 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3258445675238868758.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:13,650 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3258445675238868758.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (op_hflush=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (op_hsync=0) (object_put_request.failures=0) (stream_write_total_time=0) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (op_abort=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (object_put_request=0) (object_multipart_initiated=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3258445675238868758.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,650 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,650 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:13,650 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3258445675238868758.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:13,651 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:13,651 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:13,652 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:13,652 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:13,652 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000079 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000079&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=127&ts=1731778033639
2024-11-16 17:27:13,672 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:13,673 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:13,673 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.022s
2024-11-16 17:27:13,674 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3258445675238868758.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:13,674 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3258445675238868758.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,675 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3258445675238868758.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,675 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:13,675 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,677 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (op_hflush=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (op_abort=0) (stream_write_total_time=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=20) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=20) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=20, mean=20.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:13,677 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:13,678 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,678 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,678 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:13,678 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000080 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000080&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=126&ts=1731778033678
2024-11-16 17:27:13,681 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:13,681 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:13,681 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,681 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:27:13,681 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:13,681 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:27:13,682 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:27:13,682 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,682 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,682 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:13,682 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000080 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-7998&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000080&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=128&ts=1731778033678
2024-11-16 17:27:13,688 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.006s
2024-11-16 17:27:13,689 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:27:13,689 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:27:13,689 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,690 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_read_bytes_discarded=7699) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_block_read=0) (stream_read_seek_backward_operations=0) (action_file_opened=1) (stream_aborted=0) (stream_read_bytes=300) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=3) (stream_read_prefetch_operations.failures=0) (stream_read_seek_operations=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations=0) (stream_read_seek_bytes_skipped=0) (action_executor_acquired.failures=0) (action_http_get_request=1) (stream_read_bytes_discarded_in_close=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_read_total_bytes=300) (action_executor_acquired=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_operations=1) (stream_read_fully_operations=0) (stream_read_seek_policy_changed=1) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (stream_read_opened=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=7) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=3) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=7) (action_file_opened.max=3) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=7, mean=7.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:13,691 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:13,691 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,691 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,692 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=126&ts=1731778033691
2024-11-16 17:27:13,695 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,695 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,695 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=126&ts=1731778033691
2024-11-16 17:27:13,702 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:13,702 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:13,702 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:13,702 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:13,702 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:13,702 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:13,703 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:13,703 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:13,703 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:13,703 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:13,703 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:13,703 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:13,704 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:13,704 [s3a-transfer-fso-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:13,704 [s3a-transfer-fso-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,704 [s3a-transfer-fso-bucket-unbounded-pool2-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [129] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=129&ts=1731778033691
2024-11-16 17:27:13,711 [s3a-transfer-fso-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:13,711 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:27:13,712 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:13,712 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:13,712 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:13,712 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778033666; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:13,712 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:13,712 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:13,712 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:13,713 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:13,713 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:13,715 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:13,715 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:13,715 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:13,715 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,715 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,724 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:13,724 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,724 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=130&ts=1731778033691
2024-11-16 17:27:13,733 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:27:13,734 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:27:13,734 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.019s
2024-11-16 17:27:13,734 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:13,734 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:13,734 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,734 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,734 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:13,735 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,735 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000081&t0=126&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=130&ts=1731778033691
2024-11-16 17:27:13,745 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:27:13,745 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:27:13,745 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:27:13,745 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.030s
2024-11-16 17:27:13,745 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.032s
2024-11-16 17:27:13,745 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.042s
2024-11-16 17:27:13,745 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:13,746 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:13,747 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:13,760 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 19, active threads = 0, queued tasks = 0, completed tasks = 19], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_jobs_completed=0) (committer_commit_job.failures=0) (op_xattr_get_map=0) (directories_created=16) (stream_write_exceptions_completing_upload=0) (object_list_request.failures=0) (audit_request_execution=187) (op_abort.failures=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain=2) (committer_stage_file_upload.failures=0) (stream_read_operations=2) (action_http_get_request.failures=1) (op_rename=0) (stream_read_operations_incomplete=0) (object_continue_list_request.failures=0) (op_access.failures=0) (stream_read_unbuffered=1) (stream_write_queue_duration.failures=0) (stream_write_block_uploads=16) (stream_read_closed=2) (committer_stage_file_upload=0) (stream_write_queue_duration=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (store_exists_probe.failures=0) (stream_aborted=0) (stream_write_total_time=0) (committer_commits.failures=0) (object_multipart_initiated=0) (files_delete_rejected=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_combined_ranges=14) (committer_magic_marker_put=0) (op_openfile=0) (op_exists.failures=0) (directories_deleted=0) (committer_commits_reverted=0) (op_get_content_summary.failures=0) (audit_failure=0) (multipart_instantiated=0) (multipart_upload_list=0) (files_copied=0) (op_get_file_status=1) (op_delete=16) (op_create.failures=0) (stream_read_opened=2) (action_file_opened=13) (stream_read_vectored_read_bytes_discarded=18559) (object_delete_request=0) (op_get_file_checksum=0) (committer_materialize_file.failures=0) (stream_read_exceptions=0) (multipart_upload_list.failures=0) (op_list_located_status=0) (audit_span_creation=63) (op_glob_status=0) (op_open=13) (committer_commits_aborted=0) (delegation_tokens_issued=0) (op_copy_from_local_file.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_bytes_discarded=0) (store_io_retry=0) (stream_read_vectored_incoming_ranges=37) (op_xattr_get_named=0) (files_deleted=16) (op_get_delegation_token=0) (object_bulk_delete_request.failures=0) (op_xattr_get_named_map=0) (object_multipart_aborted=0) (op_create=16) (object_multipart_initiated.failures=0) (object_list_request=64) (object_delete_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (object_multipart_aborted.failures=0) (op_rename.failures=0) (committer_commit_job=0) (stream_write_bytes=1048576) (op_abort=0) (committer_bytes_committed=0) (action_http_head_request.failures=0) (op_create_non_recursive=0) (stream_read_vectored_operations=11) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_started=0) (op_hflush=0) (op_is_file.failures=0) (committer_bytes_uploaded=0) (stream_read_total_bytes=135011) (stream_read_seek_policy_changed=14) (object_metadata_request=45) (stream_read_remote_stream_aborted.failures=0) (ignored_errors=0) (op_list_files=0) (object_continue_list_request=0) (object_select_requests=0) (files_created=16) (stream_read_bytes=4339) (object_bulk_delete_request=32) (stream_read_version_mismatches=0) (op_glob_status.failures=0) (stream_write_exceptions=0) (op_exists=0) (object_put_request=32) (op_delete.failures=0) (op_mkdirs.failures=0) (op_list_status=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_total_data=2097152) (object_delete_objects=32) (stream_read_remote_stream_aborted=0) (store_io_request=187) (committer_jobs_failed=0) (op_hsync=0) (op_access=0) (stream_read_seek_operations=0) (op_list_files.failures=0) (audit_access_check_failure=0) (store_io_throttled=0) (object_copy_requests=0) (op_get_content_summary=0) (committer_load_single_pending_file=0) (multipart_upload_completed=0) (op_createfile=0) (op_createfile.failures=0) (op_list_status.failures=0) (multipart_upload_part_put=0) (op_get_file_status.failures=0) (object_put_request.failures=0) (object_put_request_completed=32) (op_xattr_get_named_map.failures=0) (op_copy_from_local_file=0) (stream_read_fully_operations=0) (committer_magic_files_created=0) (stream_read_close_operations=13) (action_http_head_request=45) (op_get_file_checksum.failures=0) (stream_read_bytes_discarded_in_close=130672) (committer_commits_completed=0) (op_xattr_get_named.failures=0) (op_mkdirs=16) (delegation_tokens_issued.failures=0) (store_exists_probe=0) (action_http_get_request=15) (op_xattr_get_map.failures=0) (op_xattr_list.failures=0) (committer_commits_created=0) (op_xattr_list=0) (files_copied_bytes=0) (fake_directories_deleted=16) (multipart_upload_part_put_bytes=0) (multipart_upload_aborted=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (op_is_directory.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain.failures=0) (committer_load_single_pending_file.failures=0) (stream_write_block_uploads_committed=0) (object_put_bytes=1048576) (committer_materialize_file=0) (committer_tasks_completed=0) (fake_directories_created=0) (committer_tasks_failed=0) (op_is_file=0) (op_get_delegation_token.failures=0) (op_is_directory=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_pending=16) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_content_summary.min=-1) (op_glob_status.failures.min=-1) (action_file_opened.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_delegation_token.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_status.min=5) (op_abort.failures.min=-1) (op_xattr_list.failures.min=-1) (op_list_status.min=-1) (op_get_file_status.failures.min=-1) (op_delete.min=22) (op_get_file_checksum.min=-1) (op_get_content_summary.failures.min=-1) (op_mkdirs.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_put_request.min=20) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_rename.failures.min=-1) (op_mkdirs.min=13) (stream_write_queue_duration.failures.min=-1) (op_list_status.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_file.min=-1) (op_createfile.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_head_request.min=2) (object_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.failures.min=-1) (op_copy_from_local_file.min=-1) (op_is_file.failures.min=-1) (op_rename.min=-1) (object_bulk_delete_request.min=4) (object_put_request.failures.min=-1) (multipart_upload_list.min=-1) (action_file_opened.min=3) (op_copy_from_local_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_list.min=-1) (committer_commit_job.min=-1) (op_access.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_create.min=5) (op_glob_status.min=-1) (op_create.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_get_request.failures.min=0) (op_list_files.min=-1) (op_xattr_get_map.min=-1) (object_continue_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_initiated.failures.min=-1) (object_list_request.min=4) (op_exists.min=-1) (op_xattr_get_named.min=-1) (op_createfile.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_http_head_request.failures.min=-1) (op_abort.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_materialize_file.failures.min=-1) (action_http_get_request.min=7) (op_is_directory.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (op_get_delegation_token.failures.min=-1) (object_continue_list_request.min=-1) (committer_materialize_file.min=-1) (op_delete.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.min=-1));
maximums=((op_list_status.max=-1) (op_createfile.max=-1) (op_create.failures.max=-1) (multipart_upload_list.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_get_request.failures.max=0) (op_glob_status.failures.max=-1) (op_exists.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.max=-1) (committer_materialize_file.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.max=-1) (op_glob_status.max=-1) (action_http_get_request.max=17) (action_executor_acquired.max=-1) (op_get_file_checksum.max=-1) (object_put_request.max=63) (action_executor_acquired.failures.max=-1) (op_xattr_get_map.max=-1) (object_put_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_stage_file_upload.max=-1) (op_is_directory.max=-1) (op_list_status.failures.max=-1) (delegation_tokens_issued.max=-1) (object_multipart_initiated.max=-1) (op_access.failures.max=-1) (op_abort.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named.failures.max=-1) (op_mkdirs.max=322) (object_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_delete.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_write_queue_duration.max=-1) (op_is_file.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.max=16) (object_multipart_aborted.failures.max=-1) (action_http_head_request.failures.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_continue_list_request.max=-1) (op_is_file.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_status.max=5) (action_file_opened.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_delete.max=81) (action_http_head_request.max=18) (op_access.max=-1) (action_file_opened.max=8) (op_copy_from_local_file.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_content_summary.max=-1) (op_rename.max=-1) (committer_commit_job.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_list.failures.max=-1) (op_is_directory.failures.max=-1) (object_list_request.max=220) (op_rename.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=59) (committer_commit_job.max=-1) (op_get_content_summary.failures.max=-1) (op_createfile.failures.max=-1) (committer_magic_marker_put.max=-1) (object_delete_request.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_exists.failures.max=-1) (op_mkdirs.failures.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=13, sum=59, mean=4.5385)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=16, sum=592, mean=37.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=64, sum=733, mean=11.4531)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=32, sum=246, mean=7.6875)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=16, sum=198, mean=12.3750)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=45, sum=199, mean=4.4222)) (action_http_get_request.mean=(samples=14, sum=156, mean=11.1429)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=16, sum=624, mean=39.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=32, sum=485, mean=15.1563)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:13,760 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:13,761 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,761 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,761 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,761 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,762 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000082 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000082&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=131&ts=1731778033760
2024-11-16 17:27:13,768 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:13,768 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,769 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000082 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000082&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=131&ts=1731778033760
2024-11-16 17:27:13,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,772 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:13,773 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:13,773 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:13,773 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000082 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000082&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=131&ts=1731778033760
2024-11-16 17:27:13,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:13,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:13,780 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:27:13,780 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:13,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,781 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,782 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000083 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000083&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=131&ts=1731778033780
2024-11-16 17:27:13,790 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:13,791 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,791 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:13,792 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1104304987126070664.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:13,793 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1104304987126070664.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (op_abort.failures=0) (action_executor_acquired=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (op_hsync=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (stream_write_exceptions=0) (object_put_request=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=0) (stream_write_total_time=0) (multipart_upload_completed=0) (op_hflush=0) (op_abort=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1104304987126070664.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,793 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,793 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:13,794 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1104304987126070664.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:13,795 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:13,795 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:13,795 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:13,795 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:13,796 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000083 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000083&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=132&ts=1731778033780
2024-11-16 17:27:13,811 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:13,811 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:13,811 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.016s
2024-11-16 17:27:13,812 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1104304987126070664.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:13,812 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1104304987126070664.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,812 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1104304987126070664.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,812 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:13,813 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,814 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=1) (op_hsync=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (op_abort=0) (object_put_request=1) (op_hflush=0) (stream_write_total_data=65536) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=16) (op_abort.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=16) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=16, mean=16.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:13,814 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:13,815 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,815 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,815 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:13,815 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=131&ts=1731778033815
2024-11-16 17:27:13,818 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:13,818 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:13,818 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,819 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:13,819 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:13,819 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:27:13,819 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,820 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,820 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:13,820 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=1947-2046&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=133&ts=1731778033815
2024-11-16 17:27:13,822 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:13,822 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,822 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,822 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:13,822 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=40960-41983&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=135&ts=1731778033815
2024-11-16 17:27:13,823 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,823 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:13,823 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:13,831 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:27:13,834 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,836 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:27:13,837 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=8192-14435&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000084&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=134&ts=1731778033815
2024-11-16 17:27:13,837 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,858 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.035s
2024-11-16 17:27:13,858 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:27:13,859 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:27:13,859 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:13,860 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_forward_operations=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=5) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_closed=0) (stream_read_vectored_combined_ranges=3) (action_http_get_request=3) (stream_aborted=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_opened=0) (action_file_opened.failures=0) (stream_read_bytes=1424) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=0) (stream_read_fully_operations=0) (action_executor_acquired=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_read_vectored_operations=1) (stream_read_seek_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_skipped=0) (stream_read_total_bytes=1424) (stream_read_seek_policy_changed=1) (stream_read_block_read=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_prefetch_operations.min=-1) (action_file_opened.min=3) (action_http_get_request.min=14) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1));
maximums=((action_file_opened.max=3) (action_http_get_request.max=35) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=63, mean=21.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:13,862 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:13,862 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,862 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,862 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=131&ts=1731778033861
2024-11-16 17:27:13,866 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,866 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,867 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=131&ts=1731778033861
2024-11-16 17:27:13,874 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:13,874 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:13,874 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:13,875 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:13,875 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:13,876 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:13,876 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:13,877 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:13,877 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:13,877 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:13,878 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:13,878 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:13,879 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:13,879 [s3a-transfer-fso-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:13,879 [s3a-transfer-fso-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,879 [s3a-transfer-fso-bucket-unbounded-pool2-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [141] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=141&ts=1731778033861
2024-11-16 17:27:13,898 [s3a-transfer-fso-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:27:13,898 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.019s
2024-11-16 17:27:13,898 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:13,899 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:13,899 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:13,899 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778033809; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:13,899 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:13,899 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:13,899 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:13,899 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:13,903 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:13,904 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:13,904 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:13,904 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:13,904 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,904 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,904 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:13,904 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,904 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=142&ts=1731778033861
2024-11-16 17:27:13,915 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:27:13,915 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:27:13,915 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:27:13,915 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:13,915 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:13,915 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:13,915 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:13,915 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:13,915 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:13,915 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000085&t0=131&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=142&ts=1731778033861
2024-11-16 17:27:13,921 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:13,921 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:13,921 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:27:13,921 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:27:13,922 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:27:13,922 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.045s
2024-11-16 17:27:13,922 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:13,922 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:13,923 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:13,937 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 20, active threads = 0, queued tasks = 0, completed tasks = 20], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_total_time=0) (op_xattr_list.failures=0) (object_put_request.failures=0) (audit_access_check_failure=0) (op_copy_from_local_file.failures=0) (stream_read_version_mismatches=0) (stream_read_exceptions=0) (committer_jobs_completed=0) (op_openfile=0) (object_metadata_request=48) (delegation_tokens_issued=0) (files_delete_rejected=0) (multipart_upload_part_put_bytes=0) (multipart_instantiated=0) (store_io_throttled=0) (stream_write_queue_duration.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain=2) (stream_read_bytes=5763) (audit_request_execution=201) (committer_bytes_uploaded=0) (op_glob_status=0) (stream_read_vectored_incoming_ranges=42) (stream_read_seek_bytes_discarded=0) (action_file_opened.failures=0) (object_list_request.failures=0) (object_continue_list_request.failures=0) (op_open=14) (stream_write_block_uploads_aborted=0) (committer_tasks_completed=0) (stream_read_bytes_discarded_in_close=130672) (delegation_tokens_issued.failures=0) (store_io_request=201) (committer_magic_files_created=0) (stream_read_total_bytes=136435) (committer_stage_file_upload.failures=0) (op_create_non_recursive=0) (committer_commits_created=0) (object_delete_request=0) (op_xattr_get_named_map=0) (op_hsync=0) (committer_materialize_file=0) (op_mkdirs.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_policy_changed=15) (op_xattr_get_map=0) (action_http_head_request.failures=0) (stream_read_fully_operations=0) (op_abort=0) (committer_materialize_file.failures=0) (committer_stage_file_upload=0) (object_list_request=68) (op_xattr_get_named_map.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_delete=17) (op_xattr_get_named=0) (committer_commits_reverted=0) (action_http_get_request.failures=1) (action_http_head_request=48) (committer_commit_job.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=17) (op_get_file_status.failures=0) (committer_magic_marker_put.failures=0) (store_exists_probe=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (files_copied_bytes=0) (object_put_request=34) (stream_read_bytes_backwards_on_seek=0) (op_xattr_list=0) (stream_read_seek_operations=0) (stream_read_closed=2) (stream_read_remote_stream_aborted=0) (op_is_file.failures=0) (op_get_file_checksum=0) (files_created=17) (stream_aborted=0) (action_executor_acquired=0) (directories_deleted=0) (op_list_status.failures=0) (op_get_content_summary.failures=0) (committer_tasks_failed=0) (op_xattr_get_map.failures=0) (audit_failure=0) (op_is_directory.failures=0) (stream_write_exceptions=0) (op_list_located_status=0) (op_mkdirs=17) (stream_read_vectored_read_bytes_discarded=24503) (object_bulk_delete_request=34) (committer_commit_job=0) (op_delete.failures=0) (stream_read_unbuffered=1) (stream_read_seek_bytes_skipped=0) (op_get_delegation_token.failures=0) (stream_read_operations_incomplete=0) (op_is_directory=0) (audit_span_creation=67) (object_bulk_delete_request.failures=0) (ignored_errors=0) (stream_read_operations=2) (committer_jobs_failed=0) (action_http_get_request=18) (store_io_retry=0) (stream_write_block_uploads_committed=0) (directories_created=17) (op_glob_status.failures=0) (multipart_upload_aborted=0) (object_delete_request.failures=0) (stream_read_seek_backward_operations=0) (committer_load_single_pending_file.failures=0) (multipart_upload_list=0) (op_exists.failures=0) (action_file_opened=14) (stream_write_block_uploads=17) (committer_load_single_pending_file=0) (op_access.failures=0) (multipart_upload_list.failures=0) (op_rename=0) (op_create.failures=0) (stream_write_queue_duration=0) (committer_bytes_committed=0) (op_get_file_status=1) (files_deleted=17) (op_hflush=0) (op_createfile=0) (op_copy_from_local_file=0) (stream_write_total_data=2228224) (stream_read_opened=2) (object_select_requests=0) (op_is_file=0) (multipart_upload_part_put=0) (op_createfile.failures=0) (object_put_request_completed=34) (object_delete_objects=34) (multipart_upload_abort_under_path_invoked=0) (committer_commits.failures=0) (stream_write_bytes=1114112) (object_multipart_initiated=0) (stream_read_close_operations=14) (op_list_status=0) (object_continue_list_request=0) (object_copy_requests=0) (op_xattr_get_named.failures=0) (op_access=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired.failures=0) (files_copied=0) (op_abort.failures=0) (stream_read_vectored_operations=12) (op_create=17) (op_get_file_checksum.failures=0) (store_exists_probe.failures=0) (multipart_upload_completed=0) (op_get_content_summary=0) (committer_magic_marker_put=0) (committer_commits_aborted=0) (fake_directories_deleted=17) (op_exists=0) (object_put_bytes=1114112) (committer_commits_completed=0) (fake_directories_created=0) (object_multipart_aborted.failures=0) (op_rename.failures=0) (multipart_upload_started=0) (op_list_files.failures=0) (op_get_delegation_token=0) (op_list_files=0));
gauges=((stream_write_block_uploads_pending=17) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0));
minimums=((op_list_files.failures.min=-1) (op_access.failures.min=-1) (op_get_file_status.min=5) (op_xattr_list.failures.min=-1) (object_list_request.min=4) (committer_magic_marker_put.failures.min=-1) (op_create.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.min=-1) (op_is_directory.min=-1) (op_glob_status.min=-1) (op_glob_status.failures.min=-1) (op_rename.failures.min=-1) (object_multipart_initiated.min=-1) (object_bulk_delete_request.min=4) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.min=-1) (op_abort.min=-1) (op_is_file.min=-1) (action_file_opened.min=3) (op_createfile.failures.min=-1) (op_is_file.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.failures.min=-1) (object_put_request.min=16) (op_xattr_get_named_map.failures.min=-1) (op_get_file_checksum.min=-1) (op_exists.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (action_executor_acquired.min=-1) (op_mkdirs.min=13) (action_file_opened.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.failures.min=-1) (object_delete_request.min=-1) (op_access.min=-1) (delegation_tokens_issued.failures.min=-1) (op_delete.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_createfile.min=-1) (action_http_get_request.min=14) (committer_stage_file_upload.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_continue_list_request.min=-1) (op_list_files.min=-1) (multipart_upload_list.min=-1) (object_multipart_aborted.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.failures.min=-1) (op_rename.min=-1) (store_exists_probe.failures.min=-1) (store_exists_probe.min=-1) (action_http_head_request.min=2) (op_xattr_get_map.min=-1) (op_create.min=5) (op_get_file_status.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_delete_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_content_summary.failures.min=-1) (op_list_status.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_stage_file_upload.min=-1) (op_delete.min=22) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=0) (delegation_tokens_issued.min=-1) (op_mkdirs.failures.min=-1) (op_get_content_summary.min=-1) (op_list_status.failures.min=-1) (object_put_request.failures.min=-1) (committer_commit_job.min=-1) (op_get_delegation_token.min=-1) (op_exists.min=-1));
maximums=((op_is_file.failures.max=-1) (op_glob_status.max=-1) (action_http_get_request.max=35) (op_create.failures.max=-1) (action_file_opened.max=8) (op_get_delegation_token.max=-1) (op_xattr_list.failures.max=-1) (op_rename.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=63) (op_list_files.max=-1) (op_get_file_checksum.max=-1) (object_multipart_aborted.max=-1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_access.max=-1) (op_delete.max=81) (object_continue_list_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_list.max=-1) (action_file_opened.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=1) (store_exists_probe.max=-1) (delegation_tokens_issued.max=-1) (op_is_file.max=-1) (op_is_directory.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_http_head_request.failures.max=-1) (action_executor_acquired.max=-1) (op_list_files.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_list_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.failures.max=-1) (action_http_head_request.max=18) (op_createfile.max=-1) (committer_stage_file_upload.failures.max=-1) (object_continue_list_request.max=-1) (op_get_delegation_token.failures.max=-1) (op_abort.max=-1) (op_get_file_status.max=5) (committer_commit_job.max=-1) (committer_stage_file_upload.max=-1) (store_exists_probe.failures.max=-1) (op_exists.failures.max=-1) (op_createfile.failures.max=-1) (op_exists.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.max=220) (committer_materialize_file.max=-1) (action_http_get_request.failures.max=0) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_content_summary.max=-1) (stream_write_queue_duration.failures.max=-1) (op_abort.failures.max=-1) (op_create.max=59) (op_xattr_get_named.max=-1) (op_delete.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_status.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_delete_request.max=-1) (op_rename.failures.max=-1) (object_bulk_delete_request.max=16) (op_xattr_get_map.max=-1) (op_access.failures.max=-1) (op_mkdirs.max=322) (op_list_status.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_initiated.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.max=-1) (object_put_request.failures.max=-1));
means=((op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=17, sum=638, mean=37.5294)) (action_file_opened.mean=(samples=14, sum=62, mean=4.4286)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=68, sum=775, mean=11.3971)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (action_http_head_request.mean=(samples=48, sum=209, mean=4.3542)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=34, sum=263, mean=7.7353)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=17, sum=644, mean=37.8824)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=17, sum=219, mean=12.8824)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=34, sum=508, mean=14.9412)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=17, sum=209, mean=12.2941)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:13,938 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:13,938 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,938 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,938 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,938 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,938 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000086 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000086&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=143&ts=1731778033938
2024-11-16 17:27:13,945 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:13,945 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,945 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:13,945 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:13,945 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:13,945 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000086 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000086&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=143&ts=1731778033938
2024-11-16 17:27:13,948 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:13,948 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:13,948 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:13,948 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:13,949 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000086 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000086&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=143&ts=1731778033938
2024-11-16 17:27:13,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:13,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:13,969 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.021s
2024-11-16 17:27:13,969 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:13,969 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:13,969 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,970 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:13,970 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:13,971 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000087 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000087&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=143&ts=1731778033969
2024-11-16 17:27:13,979 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:13,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:13,979 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:13,980 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2485090990545503411.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:13,981 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2485090990545503411.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_abort=0) (multipart_upload_completed=0) (stream_write_total_data=0) (op_hsync=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (object_put_request=0) (object_multipart_initiated=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (stream_write_block_uploads=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2485090990545503411.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:13,981 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:13,981 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:13,981 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2485090990545503411.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:13,985 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:13,985 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:13,986 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:13,986 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:13,987 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000087 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000087&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=144&ts=1731778033969
2024-11-16 17:27:14,006 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:14,006 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:14,006 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.021s
2024-11-16 17:27:14,007 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2485090990545503411.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:14,007 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2485090990545503411.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,007 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2485090990545503411.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,007 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:14,007 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,008 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads=1) (action_executor_acquired.failures=0) (object_put_request=1) (op_hflush=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (op_abort.failures=0) (stream_write_total_time=0) (stream_write_total_data=65536) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=19));
maximums=((op_abort.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=19) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=19, mean=19.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:14,009 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:14,009 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,009 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,010 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:14,010 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000088 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000088&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=143&ts=1731778034009
2024-11-16 17:27:14,015 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:14,015 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:14,015 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,015 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:27:14,015 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:27:14,021 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:27:14,022 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:14,022 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:27:14,021 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:14,023 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,023 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,024 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:27:14,024 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=100-199&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000088&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=145&ts=1731778034009
2024-11-16 17:27:14,025 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=100-65535&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000088&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=143&ts=1731778034009
2024-11-16 17:27:14,035 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.013s
2024-11-16 17:27:14,035 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:14,036 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:27:14,036 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.012s
2024-11-16 17:27:14,037 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:14,038 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:27:14,039 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:27:14,039 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:27:14,039 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7541 bytes
2024-11-16 17:27:14,040 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:14,040 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:14,041 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:14,041 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8643 bytes
2024-11-16 17:27:14,042 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:27:14,042 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:14,043 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_block_read=0) (stream_read_close_operations=1) (action_http_get_request=2) (stream_read_remote_stream_aborted.failures=0) (action_file_opened.failures=0) (stream_read_unbuffered=0) (stream_read_seek_backward_operations=0) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_read_total_bytes=65536) (stream_read_vectored_combined_ranges=1) (stream_read_vectored_operations=1) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=1) (stream_read_prefetch_operations.failures=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_bytes=200) (stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_opened=1) (stream_read_block_read.failures=0) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_version_mismatches=0) (action_http_get_request.failures=0) (stream_read_closed=1) (stream_read_exceptions=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=1) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted=0) (stream_read_operations=1) (stream_read_fully_operations=1) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations_incomplete=0) (stream_aborted=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=11) (stream_read_remote_stream_drain.min=3) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=6) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=3) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=13) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=6) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=24, mean=12.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=3, mean=3.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:14,045 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:14,045 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,046 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,046 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=143&ts=1731778034045
2024-11-16 17:27:14,051 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,051 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,052 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=143&ts=1731778034045
2024-11-16 17:27:14,062 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:27:14,062 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:14,062 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:14,063 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:14,063 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:14,063 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:14,063 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:14,063 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:14,063 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:14,063 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:14,063 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:14,063 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:14,064 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:14,064 [s3a-transfer-fso-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:14,064 [s3a-transfer-fso-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,064 [s3a-transfer-fso-bucket-unbounded-pool2-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [146] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=146&ts=1731778034045
2024-11-16 17:27:14,073 [s3a-transfer-fso-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:27:14,073 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:27:14,073 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:14,073 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:14,074 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:14,074 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778034004; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:14,074 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:14,074 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:14,074 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:14,074 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:14,075 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:14,075 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:14,075 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:14,075 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:14,075 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,075 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,075 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:14,075 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,075 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=147&ts=1731778034045
2024-11-16 17:27:14,082 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:27:14,082 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:27:14,082 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:27:14,082 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:14,082 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:14,082 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,082 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,083 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:14,083 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,083 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000089&t0=143&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=147&ts=1731778034045
2024-11-16 17:27:14,090 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:27:14,090 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:27:14,090 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:27:14,090 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:27:14,090 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:27:14,091 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.028s
2024-11-16 17:27:14,091 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:14,091 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:14,093 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:14,105 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 21, active threads = 0, queued tasks = 0, completed tasks = 21], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_incoming_ranges=43) (object_bulk_delete_request=36) (stream_read_total_bytes=201971) (multipart_upload_list.failures=0) (committer_materialize_file.failures=0) (op_xattr_get_map=0) (committer_commits_created=0) (committer_load_single_pending_file.failures=0) (op_create.failures=0) (op_access=0) (audit_access_check_failure=0) (stream_read_close_operations=15) (committer_commits.failures=0) (stream_read_vectored_operations=13) (stream_read_seek_bytes_skipped=0) (op_is_directory=0) (op_list_located_status=0) (store_io_request=214) (multipart_upload_abort_under_path_invoked=0) (action_file_opened=15) (committer_jobs_failed=0) (object_delete_request=0) (op_xattr_get_named=0) (stream_read_remote_stream_aborted=0) (directories_deleted=0) (committer_magic_files_created=0) (files_created=18) (op_list_status.failures=0) (committer_commits_reverted=0) (object_list_request.failures=0) (op_xattr_get_named_map=0) (committer_tasks_failed=0) (multipart_upload_aborted=0) (committer_magic_marker_put=0) (fake_directories_created=0) (op_exists.failures=0) (files_delete_rejected=0) (action_executor_acquired=0) (op_list_status=0) (op_xattr_get_named.failures=0) (committer_load_single_pending_file=0) (op_abort.failures=0) (op_delete=18) (stream_read_seek_backward_operations=0) (ignored_errors=0) (op_is_directory.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_operations_incomplete=0) (op_get_file_status=1) (op_access.failures=0) (op_openfile=0) (committer_commits_completed=0) (multipart_instantiated=0) (multipart_upload_completed=0) (op_create=18) (object_metadata_request=51) (object_multipart_initiated.failures=0) (op_mkdirs.failures=0) (op_glob_status=0) (stream_write_total_data=2359296) (op_xattr_get_map.failures=0) (op_list_files.failures=0) (stream_write_block_uploads_committed=0) (object_bulk_delete_request.failures=0) (op_xattr_list.failures=0) (object_put_request=36) (op_get_file_checksum.failures=0) (committer_magic_marker_put.failures=0) (stream_read_closed=3) (object_multipart_aborted.failures=0) (op_get_file_status.failures=0) (delegation_tokens_issued=0) (action_executor_acquired.failures=0) (files_copied_bytes=0) (files_deleted=18) (stream_write_queue_duration=0) (stream_read_seek_forward_operations=0) (committer_tasks_completed=0) (action_http_get_request=20) (object_continue_list_request=0) (multipart_upload_part_put_bytes=0) (committer_jobs_completed=0) (stream_read_seek_bytes_discarded=0) (op_get_delegation_token.failures=0) (stream_read_opened=3) (object_delete_request.failures=0) (op_abort=0) (op_is_file.failures=0) (object_select_requests=0) (action_file_opened.failures=0) (store_io_throttled=0) (op_rename=0) (op_mkdirs=18) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0) (committer_stage_file_upload.failures=0) (op_list_files=0) (stream_aborted=0) (stream_read_bytes_discarded_in_close=196008) (stream_read_seek_policy_changed=16) (stream_read_remote_stream_drain.failures=0) (op_rename.failures=0) (op_createfile.failures=0) (stream_write_total_time=0) (directories_created=18) (stream_read_vectored_combined_ranges=18) (op_copy_from_local_file=0) (stream_read_fully_operations=1) (object_multipart_aborted=0) (op_hflush=0) (op_hsync=0) (object_put_request.failures=0) (stream_read_unbuffered=1) (object_copy_requests=0) (action_http_head_request=51) (stream_read_remote_stream_aborted.failures=0) (store_exists_probe.failures=0) (store_exists_probe=0) (op_get_content_summary.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=18) (object_list_request=72) (stream_write_bytes=1179648) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration.failures=0) (op_copy_from_local_file.failures=0) (op_get_file_checksum=0) (object_put_request_completed=36) (op_get_content_summary=0) (op_get_delegation_token=0) (audit_request_execution=214) (multipart_upload_started=0) (action_http_get_request.failures=1) (op_create_non_recursive=0) (audit_failure=0) (op_xattr_get_named_map.failures=0) (object_continue_list_request.failures=0) (committer_bytes_uploaded=0) (action_http_head_request.failures=0) (multipart_upload_part_put=0) (committer_commit_job.failures=0) (op_xattr_list=0) (op_delete.failures=0) (fake_directories_deleted=18) (stream_read_version_mismatches=0) (stream_read_operations=3) (stream_read_exceptions=0) (committer_bytes_committed=0) (committer_stage_file_upload=0) (object_multipart_initiated=0) (stream_read_remote_stream_drain=3) (object_delete_objects=36) (delegation_tokens_issued.failures=0) (op_exists=0) (op_open=15) (object_put_bytes=1179648) (files_copied=0) (committer_commits_aborted=0) (stream_read_seek_operations=0) (op_createfile=0) (stream_read_vectored_read_bytes_discarded=24503) (op_is_file=0) (committer_materialize_file=0) (committer_commit_job=0) (audit_span_creation=71) (multipart_upload_list=0) (store_io_retry=0) (stream_read_bytes=5963) (op_glob_status.failures=0));
gauges=((stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_pending=18) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_glob_status.failures.min=-1) (op_rename.failures.min=-1) (op_list_status.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.min=-1) (op_is_directory.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.min=-1) (op_glob_status.min=-1) (object_multipart_aborted.failures.min=-1) (op_create.failures.min=-1) (op_createfile.failures.min=-1) (op_access.failures.min=-1) (op_is_file.min=-1) (op_get_file_status.min=5) (op_list_files.min=-1) (op_xattr_get_named.min=-1) (object_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_delegation_token.min=-1) (object_list_request.min=4) (op_exists.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_file.failures.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.min=-1) (op_createfile.min=-1) (op_abort.failures.min=-1) (op_rename.min=-1) (action_file_opened.min=6) (action_executor_acquired.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_content_summary.failures.min=-1) (op_access.min=-1) (store_exists_probe.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_drain.min=3) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_delete_request.failures.min=-1) (op_list_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (action_http_get_request.min=11) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.min=22) (object_put_request.failures.min=-1) (op_mkdirs.min=13) (op_list_files.failures.min=-1) (op_get_file_checksum.failures.min=-1) (multipart_upload_list.min=-1) (object_multipart_initiated.min=-1) (op_get_file_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_file_checksum.min=-1) (delegation_tokens_issued.failures.min=-1) (op_create.min=5) (op_exists.failures.min=-1) (op_mkdirs.failures.min=-1) (op_delete.failures.min=-1) (object_delete_request.min=-1) (stream_write_queue_duration.min=-1) (object_put_request.min=19) (committer_stage_file_upload.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_materialize_file.failures.min=-1) (object_bulk_delete_request.min=4) (op_xattr_get_named_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_http_get_request.failures.min=0) (object_continue_list_request.failures.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.min=-1) (op_abort.min=-1) (action_http_head_request.min=2));
maximums=((committer_stage_file_upload.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.max=3) (store_exists_probe.max=-1) (object_multipart_initiated.max=-1) (op_is_directory.failures.max=-1) (object_list_request.failures.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_createfile.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_file.failures.max=-1) (op_get_file_status.failures.max=-1) (action_executor_acquired.max=-1) (op_list_files.max=-1) (op_get_delegation_token.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_file_checksum.max=-1) (op_xattr_list.failures.max=-1) (object_put_request.max=63) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_directory.max=-1) (multipart_upload_list.max=-1) (object_delete_request.failures.max=-1) (action_http_get_request.failures.max=0) (object_bulk_delete_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.max=-1) (object_delete_request.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.max=-1) (op_get_content_summary.max=-1) (op_list_files.failures.max=-1) (op_abort.max=-1) (op_rename.max=-1) (op_list_status.max=-1) (op_abort.failures.max=-1) (action_file_opened.max=8) (action_http_head_request.failures.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_delete.max=81) (delegation_tokens_issued.failures.max=-1) (op_rename.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_mkdirs.max=322) (op_list_status.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_commit_job.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_continue_list_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_initiated.failures.max=-1) (op_create.max=59) (committer_stage_file_upload.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.max=18) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.failures.max=-1) (op_create.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_commit_job.max=-1) (op_exists.max=-1) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.max=16) (op_createfile.max=-1) (object_list_request.max=220) (object_continue_list_request.max=-1) (action_http_get_request.max=35) (op_xattr_list.max=-1) (object_multipart_aborted.max=-1) (op_get_file_status.max=5) (op_xattr_get_named.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_delete.failures.max=-1));
means=((op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=15, sum=68, mean=4.5333)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=36, sum=546, mean=15.1667)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=36, sum=277, mean=7.6944)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=18, sum=675, mean=37.5000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=18, sum=666, mean=37.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=18, sum=220, mean=12.2222)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=72, sum=810, mean=11.2500)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=51, sum=222, mean=4.3529)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=243, mean=12.7895)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:14,106 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:14,106 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,106 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,106 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,107 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,107 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000090 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000090&t0=148&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=148&ts=1731778034106
2024-11-16 17:27:14,112 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,113 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000090 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000090&t0=148&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=148&ts=1731778034106
2024-11-16 17:27:14,116 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,117 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:14,117 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:14,118 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:14,118 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000090 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000090&t0=148&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=148&ts=1731778034106
2024-11-16 17:27:14,135 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:14,136 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:14,136 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.019s
2024-11-16 17:27:14,137 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:14,137 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,139 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,139 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000091 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000091&t0=148&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=148&ts=1731778034137
2024-11-16 17:27:14,145 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,146 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,147 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:14,147 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7956497733601959097.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:14,148 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7956497733601959097.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (object_put_request.failures=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (op_hsync=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=0) (stream_write_total_time=0) (op_abort=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7956497733601959097.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,149 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,149 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:14,150 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7956497733601959097.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:14,150 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:14,151 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:14,151 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:14,152 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:14,152 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000091 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000091&t0=148&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=149&ts=1731778034137
2024-11-16 17:27:14,166 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:14,166 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:14,166 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.015s
2024-11-16 17:27:14,166 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7956497733601959097.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:14,166 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7956497733601959097.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,166 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7956497733601959097.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,167 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:14,167 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,167 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_queue_duration=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (stream_write_block_uploads=1) (op_hsync=0) (object_multipart_aborted=0) (op_abort=0) (op_hflush=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (object_put_request=1) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (action_executor_acquired=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_put_request.min=14) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=14) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=14, mean=14.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:14,167 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:14,169 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,169 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,169 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:14,169 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [150] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000092 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000092/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000092&t0=150&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=150&ts=1731778034169
2024-11-16 17:27:14,172 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:14,172 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:14,172 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,172 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:27:14,173 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened=1) (stream_read_seek_forward_operations=0) (action_file_opened.failures=0) (stream_read_operations=0) (action_http_get_request=0) (stream_read_closed=0) (stream_read_vectored_operations=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (stream_read_close_operations=1) (stream_read_total_bytes=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_policy_changed=1) (stream_read_operations_incomplete=0) (stream_read_seek_operations=0) (action_executor_acquired.failures=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes=0) (stream_read_prefetch_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_opened=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_unbuffered=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=3) (action_http_get_request.min=-1) (action_executor_acquired.min=-1));
maximums=((action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=3) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)));

2024-11-16 17:27:14,174 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:14,175 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,175 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,175 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093&t0=148&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=148&ts=1731778034174
2024-11-16 17:27:14,177 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,177 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,177 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093&t0=148&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=148&ts=1731778034174
2024-11-16 17:27:14,182 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,182 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:14,182 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:14,183 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:14,183 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:14,183 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:14,183 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:14,183 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:14,183 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:14,183 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:14,183 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:14,183 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:14,183 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:14,184 [s3a-transfer-fso-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:14,184 [s3a-transfer-fso-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,184 [s3a-transfer-fso-bucket-unbounded-pool2-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [151] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093&t0=148&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=151&ts=1731778034174
2024-11-16 17:27:14,189 [s3a-transfer-fso-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,189 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:27:14,193 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:14,193 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:14,194 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:14,194 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778034164; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:14,194 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:14,194 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:14,194 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:14,194 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:14,194 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:14,194 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:14,195 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:14,195 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:14,195 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,195 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,195 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:14,195 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,195 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093&t0=148&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=152&ts=1731778034174
2024-11-16 17:27:14,200 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:14,200 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:14,200 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:14,200 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:14,201 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:14,201 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,201 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,201 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:14,201 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,201 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000093&t0=148&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=152&ts=1731778034174
2024-11-16 17:27:14,205 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:14,205 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.004s
2024-11-16 17:27:14,205 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.004s
2024-11-16 17:27:14,205 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.011s
2024-11-16 17:27:14,205 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.011s
2024-11-16 17:27:14,205 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.022s
2024-11-16 17:27:14,206 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:14,206 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:14,207 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:14,218 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 23, active threads = 0, queued tasks = 0, completed tasks = 23], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_completed=0) (stream_read_opened=3) (stream_read_exceptions=0) (object_metadata_request=54) (object_bulk_delete_request.failures=0) (op_openfile=0) (object_list_request.failures=0) (multipart_upload_list=0) (op_delete.failures=0) (op_get_content_summary.failures=0) (multipart_upload_part_put_bytes=0) (committer_magic_marker_put=0) (op_xattr_get_map.failures=0) (op_mkdirs.failures=0) (action_http_head_request.failures=0) (op_access=0) (object_copy_requests=0) (stream_read_operations=3) (delegation_tokens_issued=0) (op_create.failures=0) (multipart_upload_started=0) (object_delete_objects=38) (op_is_file.failures=0) (audit_access_check_failure=0) (committer_magic_files_created=0) (action_http_get_request=20) (op_createfile.failures=0) (stream_read_seek_backward_operations=0) (committer_bytes_committed=0) (committer_magic_marker_put.failures=0) (op_list_status=0) (committer_stage_file_upload=0) (op_create=19) (audit_failure=0) (store_io_throttled=0) (op_xattr_get_named_map=0) (op_rename=0) (stream_read_seek_operations=0) (ignored_errors=0) (object_continue_list_request.failures=0) (stream_write_bytes=1245184) (files_delete_rejected=0) (op_copy_from_local_file=0) (stream_read_remote_stream_drain=3) (op_abort=0) (store_io_request=225) (op_is_directory=0) (committer_load_single_pending_file=0) (action_http_get_request.failures=1) (op_glob_status=0) (committer_load_single_pending_file.failures=0) (stream_read_bytes_discarded_in_close=196008) (committer_jobs_completed=0) (op_get_file_checksum.failures=0) (object_select_requests=0) (fake_directories_deleted=19) (stream_read_total_bytes=201971) (op_get_file_checksum=0) (op_list_files=0) (op_xattr_get_map=0) (stream_read_version_mismatches=0) (stream_read_close_operations=16) (action_http_head_request=54) (op_access.failures=0) (op_delete=19) (files_deleted=19) (committer_jobs_failed=0) (object_delete_request.failures=0) (op_exists=0) (op_create_non_recursive=0) (stream_write_queue_duration.failures=0) (audit_span_creation=75) (files_created=19) (op_list_files.failures=0) (stream_aborted=0) (op_exists.failures=0) (store_exists_probe=0) (op_get_file_status=1) (stream_read_unbuffered=1) (object_list_request=76) (object_put_bytes=1245184) (stream_read_fully_operations=1) (committer_tasks_failed=0) (object_continue_list_request=0) (stream_write_block_uploads_committed=0) (committer_commits_completed=0) (op_is_directory.failures=0) (action_executor_acquired=0) (op_hsync=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits.failures=0) (op_get_content_summary=0) (multipart_upload_list.failures=0) (stream_read_seek_bytes_skipped=0) (object_put_request=38) (op_get_delegation_token=0) (committer_tasks_completed=0) (stream_write_block_uploads_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes=5963) (op_hflush=0) (op_open=16) (object_multipart_initiated.failures=0) (action_file_opened=16) (stream_write_queue_duration=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_aborted=0) (stream_write_total_time=0) (committer_materialize_file.failures=0) (object_multipart_initiated=0) (op_is_file=0) (object_put_request.failures=0) (audit_request_execution=225) (stream_read_remote_stream_aborted=0) (op_rename.failures=0) (multipart_instantiated=0) (stream_write_total_data=2490368) (files_copied_bytes=0) (op_copy_from_local_file.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_backwards_on_seek=0) (object_bulk_delete_request=38) (stream_read_vectored_incoming_ranges=43) (committer_commit_job.failures=0) (op_get_delegation_token.failures=0) (committer_commits_reverted=0) (op_xattr_get_named=0) (stream_read_closed=3) (directories_deleted=0) (op_xattr_list=0) (op_glob_status.failures=0) (stream_write_block_uploads=19) (op_createfile=0) (stream_read_bytes_discarded_in_abort=0) (op_abort.failures=0) (op_get_file_status.failures=0) (fake_directories_created=0) (op_mkdirs=19) (op_xattr_get_named.failures=0) (committer_materialize_file=0) (op_xattr_get_named_map.failures=0) (stream_read_vectored_read_bytes_discarded=24503) (committer_stage_file_upload.failures=0) (stream_read_operations_incomplete=0) (committer_bytes_uploaded=0) (directories_created=19) (op_list_status.failures=0) (delegation_tokens_issued.failures=0) (committer_commit_job=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_part_put=0) (stream_read_vectored_operations=13) (op_xattr_list.failures=0) (op_list_located_status=0) (action_file_opened.failures=0) (store_exists_probe.failures=0) (object_multipart_aborted=0) (files_copied=0) (committer_commits_aborted=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (object_put_request_completed=38) (object_delete_request=0) (stream_write_exceptions=0) (stream_read_vectored_combined_ranges=18) (stream_read_seek_policy_changed=17) (committer_commits_created=0) (store_io_retry=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_pending=19) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_active=0));
minimums=((object_delete_request.min=-1) (multipart_upload_list.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_commit_job.min=-1) (object_continue_list_request.failures.min=-1) (op_rename.min=-1) (committer_materialize_file.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_aborted.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.min=-1) (op_rename.failures.min=-1) (action_file_opened.min=3) (committer_stage_file_upload.failures.min=-1) (op_delete.min=22) (action_http_get_request.failures.min=0) (op_is_file.min=-1) (committer_materialize_file.failures.min=-1) (object_continue_list_request.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.min=-1) (object_list_request.failures.min=-1) (op_get_file_status.failures.min=-1) (object_put_request.min=14) (op_glob_status.min=-1) (stream_read_remote_stream_drain.min=3) (object_multipart_initiated.failures.min=-1) (object_list_request.min=4) (action_file_opened.failures.min=-1) (op_get_content_summary.min=-1) (op_createfile.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.min=-1) (op_delete.failures.min=-1) (op_access.min=-1) (op_create.min=5) (delegation_tokens_issued.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_list.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_get_request.min=11) (op_get_file_status.min=5) (stream_read_remote_stream_drain.failures.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.min=-1) (op_list_status.failures.min=-1) (op_list_files.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_write_queue_duration.min=-1) (multipart_upload_list.failures.min=-1) (committer_commit_job.failures.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_map.min=-1) (action_http_head_request.min=2) (op_glob_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.min=-1) (op_createfile.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_status.min=-1) (op_exists.failures.min=-1) (op_mkdirs.min=13) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=4) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_directory.min=-1) (op_create.failures.min=-1));
maximums=((op_glob_status.max=-1) (op_is_directory.max=-1) (object_delete_request.failures.max=-1) (op_get_file_status.failures.max=-1) (object_continue_list_request.max=-1) (action_http_get_request.max=35) (committer_commit_job.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.max=-1) (action_http_head_request.max=18) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=3) (committer_stage_file_upload.max=-1) (op_list_files.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_materialize_file.max=-1) (op_list_files.max=-1) (committer_commit_job.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_get_request.failures.max=0) (op_glob_status.failures.max=-1) (op_abort.max=-1) (op_get_delegation_token.max=-1) (op_rename.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.max=-1) (object_continue_list_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_put_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.max=-1) (op_abort.failures.max=-1) (delegation_tokens_issued.max=-1) (action_file_opened.max=8) (op_is_file.max=-1) (multipart_upload_list.failures.max=-1) (store_exists_probe.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (multipart_upload_list.max=-1) (committer_materialize_file.failures.max=-1) (op_exists.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.max=5) (object_multipart_aborted.max=-1) (object_put_request.max=63) (object_multipart_initiated.failures.max=-1) (object_list_request.max=220) (committer_load_single_pending_file.max=-1) (op_exists.failures.max=-1) (op_mkdirs.failures.max=-1) (action_http_head_request.failures.max=-1) (op_createfile.max=-1) (action_executor_acquired.max=-1) (op_access.max=-1) (op_get_content_summary.failures.max=-1) (op_access.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named_map.max=-1) (op_delete.max=81) (op_create.max=59) (op_delete.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_named.max=-1) (op_create.failures.max=-1) (committer_magic_marker_put.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_createfile.failures.max=-1) (op_list_status.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_delete_request.max=-1) (stream_write_queue_duration.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_directory.failures.max=-1) (op_list_status.failures.max=-1) (op_mkdirs.max=322) (stream_read_remote_stream_aborted.max=-1) (op_is_file.failures.max=-1) (object_bulk_delete_request.max=16));
means=((committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=38, sum=577, mean=15.1842)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=19, sum=706, mean=37.1579)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=76, sum=831, mean=10.9342)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=16, sum=71, mean=4.4375)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=54, sum=230, mean=4.2593)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_delete.mean=(samples=19, sum=689, mean=36.2632)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=19, sum=231, mean=12.1579)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=243, mean=12.7895)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=38, sum=286, mean=7.5263)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:14,218 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:14,218 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,219 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,219 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,219 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,219 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000094 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000094&t0=153&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=153&ts=1731778034218
2024-11-16 17:27:14,224 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,224 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000094 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000094&t0=153&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=153&ts=1731778034218
2024-11-16 17:27:14,226 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,226 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:14,227 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:14,227 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:14,227 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000094 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000094&t0=153&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=153&ts=1731778034218
2024-11-16 17:27:14,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:14,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:14,231 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:14,231 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:14,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,232 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,232 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000095 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000095&t0=153&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=153&ts=1731778034231
2024-11-16 17:27:14,237 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,237 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,237 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:14,238 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16388992809069784737.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:14,238 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16388992809069784737.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (op_hflush=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (multipart_upload_completed=0) (op_hsync=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (op_abort=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (object_put_request=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16388992809069784737.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,239 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,239 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:14,239 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16388992809069784737.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:14,239 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:14,239 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:14,239 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:14,239 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:14,240 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000095 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000095&t0=153&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=154&ts=1731778034231
2024-11-16 17:27:14,253 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:14,253 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:14,253 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.014s
2024-11-16 17:27:14,254 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16388992809069784737.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:14,254 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16388992809069784737.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,254 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16388992809069784737.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,254 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:14,254 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,255 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put.failures=0) (op_abort=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (object_put_request=1) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (object_multipart_initiated=0) (op_abort.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=1) (op_hflush=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=13) (op_abort.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=13) (op_abort.max=-1) (committer_magic_marker_put.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=13, mean=13.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:14,256 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:14,257 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,257 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,257 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:14,257 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [155] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000096 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000096/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000096&t0=155&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=155&ts=1731778034257
2024-11-16 17:27:14,260 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:14,260 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:14,260 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,260 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:27:14,261 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_total_bytes=0) (stream_read_block_acquire_read=0) (stream_read_unbuffered=0) (stream_read_vectored_operations=0) (stream_aborted=0) (stream_read_prefetch_operations=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_forward_operations=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (action_http_get_request=0) (stream_read_seek_policy_changed=1) (stream_read_bytes=0) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_remote_stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain=0) (stream_read_prefetch_operations.failures=0) (action_file_opened.failures=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired.failures=0) (stream_read_operations_incomplete=0) (stream_read_close_operations=1) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_closed=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_exceptions=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=3) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:14,262 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:14,262 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,262 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,262 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097&t0=153&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=153&ts=1731778034262
2024-11-16 17:27:14,265 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,265 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,265 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097&t0=153&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=153&ts=1731778034262
2024-11-16 17:27:14,270 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,270 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:14,270 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:14,270 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:14,270 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:14,271 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:14,271 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:14,271 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:14,271 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:14,271 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:14,271 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:14,271 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:14,271 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:14,272 [s3a-transfer-fso-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:14,272 [s3a-transfer-fso-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,272 [s3a-transfer-fso-bucket-unbounded-pool2-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [156] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097&t0=153&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=156&ts=1731778034262
2024-11-16 17:27:14,276 [s3a-transfer-fso-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:14,277 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:27:14,277 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:14,278 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:14,278 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:14,278 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778034251; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:14,278 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:14,278 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:14,278 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:14,278 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:14,279 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:14,279 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:14,279 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:14,279 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:14,279 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,279 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,279 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:14,279 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,279 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097&t0=153&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=157&ts=1731778034262
2024-11-16 17:27:14,284 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:14,284 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:14,284 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:14,284 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:14,284 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:14,284 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,284 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,284 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:14,285 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,285 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000097&t0=153&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=157&ts=1731778034262
2024-11-16 17:27:14,289 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:14,289 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:14,289 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:14,289 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.010s
2024-11-16 17:27:14,289 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.010s
2024-11-16 17:27:14,290 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.018s
2024-11-16 17:27:14,290 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:14,290 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:14,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:14,306 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 25, active threads = 0, queued tasks = 0, completed tasks = 25], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_operations=3) (op_copy_from_local_file=0) (op_create.failures=0) (op_get_content_summary=0) (op_access.failures=0) (object_put_request=40) (op_get_content_summary.failures=0) (stream_read_bytes_discarded_in_close=196008) (stream_write_exceptions_completing_upload=0) (committer_commits_created=0) (files_deleted=20) (op_xattr_list.failures=0) (op_openfile=0) (op_get_file_checksum.failures=0) (op_exists=0) (object_list_request.failures=0) (stream_read_vectored_operations=13) (stream_read_closed=3) (stream_read_total_bytes=201971) (multipart_upload_aborted=0) (multipart_upload_part_put=0) (stream_read_vectored_read_bytes_discarded=24503) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_forward_operations=0) (multipart_upload_part_put_bytes=0) (op_createfile=0) (object_multipart_aborted=0) (op_mkdirs=20) (stream_write_queue_duration=0) (stream_read_unbuffered=1) (audit_request_execution=236) (directories_deleted=0) (op_is_directory=0) (committer_bytes_uploaded=0) (op_xattr_get_map.failures=0) (object_continue_list_request.failures=0) (action_http_get_request=20) (store_exists_probe.failures=0) (stream_read_vectored_incoming_ranges=43) (stream_read_vectored_combined_ranges=18) (committer_load_single_pending_file.failures=0) (object_delete_objects=40) (op_xattr_get_map=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (fake_directories_created=0) (stream_write_block_uploads_committed=0) (committer_load_single_pending_file=0) (stream_read_seek_bytes_skipped=0) (object_select_requests=0) (op_get_delegation_token=0) (stream_write_block_uploads=20) (store_io_throttled=0) (stream_write_exceptions=0) (stream_write_queue_duration.failures=0) (action_file_opened.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (op_is_file=0) (stream_read_seek_backward_operations=0) (op_list_files=0) (op_rename=0) (op_xattr_list=0) (op_is_directory.failures=0) (object_list_request=80) (stream_read_remote_stream_aborted=0) (directories_created=20) (op_get_delegation_token.failures=0) (op_delete.failures=0) (op_xattr_get_named.failures=0) (op_list_located_status=0) (store_exists_probe=0) (object_put_bytes=1310720) (committer_commits_completed=0) (committer_tasks_completed=0) (op_xattr_get_named_map=0) (object_delete_request=0) (fake_directories_deleted=20) (op_createfile.failures=0) (multipart_upload_started=0) (store_io_retry=0) (op_abort=0) (op_is_file.failures=0) (committer_commits_aborted=0) (stream_write_block_uploads_aborted=0) (audit_failure=0) (stream_read_seek_bytes_discarded=0) (store_io_request=236) (committer_commit_job.failures=0) (stream_read_remote_stream_drain.failures=0) (files_delete_rejected=0) (stream_read_operations_incomplete=0) (files_copied_bytes=0) (action_executor_acquired.failures=0) (op_list_status=0) (multipart_upload_list.failures=0) (object_bulk_delete_request=40) (object_bulk_delete_request.failures=0) (ignored_errors=0) (op_xattr_get_named=0) (stream_read_close_operations=17) (delegation_tokens_issued.failures=0) (committer_materialize_file=0) (op_create=20) (op_hflush=0) (committer_commits_reverted=0) (op_get_file_status.failures=0) (action_http_head_request.failures=0) (object_multipart_aborted.failures=0) (delegation_tokens_issued=0) (action_file_opened=17) (op_delete=20) (committer_commit_job=0) (committer_jobs_completed=0) (op_create_non_recursive=0) (op_list_files.failures=0) (files_copied=0) (stream_write_bytes=1310720) (stream_read_remote_stream_drain=3) (stream_read_seek_operations=0) (op_open=17) (stream_read_remote_stream_aborted.failures=0) (committer_tasks_failed=0) (committer_commits.failures=0) (committer_stage_file_upload=0) (stream_write_total_time=0) (stream_read_seek_policy_changed=18) (action_executor_acquired=0) (stream_aborted=0) (action_http_get_request.failures=1) (audit_access_check_failure=0) (op_get_file_status=1) (op_copy_from_local_file.failures=0) (op_glob_status.failures=0) (stream_read_exceptions=0) (op_rename.failures=0) (op_abort.failures=0) (files_created=20) (stream_read_bytes=5963) (stream_read_fully_operations=1) (op_hsync=0) (stream_write_total_data=2621440) (object_metadata_request=57) (committer_jobs_failed=0) (stream_read_opened=3) (action_http_head_request=57) (object_put_request_completed=40) (object_put_request.failures=0) (object_multipart_initiated=0) (op_xattr_get_named_map.failures=0) (committer_bytes_committed=0) (multipart_upload_list=0) (op_list_status.failures=0) (object_delete_request.failures=0) (op_exists.failures=0) (committer_magic_files_created=0) (committer_magic_marker_put.failures=0) (committer_stage_file_upload.failures=0) (op_mkdirs.failures=0) (committer_materialize_file.failures=0) (multipart_instantiated=0) (object_multipart_initiated.failures=0) (object_continue_list_request=0) (object_copy_requests=0) (op_access=0) (audit_span_creation=79) (op_glob_status=0) (op_get_file_checksum=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=20));
minimums=((committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (op_get_file_checksum.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_stage_file_upload.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_file_opened.min=3) (object_multipart_aborted.min=-1) (op_list_files.failures.min=-1) (op_createfile.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_delete_request.min=-1) (action_http_head_request.min=2) (op_get_content_summary.min=-1) (op_is_directory.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_commit_job.min=-1) (op_glob_status.failures.min=-1) (op_exists.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named.min=-1) (store_exists_probe.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_list.min=-1) (op_createfile.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_rename.failures.min=-1) (op_is_directory.min=-1) (op_delete.min=19) (op_xattr_list.failures.min=-1) (store_exists_probe.min=-1) (op_mkdirs.min=13) (stream_write_queue_duration.min=-1) (op_xattr_get_map.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.min=-1) (op_list_status.failures.min=-1) (action_http_get_request.failures.min=0) (stream_read_remote_stream_aborted.failures.min=-1) (op_list_status.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.min=-1) (op_access.min=-1) (op_delete.failures.min=-1) (op_rename.min=-1) (object_list_request.min=4) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.min=4) (op_access.failures.min=-1) (op_is_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_http_get_request.min=11) (object_put_request.min=13) (op_list_files.min=-1) (op_exists.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_drain.min=3) (stream_write_queue_duration.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (object_put_request.failures.min=-1) (op_get_file_status.min=5) (op_create.min=5) (multipart_upload_list.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_continue_list_request.min=-1) (committer_load_single_pending_file.min=-1) (op_create.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.failures.min=-1));
maximums=((stream_write_queue_duration.max=-1) (op_get_delegation_token.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.max=-1) (delegation_tokens_issued.failures.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.max=322) (op_xattr_get_map.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_initiated.max=-1) (object_delete_request.failures.max=-1) (op_get_file_status.max=5) (object_put_request.max=63) (op_get_file_status.failures.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named.max=-1) (op_list_files.max=-1) (committer_commit_job.max=-1) (op_delete.max=81) (op_is_directory.max=-1) (object_delete_request.max=-1) (object_bulk_delete_request.max=16) (committer_stage_file_upload.max=-1) (action_http_get_request.failures.max=0) (op_xattr_get_named.failures.max=-1) (op_glob_status.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_is_directory.failures.max=-1) (op_rename.failures.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.max=18) (op_list_status.max=-1) (op_list_status.failures.max=-1) (op_abort.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_files.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.max=3) (committer_load_single_pending_file.failures.max=-1) (store_exists_probe.max=-1) (action_file_opened.max=8) (op_get_content_summary.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.max=-1) (op_exists.failures.max=-1) (op_xattr_get_map.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_continue_list_request.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named_map.failures.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_access.max=-1) (committer_materialize_file.max=-1) (op_create.max=59) (object_bulk_delete_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_file.max=-1) (op_create.failures.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (op_abort.max=-1) (action_http_get_request.max=35) (op_is_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_exists.max=-1) (object_put_request.failures.max=-1) (op_createfile.max=-1) (op_mkdirs.failures.max=-1) (object_list_request.max=220) (object_list_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_rename.max=-1) (op_createfile.failures.max=-1));
means=((op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=17, sum=74, mean=4.3529)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=40, sum=594, mean=14.8500)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=20, sum=238, mean=11.9000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=40, sum=295, mean=7.3750)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=20, sum=719, mean=35.9500)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=20, sum=708, mean=35.4000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=243, mean=12.7895)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=57, sum=238, mean=4.1754)) (object_list_request.mean=(samples=80, sum=850, mean=10.6250)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:14,307 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:14,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,307 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,307 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000098 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000098&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=158&ts=1731778034307
2024-11-16 17:27:14,312 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,312 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,313 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000098 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000098&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=158&ts=1731778034307
2024-11-16 17:27:14,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,316 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:14,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:14,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:14,316 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000098 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000098&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=158&ts=1731778034307
2024-11-16 17:27:14,321 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:14,321 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:14,321 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:14,321 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:14,322 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,322 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,322 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,322 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,322 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000099 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000099&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=158&ts=1731778034321
2024-11-16 17:27:14,327 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,328 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,328 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:14,329 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9486110009688177390.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:14,329 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9486110009688177390.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (multipart_upload_completed=0) (stream_write_total_data=0) (op_hsync=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (stream_write_block_uploads=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (object_put_request.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (op_abort=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (object_put_request=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9486110009688177390.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,330 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,330 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:14,330 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9486110009688177390.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:14,331 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:14,331 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:14,331 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:14,331 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:14,331 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000099 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000099&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=159&ts=1731778034321
2024-11-16 17:27:14,358 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:14,358 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:14,359 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:27:14,361 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9486110009688177390.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:14,361 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9486110009688177390.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,361 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9486110009688177390.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,362 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:14,362 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,363 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (committer_magic_marker_put.failures=0) (op_hflush=0) (stream_write_queue_duration=0) (op_abort.failures=0) (object_put_request=1) (object_put_request.failures=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (op_hsync=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=27) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=27) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1));
means=((object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:14,363 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:14,364 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,364 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,364 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:14,364 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000100 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000100&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=158&ts=1731778034364
2024-11-16 17:27:14,368 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:14,368 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:14,368 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,369 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:14,369 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:14,369 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:14,370 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:14,370 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:14,370 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:14,370 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,371 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:14,371 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:14,371 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:14,371 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000100&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=160&ts=1731778034364
2024-11-16 17:27:14,371 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:14,371 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:14,371 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,371 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:14,372 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [161] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000100&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=161&ts=1731778034364
2024-11-16 17:27:14,382 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:27:14,382 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:27:14,386 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:14,386 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:14,386 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:14,386 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:14,387 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_unbuffered=0) (action_file_opened.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=300) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_exceptions=0) (stream_read_seek_policy_changed=1) (stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_prefetch_operations.failures=0) (action_http_get_request=2) (stream_read_vectored_read_bytes_discarded=20) (stream_read_total_bytes=300) (stream_read_remote_stream_aborted=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_closed=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=2) (stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_vectored_incoming_ranges=4) (stream_read_vectored_operations=2) (stream_read_opened=0) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (action_file_opened=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=11) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=11) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=22, mean=11.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:14,387 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:14,387 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,388 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,388 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=158&ts=1731778034387
2024-11-16 17:27:14,390 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,390 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,391 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=158&ts=1731778034387
2024-11-16 17:27:14,396 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,396 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:14,396 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:14,397 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:14,397 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:14,397 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:14,397 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:14,397 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:14,397 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:14,397 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:14,397 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:14,397 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:14,398 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:14,398 [s3a-transfer-fso-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:14,398 [s3a-transfer-fso-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,398 [s3a-transfer-fso-bucket-unbounded-pool2-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [162] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=162&ts=1731778034387
2024-11-16 17:27:14,403 [s3a-transfer-fso-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,403 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:27:14,403 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:14,403 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:14,404 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:14,404 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778034352; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:14,404 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:14,404 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:14,404 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:14,404 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:14,405 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:14,405 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:14,405 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:14,405 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:14,405 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,405 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,405 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:14,405 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,406 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=163&ts=1731778034387
2024-11-16 17:27:14,410 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:14,410 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:14,410 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:14,410 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:14,410 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:14,411 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,411 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,411 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:14,411 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,412 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000101&t0=158&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=163&ts=1731778034387
2024-11-16 17:27:14,420 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:27:14,420 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:27:14,420 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:27:14,420 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:27:14,421 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.016s
2024-11-16 17:27:14,421 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:27:14,422 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:14,422 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:14,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:14,439 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 26, active threads = 0, queued tasks = 0, completed tasks = 26], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_create_non_recursive=0) (object_continue_list_request=0) (stream_read_bytes=6263) (op_mkdirs=21) (op_get_delegation_token.failures=0) (op_xattr_list=0) (object_put_bytes=1376256) (object_put_request.failures=0) (directories_deleted=0) (op_copy_from_local_file.failures=0) (op_get_file_status=1) (object_list_request.failures=0) (op_glob_status.failures=0) (committer_magic_marker_put.failures=0) (action_http_head_request=60) (multipart_upload_started=0) (multipart_upload_completed=0) (audit_request_execution=249) (ignored_errors=0) (committer_commits_aborted=0) (directories_created=21) (object_multipart_aborted.failures=0) (op_is_file.failures=0) (stream_read_operations_incomplete=0) (op_copy_from_local_file=0) (op_create.failures=0) (op_rename.failures=0) (committer_commits_reverted=0) (op_openfile=0) (op_open=18) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_abort=0) (op_is_file=0) (committer_tasks_completed=0) (op_xattr_get_named_map=0) (stream_read_fully_operations=1) (stream_read_seek_forward_operations=0) (committer_commits.failures=0) (action_executor_acquired.failures=0) (object_delete_objects=42) (op_createfile=0) (op_xattr_get_map=0) (stream_write_block_uploads_aborted=0) (committer_jobs_completed=0) (op_xattr_get_named_map.failures=0) (committer_bytes_committed=0) (op_get_file_checksum.failures=0) (committer_load_single_pending_file.failures=0) (object_delete_request=0) (files_copied=0) (op_xattr_get_map.failures=0) (op_createfile.failures=0) (multipart_upload_aborted=0) (store_io_throttled=0) (stream_read_operations=3) (op_is_directory=0) (stream_read_seek_operations=0) (object_continue_list_request.failures=0) (op_get_file_status.failures=0) (object_copy_requests=0) (stream_read_remote_stream_drain=3) (committer_stage_file_upload.failures=0) (object_delete_request.failures=0) (op_get_file_checksum=0) (multipart_upload_part_put=0) (stream_read_vectored_incoming_ranges=47) (committer_materialize_file=0) (stream_read_vectored_read_bytes_discarded=24523) (stream_write_total_data=2752512) (files_created=21) (stream_write_queue_duration=0) (committer_commit_job=0) (op_list_files.failures=0) (op_xattr_get_named=0) (stream_write_exceptions=0) (stream_read_closed=3) (op_get_content_summary.failures=0) (delegation_tokens_issued.failures=0) (stream_write_queue_duration.failures=0) (committer_magic_files_created=0) (store_exists_probe=0) (stream_read_seek_policy_changed=19) (action_file_opened=18) (object_metadata_request=60) (action_http_get_request.failures=1) (op_hsync=0) (fake_directories_created=0) (object_multipart_initiated=0) (object_bulk_delete_request=42) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named.failures=0) (action_file_opened.failures=0) (stream_read_close_operations=18) (op_access.failures=0) (delegation_tokens_issued=0) (committer_commit_job.failures=0) (op_delete.failures=0) (op_list_located_status=0) (committer_magic_marker_put=0) (stream_read_vectored_combined_ranges=20) (committer_commits_completed=0) (files_copied_bytes=0) (stream_read_bytes_discarded_in_close=196008) (op_delete=21) (multipart_upload_part_put_bytes=0) (op_list_files=0) (op_get_content_summary=0) (files_delete_rejected=0) (multipart_upload_list.failures=0) (object_multipart_initiated.failures=0) (store_io_retry=0) (fake_directories_deleted=21) (op_list_status.failures=0) (stream_read_version_mismatches=0) (stream_read_total_bytes=202271) (action_http_head_request.failures=0) (stream_read_remote_stream_aborted=0) (op_create=21) (op_is_directory.failures=0) (stream_read_seek_bytes_discarded=0) (op_hflush=0) (op_mkdirs.failures=0) (store_io_request=249) (op_list_status=0) (object_list_request=84) (op_get_delegation_token=0) (action_executor_acquired=0) (store_exists_probe.failures=0) (multipart_upload_list=0) (stream_read_vectored_operations=15) (stream_read_opened=3) (object_put_request=42) (op_exists.failures=0) (stream_read_remote_stream_aborted.failures=0) (audit_access_check_failure=0) (op_access=0) (files_deleted=21) (op_exists=0) (stream_write_total_time=0) (op_abort=0) (committer_stage_file_upload=0) (stream_read_seek_backward_operations=0) (multipart_instantiated=0) (stream_write_exceptions_completing_upload=0) (object_put_request_completed=42) (op_xattr_list.failures=0) (op_glob_status=0) (committer_load_single_pending_file=0) (committer_tasks_failed=0) (object_bulk_delete_request.failures=0) (op_rename=0) (stream_read_unbuffered=1) (stream_read_exceptions=0) (op_abort.failures=0) (committer_bytes_uploaded=0) (committer_materialize_file.failures=0) (stream_read_seek_bytes_skipped=0) (object_select_requests=0) (stream_write_bytes=1376256) (action_http_get_request=22) (stream_write_block_uploads=21) (stream_write_block_uploads_committed=0) (object_multipart_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_aborted=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits_created=0) (audit_span_creation=83) (audit_failure=0));
gauges=((stream_write_block_uploads_pending=21) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0));
minimums=((object_bulk_delete_request.min=4) (object_put_request.failures.min=-1) (op_createfile.min=-1) (action_executor_acquired.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_files.failures.min=-1) (op_list_files.min=-1) (op_list_status.min=-1) (op_createfile.failures.min=-1) (op_rename.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_list.min=-1) (op_rename.min=-1) (op_get_file_checksum.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (op_delete.min=19) (op_abort.failures.min=-1) (store_exists_probe.failures.min=-1) (object_continue_list_request.min=-1) (op_create.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_list.failures.min=-1) (op_is_directory.min=-1) (op_abort.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_initiated.min=-1) (op_get_content_summary.failures.min=-1) (op_is_file.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.failures.min=-1) (object_list_request.failures.min=-1) (op_mkdirs.min=13) (object_multipart_aborted.failures.min=-1) (op_create.min=5) (op_glob_status.min=-1) (op_xattr_get_map.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_drain.min=3) (op_xattr_list.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_file.failures.min=-1) (op_copy_from_local_file.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.min=-1) (action_file_opened.failures.min=-1) (object_put_request.min=27) (op_mkdirs.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.failures.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.min=11) (action_http_get_request.failures.min=0) (op_access.min=-1) (op_get_file_status.min=5) (committer_commit_job.min=-1) (op_glob_status.failures.min=-1) (store_exists_probe.min=-1) (op_exists.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (op_list_status.failures.min=-1) (op_is_directory.failures.min=-1) (action_http_head_request.min=2) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_list_request.min=4) (op_get_file_checksum.failures.min=-1) (object_delete_request.min=-1));
maximums=((op_xattr_get_named_map.max=-1) (op_xattr_list.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_abort.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_list.failures.max=-1) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (op_glob_status.failures.max=-1) (op_access.max=-1) (action_http_head_request.failures.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_abort.max=-1) (op_create.max=59) (op_is_file.max=-1) (object_multipart_initiated.failures.max=-1) (committer_materialize_file.max=-1) (op_list_status.failures.max=-1) (object_bulk_delete_request.max=16) (object_put_request.max=63) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_rename.max=-1) (op_mkdirs.max=322) (multipart_upload_list.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.max=-1) (action_http_get_request.failures.max=0) (op_list_status.max=-1) (op_xattr_get_map.max=-1) (op_createfile.max=-1) (op_rename.failures.max=-1) (op_is_file.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_files.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_access.failures.max=-1) (action_file_opened.failures.max=-1) (object_multipart_initiated.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.failures.max=-1) (op_createfile.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named.max=-1) (action_file_opened.max=8) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=3) (op_xattr_list.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.max=5) (op_exists.max=-1) (op_get_file_checksum.max=-1) (op_get_delegation_token.failures.max=-1) (store_exists_probe.max=-1) (committer_stage_file_upload.max=-1) (op_copy_from_local_file.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.max=18) (op_create.failures.max=-1) (object_put_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_get_request.max=35) (committer_commit_job.failures.max=-1) (op_delete.max=81) (op_list_files.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.max=220) (op_get_file_status.failures.max=-1));
means=((object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=18, sum=78, mean=4.3333)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=42, sum=307, mean=7.3095)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (object_list_request.mean=(samples=84, sum=871, mean=10.3690)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=265, mean=12.6190)) (op_create.mean=(samples=21, sum=245, mean=11.6667)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=21, sum=733, mean=34.9048)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=42, sum=626, mean=14.9048)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=60, sum=246, mean=4.1000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=21, sum=733, mean=34.9048)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:14,439 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:14,439 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,439 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,439 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,439 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,440 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000102 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000102&t0=164&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=164&ts=1731778034439
2024-11-16 17:27:14,445 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,445 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,445 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,445 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,445 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,445 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000102 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000102&t0=164&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=164&ts=1731778034439
2024-11-16 17:27:14,447 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,447 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:14,448 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:14,448 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:14,449 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000102 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000102&t0=164&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=164&ts=1731778034439
2024-11-16 17:27:14,453 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:14,453 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:14,453 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:14,453 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:14,454 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,454 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,454 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,455 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,455 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000103 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000103&t0=164&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=164&ts=1731778034453
2024-11-16 17:27:14,462 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:14,462 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,462 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:14,463 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4165828446444177813.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:14,464 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4165828446444177813.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted=0) (object_multipart_aborted.failures=0) (object_put_request=0) (op_hflush=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (stream_write_total_data=0) (op_abort=0) (action_executor_acquired=0) (op_abort.failures=0) (stream_write_total_time=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (op_hsync=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4165828446444177813.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,464 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,464 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:14,464 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4165828446444177813.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:14,465 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:14,465 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:14,465 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:14,466 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:14,466 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000103 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000103&t0=164&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=165&ts=1731778034453
2024-11-16 17:27:14,480 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:14,480 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:14,481 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.015s
2024-11-16 17:27:14,481 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4165828446444177813.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:14,481 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4165828446444177813.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,481 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4165828446444177813.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,481 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:14,481 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,482 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort.failures=0) (object_put_request=1) (object_put_request.failures=0) (op_hflush=0) (action_executor_acquired=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (op_abort=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (op_hsync=0) (stream_write_total_time=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (stream_write_total_data=65536));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=14) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1));
maximums=((multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=14) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=14, mean=14.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:14,482 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:14,484 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,484 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,484 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:14,484 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000104 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000104/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000104&t0=166&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=166&ts=1731778034484
2024-11-16 17:27:14,487 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:14,487 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:14,487 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,487 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:27:14,488 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_remote_stream_aborted=0) (action_file_opened.failures=0) (stream_aborted=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_read.failures=0) (stream_read_close_operations=1) (stream_read_block_read=0) (stream_read_bytes=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_operations=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_combined_ranges=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_version_mismatches=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_closed=0) (stream_read_seek_backward_operations=0) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_total_bytes=0) (stream_read_exceptions=0) (stream_read_block_acquire_read=0) (stream_read_operations_incomplete=0) (action_file_opened=1) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0) (action_http_get_request.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.min=3) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:14,488 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:14,488 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,488 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,489 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105&t0=164&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=164&ts=1731778034488
2024-11-16 17:27:14,491 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,491 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,491 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105&t0=164&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=164&ts=1731778034488
2024-11-16 17:27:14,497 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,497 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:14,497 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:14,497 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:14,497 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:14,497 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:14,497 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:14,497 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:14,497 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:14,497 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:14,498 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:14,498 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:14,498 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:14,498 [s3a-transfer-fso-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:14,498 [s3a-transfer-fso-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,498 [s3a-transfer-fso-bucket-unbounded-pool2-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105&t0=164&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=167&ts=1731778034488
2024-11-16 17:27:14,504 [s3a-transfer-fso-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,504 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:27:14,504 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:14,504 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:14,504 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:14,504 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778034477; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:14,504 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:14,504 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:14,504 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:14,505 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:14,505 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:14,505 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:14,505 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:14,505 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:14,505 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,505 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,505 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:14,505 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,505 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105&t0=164&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=168&ts=1731778034488
2024-11-16 17:27:14,510 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:14,510 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:14,510 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:14,510 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:14,510 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:14,510 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,510 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,510 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:14,510 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,511 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000105&t0=164&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=168&ts=1731778034488
2024-11-16 17:27:14,514 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:14,514 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.004s
2024-11-16 17:27:14,515 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:14,515 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.010s
2024-11-16 17:27:14,515 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.010s
2024-11-16 17:27:14,515 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.018s
2024-11-16 17:27:14,515 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:14,515 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:14,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:14,528 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 28, active threads = 0, queued tasks = 0, completed tasks = 28], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((delegation_tokens_issued.failures=0) (op_get_file_checksum.failures=0) (op_get_file_status=1) (object_bulk_delete_request.failures=0) (directories_created=22) (op_is_directory=0) (audit_request_execution=260) (op_xattr_get_named=0) (directories_deleted=0) (stream_read_closed=3) (op_rename.failures=0) (action_file_opened=19) (stream_read_fully_operations=1) (op_abort.failures=0) (object_continue_list_request.failures=0) (stream_write_block_uploads=22) (stream_read_operations_incomplete=0) (action_http_get_request.failures=1) (op_exists.failures=0) (multipart_upload_list.failures=0) (op_list_status.failures=0) (stream_write_queue_duration=0) (object_delete_objects=44) (stream_write_exceptions_completing_upload=0) (committer_commits_completed=0) (op_delete.failures=0) (stream_read_vectored_operations=15) (op_create=22) (object_multipart_initiated.failures=0) (multipart_upload_started=0) (op_glob_status.failures=0) (action_http_head_request=63) (op_copy_from_local_file=0) (committer_commits_aborted=0) (object_put_request_completed=44) (committer_commits.failures=0) (op_xattr_list=0) (object_metadata_request=63) (stream_read_unbuffered=1) (object_copy_requests=0) (object_continue_list_request=0) (action_http_get_request=22) (stream_write_block_uploads_aborted=0) (stream_read_total_bytes=202271) (store_exists_probe.failures=0) (stream_write_queue_duration.failures=0) (object_delete_request.failures=0) (stream_read_seek_operations=0) (op_mkdirs=22) (multipart_upload_part_put_bytes=0) (stream_read_version_mismatches=0) (action_file_opened.failures=0) (store_exists_probe=0) (op_xattr_get_map=0) (stream_read_exceptions=0) (action_executor_acquired=0) (files_created=22) (op_get_delegation_token.failures=0) (object_put_bytes=1441792) (files_copied=0) (committer_stage_file_upload=0) (files_copied_bytes=0) (op_xattr_get_named.failures=0) (action_http_head_request.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted.failures=0) (op_list_files.failures=0) (op_mkdirs.failures=0) (op_xattr_list.failures=0) (object_select_requests=0) (delegation_tokens_issued=0) (stream_read_remote_stream_drain=3) (object_put_request=44) (op_access.failures=0) (op_abort=0) (store_io_throttled=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (stream_read_opened=3) (stream_read_vectored_combined_ranges=20) (audit_failure=0) (op_get_file_status.failures=0) (object_list_request=88) (committer_bytes_uploaded=0) (committer_materialize_file=0) (committer_commits_created=0) (op_list_files=0) (op_delete=22) (committer_load_single_pending_file=0) (fake_directories_created=0) (committer_commit_job=0) (op_create.failures=0) (object_multipart_aborted.failures=0) (op_copy_from_local_file.failures=0) (committer_tasks_completed=0) (multipart_upload_list=0) (object_put_request.failures=0) (op_hflush=0) (op_is_file.failures=0) (committer_magic_files_created=0) (store_io_retry=0) (op_openfile=0) (committer_stage_file_upload.failures=0) (op_get_file_checksum=0) (object_delete_request=0) (op_get_content_summary.failures=0) (files_deleted=22) (op_exists=0) (committer_tasks_failed=0) (stream_read_vectored_incoming_ranges=47) (op_glob_status=0) (object_list_request.failures=0) (stream_write_total_time=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (op_get_delegation_token=0) (committer_load_single_pending_file.failures=0) (committer_jobs_completed=0) (op_xattr_get_named_map=0) (multipart_upload_abort_under_path_invoked=0) (committer_commit_job.failures=0) (op_access=0) (stream_write_total_data=2883584) (stream_write_block_uploads_committed=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_exceptions=0) (op_xattr_get_map.failures=0) (object_multipart_aborted=0) (committer_commits_reverted=0) (committer_magic_marker_put.failures=0) (audit_access_check_failure=0) (op_hsync=0) (stream_read_operations=3) (op_list_status=0) (op_open=19) (object_multipart_initiated=0) (committer_jobs_failed=0) (op_create_non_recursive=0) (ignored_errors=0) (object_bulk_delete_request=44) (stream_read_seek_forward_operations=0) (stream_read_bytes=6263) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_skipped=0) (op_is_directory.failures=0) (multipart_upload_aborted=0) (stream_read_seek_policy_changed=20) (stream_write_bytes=1441792) (stream_read_bytes_discarded_in_close=196008) (op_rename=0) (op_createfile.failures=0) (action_executor_acquired.failures=0) (committer_materialize_file.failures=0) (op_createfile=0) (op_is_file=0) (fake_directories_deleted=22) (stream_aborted=0) (committer_bytes_committed=0) (stream_read_close_operations=19) (stream_read_vectored_read_bytes_discarded=24523) (files_delete_rejected=0) (multipart_instantiated=0) (op_list_located_status=0) (store_io_request=260) (audit_span_creation=87) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_part_put=0) (op_xattr_get_named_map.failures=0) (op_get_content_summary=0));
gauges=((object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=22) (stream_read_active_memory_in_use=0));
minimums=((op_is_directory.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_list.min=-1) (committer_materialize_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_glob_status.failures.min=-1) (op_delete.min=18) (object_multipart_aborted.min=-1) (op_exists.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_rename.failures.min=-1) (store_exists_probe.failures.min=-1) (op_list_files.failures.min=-1) (object_list_request.min=4) (store_exists_probe.min=-1) (action_http_get_request.min=11) (action_file_opened.failures.min=-1) (object_continue_list_request.min=-1) (op_create.failures.min=-1) (op_is_directory.failures.min=-1) (stream_read_remote_stream_drain.min=3) (op_abort.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (delegation_tokens_issued.min=-1) (op_access.min=-1) (op_xattr_get_named.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_content_summary.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_head_request.min=2) (multipart_upload_list.failures.min=-1) (op_create.min=5) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_delete.failures.min=-1) (committer_magic_marker_put.min=-1) (op_createfile.min=-1) (object_continue_list_request.failures.min=-1) (op_is_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_createfile.failures.min=-1) (action_file_opened.min=3) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_list.failures.min=-1) (op_exists.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.min=-1) (op_get_delegation_token.failures.min=-1) (object_bulk_delete_request.min=4) (op_copy_from_local_file.min=-1) (op_get_file_checksum.failures.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_file.min=-1) (object_multipart_aborted.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_rename.min=-1) (object_delete_request.min=-1) (op_mkdirs.min=13) (committer_materialize_file.min=-1) (op_list_status.failures.min=-1) (committer_commit_job.failures.min=-1) (op_list_files.min=-1) (op_get_file_status.min=5) (multipart_upload_list.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_glob_status.min=-1) (op_list_status.min=-1) (op_get_file_status.failures.min=-1) (object_put_request.min=14) (committer_load_single_pending_file.min=-1) (action_http_get_request.failures.min=0) (action_executor_acquired.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_delegation_token.min=-1) (object_delete_request.failures.min=-1));
maximums=((op_is_directory.failures.max=-1) (object_list_request.failures.max=-1) (op_exists.max=-1) (op_get_file_status.max=5) (op_xattr_get_map.failures.max=-1) (op_access.max=-1) (op_createfile.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_list.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=35) (object_bulk_delete_request.max=16) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=0) (op_list_files.max=-1) (op_get_delegation_token.max=-1) (committer_magic_marker_put.failures.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_continue_list_request.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_delete.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_exists.failures.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.failures.max=-1) (op_abort.max=-1) (op_is_directory.max=-1) (committer_magic_marker_put.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named.max=-1) (op_is_file.max=-1) (op_list_status.max=-1) (op_rename.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_mkdirs.failures.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.max=-1) (op_glob_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_map.max=-1) (op_is_file.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_delegation_token.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_access.failures.max=-1) (op_list_files.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_content_summary.max=-1) (op_create.max=59) (stream_read_remote_stream_drain.max=3) (object_delete_request.max=-1) (object_put_request.max=63) (op_xattr_get_named_map.max=-1) (op_xattr_list.failures.max=-1) (object_put_request.failures.max=-1) (action_file_opened.max=8) (multipart_upload_list.max=-1) (committer_commit_job.max=-1) (committer_load_single_pending_file.max=-1) (action_http_head_request.max=18) (object_multipart_initiated.failures.max=-1) (op_mkdirs.max=322) (committer_stage_file_upload.max=-1) (action_executor_acquired.failures.max=-1) (op_glob_status.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_named.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_create.failures.max=-1) (op_rename.failures.max=-1) (object_list_request.max=220) (object_multipart_aborted.max=-1) (op_delete.max=81));
means=((action_file_opened.mean=(samples=19, sum=81, mean=4.2632)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=63, sum=254, mean=4.0317)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=265, mean=12.6190)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=22, sum=747, mean=33.9545)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=88, sum=895, mean=10.1705)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=44, sum=644, mean=14.6364)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=22, sum=254, mean=11.5455)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=44, sum=316, mean=7.1818)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=22, sum=751, mean=34.1364)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:14,528 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:14,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,528 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,528 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000106 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000106&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=169&ts=1731778034528
2024-11-16 17:27:14,533 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,533 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,533 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,533 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,533 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,533 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000106 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000106&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=169&ts=1731778034528
2024-11-16 17:27:14,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,535 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:14,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:14,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:14,536 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000106 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000106&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=169&ts=1731778034528
2024-11-16 17:27:14,540 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:14,541 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:14,541 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:14,541 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:14,541 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,541 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,542 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,542 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,542 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000107 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000107&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=169&ts=1731778034541
2024-11-16 17:27:14,547 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,547 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,547 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:14,548 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4436494722260124309.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:14,549 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4436494722260124309.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (op_hsync=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (op_abort=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4436494722260124309.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,549 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,549 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:14,549 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4436494722260124309.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:14,549 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:14,550 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:14,550 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:14,550 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:14,550 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000107 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000107&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=31&ts=1731778034541
2024-11-16 17:27:14,568 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:14,568 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:14,568 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.019s
2024-11-16 17:27:14,569 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4436494722260124309.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:14,569 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4436494722260124309.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,569 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4436494722260124309.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,569 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:14,569 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,570 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (object_put_request=1) (stream_write_total_data=65536) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (op_hsync=0) (op_hflush=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=18) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_put_request.max=18) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=18, mean=18.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:14,571 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:14,571 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,571 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,572 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:14,572 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000108 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000108&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=169&ts=1731778034571
2024-11-16 17:27:14,575 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:14,575 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:14,575 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,576 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:27:14,576 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:14,576 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:27:14,576 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:14,576 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,576 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:14,576 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000108 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=500-899&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000108&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=36&ts=1731778034571
2024-11-16 17:27:14,577 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:27:14,583 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.007s
2024-11-16 17:27:14,583 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:14,585 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_version_mismatches=0) (stream_read_opened=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_operations=0) (action_executor_acquired.failures=0) (stream_read_seek_forward_operations=0) (action_file_opened=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_policy_changed=1) (stream_read_block_read.failures=0) (stream_read_bytes=400) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_combined_ranges=1) (action_http_get_request=1) (stream_read_closed=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (action_file_opened.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_incoming_ranges=3) (stream_read_prefetch_operations.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (stream_read_total_bytes=400) (stream_read_block_read=0) (stream_read_unbuffered=0) (stream_read_vectored_operations=1) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_backward_operations=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=4) (action_http_get_request.min=7));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=7) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=4) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:14,586 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:14,586 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,586 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,586 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=169&ts=1731778034586
2024-11-16 17:27:14,590 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,590 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,590 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=169&ts=1731778034586
2024-11-16 17:27:14,597 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:14,597 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:14,597 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:14,598 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:14,598 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:14,598 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:14,598 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:14,598 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:14,598 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:14,598 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:14,598 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:14,598 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:14,599 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:14,599 [s3a-transfer-fso-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:14,599 [s3a-transfer-fso-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,599 [s3a-transfer-fso-bucket-unbounded-pool2-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [170] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=170&ts=1731778034586
2024-11-16 17:27:14,605 [s3a-transfer-fso-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,605 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:27:14,605 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:14,605 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:14,606 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:14,606 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778034565; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:14,606 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:14,606 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:14,606 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:14,606 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:14,606 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:14,606 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:14,606 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:14,606 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:14,606 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,606 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,606 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:14,606 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,606 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=38&ts=1731778034586
2024-11-16 17:27:14,613 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:27:14,613 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:27:14,613 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:27:14,613 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:14,613 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:14,613 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,613 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,613 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:14,613 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,613 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000109&t0=169&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=38&ts=1731778034586
2024-11-16 17:27:14,618 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:14,618 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:14,618 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:14,618 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.012s
2024-11-16 17:27:14,618 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.012s
2024-11-16 17:27:14,619 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.021s
2024-11-16 17:27:14,619 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:14,619 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:14,626 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:14,637 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 29, active threads = 0, queued tasks = 0, completed tasks = 29], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_aborted=0) (committer_commit_job=0) (committer_commit_job.failures=0) (multipart_upload_part_put_bytes=0) (object_list_request.failures=0) (object_put_bytes=1507328) (object_select_requests=0) (stream_read_bytes=6663) (object_list_request=92) (directories_deleted=0) (object_continue_list_request=0) (object_bulk_delete_request.failures=0) (stream_read_close_operations=20) (op_glob_status.failures=0) (store_io_throttled=0) (op_xattr_get_named.failures=0) (committer_bytes_uploaded=0) (object_delete_objects=46) (files_delete_rejected=0) (stream_write_total_time=0) (stream_read_fully_operations=1) (committer_materialize_file=0) (object_delete_request=0) (op_get_file_checksum.failures=0) (committer_magic_marker_put=0) (stream_read_opened=3) (stream_aborted=0) (object_continue_list_request.failures=0) (stream_read_vectored_read_bytes_discarded=24523) (committer_commits_aborted=0) (stream_read_seek_operations=0) (files_copied=0) (op_create_non_recursive=0) (op_xattr_get_named_map=0) (op_get_delegation_token=0) (object_copy_requests=0) (op_get_content_summary.failures=0) (audit_span_creation=91) (op_xattr_get_map=0) (stream_read_remote_stream_drain.failures=0) (op_delete=23) (action_executor_acquired.failures=0) (multipart_upload_list=0) (store_exists_probe=0) (op_xattr_get_map.failures=0) (op_create.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration.failures=0) (stream_read_remote_stream_drain=3) (object_delete_request.failures=0) (op_xattr_get_named_map.failures=0) (op_is_file=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (delegation_tokens_issued.failures=0) (committer_commits_reverted=0) (committer_materialize_file.failures=0) (op_createfile.failures=0) (op_createfile=0) (op_exists.failures=0) (op_is_file.failures=0) (committer_bytes_committed=0) (committer_commits_created=0) (object_multipart_aborted.failures=0) (delegation_tokens_issued=0) (op_list_located_status=0) (committer_load_single_pending_file.failures=0) (committer_stage_file_upload=0) (op_hsync=0) (audit_request_execution=272) (object_put_request_completed=46) (multipart_upload_abort_under_path_invoked=0) (op_glob_status=0) (op_list_status=0) (stream_read_unbuffered=1) (op_rename=0) (committer_stage_file_upload.failures=0) (stream_read_vectored_incoming_ranges=50) (stream_read_version_mismatches=0) (op_openfile=0) (store_exists_probe.failures=0) (op_delete.failures=0) (object_put_request=46) (committer_tasks_completed=0) (action_file_opened=20) (multipart_upload_completed=0) (op_list_files.failures=0) (stream_read_operations=3) (op_rename.failures=0) (stream_write_exceptions=0) (multipart_instantiated=0) (op_open=20) (ignored_errors=0) (store_io_request=272) (files_deleted=23) (op_exists=0) (audit_failure=0) (op_list_status.failures=0) (action_http_head_request=66) (stream_read_vectored_combined_ranges=21) (object_metadata_request=66) (op_get_file_status=1) (op_get_file_status.failures=0) (op_xattr_get_named=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_abort=0) (files_copied_bytes=0) (stream_read_remote_stream_aborted.failures=0) (op_copy_from_local_file.failures=0) (audit_access_check_failure=0) (stream_read_exceptions=0) (committer_tasks_failed=0) (committer_commits.failures=0) (op_access=0) (stream_read_total_bytes=202671) (action_http_get_request=23) (op_list_files=0) (stream_read_bytes_discarded_in_close=196008) (directories_created=23) (stream_write_total_data=3014656) (stream_read_vectored_operations=16) (committer_jobs_failed=0) (stream_read_seek_forward_operations=0) (committer_magic_files_created=0) (action_http_head_request.failures=0) (committer_magic_marker_put.failures=0) (files_created=23) (op_create=23) (fake_directories_deleted=23) (stream_write_bytes=1507328) (op_abort=0) (store_io_retry=0) (stream_write_block_uploads_aborted=0) (action_http_get_request.failures=1) (op_xattr_list.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_get_delegation_token.failures=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (op_is_directory=0) (stream_read_closed=3) (multipart_upload_started=0) (action_file_opened.failures=0) (stream_read_seek_policy_changed=21) (stream_read_operations_incomplete=0) (op_mkdirs=23) (object_bulk_delete_request=46) (op_hflush=0) (stream_read_seek_backward_operations=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (fake_directories_created=0) (stream_write_block_uploads_committed=0) (op_get_content_summary=0) (committer_load_single_pending_file=0) (committer_jobs_completed=0) (object_multipart_aborted=0) (op_mkdirs.failures=0) (committer_commits_completed=0) (op_access.failures=0) (op_get_file_checksum=0) (object_put_request.failures=0) (op_copy_from_local_file=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_list.failures=0) (op_xattr_list=0) (stream_read_remote_stream_aborted=0) (stream_write_block_uploads=23) (op_is_directory.failures=0));
gauges=((stream_write_block_uploads_pending=23) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((committer_magic_marker_put.min=-1) (op_xattr_get_named_map.min=-1) (action_http_head_request.failures.min=-1) (object_list_request.min=4) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (op_get_delegation_token.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.failures.min=-1) (op_is_file.min=-1) (object_put_request.min=18) (op_access.min=-1) (action_executor_acquired.failures.min=-1) (op_list_status.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.min=-1) (op_delete.failures.min=-1) (op_exists.min=-1) (object_continue_list_request.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_drain.min=3) (store_exists_probe.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_rename.failures.min=-1) (action_file_opened.min=4) (op_createfile.min=-1) (op_create.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_create.min=5) (object_delete_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_checksum.min=-1) (committer_stage_file_upload.min=-1) (action_file_opened.failures.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_mkdirs.min=13) (action_executor_acquired.min=-1) (op_glob_status.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_head_request.min=2) (op_get_file_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.failures.min=-1) (object_put_request.failures.min=-1) (op_delete.min=18) (op_copy_from_local_file.min=-1) (op_xattr_list.failures.min=-1) (stream_write_queue_duration.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.failures.min=-1) (op_get_file_status.min=5) (action_http_get_request.failures.min=0) (op_list_status.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.min=-1) (op_is_directory.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_initiated.min=-1) (object_delete_request.min=-1) (action_http_get_request.min=7) (op_is_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.min=4) (op_list_files.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_rename.min=-1) (op_xattr_get_map.min=-1) (op_exists.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (multipart_upload_list.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_glob_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.min=-1) (object_multipart_aborted.min=-1) (committer_commit_job.min=-1) (op_xattr_list.min=-1));
maximums=((committer_materialize_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_commit_job.max=-1) (op_get_file_status.max=5) (committer_materialize_file.max=-1) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.max=-1) (op_delete.max=81) (op_get_delegation_token.failures.max=-1) (op_abort.max=-1) (op_is_file.failures.max=-1) (stream_read_remote_stream_drain.max=3) (action_http_get_request.max=35) (object_bulk_delete_request.max=16) (delegation_tokens_issued.max=-1) (op_exists.failures.max=-1) (op_create.max=59) (object_continue_list_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_list.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_createfile.max=-1) (op_exists.max=-1) (op_glob_status.max=-1) (object_continue_list_request.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (op_is_file.max=-1) (object_list_request.max=220) (committer_magic_marker_put.failures.max=-1) (action_http_get_request.failures.max=0) (op_mkdirs.failures.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.max=18) (op_xattr_get_map.max=-1) (committer_stage_file_upload.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_is_directory.failures.max=-1) (multipart_upload_list.max=-1) (op_get_file_status.failures.max=-1) (action_file_opened.max=8) (op_list_files.max=-1) (op_list_files.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_checksum.max=-1) (op_rename.failures.max=-1) (object_put_request.max=63) (op_is_directory.max=-1) (op_list_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.max=-1) (op_delete.failures.max=-1) (object_delete_request.failures.max=-1) (op_createfile.failures.max=-1) (object_delete_request.max=-1) (op_rename.max=-1) (op_mkdirs.max=322) (op_get_delegation_token.max=-1) (op_access.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_list.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_magic_marker_put.max=-1) (op_copy_from_local_file.failures.max=-1) (op_abort.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_content_summary.max=-1));
means=((op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=46, sum=666, mean=14.4783)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=66, sum=263, mean=3.9848)) (op_delete.mean=(samples=23, sum=772, mean=33.5652)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=272, mean=12.3636)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=23, sum=760, mean=33.0435)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=92, sum=918, mean=9.9783)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=46, sum=328, mean=7.1304)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (action_file_opened.mean=(samples=20, sum=85, mean=4.2500)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=23, sum=261, mean=11.3478)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:14,637 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:14,638 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,638 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,638 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,638 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,638 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000110 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000110&t0=171&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=171&ts=1731778034637
2024-11-16 17:27:14,644 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,645 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000110 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000110&t0=171&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=171&ts=1731778034637
2024-11-16 17:27:14,647 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,648 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:14,648 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:14,648 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:14,648 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000110 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000110&t0=171&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=171&ts=1731778034637
2024-11-16 17:27:14,652 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:14,652 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:14,652 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.004s
2024-11-16 17:27:14,653 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:14,653 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,653 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,653 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,653 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,653 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000111 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000111&t0=171&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=171&ts=1731778034653
2024-11-16 17:27:14,658 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,658 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,659 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:14,660 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8623204110555520302.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:14,660 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8623204110555520302.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (action_executor_acquired=0) (stream_write_block_uploads=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (object_put_request.failures=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (object_put_request=0) (op_abort.failures=0) (stream_write_total_time=0) (op_hflush=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8623204110555520302.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,661 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,661 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:14,661 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8623204110555520302.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:14,662 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:14,662 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:14,662 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:14,662 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:14,662 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000111 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000111&t0=171&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=41&ts=1731778034653
2024-11-16 17:27:14,686 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:14,686 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:14,686 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.024s
2024-11-16 17:27:14,686 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8623204110555520302.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:14,686 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8623204110555520302.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,686 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8623204110555520302.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,686 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:14,687 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,687 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_queue_duration=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (committer_magic_marker_put=0) (op_abort=0) (action_executor_acquired.failures=0) (op_hsync=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (op_abort.failures=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=1) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=24) (multipart_upload_part_put.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=24) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=24, mean=24.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:14,688 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:14,688 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:27:14,688 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:27:14,689 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:14,689 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:14,691 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:27:14,691 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:27:14,691 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:27:14,692 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:27:14,692 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:27:14,692 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:27:14,692 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:27:14,692 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:27:14,692 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:27:14,692 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:27:14,693 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='ad96d9b0-2f67-4bc6-94bf-29af2d4f9de3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:14,693 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='ad96d9b0-2f67-4bc6-94bf-29af2d4f9de3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:14,693 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='ad96d9b0-2f67-4bc6-94bf-29af2d4f9de3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:27:14,693 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:27:14,693 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:27:14,694 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:27:14,694 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:27:14,694 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:27:14,694 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:27:14,695 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1583544d]
2024-11-16 17:27:14,695 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1583544d]
2024-11-16 17:27:14,695 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:27:14,695 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:27:14,695 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:27:14,695 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:27:14,695 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:27:14,696 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:27:14,696 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:27:14,696 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:14,696 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:27:14,696 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:27:14,696 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:27:14,697 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:27:14,698 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:27:14,699 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:27:14,699 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:27:14,699 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:27:14,699 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:27:14,699 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:27:14,699 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:27:14,699 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:27:14,699 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:27:14,700 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:27:14,700 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:27:14,700 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:27:14,700 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:27:14,700 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:27:14,700 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:27:14,700 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:27:14,701 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,701 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,701 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:14,702 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] ad96d9b0-2f67-4bc6-94bf-29af2d4f9de3-00000114 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/ad96d9b0-2f67-4bc6-94bf-29af2d4f9de3-00000114/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=ad96d9b0-2f67-4bc6-94bf-29af2d4f9de3-00000114&t0=171&fs=ad96d9b0-2f67-4bc6-94bf-29af2d4f9de3&t1=171&ts=1731778034701
2024-11-16 17:27:14,702 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:27:14,702 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:27:14,702 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:27:14,703 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:27:14,706 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:14,706 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:14,707 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,707 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_fully_operations=0) (stream_read_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_combined_ranges=0) (stream_read_version_mismatches=0) (stream_read_total_bytes=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations_incomplete=0) (stream_read_vectored_operations=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_seek_policy_changed=1) (action_http_get_request.failures=0) (stream_read_block_acquire_read=0) (stream_read_unbuffered=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_block_read=0) (stream_read_close_operations=1) (stream_read_closed=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (action_file_opened.failures=0) (stream_read_opened=0) (action_http_get_request=0) (stream_read_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (action_file_opened.min=5) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=5) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:14,708 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:27:14,708 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:27:14,708 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:14,709 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@44e007ef[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:27:14,709 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:14,709 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics6-fso-bucket
2024-11-16 17:27:14,709 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:27:14,709 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1583544d] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:14,709 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1583544d] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:14,711 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((multipart_upload_completed=0) (op_xattr_get_named_map.failures=0) (object_list_request=0) (op_get_delegation_token=0) (stream_read_seek_operations=0) (stream_write_total_data=0) (store_io_request=1) (committer_commits_created=0) (object_delete_request.failures=0) (committer_load_single_pending_file.failures=0) (multipart_instantiated=0) (multipart_upload_part_put=0) (op_xattr_get_named_map=0) (stream_read_seek_forward_operations=0) (committer_commit_job.failures=0) (op_mkdirs=0) (stream_write_total_time=0) (op_delete=0) (stream_read_vectored_combined_ranges=0) (stream_read_remote_stream_drain=0) (object_put_request_completed=0) (op_xattr_list=0) (op_get_file_checksum=0) (multipart_upload_list.failures=0) (object_multipart_initiated=0) (op_hsync=0) (stream_aborted=0) (stream_write_block_uploads_committed=0) (committer_commits_aborted=0) (stream_read_opened=0) (op_xattr_get_map.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_abort_under_path_invoked=0) (store_exists_probe.failures=0) (op_hflush=0) (op_list_status=0) (committer_jobs_failed=0) (stream_read_operations_incomplete=0) (stream_read_closed=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_fully_operations=0) (op_is_file=0) (op_xattr_list.failures=0) (op_xattr_get_named=0) (object_copy_requests=0) (committer_commits_completed=0) (op_get_content_summary=0) (stream_read_exceptions=0) (op_rename.failures=0) (stream_read_seek_bytes_discarded=0) (files_created=0) (committer_commits.failures=0) (action_executor_acquired.failures=0) (stream_write_block_uploads_aborted=0) (committer_jobs_completed=0) (op_xattr_get_named.failures=0) (op_create.failures=0) (object_list_request.failures=0) (stream_read_version_mismatches=0) (ignored_errors=0) (delegation_tokens_issued=0) (op_createfile.failures=0) (object_delete_objects=0) (object_bulk_delete_request.failures=0) (committer_materialize_file=0) (op_mkdirs.failures=0) (committer_tasks_failed=0) (stream_read_close_operations=1) (audit_request_execution=1) (op_get_delegation_token.failures=0) (op_get_file_checksum.failures=0) (op_copy_from_local_file.failures=0) (stream_read_bytes_discarded_in_close=0) (action_http_head_request.failures=0) (op_access=0) (stream_read_bytes_backwards_on_seek=0) (committer_magic_marker_put=0) (stream_read_total_bytes=0) (op_is_directory.failures=0) (files_deleted=0) (op_create=0) (multipart_upload_aborted=0) (op_list_status.failures=0) (op_list_files=0) (object_multipart_initiated.failures=0) (store_io_retry=0) (delegation_tokens_issued.failures=0) (object_continue_list_request=0) (committer_stage_file_upload=0) (op_is_directory=0) (files_delete_rejected=0) (op_delete.failures=0) (object_put_request.failures=0) (object_continue_list_request.failures=0) (fake_directories_deleted=0) (op_create_non_recursive=0) (action_http_get_request.failures=0) (object_bulk_delete_request=0) (op_open=1) (directories_created=0) (audit_span_creation=2) (committer_bytes_committed=0) (op_createfile=0) (action_file_opened.failures=0) (stream_write_bytes=0) (committer_materialize_file.failures=0) (multipart_upload_started=0) (action_http_get_request=0) (stream_write_queue_duration.failures=0) (object_metadata_request=1) (stream_read_bytes_discarded_in_abort=0) (op_get_content_summary.failures=0) (object_put_request=0) (files_copied=0) (stream_write_exceptions_completing_upload=0) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes=0) (committer_tasks_completed=0) (op_xattr_get_map=0) (stream_write_exceptions=0) (committer_commit_job=0) (committer_commits_reverted=0) (stream_read_seek_bytes_skipped=0) (object_select_requests=0) (multipart_upload_part_put_bytes=0) (audit_failure=0) (files_copied_bytes=0) (stream_read_seek_backward_operations=0) (op_access.failures=0) (multipart_upload_list=0) (stream_read_remote_stream_aborted=0) (action_http_head_request=1) (op_exists.failures=0) (committer_bytes_uploaded=0) (op_abort.failures=0) (committer_stage_file_upload.failures=0) (op_exists=0) (audit_access_check_failure=0) (op_get_file_status.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=0) (op_list_located_status=0) (op_glob_status.failures=0) (stream_read_seek_policy_changed=1) (op_rename=0) (op_get_file_status=0) (object_delete_request=0) (committer_magic_marker_put.failures=0) (op_copy_from_local_file=0) (committer_load_single_pending_file=0) (committer_magic_files_created=0) (stream_write_queue_duration=0) (action_file_opened=1) (op_list_files.failures=0) (object_put_bytes=0) (stream_write_block_uploads=0) (stream_read_unbuffered=0) (op_glob_status=0) (stream_read_remote_stream_drain.failures=0) (store_io_throttled=0) (op_is_file.failures=0) (stream_read_vectored_operations=0) (store_exists_probe=0) (directories_deleted=0) (stream_read_operations=0) (op_abort=0) (op_openfile=0) (fake_directories_created=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0));
minimums=((committer_load_single_pending_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_content_summary.failures.min=-1) (op_get_file_checksum.failures.min=-1) (action_http_get_request.min=-1) (action_http_head_request.failures.min=-1) (op_abort.failures.min=-1) (op_create.failures.min=-1) (committer_materialize_file.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (object_delete_request.min=-1) (op_glob_status.failures.min=-1) (op_list_files.min=-1) (op_xattr_list.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_createfile.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_map.min=-1) (op_list_status.failures.min=-1) (action_file_opened.min=5) (committer_materialize_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.min=-1) (op_rename.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (store_exists_probe.failures.min=-1) (op_access.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_list.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (store_exists_probe.min=-1) (op_xattr_get_named.min=-1) (object_list_request.min=-1) (op_get_file_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_delete.min=-1) (op_abort.min=-1) (stream_write_queue_duration.min=-1) (op_glob_status.min=-1) (object_put_request.failures.min=-1) (op_is_file.min=-1) (op_get_content_summary.min=-1) (committer_magic_marker_put.min=-1) (op_createfile.min=-1) (op_get_file_status.failures.min=-1) (object_bulk_delete_request.min=-1) (op_create.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_access.failures.min=-1) (op_get_file_checksum.min=-1) (committer_commit_job.failures.min=-1) (object_continue_list_request.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_delegation_token.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.min=-1) (op_exists.min=-1) (op_is_file.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named.failures.min=-1) (op_delete.failures.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_status.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_rename.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (op_exists.failures.min=-1) (action_http_head_request.min=5) (object_delete_request.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.failures.min=-1));
maximums=((op_get_file_checksum.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_list_files.max=-1) (committer_commit_job.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_create.max=-1) (stream_write_queue_duration.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_file_status.max=-1) (op_create.failures.max=-1) (op_is_file.failures.max=-1) (op_exists.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (op_rename.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.max=-1) (committer_materialize_file.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.max=-1) (object_multipart_aborted.max=-1) (op_get_delegation_token.failures.max=-1) (committer_commit_job.max=-1) (action_http_head_request.failures.max=-1) (object_list_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.max=-1) (committer_materialize_file.failures.max=-1) (action_file_opened.max=5) (object_continue_list_request.failures.max=-1) (op_createfile.failures.max=-1) (action_executor_acquired.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_list.max=-1) (op_is_directory.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_file_opened.failures.max=-1) (object_put_request.failures.max=-1) (object_continue_list_request.max=-1) (op_delete.failures.max=-1) (op_access.failures.max=-1) (op_createfile.max=-1) (object_multipart_aborted.failures.max=-1) (op_mkdirs.failures.max=-1) (action_http_head_request.max=5) (object_bulk_delete_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_directory.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.failures.max=-1) (op_delete.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.max=-1) (action_http_get_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named.max=-1) (op_rename.failures.max=-1) (action_http_get_request.max=-1) (op_get_delegation_token.max=-1) (op_get_file_status.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_list_request.failures.max=-1) (op_mkdirs.max=-1) (op_list_status.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (op_list_files.failures.max=-1) (object_put_request.max=-1) (op_xattr_get_named_map.max=-1) (committer_stage_file_upload.failures.max=-1) (op_abort.max=-1) (op_glob_status.max=-1) (object_delete_request.max=-1) (op_get_file_checksum.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.max=-1) (delegation_tokens_issued.max=-1) (multipart_upload_list.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_list.failures.max=-1));
means=((op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=5, mean=5.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:14,711 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:14,711 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,712 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,712 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115&t0=171&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=171&ts=1731778034711
2024-11-16 17:27:14,715 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,715 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,715 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115&t0=171&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=171&ts=1731778034711
2024-11-16 17:27:14,721 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,721 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:14,721 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:14,721 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:14,721 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:14,721 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:14,721 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:14,721 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:14,722 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:14,722 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:14,722 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:14,722 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:14,723 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:14,723 [s3a-transfer-fso-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:14,723 [s3a-transfer-fso-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,724 [s3a-transfer-fso-bucket-unbounded-pool2-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115&t0=171&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=173&ts=1731778034711
2024-11-16 17:27:14,728 [s3a-transfer-fso-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,729 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:27:14,729 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:14,729 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:14,729 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:14,729 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778034675; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:14,729 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:14,729 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:14,729 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:14,730 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:14,730 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:14,730 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:14,730 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:14,730 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:14,730 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,730 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,730 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:14,730 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,730 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115&t0=171&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=43&ts=1731778034711
2024-11-16 17:27:14,735 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:14,735 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:14,735 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:14,735 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:14,735 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:14,735 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,735 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,735 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:14,735 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,736 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000115&t0=171&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=43&ts=1731778034711
2024-11-16 17:27:14,740 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:14,741 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:14,741 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:27:14,741 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.011s
2024-11-16 17:27:14,741 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.011s
2024-11-16 17:27:14,741 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.019s
2024-11-16 17:27:14,741 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:14,741 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:14,742 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:14,756 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 30, active threads = 0, queued tasks = 0, completed tasks = 30], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_createfile=0) (op_createfile.failures=0) (stream_read_seek_bytes_skipped=0) (store_exists_probe.failures=0) (stream_read_opened=3) (op_get_content_summary=0) (op_exists=0) (stream_write_queue_duration=0) (action_http_get_request=23) (fake_directories_deleted=24) (stream_read_bytes=6663) (committer_commit_job.failures=0) (object_delete_request=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (op_get_file_status.failures=0) (stream_read_fully_operations=1) (object_bulk_delete_request=48) (stream_read_seek_policy_changed=21) (op_copy_from_local_file=0) (committer_bytes_committed=0) (op_xattr_get_named.failures=0) (committer_commit_job=0) (delegation_tokens_issued=0) (stream_read_total_bytes=202671) (op_list_files.failures=0) (object_multipart_initiated=0) (files_copied_bytes=0) (committer_bytes_uploaded=0) (stream_read_vectored_read_bytes_discarded=24523) (multipart_upload_started=0) (multipart_upload_part_put_bytes=0) (audit_access_check_failure=0) (action_http_get_request.failures=1) (stream_read_vectored_operations=16) (object_multipart_aborted=0) (object_put_bytes=1572864) (files_created=24) (files_delete_rejected=0) (committer_tasks_failed=0) (op_abort=0) (object_bulk_delete_request.failures=0) (op_delete=24) (committer_commits_reverted=0) (op_xattr_get_named_map.failures=0) (object_list_request.failures=0) (committer_tasks_completed=0) (stream_read_remote_stream_aborted.failures=0) (audit_span_creation=94) (store_io_throttled=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_copy_from_local_file.failures=0) (audit_request_execution=282) (object_metadata_request=68) (op_list_status=0) (op_list_located_status=0) (object_multipart_aborted.failures=0) (op_get_delegation_token=0) (committer_load_single_pending_file.failures=0) (op_mkdirs=24) (audit_failure=0) (op_xattr_get_named=0) (stream_read_vectored_incoming_ranges=50) (files_copied=0) (object_delete_objects=48) (op_create=24) (action_http_head_request=68) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (op_abort.failures=0) (op_get_content_summary.failures=0) (committer_commits_completed=0) (op_mkdirs.failures=0) (op_is_directory=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain=3) (object_continue_list_request.failures=0) (op_list_status.failures=0) (op_openfile=0) (action_http_head_request.failures=0) (directories_deleted=0) (committer_stage_file_upload.failures=0) (op_get_delegation_token.failures=0) (op_access=0) (op_create.failures=0) (committer_stage_file_upload=0) (op_glob_status.failures=0) (stream_aborted=0) (op_create_non_recursive=0) (committer_jobs_completed=0) (object_continue_list_request=0) (committer_jobs_failed=0) (stream_read_remote_stream_drain.failures=0) (op_rename=0) (stream_read_seek_backward_operations=0) (stream_read_close_operations=20) (object_list_request=96) (stream_write_queue_duration.failures=0) (op_is_file=0) (op_xattr_list.failures=0) (op_get_file_checksum=0) (stream_read_operations=3) (stream_read_remote_stream_aborted=0) (action_executor_acquired=0) (multipart_instantiated=0) (stream_read_vectored_combined_ranges=21) (op_xattr_list=0) (object_delete_request.failures=0) (store_io_retry=0) (multipart_upload_list=0) (object_multipart_initiated.failures=0) (op_hflush=0) (stream_write_block_uploads_aborted=0) (op_glob_status=0) (op_open=20) (stream_write_bytes=1572864) (op_exists.failures=0) (committer_magic_marker_put=0) (stream_read_seek_operations=0) (store_io_request=282) (object_put_request_completed=48) (committer_commits.failures=0) (stream_read_exceptions=0) (multipart_upload_completed=0) (op_get_file_checksum.failures=0) (op_list_files=0) (object_put_request=48) (object_put_request.failures=0) (action_file_opened=20) (op_delete.failures=0) (op_is_directory.failures=0) (op_is_file.failures=0) (stream_read_version_mismatches=0) (committer_commits_created=0) (multipart_upload_list.failures=0) (committer_commits_aborted=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_map=0) (stream_read_bytes_discarded_in_close=196008) (multipart_upload_abort_under_path_invoked=0) (committer_load_single_pending_file=0) (op_xattr_get_map.failures=0) (committer_magic_files_created=0) (op_hsync=0) (stream_read_seek_forward_operations=0) (op_get_file_status=1) (op_xattr_get_named_map=0) (multipart_upload_aborted=0) (object_copy_requests=0) (store_exists_probe=0) (stream_write_total_data=3145728) (committer_materialize_file.failures=0) (object_select_requests=0) (directories_created=24) (stream_write_block_uploads_committed=0) (delegation_tokens_issued.failures=0) (stream_write_block_uploads=24) (ignored_errors=0) (op_access.failures=0) (committer_magic_marker_put.failures=0) (files_deleted=24) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=1) (committer_materialize_file=0) (stream_write_total_time=0) (op_rename.failures=0) (stream_read_closed=3) (fake_directories_created=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=24) (stream_read_active_prefetch_operations=0));
minimums=((op_list_files.failures.min=-1) (op_abort.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=2) (op_get_file_status.min=5) (op_xattr_get_named_map.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.min=-1) (op_glob_status.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_status.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_status.failures.min=-1) (op_list_status.failures.min=-1) (action_http_get_request.min=7) (op_get_content_summary.failures.min=-1) (op_rename.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named_map.min=-1) (store_exists_probe.failures.min=-1) (action_http_get_request.failures.min=0) (op_exists.failures.min=-1) (object_delete_request.failures.min=-1) (op_mkdirs.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (stream_write_queue_duration.min=-1) (committer_materialize_file.min=-1) (op_get_content_summary.min=-1) (op_get_file_checksum.failures.min=-1) (op_access.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (store_exists_probe.min=-1) (op_copy_from_local_file.min=-1) (op_create.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_file.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_drain.min=3) (committer_commit_job.min=-1) (op_create.min=5) (action_file_opened.failures.min=-1) (op_glob_status.failures.min=-1) (object_delete_request.min=-1) (op_get_file_checksum.min=-1) (op_is_directory.min=-1) (op_rename.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_createfile.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (op_list_files.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.min=-1) (action_file_opened.min=4) (object_list_request.min=4) (op_xattr_list.min=-1) (op_get_delegation_token.min=-1) (stream_write_queue_duration.failures.min=-1) (object_put_request.failures.min=-1) (op_delete.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_put_request.min=24) (op_exists.min=-1) (action_http_head_request.failures.min=-1) (op_mkdirs.min=13) (committer_stage_file_upload.min=-1) (op_copy_from_local_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_createfile.failures.min=-1) (op_delete.min=18) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_access.min=-1) (op_abort.min=-1) (object_bulk_delete_request.min=4) (delegation_tokens_issued.min=-1));
maximums=((object_list_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_glob_status.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_createfile.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_bulk_delete_request.max=16) (action_http_get_request.max=35) (op_exists.failures.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named.max=-1) (action_http_get_request.failures.max=0) (op_get_content_summary.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.max=-1) (op_abort.failures.max=-1) (op_is_directory.max=-1) (action_file_opened.max=8) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_head_request.max=18) (op_rename.failures.max=-1) (op_create.failures.max=-1) (op_createfile.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (op_copy_from_local_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_exists.max=-1) (op_xattr_get_map.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.max=-1) (op_mkdirs.max=322) (object_bulk_delete_request.failures.max=-1) (store_exists_probe.max=-1) (object_list_request.max=220) (op_create.max=59) (op_delete.max=81) (op_list_status.max=-1) (op_access.failures.max=-1) (multipart_upload_list.max=-1) (op_is_file.max=-1) (object_put_request.max=63) (delegation_tokens_issued.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.max=5) (op_is_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_multipart_aborted.max=-1) (op_list_status.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_list.max=-1) (op_list_files.max=-1) (object_put_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_stage_file_upload.max=-1) (op_is_directory.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.failures.max=-1) (op_delete.failures.max=-1) (committer_commit_job.failures.max=-1) (object_delete_request.max=-1) (object_continue_list_request.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_drain.max=3) (op_rename.max=-1) (object_delete_request.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_content_summary.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_access.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_named_map.max=-1) (op_copy_from_local_file.max=-1) (op_list_files.failures.max=-1) (op_get_delegation_token.failures.max=-1) (store_exists_probe.failures.max=-1));
means=((committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=24, sum=792, mean=33.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=48, sum=337, mean=7.0208)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=24, sum=776, mean=32.3333)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=96, sum=940, mean=9.7917)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=48, sum=694, mean=14.4583)) (action_file_opened.mean=(samples=20, sum=85, mean=4.2500)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=24, sum=268, mean=11.1667)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=272, mean=12.3636)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=68, sum=268, mean=3.9412)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:14,757 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:14,757 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,758 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,759 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000116 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000116&t0=174&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=174&ts=1731778034757
2024-11-16 17:27:14,764 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,764 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,765 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,765 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,765 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,766 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000116 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000116&t0=174&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=174&ts=1731778034757
2024-11-16 17:27:14,768 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,768 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:14,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:14,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:14,769 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000116 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000116&t0=174&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=174&ts=1731778034757
2024-11-16 17:27:14,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:14,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:14,774 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:14,774 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:14,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,775 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,775 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,775 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000117 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000117&t0=174&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=174&ts=1731778034774
2024-11-16 17:27:14,780 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:14,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,781 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:14,781 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6138866066836476784.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:14,782 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6138866066836476784.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (op_abort.failures=0) (op_abort=0) (object_put_request.failures=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (op_hflush=0) (stream_write_total_time=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (object_put_request=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6138866066836476784.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,782 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,782 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:14,782 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6138866066836476784.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:14,782 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:14,783 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:14,783 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:14,783 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:14,783 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000117 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000117&t0=174&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=44&ts=1731778034774
2024-11-16 17:27:14,798 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:14,798 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:14,798 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.015s
2024-11-16 17:27:14,799 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6138866066836476784.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:14,799 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6138866066836476784.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,799 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6138866066836476784.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,799 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:14,799 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,800 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (op_abort=0) (op_hsync=0) (op_hflush=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=15) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_put_request.max=15) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=15, mean=15.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:14,800 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:14,800 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:27:14,800 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:27:14,802 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:14,802 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:14,803 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:27:14,804 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:27:14,804 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:27:14,804 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:27:14,804 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:27:14,804 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:27:14,804 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:27:14,804 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:27:14,805 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:27:14,805 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:27:14,805 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='398610fd-505b-49af-92e2-e5d141716860', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:14,805 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='398610fd-505b-49af-92e2-e5d141716860', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:14,805 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='398610fd-505b-49af-92e2-e5d141716860', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:27:14,806 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:27:14,806 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:27:14,806 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:27:14,806 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:27:14,806 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:27:14,807 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:27:14,807 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1d67385f]
2024-11-16 17:27:14,807 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1d67385f]
2024-11-16 17:27:14,807 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:27:14,807 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:27:14,807 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:27:14,807 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:27:14,808 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:27:14,808 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:27:14,808 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:27:14,808 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:14,808 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:27:14,808 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:27:14,808 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:27:14,808 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:27:14,810 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:27:14,810 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:27:14,810 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:27:14,810 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:27:14,811 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:27:14,811 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:27:14,811 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:27:14,811 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:27:14,811 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:27:14,811 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:27:14,811 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:27:14,812 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:27:14,812 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:27:14,812 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:27:14,812 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:27:14,812 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:27:14,813 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,813 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,813 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:14,813 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 398610fd-505b-49af-92e2-e5d141716860-00000120 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/398610fd-505b-49af-92e2-e5d141716860-00000120/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=398610fd-505b-49af-92e2-e5d141716860-00000120&t0=174&fs=398610fd-505b-49af-92e2-e5d141716860&t1=174&ts=1731778034813
2024-11-16 17:27:14,814 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:27:14,814 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:27:14,814 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:27:14,814 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:27:14,821 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:14,822 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:14,822 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,822 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_block_read=0) (stream_read_bytes=0) (stream_read_opened=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=0) (stream_read_operations=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_close=0) (stream_read_version_mismatches=0) (action_http_get_request=0) (stream_read_closed=0) (stream_read_fully_operations=0) (stream_read_close_operations=1) (action_executor_acquired.failures=0) (stream_aborted=0) (stream_read_operations_incomplete=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (stream_read_vectored_operations=0) (action_file_opened=1) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_backward_operations=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (action_file_opened.min=8) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=8) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:14,823 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:27:14,824 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:27:14,824 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:14,824 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@1becd348[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:27:14,824 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:14,824 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics7-fso-bucket
2024-11-16 17:27:14,825 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:27:14,825 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1d67385f] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:14,825 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1d67385f] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:14,827 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_exceptions=0) (stream_read_operations=0) (op_mkdirs.failures=0) (multipart_upload_list.failures=0) (op_delete=0) (op_list_files.failures=0) (stream_write_block_uploads_committed=0) (object_list_request=0) (object_delete_request.failures=0) (files_delete_rejected=0) (committer_load_single_pending_file=0) (committer_commit_job.failures=0) (stream_write_bytes=0) (action_http_head_request.failures=0) (op_exists=0) (op_createfile=0) (committer_bytes_committed=0) (files_copied=0) (op_get_file_status=0) (stream_read_version_mismatches=0) (op_xattr_list=0) (committer_commits_reverted=0) (files_deleted=0) (committer_stage_file_upload.failures=0) (fake_directories_created=0) (audit_access_check_failure=0) (committer_commits_created=0) (op_access=0) (op_mkdirs=0) (stream_read_seek_policy_changed=1) (committer_commits.failures=0) (multipart_instantiated=0) (store_exists_probe.failures=0) (op_glob_status.failures=0) (files_created=0) (store_io_throttled=0) (action_file_opened=1) (committer_materialize_file=0) (stream_read_unbuffered=0) (action_file_opened.failures=0) (op_create_non_recursive=0) (op_create.failures=0) (op_xattr_get_named=0) (op_list_located_status=0) (committer_commit_job=0) (stream_write_exceptions_completing_upload=0) (directories_created=0) (stream_read_vectored_combined_ranges=0) (object_put_request=0) (object_put_bytes=0) (files_copied_bytes=0) (object_multipart_aborted.failures=0) (op_is_directory=0) (object_delete_request=0) (op_get_delegation_token=0) (op_xattr_get_map.failures=0) (object_multipart_initiated=0) (committer_commits_completed=0) (committer_jobs_completed=0) (object_continue_list_request.failures=0) (op_get_delegation_token.failures=0) (stream_write_total_data=0) (op_rename.failures=0) (stream_read_operations_incomplete=0) (op_get_file_checksum=0) (op_rename=0) (stream_read_remote_stream_drain.failures=0) (object_put_request_completed=0) (stream_read_vectored_read_bytes_discarded=0) (object_delete_objects=0) (op_is_directory.failures=0) (action_http_get_request=0) (stream_write_queue_duration=0) (op_hsync=0) (stream_read_remote_stream_aborted.failures=0) (op_exists.failures=0) (store_io_retry=0) (object_bulk_delete_request=0) (op_get_content_summary.failures=0) (object_select_requests=0) (stream_read_seek_bytes_skipped=0) (stream_write_block_uploads_aborted=0) (stream_read_opened=0) (op_xattr_get_named.failures=0) (directories_deleted=0) (object_continue_list_request=0) (committer_commits_aborted=0) (stream_write_queue_duration.failures=0) (committer_magic_marker_put.failures=0) (op_createfile.failures=0) (op_abort=0) (object_metadata_request=1) (committer_magic_files_created=0) (op_delete.failures=0) (stream_read_vectored_operations=0) (op_is_file=0) (stream_read_remote_stream_aborted=0) (op_list_files=0) (committer_stage_file_upload=0) (object_multipart_aborted=0) (op_hflush=0) (stream_read_bytes_discarded_in_abort=0) (committer_tasks_completed=0) (object_multipart_initiated.failures=0) (delegation_tokens_issued.failures=0) (stream_read_total_bytes=0) (op_open=1) (fake_directories_deleted=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (op_copy_from_local_file.failures=0) (action_executor_acquired.failures=0) (stream_aborted=0) (op_abort.failures=0) (stream_read_seek_backward_operations=0) (multipart_upload_completed=0) (committer_load_single_pending_file.failures=0) (stream_read_remote_stream_drain=0) (op_xattr_get_map=0) (op_xattr_list.failures=0) (op_get_content_summary=0) (stream_read_seek_operations=0) (stream_read_close_operations=1) (op_list_status.failures=0) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_started=0) (op_get_file_status.failures=0) (object_bulk_delete_request.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_bytes=0) (op_create=0) (op_xattr_get_named_map.failures=0) (stream_read_bytes_discarded_in_close=0) (op_list_status=0) (op_is_file.failures=0) (stream_read_seek_bytes_discarded=0) (object_list_request.failures=0) (committer_bytes_uploaded=0) (stream_write_block_uploads=0) (stream_read_seek_forward_operations=0) (audit_request_execution=1) (audit_failure=0) (op_openfile=0) (committer_jobs_failed=0) (op_copy_from_local_file=0) (ignored_errors=0) (stream_read_bytes_backwards_on_seek=0) (committer_tasks_failed=0) (action_executor_acquired=0) (audit_span_creation=2) (store_exists_probe=0) (store_io_request=1) (stream_write_total_time=0) (committer_magic_marker_put=0) (op_access.failures=0) (stream_write_exceptions=0) (object_copy_requests=0) (op_glob_status=0) (multipart_upload_list=0) (delegation_tokens_issued=0) (committer_materialize_file.failures=0) (stream_read_fully_operations=0) (stream_read_closed=0) (action_http_head_request=1) (op_xattr_get_named_map=0) (multipart_upload_aborted=0) (action_http_get_request.failures=0) (op_get_file_checksum.failures=0) (stream_read_vectored_incoming_ranges=0));
gauges=((stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((op_copy_from_local_file.min=-1) (op_exists.failures.min=-1) (op_get_file_checksum.min=-1) (object_multipart_aborted.failures.min=-1) (op_glob_status.min=-1) (op_abort.min=-1) (op_access.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_is_directory.min=-1) (op_list_files.min=-1) (op_get_content_summary.min=-1) (action_executor_acquired.min=-1) (op_delete.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_delete.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_file_opened.min=8) (committer_load_single_pending_file.min=-1) (op_create.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.min=-1) (delegation_tokens_issued.min=-1) (committer_stage_file_upload.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_rename.min=-1) (op_get_delegation_token.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_status.min=-1) (action_http_get_request.min=-1) (op_get_content_summary.failures.min=-1) (object_continue_list_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_createfile.min=-1) (committer_materialize_file.failures.min=-1) (action_http_head_request.min=8) (object_multipart_aborted.min=-1) (op_xattr_list.failures.min=-1) (op_is_directory.failures.min=-1) (op_is_file.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_createfile.failures.min=-1) (op_rename.failures.min=-1) (op_access.failures.min=-1) (op_create.min=-1) (op_xattr_list.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_drain.min=-1) (store_exists_probe.min=-1) (op_mkdirs.min=-1) (op_get_file_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.min=-1) (object_multipart_initiated.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_delete_request.min=-1) (object_list_request.failures.min=-1) (object_bulk_delete_request.min=-1) (action_http_get_request.failures.min=-1) (op_abort.failures.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_glob_status.failures.min=-1) (committer_materialize_file.min=-1) (committer_commit_job.min=-1) (object_put_request.min=-1) (object_list_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_exists.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_map.failures.min=-1));
maximums=((op_get_file_checksum.failures.max=-1) (op_create.failures.max=-1) (op_createfile.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.max=-1) (object_bulk_delete_request.max=-1) (op_rename.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named.max=-1) (multipart_upload_list.failures.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_createfile.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.max=-1) (op_get_file_status.max=-1) (object_continue_list_request.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_content_summary.max=-1) (op_delete.max=-1) (multipart_upload_list.max=-1) (object_list_request.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_access.max=-1) (committer_magic_marker_put.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_create.max=-1) (committer_load_single_pending_file.max=-1) (object_list_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_delete_request.max=-1) (op_glob_status.failures.max=-1) (op_list_status.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (op_access.failures.max=-1) (op_is_directory.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_list.max=-1) (op_list_files.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.max=8) (op_abort.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_write_queue_duration.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_files.failures.max=-1) (op_delete.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_file.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_materialize_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.max=-1) (committer_materialize_file.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.max=8) (store_exists_probe.failures.max=-1) (op_get_delegation_token.max=-1) (op_mkdirs.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.failures.max=-1) (op_mkdirs.max=-1) (object_continue_list_request.max=-1) (op_exists.max=-1) (object_delete_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.max=-1));
means=((committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=8, mean=8.0000)));

2024-11-16 17:27:14,828 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:14,828 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,828 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,828 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121&t0=174&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=174&ts=1731778034827
2024-11-16 17:27:14,831 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,831 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,831 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121&t0=174&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=174&ts=1731778034827
2024-11-16 17:27:14,838 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:14,838 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:14,838 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:14,838 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:14,838 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:14,839 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:14,839 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:14,839 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:14,839 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:14,839 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:14,839 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:14,839 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:14,840 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:14,840 [s3a-transfer-fso-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:14,840 [s3a-transfer-fso-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,840 [s3a-transfer-fso-bucket-unbounded-pool2-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121&t0=174&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=176&ts=1731778034827
2024-11-16 17:27:14,852 [s3a-transfer-fso-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:27:14,853 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:27:14,853 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:14,853 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:14,853 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:14,853 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778034796; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:14,854 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:14,854 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:14,854 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:14,856 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:14,856 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:14,858 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:14,858 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:14,858 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:14,858 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,858 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,858 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:14,858 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,858 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121&t0=174&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=45&ts=1731778034827
2024-11-16 17:27:14,867 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:27:14,867 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:27:14,867 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:27:14,867 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:14,867 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:14,867 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:14,867 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:14,867 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:14,868 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:14,868 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000121&t0=174&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=45&ts=1731778034827
2024-11-16 17:27:14,873 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:14,873 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:14,873 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:27:14,873 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:27:14,873 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:27:14,874 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.035s
2024-11-16 17:27:14,874 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:14,874 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:14,875 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:14,891 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 31, active threads = 0, queued tasks = 0, completed tasks = 31], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_glob_status=0) (committer_materialize_file=0) (store_exists_probe.failures=0) (committer_stage_file_upload=0) (op_hflush=0) (op_get_content_summary.failures=0) (committer_bytes_uploaded=0) (multipart_upload_completed=0) (ignored_errors=0) (op_hsync=0) (committer_commits_reverted=0) (object_multipart_aborted.failures=0) (op_createfile.failures=0) (op_delete=25) (op_create_non_recursive=0) (object_continue_list_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_create=25) (stream_read_bytes_discarded_in_close=196008) (op_access=0) (object_put_bytes=1638400) (object_delete_request.failures=0) (stream_read_seek_bytes_discarded=0) (op_list_located_status=0) (multipart_upload_aborted=0) (stream_read_opened=3) (object_metadata_request=70) (stream_write_queue_duration=0) (stream_read_remote_stream_drain=3) (op_exists=0) (stream_read_fully_operations=1) (op_mkdirs=25) (op_xattr_get_named_map=0) (op_xattr_get_named=0) (directories_created=25) (object_delete_request=0) (stream_read_bytes=6663) (action_file_opened=20) (committer_bytes_committed=0) (audit_request_execution=292) (op_xattr_get_map.failures=0) (op_mkdirs.failures=0) (op_get_file_checksum=0) (multipart_upload_started=0) (object_list_request=100) (multipart_instantiated=0) (op_get_delegation_token.failures=0) (op_is_directory.failures=0) (op_list_status.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_operations=3) (stream_write_exceptions=0) (multipart_upload_list=0) (multipart_upload_part_put_bytes=0) (object_delete_objects=50) (op_delete.failures=0) (op_get_file_status.failures=0) (object_copy_requests=0) (op_openfile=0) (committer_jobs_failed=0) (action_executor_acquired.failures=0) (object_list_request.failures=0) (stream_read_exceptions=0) (delegation_tokens_issued.failures=0) (op_xattr_get_map=0) (stream_read_total_bytes=202671) (committer_magic_files_created=0) (stream_aborted=0) (stream_read_vectored_incoming_ranges=50) (op_xattr_list.failures=0) (op_createfile=0) (multipart_upload_part_put=0) (multipart_upload_list.failures=0) (stream_read_seek_operations=0) (store_io_throttled=0) (committer_materialize_file.failures=0) (stream_read_vectored_combined_ranges=21) (object_multipart_initiated=0) (op_is_directory=0) (op_copy_from_local_file.failures=0) (stream_write_queue_duration.failures=0) (audit_failure=0) (committer_commits_completed=0) (object_put_request.failures=0) (action_http_head_request=70) (op_get_content_summary=0) (stream_read_unbuffered=1) (committer_tasks_failed=0) (stream_read_vectored_operations=16) (committer_commits_created=0) (op_rename=0) (object_put_request=50) (stream_read_seek_policy_changed=21) (object_bulk_delete_request.failures=0) (op_create.failures=0) (stream_read_remote_stream_aborted=0) (files_copied=0) (op_exists.failures=0) (action_file_opened.failures=0) (delegation_tokens_issued=0) (store_exists_probe=0) (files_created=25) (op_list_files.failures=0) (op_glob_status.failures=0) (action_http_head_request.failures=0) (files_copied_bytes=0) (op_open=20) (object_continue_list_request=0) (audit_access_check_failure=0) (committer_load_single_pending_file=0) (object_select_requests=0) (stream_write_total_data=3276800) (committer_stage_file_upload.failures=0) (stream_read_vectored_read_bytes_discarded=24523) (stream_read_seek_forward_operations=0) (files_deleted=25) (committer_magic_marker_put.failures=0) (committer_tasks_completed=0) (op_get_file_status=1) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_backward_operations=0) (stream_write_block_uploads_aborted=0) (committer_commits.failures=0) (action_http_get_request.failures=1) (action_executor_acquired=0) (op_abort=0) (op_xattr_list=0) (op_access.failures=0) (stream_read_operations_incomplete=0) (store_io_retry=0) (op_xattr_get_named_map.failures=0) (committer_commits_aborted=0) (op_get_delegation_token=0) (store_io_request=292) (op_list_files=0) (op_is_file.failures=0) (committer_jobs_completed=0) (stream_read_closed=3) (files_delete_rejected=0) (stream_write_bytes=1638400) (op_rename.failures=0) (multipart_upload_abort_under_path_invoked=0) (directories_deleted=0) (action_http_get_request=23) (op_xattr_get_named.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (fake_directories_deleted=25) (stream_read_seek_bytes_skipped=0) (fake_directories_created=0) (stream_write_block_uploads_committed=0) (op_abort.failures=0) (op_copy_from_local_file=0) (stream_write_total_time=0) (committer_load_single_pending_file.failures=0) (object_multipart_aborted=0) (op_is_file=0) (audit_span_creation=97) (op_get_file_checksum.failures=0) (object_put_request_completed=50) (object_bulk_delete_request=50) (committer_magic_marker_put=0) (stream_read_version_mismatches=0) (object_multipart_initiated.failures=0) (committer_commit_job.failures=0) (op_list_status=0) (stream_write_block_uploads=25) (stream_read_close_operations=20) (committer_commit_job=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=25) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((store_exists_probe.failures.min=-1) (op_is_directory.min=-1) (op_list_files.min=-1) (object_bulk_delete_request.min=4) (op_glob_status.min=-1) (op_get_delegation_token.min=-1) (op_delete.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_named.min=-1) (op_glob_status.failures.min=-1) (op_createfile.failures.min=-1) (op_rename.min=-1) (delegation_tokens_issued.min=-1) (committer_stage_file_upload.failures.min=-1) (op_mkdirs.min=13) (object_bulk_delete_request.failures.min=-1) (object_delete_request.min=-1) (op_xattr_list.failures.min=-1) (op_create.min=5) (object_put_request.min=15) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_http_get_request.min=7) (op_list_status.min=-1) (op_mkdirs.failures.min=-1) (store_exists_probe.min=-1) (action_http_head_request.min=2) (op_get_file_checksum.failures.min=-1) (committer_materialize_file.min=-1) (committer_commit_job.min=-1) (op_abort.failures.min=-1) (action_file_opened.min=4) (object_continue_list_request.min=-1) (committer_commit_job.failures.min=-1) (op_abort.min=-1) (op_create.failures.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_get_named.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_status.failures.min=-1) (op_get_file_checksum.min=-1) (object_list_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_rename.failures.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.min=-1) (action_http_head_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (multipart_upload_list.min=-1) (op_is_directory.failures.min=-1) (op_access.failures.min=-1) (object_list_request.min=4) (stream_read_remote_stream_drain.min=3) (action_executor_acquired.min=-1) (op_xattr_get_map.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_status.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_list_files.failures.min=-1) (op_get_file_status.min=5) (op_is_file.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_stage_file_upload.min=-1) (op_exists.min=-1) (op_delete.min=18) (delegation_tokens_issued.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_put_request.failures.min=-1) (op_access.min=-1) (op_get_content_summary.min=-1) (stream_write_queue_duration.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_createfile.min=-1) (committer_materialize_file.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_map.min=-1) (action_http_get_request.failures.min=0) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_list.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.failures.min=-1));
maximums=((object_continue_list_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_exists.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.max=-1) (action_file_opened.failures.max=-1) (op_get_content_summary.max=-1) (op_access.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_copy_from_local_file.max=-1) (action_http_get_request.failures.max=0) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_create.max=59) (op_abort.max=-1) (object_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (object_continue_list_request.max=-1) (op_get_delegation_token.max=-1) (committer_magic_marker_put.max=-1) (op_delete.max=81) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_drain.max=3) (op_glob_status.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=35) (committer_commit_job.failures.max=-1) (op_xattr_list.max=-1) (op_is_file.max=-1) (op_glob_status.failures.max=-1) (delegation_tokens_issued.max=-1) (store_exists_probe.failures.max=-1) (object_delete_request.max=-1) (multipart_upload_list.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named.max=-1) (op_list_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_status.failures.max=-1) (op_is_directory.failures.max=-1) (op_get_file_checksum.max=-1) (action_http_head_request.max=18) (op_list_status.max=-1) (op_xattr_get_map.max=-1) (op_mkdirs.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_mkdirs.max=322) (op_abort.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_list_request.max=220) (op_create.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_files.failures.max=-1) (object_bulk_delete_request.max=16) (op_createfile.max=-1) (object_put_request.max=63) (action_http_head_request.failures.max=-1) (op_delete.failures.max=-1) (op_rename.max=-1) (action_file_opened.max=8) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.max=-1) (op_get_file_status.max=5) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_put_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_exists.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_rename.failures.max=-1) (op_createfile.failures.max=-1) (op_access.max=-1) (op_is_file.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_files.max=-1) (delegation_tokens_issued.failures.max=-1));
means=((store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=50, sum=351, mean=7.0200)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=100, sum=969, mean=9.6900)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=50, sum=714, mean=14.2800)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=25, sum=275, mean=11.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=272, mean=12.3636)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=25, sum=793, mean=31.7200)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=25, sum=827, mean=33.0800)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=70, sum=274, mean=3.9143)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=85, mean=4.2500)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:14,892 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:14,892 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,892 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,892 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,892 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,892 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000122 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000122&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=177&ts=1731778034891
2024-11-16 17:27:14,898 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,898 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,898 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:14,898 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,898 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,898 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000122 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000122&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=177&ts=1731778034891
2024-11-16 17:27:14,901 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:14,901 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:14,901 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:14,901 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:14,902 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000122 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000122&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=177&ts=1731778034891
2024-11-16 17:27:14,906 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:14,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:14,907 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:14,907 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:14,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,908 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,908 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,908 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,908 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000123 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000123&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=177&ts=1731778034907
2024-11-16 17:27:14,914 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:14,914 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,914 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:14,914 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9457755573920326910.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:14,915 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9457755573920326910.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (op_hsync=0) (action_executor_acquired=0) (stream_write_total_data=0) (op_hflush=0) (op_abort=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (op_abort.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (object_put_request=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1));
maximums=((op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9457755573920326910.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,915 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,915 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:14,915 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9457755573920326910.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:14,915 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:14,915 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:14,916 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:14,916 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:14,916 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000123 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000123&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=47&ts=1731778034907
2024-11-16 17:27:14,933 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:14,933 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:14,933 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.018s
2024-11-16 17:27:14,933 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9457755573920326910.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:14,934 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9457755573920326910.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,934 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9457755573920326910.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:14,934 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:14,934 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:14,935 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (op_abort=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (op_hflush=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (object_put_request=1) (action_executor_acquired=0) (stream_write_total_time=0) (object_multipart_initiated=0) (op_abort.failures=0) (multipart_upload_completed=0) (op_hsync=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=17) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=17) (committer_magic_marker_put.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:14,935 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:14,935 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:14,936 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:14,936 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:14,936 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000124 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000124/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000124&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=177&ts=1731778034935
2024-11-16 17:27:14,939 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:14,939 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:14,939 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,939 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:14,939 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:14,939 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:14,939 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:14,939 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:14,940 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:14,940 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:14,940 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [49] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000124 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000124/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000124&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=49&ts=1731778034935
2024-11-16 17:27:14,949 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.009s
2024-11-16 17:27:14,949 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:14,949 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:14,962 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_operations=1) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_discarded_in_close=0) (stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_incoming_ranges=2) (action_executor_acquired=0) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_operations=0) (action_file_opened=1) (stream_read_vectored_read_bytes_discarded=10) (action_executor_acquired.failures=0) (stream_read_operations_incomplete=0) (stream_read_opened=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_total_bytes=150) (stream_read_unbuffered=0) (stream_read_prefetch_operations.failures=0) (stream_read_exceptions=0) (stream_read_close_operations=1) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes=150) (stream_read_seek_forward_operations=0) (stream_read_version_mismatches=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=9) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=9) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_http_get_request.mean=(samples=1, sum=9, mean=9.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:14,964 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:14,964 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:14,964 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:14,964 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=177&ts=1731778034964
2024-11-16 17:27:14,975 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:14,975 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,976 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [177] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=177&ts=1731778034964
2024-11-16 17:27:14,982 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:14,983 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:14,983 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:14,983 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:14,984 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:14,984 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:14,984 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:14,984 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:14,984 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:14,984 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:14,984 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:14,985 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:14,993 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:14,993 [s3a-transfer-fso-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:14,993 [s3a-transfer-fso-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:14,994 [s3a-transfer-fso-bucket-unbounded-pool2-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [178] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=178&ts=1731778034964
2024-11-16 17:27:15,000 [s3a-transfer-fso-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:15,001 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:27:15,001 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:15,002 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:15,002 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:15,002 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778034931; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:15,002 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:15,002 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:15,002 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:15,003 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:15,003 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:15,003 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:15,003 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:15,003 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:15,003 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,003 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,003 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:15,003 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,003 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [50] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=50&ts=1731778034964
2024-11-16 17:27:15,009 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:15,009 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:15,009 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:27:15,009 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:15,009 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:15,009 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,009 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,009 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:15,009 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,009 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [50] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000125&t0=177&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=50&ts=1731778034964
2024-11-16 17:27:15,018 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:27:15,018 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:27:15,018 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:27:15,018 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:27:15,018 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:27:15,018 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:27:15,018 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:15,018 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:15,027 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:15,046 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 32, active threads = 0, queued tasks = 0, completed tasks = 32], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_createfile.failures=0) (stream_read_exceptions=0) (committer_stage_file_upload=0) (op_list_status=0) (op_createfile=0) (object_put_bytes=1703936) (committer_commits_reverted=0) (files_copied_bytes=0) (op_copy_from_local_file=0) (op_is_directory=0) (op_create.failures=0) (op_xattr_get_named=0) (multipart_upload_completed=0) (stream_read_seek_policy_changed=22) (committer_bytes_committed=0) (store_io_request=304) (committer_magic_marker_put=0) (stream_read_vectored_incoming_ranges=52) (op_xattr_list.failures=0) (fake_directories_deleted=26) (object_select_requests=0) (committer_materialize_file=0) (action_executor_acquired=0) (stream_read_vectored_operations=17) (committer_load_single_pending_file=0) (object_delete_objects=52) (op_glob_status=0) (object_bulk_delete_request=52) (stream_write_total_time=0) (fake_directories_created=0) (stream_aborted=0) (stream_read_closed=3) (stream_read_seek_operations=0) (op_get_delegation_token=0) (delegation_tokens_issued.failures=0) (committer_stage_file_upload.failures=0) (files_copied=0) (op_get_file_status=1) (multipart_upload_part_put=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (multipart_upload_list=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads_committed=0) (committer_commit_job=0) (multipart_upload_part_put_bytes=0) (action_file_opened=21) (action_http_get_request.failures=1) (object_multipart_aborted.failures=0) (multipart_upload_started=0) (stream_read_seek_bytes_discarded=0) (op_create_non_recursive=0) (op_get_file_checksum=0) (stream_write_block_uploads=26) (stream_write_exceptions_completing_upload=0) (stream_read_seek_backward_operations=0) (directories_deleted=0) (audit_access_check_failure=0) (object_delete_request=0) (stream_write_exceptions=0) (op_is_directory.failures=0) (multipart_upload_aborted=0) (object_bulk_delete_request.failures=0) (op_list_files.failures=0) (op_get_file_status.failures=0) (files_delete_rejected=0) (op_xattr_get_named_map.failures=0) (op_abort.failures=0) (object_continue_list_request.failures=0) (multipart_upload_list.failures=0) (op_get_file_checksum.failures=0) (action_http_head_request.failures=0) (op_list_status.failures=0) (stream_read_version_mismatches=0) (op_xattr_get_map=0) (stream_read_bytes_discarded_in_close=196008) (stream_write_bytes=1703936) (committer_load_single_pending_file.failures=0) (op_copy_from_local_file.failures=0) (op_list_located_status=0) (multipart_instantiated=0) (committer_magic_files_created=0) (op_is_file.failures=0) (op_mkdirs.failures=0) (op_create=26) (stream_write_total_data=3407872) (store_io_throttled=0) (op_hflush=0) (store_exists_probe=0) (object_multipart_aborted=0) (object_list_request=104) (op_glob_status.failures=0) (object_delete_request.failures=0) (object_put_request.failures=0) (committer_jobs_failed=0) (stream_read_unbuffered=1) (op_xattr_get_named.failures=0) (op_open=21) (op_exists.failures=0) (committer_tasks_failed=0) (op_access.failures=0) (object_continue_list_request=0) (files_created=26) (action_http_get_request=24) (audit_span_creation=101) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain=3) (committer_commits_completed=0) (op_list_files=0) (committer_commits.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (op_is_file=0) (object_put_request=52) (stream_read_remote_stream_aborted=0) (stream_write_queue_duration=0) (op_xattr_get_map.failures=0) (stream_read_operations=3) (store_exists_probe.failures=0) (stream_read_close_operations=21) (store_io_retry=0) (committer_materialize_file.failures=0) (stream_write_queue_duration.failures=0) (op_rename.failures=0) (stream_read_fully_operations=1) (stream_read_seek_bytes_skipped=0) (op_get_content_summary=0) (stream_read_remote_stream_drain.failures=0) (committer_commits_created=0) (op_delete.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_get_content_summary.failures=0) (multipart_upload_abort_under_path_invoked=0) (object_put_request_completed=52) (op_openfile=0) (action_file_opened.failures=0) (object_copy_requests=0) (committer_jobs_completed=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_named_map=0) (files_deleted=26) (stream_read_vectored_read_bytes_discarded=24533) (delegation_tokens_issued=0) (object_list_request.failures=0) (committer_tasks_completed=0) (op_rename=0) (op_get_delegation_token.failures=0) (action_http_head_request=73) (stream_write_block_uploads_aborted=0) (committer_commit_job.failures=0) (audit_request_execution=304) (op_mkdirs=26) (stream_read_vectored_combined_ranges=22) (ignored_errors=0) (stream_read_bytes=6813) (committer_commits_aborted=0) (stream_read_total_bytes=202821) (committer_magic_marker_put.failures=0) (op_hsync=0) (directories_created=26) (op_access=0) (op_xattr_list=0) (committer_bytes_uploaded=0) (object_metadata_request=73) (stream_read_opened=3) (audit_failure=0) (op_abort=0) (op_delete=26) (op_exists=0));
gauges=((stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=26) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((op_rename.failures.min=-1) (action_file_opened.min=4) (op_get_file_checksum.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_exists.min=-1) (object_list_request.min=4) (stream_read_remote_stream_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_delete.failures.min=-1) (op_copy_from_local_file.min=-1) (object_put_request.min=17) (stream_read_remote_stream_drain.failures.min=-1) (action_http_head_request.min=2) (op_xattr_list.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_status.min=5) (op_get_file_checksum.failures.min=-1) (op_list_files.min=-1) (op_get_file_status.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.min=-1) (op_mkdirs.failures.min=-1) (object_put_request.failures.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.min=4) (action_http_get_request.failures.min=0) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_drain.min=3) (op_glob_status.failures.min=-1) (op_exists.failures.min=-1) (op_access.failures.min=-1) (op_xattr_list.failures.min=-1) (op_is_directory.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_named.min=-1) (op_create.min=5) (action_file_opened.failures.min=-1) (op_access.min=-1) (op_xattr_get_map.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_createfile.min=-1) (object_delete_request.min=-1) (op_get_delegation_token.min=-1) (object_multipart_initiated.failures.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_file.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_stage_file_upload.min=-1) (multipart_upload_list.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_content_summary.min=-1) (object_continue_list_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_executor_acquired.failures.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_create.failures.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_magic_marker_put.min=-1) (op_is_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_http_get_request.min=9) (object_list_request.failures.min=-1) (op_abort.min=-1) (op_list_status.min=-1) (delegation_tokens_issued.min=-1) (committer_commit_job.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.min=13) (object_bulk_delete_request.failures.min=-1) (op_glob_status.min=-1) (object_multipart_aborted.min=-1) (op_delete.min=18) (object_delete_request.failures.min=-1));
maximums=((object_put_request.max=63) (op_get_file_checksum.max=-1) (store_exists_probe.max=-1) (op_is_directory.failures.max=-1) (object_multipart_initiated.max=-1) (op_access.max=-1) (op_exists.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_glob_status.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_content_summary.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=0) (stream_write_queue_duration.max=-1) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_list_request.failures.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_drain.max=3) (committer_materialize_file.max=-1) (op_get_delegation_token.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_list.failures.max=-1) (action_executor_acquired.max=-1) (committer_commit_job.failures.max=-1) (op_rename.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_status.max=5) (op_createfile.failures.max=-1) (object_continue_list_request.max=-1) (op_list_status.failures.max=-1) (delegation_tokens_issued.max=-1) (op_list_files.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_abort.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.max=18) (op_xattr_get_map.max=-1) (op_abort.max=-1) (op_mkdirs.max=322) (op_get_file_checksum.failures.max=-1) (op_create.max=59) (op_mkdirs.failures.max=-1) (op_xattr_list.max=-1) (op_create.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.max=16) (op_is_file.failures.max=-1) (committer_commit_job.max=-1) (op_copy_from_local_file.max=-1) (action_file_opened.max=8) (action_file_opened.failures.max=-1) (object_delete_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_access.failures.max=-1) (op_delete.max=81) (object_list_request.max=220) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.max=-1) (op_rename.failures.max=-1) (op_createfile.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.max=-1) (op_is_file.max=-1) (op_is_directory.max=-1) (object_put_request.failures.max=-1) (op_delete.failures.max=-1) (op_exists.failures.max=-1) (action_http_get_request.max=35));
means=((action_http_get_request.mean=(samples=23, sum=281, mean=12.2174)) (op_mkdirs.mean=(samples=26, sum=808, mean=31.0769)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=21, sum=89, mean=4.2381)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=104, sum=993, mean=9.5481)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=26, sum=861, mean=33.1154)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=52, sum=736, mean=14.1538)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=52, sum=366, mean=7.0385)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=26, sum=283, mean=10.8846)) (action_http_head_request.mean=(samples=73, sum=291, mean=3.9863)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:15,046 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:15,046 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,047 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,047 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,047 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,047 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000126 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000126/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000126&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=179&ts=1731778035046
2024-11-16 17:27:15,052 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:15,052 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,053 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,053 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,053 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,053 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000126 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000126/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000126&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=179&ts=1731778035046
2024-11-16 17:27:15,055 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,055 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:15,055 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:15,055 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:15,055 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000126 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000126/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000126&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=179&ts=1731778035046
2024-11-16 17:27:15,060 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:15,060 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:15,060 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:15,060 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:15,060 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,060 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,060 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,061 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,061 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000127 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000127/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000127&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=179&ts=1731778035060
2024-11-16 17:27:15,067 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:15,067 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,067 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:15,068 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7400108836469619739.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:15,068 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7400108836469619739.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (object_put_request=0) (op_hflush=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_bytes=65536) (stream_write_total_data=0) (op_hsync=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7400108836469619739.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,068 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,068 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:15,068 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7400108836469619739.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:15,069 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:15,069 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:15,069 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:15,069 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:15,069 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000127 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000127/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000127&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=51&ts=1731778035060
2024-11-16 17:27:15,084 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:15,084 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:15,084 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.015s
2024-11-16 17:27:15,084 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7400108836469619739.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:15,084 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7400108836469619739.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,084 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7400108836469619739.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,084 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:15,084 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,085 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (op_abort.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=1) (op_hflush=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_total_data=65536) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (op_hsync=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (object_put_request=1) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (object_put_request.min=15) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=15) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=15, mean=15.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:15,086 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:15,086 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,086 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,086 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:15,087 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000128 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000128/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000128&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=179&ts=1731778035086
2024-11-16 17:27:15,089 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:15,089 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:15,089 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,090 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:15,090 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:15,090 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:15,090 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,090 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,090 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:15,090 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000128 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000128/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000128&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=53&ts=1731778035086
2024-11-16 17:27:15,091 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:15,091 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_closed=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_aborted=0) (stream_read_block_acquire_read=0) (stream_read_vectored_incoming_ranges=2) (stream_read_close_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_seek_policy_changed=1) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_backward_operations=0) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (stream_read_fully_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_bytes_skipped=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes=0) (action_http_get_request.failures=0) (stream_read_unbuffered=1) (stream_read_exceptions=0) (action_executor_acquired=0) (stream_read_total_bytes=0) (action_http_get_request=1) (stream_read_block_read=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=3) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=3) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:15,092 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:27:15,096 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.006s
2024-11-16 17:27:15,096 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1055)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:27:15,097 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,097 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:15,097 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,097 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:15,097 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:15,097 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,097 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,097 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:15,098 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [55] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000128 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000128/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000128&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=55&ts=1731778035086
2024-11-16 17:27:15,099 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:15,104 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.007s
2024-11-16 17:27:15,104 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:15,104 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,104 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=2) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_read_vectored_read_bytes_discarded=10) (stream_read_opened=0) (stream_read_seek_policy_changed=2) (stream_read_prefetch_operations=0) (stream_read_fully_operations=0) (stream_read_total_bytes=150) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_vectored_incoming_ranges=4) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (stream_read_closed=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened.failures=0) (action_http_get_request=2) (stream_read_exceptions=0) (action_executor_acquired.failures=0) (stream_read_bytes=150) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_operations=2) (stream_read_unbuffered=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=1));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=6) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=7) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=3) (stream_read_block_acquire_read.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=13, mean=6.5000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:15,105 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:15,105 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,105 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,106 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=179&ts=1731778035105
2024-11-16 17:27:15,108 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,108 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,108 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=179&ts=1731778035105
2024-11-16 17:27:15,114 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:15,114 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:15,114 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:15,114 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:15,114 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:15,114 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:15,114 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:15,114 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:15,114 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:15,115 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:15,115 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:15,115 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:15,115 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:15,115 [s3a-transfer-fso-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:15,115 [s3a-transfer-fso-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,115 [s3a-transfer-fso-bucket-unbounded-pool2-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [180] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=180&ts=1731778035105
2024-11-16 17:27:15,120 [s3a-transfer-fso-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:15,120 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:27:15,120 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:15,120 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:15,120 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:15,120 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778035082; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:15,120 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:15,120 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:15,120 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:15,121 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:15,121 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:15,121 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:15,121 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:15,121 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:15,121 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,121 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,121 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:15,121 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,121 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=63&ts=1731778035105
2024-11-16 17:27:15,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:15,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:15,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:27:15,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:15,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:15,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:15,127 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,128 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000129&t0=179&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=63&ts=1731778035105
2024-11-16 17:27:15,132 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:15,132 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:15,132 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:15,132 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.011s
2024-11-16 17:27:15,132 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.011s
2024-11-16 17:27:15,132 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.018s
2024-11-16 17:27:15,133 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:15,133 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:15,135 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:15,155 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 33, active threads = 0, queued tasks = 0, completed tasks = 33], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_started=0) (op_get_file_checksum.failures=0) (op_list_status.failures=0) (op_access.failures=0) (committer_load_single_pending_file=0) (stream_read_total_bytes=202971) (op_mkdirs=27) (object_continue_list_request.failures=0) (files_copied_bytes=0) (stream_read_close_operations=22) (committer_commits.failures=0) (stream_write_block_uploads_aborted=0) (committer_bytes_committed=0) (stream_write_block_uploads=27) (object_list_request=108) (object_bulk_delete_request=54) (op_get_delegation_token=0) (stream_write_total_time=0) (committer_commits_reverted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_unbuffered=2) (stream_read_closed=3) (stream_read_remote_stream_drain.failures=0) (op_createfile=0) (multipart_upload_part_put=0) (op_delete=27) (stream_read_operations_incomplete=0) (stream_read_seek_operations=0) (op_createfile.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named_map=0) (op_create.failures=0) (fake_directories_deleted=27) (object_list_request.failures=0) (stream_read_bytes_discarded_in_close=196008) (object_multipart_aborted.failures=0) (committer_commit_job.failures=0) (stream_write_exceptions=0) (stream_read_seek_policy_changed=24) (op_rename.failures=0) (op_xattr_get_named_map.failures=0) (committer_materialize_file=0) (stream_read_bytes_backwards_on_seek=0) (op_create_non_recursive=0) (directories_deleted=0) (op_openfile=0) (multipart_upload_aborted=0) (object_select_requests=0) (action_http_get_request.failures=1) (stream_read_vectored_combined_ranges=24) (op_is_file=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=19) (op_xattr_get_named=0) (object_delete_request=0) (stream_read_operations=3) (audit_access_check_failure=0) (op_rename=0) (op_xattr_get_map.failures=0) (store_io_retry=0) (committer_stage_file_upload.failures=0) (files_copied=0) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (committer_commits_created=0) (committer_jobs_completed=0) (op_open=22) (files_deleted=27) (object_multipart_aborted=0) (committer_tasks_failed=0) (stream_read_opened=3) (store_exists_probe=0) (committer_materialize_file.failures=0) (stream_read_seek_forward_operations=0) (stream_write_bytes=1769472) (object_multipart_initiated.failures=0) (files_created=27) (committer_magic_marker_put=0) (op_get_file_status.failures=0) (multipart_upload_part_put_bytes=0) (action_file_opened=22) (op_hflush=0) (op_is_file.failures=0) (ignored_errors=0) (stream_read_seek_bytes_discarded=0) (op_xattr_list=0) (action_http_head_request.failures=0) (op_glob_status.failures=0) (op_list_located_status=0) (multipart_instantiated=0) (op_copy_from_local_file=0) (audit_span_creation=105) (store_exists_probe.failures=0) (stream_read_vectored_read_bytes_discarded=24543) (committer_stage_file_upload=0) (op_get_content_summary=0) (op_is_directory.failures=0) (multipart_upload_abort_under_path_invoked=0) (store_io_throttled=0) (object_put_request=54) (object_put_request.failures=0) (committer_commits_completed=0) (object_copy_requests=0) (committer_bytes_uploaded=0) (store_io_request=317) (multipart_upload_list.failures=0) (op_list_files=0) (audit_request_execution=317) (op_xattr_get_map=0) (audit_failure=0) (multipart_upload_completed=0) (op_exists=0) (delegation_tokens_issued.failures=0) (op_xattr_get_named.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_remote_stream_drain=3) (stream_write_queue_duration.failures=0) (op_get_delegation_token.failures=0) (object_put_request_completed=54) (stream_write_block_uploads_committed=0) (op_create=27) (object_bulk_delete_request.failures=0) (committer_tasks_completed=0) (stream_write_total_data=3538944) (op_exists.failures=0) (committer_commits_aborted=0) (committer_magic_marker_put.failures=0) (action_http_get_request=26) (op_glob_status=0) (fake_directories_created=0) (op_abort=0) (stream_aborted=0) (object_delete_objects=54) (op_abort.failures=0) (op_mkdirs.failures=0) (op_xattr_list.failures=0) (files_delete_rejected=0) (stream_read_fully_operations=1) (stream_read_exceptions=0) (op_get_content_summary.failures=0) (committer_magic_files_created=0) (object_put_bytes=1769472) (op_access=0) (stream_read_vectored_incoming_ranges=56) (action_executor_acquired.failures=0) (op_get_file_status=1) (op_list_status=0) (stream_read_version_mismatches=0) (committer_jobs_failed=0) (stream_read_bytes=6963) (stream_write_queue_duration=0) (stream_read_remote_stream_aborted.failures=0) (committer_commit_job=0) (multipart_upload_list=0) (object_delete_request.failures=0) (action_executor_acquired=0) (delegation_tokens_issued=0) (directories_created=27) (action_http_head_request=76) (op_is_directory=0) (object_metadata_request=76) (object_continue_list_request=0) (object_multipart_initiated=0) (op_get_file_checksum=0) (op_delete.failures=0) (op_copy_from_local_file.failures=0) (op_list_files.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=27) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((op_is_file.failures.min=-1) (op_createfile.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.min=2) (op_mkdirs.failures.min=-1) (object_list_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_delete.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_list.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.min=-1) (op_rename.min=-1) (object_delete_request.min=-1) (op_is_directory.min=-1) (object_bulk_delete_request.min=4) (committer_materialize_file.min=-1) (op_delete.min=18) (object_bulk_delete_request.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_map.failures.min=-1) (op_mkdirs.min=13) (action_file_opened.failures.min=-1) (object_delete_request.failures.min=-1) (op_createfile.min=-1) (object_put_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_http_get_request.min=6) (op_access.min=-1) (op_copy_from_local_file.min=-1) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_file_checksum.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.min=15) (committer_load_single_pending_file.min=-1) (store_exists_probe.min=-1) (op_is_file.min=-1) (op_exists.min=-1) (op_create.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_file_opened.min=3) (op_list_files.failures.min=-1) (op_xattr_get_map.min=-1) (action_executor_acquired.min=-1) (op_access.failures.min=-1) (object_continue_list_request.min=-1) (op_list_status.min=-1) (op_xattr_list.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_drain.min=3) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_abort.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_directory.failures.min=-1) (object_list_request.min=4) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_rename.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_glob_status.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_content_summary.min=-1) (op_get_file_status.failures.min=-1) (multipart_upload_list.min=-1) (op_create.min=5) (op_get_file_status.min=5) (action_http_get_request.failures.min=0));
maximums=((object_multipart_initiated.max=-1) (op_xattr_get_named_map.max=-1) (action_file_opened.max=8) (object_continue_list_request.max=-1) (op_list_files.max=-1) (delegation_tokens_issued.failures.max=-1) (op_mkdirs.failures.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_get_request.failures.max=0) (op_exists.failures.max=-1) (multipart_upload_list.max=-1) (object_continue_list_request.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.max=-1) (action_file_opened.failures.max=-1) (object_bulk_delete_request.max=16) (op_xattr_get_map.max=-1) (op_copy_from_local_file.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_commit_job.max=-1) (op_createfile.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.failures.max=-1) (op_list_status.max=-1) (multipart_upload_list.failures.max=-1) (object_put_request.failures.max=-1) (op_create.max=59) (object_put_request.max=63) (object_bulk_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_delete_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_directory.max=-1) (op_get_content_summary.failures.max=-1) (action_http_head_request.failures.max=-1) (object_list_request.failures.max=-1) (op_get_content_summary.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=3) (object_delete_request.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.max=81) (committer_materialize_file.max=-1) (op_access.max=-1) (object_multipart_aborted.max=-1) (committer_commit_job.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.max=-1) (op_list_status.failures.max=-1) (op_create.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_head_request.max=18) (op_exists.max=-1) (op_delete.failures.max=-1) (op_mkdirs.max=322) (op_get_file_checksum.max=-1) (op_access.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_directory.failures.max=-1) (op_createfile.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_status.max=5) (op_is_file.max=-1) (committer_stage_file_upload.failures.max=-1) (op_glob_status.max=-1) (op_rename.max=-1) (object_list_request.max=220) (object_multipart_aborted.failures.max=-1) (action_http_get_request.max=35));
means=((op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=27, sum=291, mean=10.7778)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=22, sum=92, mean=4.1818)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=76, sum=299, mean=3.9342)) (object_list_request.mean=(samples=108, sum=1015, mean=9.3981)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=27, sum=822, mean=30.4444)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=54, sum=377, mean=6.9815)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=27, sum=880, mean=32.5926)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=54, sum=756, mean=14.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=25, sum=294, mean=11.7600)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:15,156 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:15,156 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,156 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,156 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,156 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,157 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000130 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000130/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000130&t0=181&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=181&ts=1731778035156
2024-11-16 17:27:15,162 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:15,162 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,163 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,163 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,163 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,163 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000130 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000130/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000130&t0=181&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=181&ts=1731778035156
2024-11-16 17:27:15,165 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,165 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:15,165 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:15,165 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:15,165 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000130 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000130/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000130&t0=181&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=181&ts=1731778035156
2024-11-16 17:27:15,170 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:15,170 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:15,170 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:15,170 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:15,170 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,170 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,171 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,171 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,171 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000131 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000131/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000131&t0=181&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=181&ts=1731778035170
2024-11-16 17:27:15,176 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:15,176 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,176 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:15,176 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17938906200513216336.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:15,177 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17938906200513216336.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (op_hsync=0) (action_executor_acquired=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (multipart_upload_completed.failures=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (op_abort.failures=0) (op_abort=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (op_hflush=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17938906200513216336.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,177 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,177 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:15,178 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17938906200513216336.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:15,178 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:15,178 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:15,178 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:15,178 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:15,178 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000131 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000131/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000131&t0=181&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=65&ts=1731778035170
2024-11-16 17:27:15,195 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:15,195 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:15,195 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:27:15,195 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17938906200513216336.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:15,195 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17938906200513216336.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,195 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17938906200513216336.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,195 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:15,196 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,197 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (object_put_request.failures=0) (action_executor_acquired=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (op_abort=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (object_put_request=1) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=17) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_put_request.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=17) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:15,197 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:15,197 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:27:15,197 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:27:15,199 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:15,199 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:15,200 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:27:15,201 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:27:15,201 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:27:15,201 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:27:15,201 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:27:15,201 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:27:15,201 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:27:15,201 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:27:15,201 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:27:15,202 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:27:15,202 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='478284d9-ff2b-43aa-a789-ca76022102c9', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:15,202 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='478284d9-ff2b-43aa-a789-ca76022102c9', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:15,202 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='478284d9-ff2b-43aa-a789-ca76022102c9', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:27:15,202 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:27:15,203 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:27:15,203 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:27:15,203 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:27:15,203 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:27:15,205 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:27:15,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6db91fb9]
2024-11-16 17:27:15,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6db91fb9]
2024-11-16 17:27:15,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:27:15,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:27:15,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:27:15,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:27:15,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:27:15,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:27:15,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:27:15,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:15,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:27:15,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:27:15,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:27:15,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:27:15,210 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:27:15,211 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:27:15,211 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:27:15,211 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:27:15,211 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:27:15,211 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:27:15,211 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:27:15,211 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:27:15,212 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:27:15,212 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:27:15,212 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:27:15,212 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:27:15,212 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:27:15,212 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:27:15,212 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:27:15,212 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:27:15,213 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,213 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,213 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:15,213 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] 478284d9-ff2b-43aa-a789-ca76022102c9-00000134 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/478284d9-ff2b-43aa-a789-ca76022102c9-00000134/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=478284d9-ff2b-43aa-a789-ca76022102c9-00000134&t0=181&fs=478284d9-ff2b-43aa-a789-ca76022102c9&t1=181&ts=1731778035213
2024-11-16 17:27:15,213 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:27:15,214 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:27:15,214 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:27:15,214 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:27:15,218 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:15,218 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778035000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:15,223 [s3a-transfer-fso-bucket-unbounded-pool17-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:15,223 [s3a-transfer-fso-bucket-unbounded-pool17-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,223 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:27:15,224 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:15,224 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:15,225 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:27:15,225 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:27:15,225 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,225 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,226 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:15,225 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:15,226 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] 478284d9-ff2b-43aa-a789-ca76022102c9-00000135 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/478284d9-ff2b-43aa-a789-ca76022102c9-00000135/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=100-1099&id=478284d9-ff2b-43aa-a789-ca76022102c9-00000135&t0=183&fs=478284d9-ff2b-43aa-a789-ca76022102c9&t1=184&ts=1731778035223
2024-11-16 17:27:15,226 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:15,231 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:27:15,232 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,232 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,232 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:15,232 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [185] 478284d9-ff2b-43aa-a789-ca76022102c9-00000135 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/478284d9-ff2b-43aa-a789-ca76022102c9-00000135/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=100-1099&id=478284d9-ff2b-43aa-a789-ca76022102c9-00000135&t0=183&fs=478284d9-ff2b-43aa-a789-ca76022102c9&t1=185&ts=1731778035223
2024-11-16 17:27:15,243 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:27:15,243 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,243 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:27:15,243 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,246 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_exceptions=0) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (stream_aborted=0) (stream_read_vectored_operations=2) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_combined_ranges=2) (stream_read_vectored_read_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_prefetch_operations=0) (stream_read_seek_policy_changed=1) (stream_read_total_bytes=2000) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_fully_operations=0) (action_http_get_request=2) (stream_read_close_operations=1) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_opened=0) (stream_read_closed=0) (stream_read_block_read=0) (stream_read_bytes=2000) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=4));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=11) (action_file_opened.min=0));
maximums=((action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=17) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=0) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=28, mean=14.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:15,248 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:27:15,251 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:27:15,251 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:15,251 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@6eabce3d[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:27:15,251 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:15,251 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics8-fso-bucket
2024-11-16 17:27:15,251 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:27:15,251 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6db91fb9] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:15,251 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6db91fb9] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:15,252 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((object_multipart_initiated=0) (op_list_status=0) (stream_read_exceptions=0) (committer_commit_job.failures=0) (op_xattr_get_named_map.failures=0) (op_glob_status=0) (multipart_upload_part_put=0) (op_list_status.failures=0) (multipart_upload_started=0) (op_xattr_get_map.failures=0) (op_open=1) (multipart_upload_abort_under_path_invoked=0) (op_rename.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_fully_operations=0) (directories_created=0) (stream_write_exceptions=0) (op_exists.failures=0) (op_glob_status.failures=0) (op_rename=0) (ignored_errors=0) (op_openfile=0) (op_abort.failures=0) (op_xattr_get_map=0) (action_http_get_request.failures=0) (object_multipart_aborted.failures=0) (op_xattr_list=0) (files_deleted=0) (audit_access_check_failure=0) (stream_read_version_mismatches=0) (stream_read_vectored_operations=2) (object_put_request_completed=0) (stream_write_queue_duration.failures=0) (op_create_non_recursive=0) (object_delete_objects=0) (stream_write_exceptions_completing_upload=0) (op_list_files=0) (stream_read_total_bytes=2000) (multipart_upload_list.failures=0) (stream_read_seek_operations=0) (op_xattr_get_named=0) (committer_stage_file_upload.failures=0) (op_is_directory.failures=0) (stream_read_bytes_discarded_in_close=0) (object_metadata_request=1) (delegation_tokens_issued.failures=0) (op_delete=0) (committer_tasks_completed=0) (object_list_request=0) (stream_read_remote_stream_aborted.failures=0) (committer_commits_completed=0) (multipart_upload_part_put_bytes=0) (stream_read_close_operations=1) (files_created=0) (op_hsync=0) (object_put_bytes=0) (committer_commits_created=0) (object_bulk_delete_request=0) (op_get_file_status.failures=0) (stream_write_total_time=0) (files_copied=0) (multipart_instantiated=0) (action_http_get_request=2) (action_executor_acquired.failures=0) (action_http_head_request=1) (committer_stage_file_upload=0) (stream_read_bytes=2000) (object_continue_list_request.failures=0) (fake_directories_created=0) (op_copy_from_local_file=0) (op_createfile.failures=0) (op_mkdirs.failures=0) (stream_read_vectored_read_bytes_discarded=0) (committer_magic_marker_put=0) (op_get_content_summary=0) (committer_magic_files_created=0) (committer_commits_reverted=0) (object_delete_request.failures=0) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=4) (store_io_throttled=0) (stream_write_total_data=0) (object_list_request.failures=0) (op_create.failures=0) (object_continue_list_request=0) (op_get_content_summary.failures=0) (fake_directories_deleted=0) (files_delete_rejected=0) (audit_request_execution=3) (op_is_file=0) (stream_read_operations=0) (stream_write_bytes=0) (op_createfile=0) (committer_jobs_completed=0) (stream_read_bytes_backwards_on_seek=0) (audit_span_creation=3) (stream_read_seek_policy_changed=1) (directories_deleted=0) (committer_magic_marker_put.failures=0) (committer_load_single_pending_file.failures=0) (committer_materialize_file.failures=0) (committer_commits.failures=0) (stream_read_remote_stream_drain=0) (object_put_request=0) (op_delete.failures=0) (stream_read_opened=0) (op_access.failures=0) (object_put_request.failures=0) (op_list_located_status=0) (committer_commits_aborted=0) (op_mkdirs=0) (stream_read_vectored_combined_ranges=2) (stream_read_unbuffered=0) (op_hflush=0) (multipart_upload_aborted=0) (stream_read_operations_incomplete=0) (op_access=0) (stream_write_block_uploads_aborted=0) (stream_read_closed=0) (action_executor_acquired=0) (committer_bytes_uploaded=0) (op_abort=0) (store_exists_probe.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_skipped=0) (op_xattr_list.failures=0) (stream_read_seek_forward_operations=0) (stream_write_block_uploads=0) (op_list_files.failures=0) (object_copy_requests=0) (store_io_retry=0) (multipart_upload_list=0) (object_select_requests=0) (committer_commit_job=0) (op_get_delegation_token.failures=0) (object_multipart_initiated.failures=0) (op_get_file_checksum.failures=0) (committer_jobs_failed=0) (store_exists_probe=0) (op_is_directory=0) (stream_read_remote_stream_aborted=0) (stream_write_block_uploads_committed=0) (op_is_file.failures=0) (object_multipart_aborted=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named_map=0) (op_copy_from_local_file.failures=0) (store_io_request=3) (audit_failure=0) (committer_bytes_committed=0) (committer_materialize_file=0) (committer_tasks_failed=0) (op_create=0) (stream_aborted=0) (action_http_head_request.failures=0) (op_exists=0) (op_get_file_checksum=0) (object_bulk_delete_request.failures=0) (stream_write_queue_duration=0) (op_xattr_get_named.failures=0) (files_copied_bytes=0) (multipart_upload_completed=0) (action_file_opened=1) (object_delete_request=0) (op_get_file_status=1) (op_get_delegation_token=0) (stream_read_seek_backward_operations=0) (delegation_tokens_issued=0) (committer_load_single_pending_file=0));
gauges=((object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0));
minimums=((action_http_head_request.min=5) (store_exists_probe.failures.min=-1) (op_list_status.min=-1) (op_get_file_status.min=5) (op_rename.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_map.failures.min=-1) (delegation_tokens_issued.min=-1) (op_rename.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_delete.failures.min=-1) (object_put_request.failures.min=-1) (op_glob_status.failures.min=-1) (committer_commit_job.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_mkdirs.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_list.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_named.failures.min=-1) (op_copy_from_local_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_files.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_exists.min=-1) (object_multipart_aborted.min=-1) (op_mkdirs.failures.min=-1) (op_delete.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.min=-1) (op_get_content_summary.min=-1) (object_delete_request.failures.min=-1) (store_exists_probe.min=-1) (op_list_files.min=-1) (object_continue_list_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_abort.failures.min=-1) (op_createfile.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=11) (object_list_request.min=-1) (action_executor_acquired.min=-1) (op_exists.failures.min=-1) (op_list_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.min=-1) (op_access.failures.min=-1) (op_create.min=-1) (action_executor_acquired.failures.min=-1) (object_continue_list_request.min=-1) (op_get_delegation_token.min=-1) (op_is_file.failures.min=-1) (committer_materialize_file.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_http_head_request.failures.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.min=-1) (op_glob_status.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named.min=-1) (action_http_get_request.failures.min=-1) (op_access.min=-1) (action_file_opened.min=0));
maximums=((op_get_delegation_token.failures.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.failures.max=-1) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_glob_status.failures.max=-1) (op_rename.max=-1) (object_multipart_aborted.failures.max=-1) (op_glob_status.max=-1) (committer_load_single_pending_file.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.max=-1) (op_mkdirs.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_list.failures.max=-1) (op_copy_from_local_file.max=-1) (op_createfile.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (action_file_opened.max=0) (multipart_upload_list.failures.max=-1) (op_delete.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_create.max=-1) (action_executor_acquired.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_delegation_token.max=-1) (op_xattr_list.max=-1) (op_exists.max=-1) (op_abort.failures.max=-1) (object_delete_request.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_access.max=-1) (op_get_file_status.max=5) (store_exists_probe.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_list_request.failures.max=-1) (op_rename.failures.max=-1) (delegation_tokens_issued.max=-1) (store_exists_probe.max=-1) (object_continue_list_request.max=-1) (op_list_status.max=-1) (op_createfile.max=-1) (object_list_request.max=-1) (object_delete_request.max=-1) (action_http_head_request.max=5) (committer_materialize_file.max=-1) (op_list_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=17) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_get_request.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named_map.max=-1) (delegation_tokens_issued.failures.max=-1) (op_is_directory.max=-1) (op_list_files.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_file_opened.failures.max=-1) (committer_magic_marker_put.max=-1) (op_create.failures.max=-1) (op_delete.max=-1));
means=((op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=5, mean=5.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=28, mean=14.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:15,253 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:15,253 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,253 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,253 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136&t0=181&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=181&ts=1731778035253
2024-11-16 17:27:15,257 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,257 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,257 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136&t0=181&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=181&ts=1731778035253
2024-11-16 17:27:15,263 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:15,263 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:15,263 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:15,263 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:15,263 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:15,264 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:15,264 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:15,265 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:15,265 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:15,265 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:15,265 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:15,265 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:15,265 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:15,266 [s3a-transfer-fso-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:15,266 [s3a-transfer-fso-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,266 [s3a-transfer-fso-bucket-unbounded-pool2-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [188] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136&t0=181&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=188&ts=1731778035253
2024-11-16 17:27:15,273 [s3a-transfer-fso-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:15,273 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:27:15,273 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:15,274 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:15,274 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:15,274 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778035192; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:15,274 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:15,274 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:15,275 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:15,275 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:15,275 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:15,275 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:15,275 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:15,275 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:15,275 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,275 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,275 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:15,275 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,275 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136&t0=181&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=77&ts=1731778035253
2024-11-16 17:27:15,280 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:15,280 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:15,280 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:15,280 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:15,281 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:15,281 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,281 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,281 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:15,281 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,281 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000136&t0=181&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=77&ts=1731778035253
2024-11-16 17:27:15,285 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:15,285 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.004s
2024-11-16 17:27:15,285 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.004s
2024-11-16 17:27:15,285 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.010s
2024-11-16 17:27:15,285 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.010s
2024-11-16 17:27:15,286 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.021s
2024-11-16 17:27:15,286 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:15,286 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:15,288 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:15,299 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 34, active threads = 0, queued tasks = 0, completed tasks = 34], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_aborted=0) (op_list_status=0) (multipart_upload_list=0) (op_is_file=0) (object_delete_objects=56) (store_io_retry=0) (op_copy_from_local_file=0) (committer_commits_created=0) (committer_bytes_committed=0) (op_exists=0) (op_exists.failures=0) (ignored_errors=0) (multipart_upload_abort_under_path_invoked=0) (files_copied=0) (audit_request_execution=327) (stream_read_seek_bytes_skipped=0) (object_put_request_completed=56) (stream_read_vectored_read_bytes_discarded=24543) (stream_read_remote_stream_drain.failures=0) (committer_magic_marker_put=0) (op_get_content_summary=0) (stream_read_bytes_discarded_in_abort=0) (action_http_head_request=78) (op_xattr_get_named=0) (op_create=28) (action_http_get_request.failures=1) (op_is_file.failures=0) (committer_commit_job=0) (stream_read_remote_stream_drain=3) (op_rename=0) (stream_read_exceptions=0) (op_xattr_list=0) (committer_tasks_failed=0) (files_copied_bytes=0) (stream_read_seek_operations=0) (committer_bytes_uploaded=0) (object_list_request=112) (stream_read_fully_operations=1) (op_get_file_status=1) (op_access.failures=0) (op_copy_from_local_file.failures=0) (op_createfile=0) (committer_stage_file_upload=0) (stream_read_opened=3) (stream_read_seek_policy_changed=24) (object_bulk_delete_request.failures=0) (store_io_request=327) (object_multipart_aborted=0) (multipart_upload_completed=0) (object_delete_request=0) (action_http_get_request=26) (audit_failure=0) (op_xattr_get_map.failures=0) (object_continue_list_request.failures=0) (committer_load_single_pending_file.failures=0) (stream_write_block_uploads=28) (op_xattr_get_named.failures=0) (stream_write_bytes=1835008) (op_is_directory=0) (stream_read_operations=3) (action_file_opened.failures=0) (multipart_instantiated=0) (stream_read_remote_stream_aborted.failures=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named_map.failures=0) (stream_read_seek_forward_operations=0) (files_created=28) (object_metadata_request=78) (stream_write_queue_duration.failures=0) (committer_commits_completed=0) (committer_materialize_file.failures=0) (op_list_status.failures=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (op_openfile=0) (stream_read_close_operations=22) (op_get_file_checksum.failures=0) (store_io_throttled=0) (op_access=0) (op_rename.failures=0) (stream_read_vectored_operations=19) (op_abort.failures=0) (object_list_request.failures=0) (committer_jobs_completed=0) (op_delete.failures=0) (multipart_upload_part_put_bytes=0) (op_list_located_status=0) (stream_read_bytes_discarded_in_close=196008) (op_create.failures=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (op_get_delegation_token=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=3670016) (op_create_non_recursive=0) (object_continue_list_request=0) (stream_read_remote_stream_aborted=0) (op_hsync=0) (object_put_request=56) (store_exists_probe.failures=0) (stream_write_exceptions=0) (op_get_file_status.failures=0) (object_multipart_aborted.failures=0) (files_deleted=28) (store_exists_probe=0) (stream_read_vectored_incoming_ranges=56) (action_executor_acquired=0) (committer_commit_job.failures=0) (committer_commits.failures=0) (object_multipart_initiated=0) (committer_tasks_completed=0) (action_http_head_request.failures=0) (stream_read_seek_bytes_discarded=0) (committer_magic_files_created=0) (op_xattr_list.failures=0) (fake_directories_deleted=28) (object_put_request.failures=0) (delegation_tokens_issued=0) (stream_read_seek_backward_operations=0) (op_list_files.failures=0) (stream_read_bytes=6963) (multipart_upload_aborted=0) (op_mkdirs=28) (op_glob_status=0) (stream_write_total_time=0) (op_xattr_get_named_map=0) (committer_commits_aborted=0) (op_glob_status.failures=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=24) (committer_load_single_pending_file=0) (op_mkdirs.failures=0) (committer_commits_reverted=0) (committer_materialize_file=0) (committer_jobs_failed=0) (stream_read_total_bytes=202971) (stream_write_block_uploads_committed=0) (object_multipart_initiated.failures=0) (action_file_opened=22) (stream_read_unbuffered=2) (op_delete=28) (op_createfile.failures=0) (delegation_tokens_issued.failures=0) (audit_access_check_failure=0) (files_delete_rejected=0) (object_delete_request.failures=0) (object_select_requests=0) (op_is_directory.failures=0) (op_get_delegation_token.failures=0) (object_copy_requests=0) (stream_read_closed=3) (op_open=22) (multipart_upload_started=0) (op_hflush=0) (op_get_content_summary.failures=0) (directories_deleted=0) (fake_directories_created=0) (op_list_files=0) (audit_span_creation=108) (object_put_bytes=1835008) (committer_stage_file_upload.failures=0) (multipart_upload_list.failures=0) (committer_magic_marker_put.failures=0) (object_bulk_delete_request=56) (directories_created=28) (op_abort=0) (op_xattr_get_map=0) (op_get_file_checksum=0));
gauges=((stream_write_block_uploads_pending=28) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0));
minimums=((op_glob_status.failures.min=-1) (op_xattr_list.min=-1) (op_rename.min=-1) (committer_materialize_file.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_materialize_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_file_opened.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_status.failures.min=-1) (op_list_files.failures.min=-1) (op_delete.failures.min=-1) (object_put_request.failures.min=-1) (store_exists_probe.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_status.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_mkdirs.min=13) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_map.min=-1) (op_create.min=5) (action_http_get_request.failures.min=0) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (op_createfile.failures.min=-1) (op_get_delegation_token.min=-1) (store_exists_probe.failures.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.min=-1) (op_exists.min=-1) (op_get_file_status.failures.min=-1) (op_is_file.min=-1) (op_is_file.failures.min=-1) (op_delete.min=18) (object_multipart_initiated.failures.min=-1) (object_list_request.min=4) (op_xattr_get_named_map.min=-1) (action_http_head_request.min=2) (op_get_content_summary.min=-1) (op_get_content_summary.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=6) (op_is_directory.min=-1) (stream_read_remote_stream_drain.min=3) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_access.min=-1) (object_bulk_delete_request.min=4) (committer_commit_job.min=-1) (op_get_file_status.min=5) (multipart_upload_list.min=-1) (action_executor_acquired.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_aborted.min=-1) (op_glob_status.min=-1) (op_create.failures.min=-1) (committer_commit_job.failures.min=-1) (op_createfile.min=-1) (action_http_head_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.min=-1) (object_list_request.failures.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.min=-1) (action_file_opened.min=3) (op_xattr_list.failures.min=-1) (object_put_request.min=17) (stream_write_queue_duration.min=-1));
maximums=((committer_magic_marker_put.max=-1) (op_xattr_get_map.max=-1) (op_is_directory.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_list.failures.max=-1) (op_mkdirs.failures.max=-1) (store_exists_probe.max=-1) (op_get_file_checksum.max=-1) (op_rename.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_file_opened.max=8) (committer_stage_file_upload.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_list_status.max=-1) (object_multipart_aborted.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.failures.max=0) (op_list_files.max=-1) (object_bulk_delete_request.max=16) (object_continue_list_request.max=-1) (delegation_tokens_issued.max=-1) (op_delete.max=81) (op_mkdirs.max=322) (object_put_request.max=63) (object_put_request.failures.max=-1) (op_list_files.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_list.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_directory.failures.max=-1) (op_rename.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_create.max=59) (op_abort.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_status.failures.max=-1) (action_http_get_request.max=35) (op_get_content_summary.max=-1) (op_is_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_glob_status.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named.max=-1) (store_exists_probe.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_delete.failures.max=-1) (op_createfile.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_status.failures.max=-1) (op_exists.max=-1) (object_bulk_delete_request.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named_map.max=-1) (op_exists.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_status.max=5) (op_glob_status.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_materialize_file.max=-1) (op_copy_from_local_file.max=-1) (action_http_head_request.max=18) (committer_load_single_pending_file.failures.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_drain.max=3) (object_list_request.max=220) (op_xattr_get_map.failures.max=-1) (object_delete_request.max=-1) (op_create.failures.max=-1) (op_access.failures.max=-1) (op_access.max=-1) (op_get_delegation_token.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1));
means=((op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=28, sum=298, mean=10.6429)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=28, sum=836, mean=29.8571)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=25, sum=294, mean=11.7600)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=56, sum=386, mean=6.8929)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=56, sum=778, mean=13.8929)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=112, sum=1038, mean=9.2679)) (action_file_opened.mean=(samples=22, sum=92, mean=4.1818)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=28, sum=902, mean=32.2143)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=78, sum=305, mean=3.9103)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:15,299 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:15,299 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,300 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,300 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000137 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000137/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000137&t0=189&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=189&ts=1731778035299
2024-11-16 17:27:15,305 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:15,305 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,306 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,306 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,306 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,306 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000137 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000137/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000137&t0=189&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=189&ts=1731778035299
2024-11-16 17:27:15,308 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,308 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:15,308 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:15,308 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:15,309 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000137 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000137/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000137&t0=189&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=189&ts=1731778035299
2024-11-16 17:27:15,314 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:15,314 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:15,314 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:15,315 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:15,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,316 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,316 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000138 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000138/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000138&t0=189&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=189&ts=1731778035315
2024-11-16 17:27:15,322 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:15,322 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,322 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:15,323 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7028103242924224651.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:15,324 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7028103242924224651.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (op_hflush=0) (stream_write_queue_duration=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (op_abort=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0) (op_hsync=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (object_put_request=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7028103242924224651.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,325 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,325 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:15,326 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7028103242924224651.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:15,326 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:15,327 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:15,327 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:15,327 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:15,327 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000138 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000138/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000138&t0=189&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=79&ts=1731778035315
2024-11-16 17:27:15,341 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:15,341 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:15,341 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.014s
2024-11-16 17:27:15,342 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7028103242924224651.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:15,342 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7028103242924224651.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,342 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7028103242924224651.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,342 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:15,342 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,343 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (op_abort=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (stream_write_total_time=0) (object_put_request.failures=0) (action_executor_acquired=0) (stream_write_total_data=65536) (object_put_request=1) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (op_abort.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=14) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=14) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=14, mean=14.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:15,343 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:15,344 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:27:15,344 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:27:15,345 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:15,345 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:15,346 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:27:15,346 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='a1863d23-9650-45ec-919e-db89a96ade57', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='a1863d23-9650-45ec-919e-db89a96ade57', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a1863d23-9650-45ec-919e-db89a96ade57', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:27:15,347 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@21391ec5]
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@21391ec5]
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:27:15,348 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:27:15,349 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:27:15,349 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:27:15,349 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:27:15,349 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:27:15,350 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:27:15,350 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:27:15,350 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:27:15,350 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:27:15,350 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:27:15,350 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:27:15,350 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,351 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:15,352 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] a1863d23-9650-45ec-919e-db89a96ade57-00000141 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/a1863d23-9650-45ec-919e-db89a96ade57-00000141/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=a1863d23-9650-45ec-919e-db89a96ade57-00000141&t0=189&fs=a1863d23-9650-45ec-919e-db89a96ade57&t1=189&ts=1731778035351
2024-11-16 17:27:15,352 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:27:15,352 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:27:15,352 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:27:15,352 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:27:15,355 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:15,355 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778035000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:15,356 [s3a-transfer-fso-bucket-unbounded-pool19-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:15,356 [s3a-transfer-fso-bucket-unbounded-pool19-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,357 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:15,357 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:15,357 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:27:15,357 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,357 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,357 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,357 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,357 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:15,358 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:15,358 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [192] a1863d23-9650-45ec-919e-db89a96ade57-00000142 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a1863d23-9650-45ec-919e-db89a96ade57-00000142/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=1947-2046&id=a1863d23-9650-45ec-919e-db89a96ade57-00000142&t0=191&fs=a1863d23-9650-45ec-919e-db89a96ade57&t1=192&ts=1731778035356
2024-11-16 17:27:15,358 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [193] a1863d23-9650-45ec-919e-db89a96ade57-00000142 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a1863d23-9650-45ec-919e-db89a96ade57-00000142/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=8192-14435&id=a1863d23-9650-45ec-919e-db89a96ade57-00000142&t0=191&fs=a1863d23-9650-45ec-919e-db89a96ade57&t1=193&ts=1731778035356
2024-11-16 17:27:15,361 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:15,361 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,361 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,362 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:15,362 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a1863d23-9650-45ec-919e-db89a96ade57-00000142 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a1863d23-9650-45ec-919e-db89a96ade57-00000142/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=40960-41983&id=a1863d23-9650-45ec-919e-db89a96ade57-00000142&t0=191&fs=a1863d23-9650-45ec-919e-db89a96ade57&t1=194&ts=1731778035356
2024-11-16 17:27:15,379 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:27:15,379 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,380 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:27:15,380 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:27:15,380 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:27:15,381 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,381 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.024s
2024-11-16 17:27:15,381 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,382 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=17));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=24));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=63, mean=21.0000)));

2024-11-16 17:27:15,383 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_policy_changed=1) (stream_read_exceptions=0) (stream_read_vectored_operations=1) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=3) (stream_aborted=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_bytes_backwards_on_seek=0) (action_file_opened=1) (stream_read_seek_operations=0) (stream_read_total_bytes=1424) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_read.failures=0) (stream_read_block_read=0) (stream_read_close_operations=1) (action_file_opened.failures=0) (stream_read_opened=0) (stream_read_unbuffered=0) (stream_read_seek_backward_operations=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes=1424) (stream_read_vectored_incoming_ranges=5) (stream_read_version_mismatches=0) (stream_read_fully_operations=0) (stream_read_vectored_combined_ranges=3) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=0) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=17) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((action_file_opened.max=0) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=24) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=63, mean=21.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:15,384 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778035000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:15,386 [s3a-transfer-fso-bucket-unbounded-pool19-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:15,386 [s3a-transfer-fso-bucket-unbounded-pool19-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,387 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:15,387 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:27:15,387 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,387 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] a1863d23-9650-45ec-919e-db89a96ade57-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/a1863d23-9650-45ec-919e-db89a96ade57-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=10240-65535&id=a1863d23-9650-45ec-919e-db89a96ade57-00000143&t0=198&fs=a1863d23-9650-45ec-919e-db89a96ade57&t1=189&ts=1731778035386
2024-11-16 17:27:15,395 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.008s
2024-11-16 17:27:15,396 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:15,396 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:15,397 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:15,397 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:27:15,397 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:27:15,397 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:27:15,397 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,398 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://fso-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:27:15,398 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:27:15,398 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,398 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] a1863d23-9650-45ec-919e-db89a96ade57-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a1863d23-9650-45ec-919e-db89a96ade57-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=8192-8291&id=a1863d23-9650-45ec-919e-db89a96ade57-00000143&t0=198&fs=a1863d23-9650-45ec-919e-db89a96ade57&t1=189&ts=1731778035386
2024-11-16 17:27:15,407 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.010s
2024-11-16 17:27:15,407 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:15,407 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:15,407 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:15,408 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:27:15,408 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:27:15,408 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:15,408 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:27:15,408 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,408 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] a1863d23-9650-45ec-919e-db89a96ade57-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a1863d23-9650-45ec-919e-db89a96ade57-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=14336-14435&id=a1863d23-9650-45ec-919e-db89a96ade57-00000143&t0=198&fs=a1863d23-9650-45ec-919e-db89a96ade57&t1=189&ts=1731778035386
2024-11-16 17:27:15,415 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.008s
2024-11-16 17:27:15,415 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:15,415 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:15,416 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:15,416 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:27:15,416 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:27:15,416 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:15,416 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:27:15,416 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,416 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] a1863d23-9650-45ec-919e-db89a96ade57-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a1863d23-9650-45ec-919e-db89a96ade57-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=1947-2046&id=a1863d23-9650-45ec-919e-db89a96ade57-00000143&t0=198&fs=a1863d23-9650-45ec-919e-db89a96ade57&t1=189&ts=1731778035386
2024-11-16 17:27:15,426 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.010s
2024-11-16 17:27:15,426 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:15,426 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:15,426 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:15,426 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:27:15,427 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:27:15,427 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:15,427 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:27:15,427 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,427 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] a1863d23-9650-45ec-919e-db89a96ade57-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a1863d23-9650-45ec-919e-db89a96ade57-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=40960-41983&id=a1863d23-9650-45ec-919e-db89a96ade57-00000143&t0=198&fs=a1863d23-9650-45ec-919e-db89a96ade57&t1=189&ts=1731778035386
2024-11-16 17:27:15,438 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.012s
2024-11-16 17:27:15,438 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:15,438 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:15,439 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=7)
(stream_read_remote_stream_aborted.min=1)
(stream_read_remote_stream_drain.min=0));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=11)
(stream_read_remote_stream_aborted.max=1)
(stream_read_remote_stream_drain.max=0));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=45, mean=9.0000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=1, mean=1.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=0, mean=0.0000)));

2024-11-16 17:27:15,439 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:27:15,440 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:27:15,440 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:15,441 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_combined_ranges=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=1424) (stream_read_seek_policy_changed=2) (stream_read_close_operations=1) (stream_read_vectored_incoming_ranges=0) (stream_read_opened=5) (stream_read_closed=4) (action_file_opened=1) (stream_read_operations=5) (stream_read_prefetch_operations.failures=0) (stream_read_version_mismatches=0) (stream_aborted=1) (action_executor_acquired=0) (stream_read_remote_stream_aborted=1) (stream_read_operations_incomplete=0) (stream_read_block_read=0) (action_http_get_request=5) (stream_read_bytes=1424) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=44957) (stream_read_bytes_backwards_on_seek=14637) (stream_read_seek_backward_operations=2) (stream_read_vectored_operations=0) (action_http_get_request.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain=4) (action_file_opened.failures=0) (stream_read_fully_operations=5) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_seek_forward_operations=2) (stream_read_seek_operations=4));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=1) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=1) (action_http_get_request.min=7) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_drain.min=0));
maximums=((action_executor_acquired.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=0) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=1) (action_http_get_request.max=11));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=45, mean=9.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=1, mean=1.0000)));

2024-11-16 17:27:15,444 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:27:15,446 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:27:15,446 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:15,446 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@146fd73e[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:27:15,446 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:15,446 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics9-fso-bucket
2024-11-16 17:27:15,446 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:27:15,446 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@21391ec5] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:15,446 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@21391ec5] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:15,448 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((committer_stage_file_upload=0) (op_xattr_list.failures=0) (op_is_directory=0) (op_get_file_checksum=0) (committer_commit_job.failures=0) (op_is_file=0) (stream_read_unbuffered=0) (committer_load_single_pending_file.failures=0) (op_create.failures=0) (op_glob_status=0) (multipart_upload_list=0) (op_copy_from_local_file.failures=0) (stream_read_fully_operations=5) (fake_directories_deleted=0) (op_xattr_list=0) (object_delete_objects=0) (op_createfile.failures=0) (committer_materialize_file=0) (object_continue_list_request=0) (stream_write_total_time=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=1) (object_bulk_delete_request.failures=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_map=0) (delegation_tokens_issued=0) (committer_magic_files_created=0) (stream_write_exceptions_completing_upload=0) (store_exists_probe.failures=0) (op_abort.failures=0) (op_list_located_status=0) (committer_jobs_completed=0) (object_multipart_initiated.failures=0) (fake_directories_created=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named_map=0) (object_put_request=0) (files_delete_rejected=0) (committer_commits_reverted=0) (op_copy_from_local_file=0) (stream_read_vectored_combined_ranges=3) (directories_deleted=0) (object_continue_list_request.failures=0) (op_get_file_status.failures=0) (committer_jobs_failed=0) (op_exists.failures=0) (action_executor_acquired=0) (op_rename.failures=0) (op_hflush=0) (stream_read_opened=5) (op_create_non_recursive=0) (object_list_request.failures=0) (audit_request_execution=9) (stream_write_exceptions=0) (op_get_content_summary.failures=0) (stream_write_block_uploads_committed=0) (audit_span_creation=4) (stream_read_exceptions=0) (object_multipart_aborted.failures=0) (op_rename=0) (op_exists=0) (committer_tasks_completed=0) (files_copied_bytes=0) (object_bulk_delete_request=0) (action_http_head_request.failures=0) (committer_commits.failures=0) (op_xattr_get_named_map.failures=0) (op_abort=0) (directories_created=0) (stream_read_operations_incomplete=0) (stream_read_seek_operations=4) (stream_read_seek_policy_changed=3) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_aborted=0) (committer_load_single_pending_file=0) (object_put_bytes=0) (op_glob_status.failures=0) (op_delete.failures=0) (stream_read_bytes=2848) (op_is_file.failures=0) (object_put_request_completed=0) (action_file_opened.failures=0) (audit_failure=0) (op_list_files.failures=0) (op_get_file_checksum.failures=0) (op_is_directory.failures=0) (op_mkdirs.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=2) (files_deleted=0) (op_delete=0) (object_delete_request.failures=0) (stream_aborted=1) (object_multipart_aborted=0) (committer_commits_aborted=0) (op_get_content_summary=0) (committer_materialize_file.failures=0) (store_io_retry=0) (op_get_delegation_token=0) (ignored_errors=0) (committer_stage_file_upload.failures=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (stream_read_vectored_operations=1) (action_file_opened=2) (op_list_files=0) (delegation_tokens_issued.failures=0) (op_xattr_get_named=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_incoming_ranges=5) (stream_read_closed=4) (committer_commits_completed=0) (stream_write_total_data=0) (op_xattr_get_map.failures=0) (op_create=0) (multipart_instantiated=0) (op_createfile=0) (committer_bytes_uploaded=0) (stream_read_operations=5) (stream_read_remote_stream_drain=4) (stream_read_seek_bytes_skipped=44957) (multipart_upload_part_put=0) (object_multipart_initiated=0) (op_mkdirs=0) (op_openfile=0) (op_xattr_get_named.failures=0) (object_list_request=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_list.failures=0) (op_hsync=0) (object_copy_requests=0) (object_metadata_request=1) (stream_read_bytes_discarded_in_abort=55196) (op_list_status.failures=0) (stream_read_vectored_read_bytes_discarded=5944) (object_delete_request=0) (stream_read_seek_forward_operations=2) (stream_write_queue_duration=0) (files_copied=0) (store_exists_probe=0) (committer_bytes_committed=0) (stream_write_queue_duration.failures=0) (action_http_get_request=8) (multipart_upload_started=0) (object_select_requests=0) (op_access.failures=0) (files_created=0) (store_io_throttled=0) (action_http_get_request.failures=0) (stream_read_version_mismatches=0) (action_http_head_request=1) (audit_access_check_failure=0) (stream_read_bytes_backwards_on_seek=14637) (multipart_upload_completed=0) (store_io_request=9) (stream_read_close_operations=2) (op_get_delegation_token.failures=0) (stream_read_total_bytes=2848) (op_access=0) (committer_commit_job=0) (committer_magic_marker_put=0) (stream_write_block_uploads=0) (op_get_file_status=1) (committer_tasks_failed=0) (stream_write_bytes=0) (op_list_status=0) (op_open=2) (committer_commits_created=0) (stream_read_remote_stream_aborted.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0));
minimums=((op_abort.failures.min=-1) (action_http_get_request.min=7) (committer_magic_marker_put.failures.min=-1) (op_get_file_status.min=4) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_continue_list_request.min=-1) (object_continue_list_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_exists.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_initiated.failures.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.failures.min=-1) (op_xattr_list.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.min=-1) (action_http_get_request.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_glob_status.failures.min=-1) (op_is_directory.min=-1) (object_bulk_delete_request.min=-1) (op_xattr_list.min=-1) (op_copy_from_local_file.min=-1) (op_exists.min=-1) (store_exists_probe.failures.min=-1) (op_glob_status.min=-1) (op_list_files.min=-1) (action_http_head_request.failures.min=-1) (op_rename.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_list.failures.min=-1) (op_rename.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_initiated.min=-1) (op_list_status.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_head_request.min=4) (committer_stage_file_upload.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_mkdirs.min=-1) (op_copy_from_local_file.failures.min=-1) (object_list_request.failures.min=-1) (committer_commit_job.min=-1) (action_file_opened.min=0) (op_is_file.min=-1) (op_xattr_get_map.min=-1) (action_file_opened.failures.min=-1) (op_create.min=-1) (op_get_file_status.failures.min=-1) (action_executor_acquired.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_checksum.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_list_files.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.min=-1) (op_createfile.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_checksum.failures.min=-1) (multipart_upload_list.min=-1) (op_get_delegation_token.min=-1) (object_delete_request.min=-1) (store_exists_probe.min=-1) (op_abort.min=-1) (committer_load_single_pending_file.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_access.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_remote_stream_aborted.min=1) (object_put_request.min=-1) (object_bulk_delete_request.failures.min=-1) (op_delete.min=-1) (op_create.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_materialize_file.min=-1) (object_list_request.min=-1) (op_xattr_get_named_map.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (committer_materialize_file.max=-1) (committer_magic_marker_put.failures.max=-1) (action_file_opened.max=0) (op_xattr_get_map.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_list_request.max=-1) (op_access.max=-1) (op_get_file_status.failures.max=-1) (multipart_upload_list.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.max=4) (op_xattr_get_named_map.max=-1) (object_multipart_initiated.max=-1) (op_delete.failures.max=-1) (op_abort.failures.max=-1) (op_copy_from_local_file.max=-1) (op_glob_status.failures.max=-1) (store_exists_probe.max=-1) (multipart_upload_list.failures.max=-1) (op_list_files.max=-1) (object_delete_request.failures.max=-1) (op_list_status.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.max=-1) (op_is_file.failures.max=-1) (op_glob_status.max=-1) (op_get_file_checksum.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_drain.max=0) (object_continue_list_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (op_rename.max=-1) (action_http_get_request.failures.max=-1) (op_exists.failures.max=-1) (op_delete.max=-1) (op_createfile.failures.max=-1) (op_mkdirs.max=-1) (stream_write_queue_duration.max=-1) (op_is_file.max=-1) (object_continue_list_request.max=-1) (object_bulk_delete_request.max=-1) (op_create.failures.max=-1) (op_list_files.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.max=-1) (delegation_tokens_issued.max=-1) (action_file_opened.failures.max=-1) (op_xattr_list.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=24) (committer_commit_job.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_content_summary.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_aborted.max=1) (op_xattr_get_map.max=-1) (op_get_file_status.max=4) (op_get_content_summary.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (object_delete_request.max=-1) (op_create.max=-1) (op_list_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_rename.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_mkdirs.failures.max=-1) (op_access.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_checksum.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_directory.failures.max=-1));
means=((object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=4, mean=4.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=108, mean=13.5000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=1, mean=1.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:15,448 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:15,449 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,449 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,449 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144&t0=189&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=189&ts=1731778035448
2024-11-16 17:27:15,452 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,452 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,453 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144&t0=189&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=189&ts=1731778035448
2024-11-16 17:27:15,459 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:15,459 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:15,459 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:15,459 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:15,459 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:15,460 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:15,461 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:15,461 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:15,461 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:15,461 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:15,463 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:15,463 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:15,473 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:15,473 [s3a-transfer-fso-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:15,473 [s3a-transfer-fso-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,474 [s3a-transfer-fso-bucket-unbounded-pool2-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [200] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144&t0=189&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=200&ts=1731778035448
2024-11-16 17:27:15,480 [s3a-transfer-fso-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:15,480 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:27:15,480 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:15,480 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:15,480 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:15,481 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778035339; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:15,481 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:15,481 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:15,481 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:15,481 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:15,481 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:15,481 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:15,482 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:15,482 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:15,482 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,482 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,482 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:15,482 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,482 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144&t0=189&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=80&ts=1731778035448
2024-11-16 17:27:15,488 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:15,488 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:15,488 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:27:15,488 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:15,489 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:15,489 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,489 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,489 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:15,489 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,489 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000144&t0=189&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=80&ts=1731778035448
2024-11-16 17:27:15,497 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:27:15,498 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:27:15,498 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:27:15,498 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:27:15,498 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:27:15,498 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.037s
2024-11-16 17:27:15,499 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:15,499 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:15,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:15,517 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 35, active threads = 0, queued tasks = 0, completed tasks = 35], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commits_completed=0) (op_xattr_get_named_map.failures=0) (op_hsync=0) (op_list_files.failures=0) (action_executor_acquired=0) (stream_read_unbuffered=2) (committer_bytes_uploaded=0) (store_io_request=337) (committer_commits_created=0) (op_xattr_get_named=0) (op_list_status.failures=0) (op_abort.failures=0) (committer_materialize_file=0) (audit_request_execution=337) (object_put_request_completed=58) (fake_directories_created=0) (multipart_instantiated=0) (object_bulk_delete_request.failures=0) (stream_read_bytes=6963) (op_create_non_recursive=0) (op_createfile.failures=0) (op_get_delegation_token=0) (op_is_file.failures=0) (op_glob_status=0) (stream_read_vectored_operations=19) (committer_commits.failures=0) (files_copied_bytes=0) (stream_read_seek_forward_operations=0) (object_metadata_request=80) (op_xattr_get_map=0) (stream_read_total_bytes=202971) (op_hflush=0) (op_exists=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_discarded=0) (store_io_throttled=0) (committer_commit_job=0) (stream_read_close_operations=22) (committer_magic_files_created=0) (store_exists_probe=0) (stream_read_remote_stream_drain.failures=0) (op_rename.failures=0) (stream_write_queue_duration.failures=0) (committer_tasks_failed=0) (object_put_request.failures=0) (committer_materialize_file.failures=0) (op_xattr_get_map.failures=0) (stream_read_bytes_discarded_in_close=196008) (multipart_upload_list=0) (object_delete_objects=58) (stream_read_bytes_backwards_on_seek=0) (object_put_bytes=1900544) (op_list_files=0) (object_put_request=58) (stream_write_total_data=3801088) (op_open=22) (committer_load_single_pending_file.failures=0) (files_copied=0) (stream_write_bytes=1900544) (object_list_request=116) (op_xattr_get_named_map=0) (stream_read_fully_operations=1) (multipart_upload_abort_under_path_invoked=0) (op_get_content_summary=0) (stream_read_remote_stream_drain=3) (op_access=0) (stream_read_version_mismatches=0) (object_continue_list_request.failures=0) (op_copy_from_local_file=0) (op_create.failures=0) (op_rename=0) (op_openfile=0) (stream_write_exceptions_completing_upload=0) (store_exists_probe.failures=0) (stream_read_opened=3) (object_copy_requests=0) (action_executor_acquired.failures=0) (op_get_file_status.failures=0) (stream_write_total_time=0) (op_xattr_list=0) (op_is_file=0) (op_exists.failures=0) (directories_created=29) (stream_read_seek_backward_operations=0) (committer_jobs_completed=0) (op_glob_status.failures=0) (stream_write_block_uploads=29) (op_get_file_status=1) (op_create=29) (action_http_get_request.failures=1) (multipart_upload_part_put_bytes=0) (op_get_delegation_token.failures=0) (store_io_retry=0) (op_is_directory.failures=0) (ignored_errors=0) (op_get_file_checksum.failures=0) (committer_commits_reverted=0) (stream_read_vectored_incoming_ranges=56) (action_http_head_request.failures=0) (stream_write_block_uploads_aborted=0) (audit_access_check_failure=0) (op_access.failures=0) (op_get_content_summary.failures=0) (stream_read_vectored_combined_ranges=24) (directories_deleted=0) (stream_read_seek_bytes_skipped=0) (committer_magic_marker_put=0) (op_copy_from_local_file.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (op_list_status=0) (stream_read_seek_operations=0) (object_delete_request=0) (op_delete=29) (committer_bytes_committed=0) (fake_directories_deleted=29) (audit_failure=0) (files_created=29) (op_is_directory=0) (op_mkdirs=29) (multipart_upload_list.failures=0) (committer_tasks_completed=0) (action_http_head_request=80) (delegation_tokens_issued.failures=0) (committer_jobs_failed=0) (object_delete_request.failures=0) (stream_write_queue_duration=0) (op_delete.failures=0) (op_list_located_status=0) (stream_write_exceptions=0) (multipart_upload_started=0) (stream_read_vectored_read_bytes_discarded=24543) (object_continue_list_request=0) (stream_read_seek_policy_changed=24) (committer_commit_job.failures=0) (object_multipart_initiated.failures=0) (action_http_get_request=26) (op_mkdirs.failures=0) (stream_read_operations=3) (action_file_opened=22) (committer_commits_aborted=0) (stream_read_operations_incomplete=0) (audit_span_creation=111) (committer_stage_file_upload=0) (files_delete_rejected=0) (files_deleted=29) (op_xattr_list.failures=0) (stream_read_exceptions=0) (multipart_upload_part_put=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0) (object_bulk_delete_request=58) (op_get_file_checksum=0) (committer_load_single_pending_file=0) (multipart_upload_completed=0) (stream_write_block_uploads_committed=0) (object_select_requests=0) (object_multipart_initiated=0) (object_list_request.failures=0) (op_abort=0) (op_xattr_get_named.failures=0) (delegation_tokens_issued=0) (multipart_upload_aborted=0) (stream_aborted=0) (stream_read_closed=3) (object_multipart_aborted=0) (op_createfile=0) (committer_stage_file_upload.failures=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=29));
minimums=((op_abort.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (multipart_upload_list.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_checksum.min=-1) (op_is_directory.min=-1) (action_file_opened.min=3) (object_list_request.min=4) (op_delete.min=18) (delegation_tokens_issued.min=-1) (object_delete_request.failures.min=-1) (committer_magic_marker_put.min=-1) (delegation_tokens_issued.failures.min=-1) (op_create.min=5) (action_executor_acquired.min=-1) (action_http_head_request.min=2) (multipart_upload_list.failures.min=-1) (op_abort.min=-1) (op_exists.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_access.min=-1) (committer_load_single_pending_file.min=-1) (action_http_head_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_list_files.min=-1) (store_exists_probe.failures.min=-1) (op_get_delegation_token.min=-1) (object_continue_list_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.min=-1) (object_bulk_delete_request.min=4) (stream_read_remote_stream_drain.min=3) (object_continue_list_request.min=-1) (op_mkdirs.min=13) (op_list_files.failures.min=-1) (object_put_request.failures.min=-1) (op_is_file.min=-1) (object_put_request.min=14) (op_copy_from_local_file.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.min=5) (committer_stage_file_upload.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_content_summary.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_status.failures.min=-1) (op_glob_status.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.failures.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.min=-1) (op_list_status.min=-1) (object_list_request.failures.min=-1) (op_get_file_status.failures.min=-1) (action_http_get_request.min=6) (op_xattr_list.failures.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_write_queue_duration.min=-1) (action_http_get_request.failures.min=0) (op_get_delegation_token.failures.min=-1) (op_exists.min=-1) (stream_write_queue_duration.failures.min=-1) (action_file_opened.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_glob_status.min=-1) (op_get_content_summary.failures.min=-1) (op_is_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_list.min=-1) (object_delete_request.min=-1) (op_rename.min=-1) (store_exists_probe.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((action_file_opened.max=8) (committer_commit_job.max=-1) (op_access.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_bulk_delete_request.max=16) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (multipart_upload_list.max=-1) (op_get_delegation_token.max=-1) (store_exists_probe.max=-1) (object_list_request.max=220) (action_http_get_request.max=35) (op_exists.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_delegation_token.failures.max=-1) (op_exists.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.max=18) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_list.max=-1) (op_list_status.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_list_request.failures.max=-1) (op_delete.max=81) (object_put_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_put_request.max=63) (op_is_file.failures.max=-1) (op_list_status.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.max=322) (op_rename.failures.max=-1) (op_list_files.max=-1) (object_bulk_delete_request.failures.max=-1) (op_access.max=-1) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (op_delete.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named_map.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=0) (object_continue_list_request.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_drain.max=3) (op_copy_from_local_file.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_map.max=-1) (op_glob_status.failures.max=-1) (op_list_files.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_file_status.max=5) (op_get_file_checksum.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_glob_status.max=-1) (op_is_file.max=-1) (op_createfile.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_create.max=59) (committer_commit_job.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_rename.max=-1) (op_xattr_get_named.max=-1) (action_file_opened.failures.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_directory.failures.max=-1) (committer_stage_file_upload.max=-1) (op_is_directory.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_delete_request.max=-1) (stream_write_queue_duration.failures.max=-1) (op_mkdirs.failures.max=-1));
means=((op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=29, sum=852, mean=29.3793)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=80, sum=310, mean=3.8750)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=58, sum=400, mean=6.8966)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=29, sum=307, mean=10.5862)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=58, sum=797, mean=13.7414)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=29, sum=941, mean=32.4483)) (action_http_get_request.mean=(samples=25, sum=294, mean=11.7600)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=22, sum=92, mean=4.1818)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=116, sum=1062, mean=9.1552)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:15,518 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:15,518 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,519 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,519 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,519 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,519 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [201] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000145 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000145/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000145&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=201&ts=1731778035518
2024-11-16 17:27:15,525 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:15,525 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,525 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,525 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,525 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,525 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [201] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000145 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000145/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000145&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=201&ts=1731778035518
2024-11-16 17:27:15,527 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,527 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:15,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:15,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:15,528 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [201] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000145 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000145/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000145&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=201&ts=1731778035518
2024-11-16 17:27:15,533 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:15,533 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:15,533 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:15,533 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:15,533 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,533 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,533 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,534 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,534 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [201] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000146 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000146/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000146&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=201&ts=1731778035533
2024-11-16 17:27:15,538 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:15,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,539 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:15,539 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3349653388637166162.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:15,540 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3349653388637166162.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (object_multipart_aborted=0) (op_abort=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (op_hflush=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (object_put_request=0) (op_abort.failures=0) (stream_write_total_data=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3349653388637166162.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,540 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,540 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:15,540 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3349653388637166162.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:15,541 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:15,541 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:15,541 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:15,541 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:15,541 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000146 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000146/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000146&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=82&ts=1731778035533
2024-11-16 17:27:15,556 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:15,556 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:15,556 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.015s
2024-11-16 17:27:15,557 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3349653388637166162.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:15,557 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3349653388637166162.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,557 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3349653388637166162.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,557 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:15,557 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,558 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (op_hsync=0) (multipart_upload_completed.failures=0) (op_hflush=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (object_put_request=1) (stream_write_total_time=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_block_uploads=1) (multipart_upload_part_put.failures=0) (op_abort=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=15) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((object_put_request.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=15) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=15, mean=15.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:15,558 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:15,559 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,559 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,559 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:15,560 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [201] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000147 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000147/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000147&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=201&ts=1731778035559
2024-11-16 17:27:15,563 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:15,563 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:15,563 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,564 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:15,564 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:15,564 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:15,564 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:15,564 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,564 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,564 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:15,565 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000147 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000147/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000147&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=84&ts=1731778035559
2024-11-16 17:27:15,565 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:15,565 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:27:15,566 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,566 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [201] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000147 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000147/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-65535&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000147&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=201&ts=1731778035559
2024-11-16 17:27:15,572 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:27:15,572 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:15,572 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,574 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.009s
2024-11-16 17:27:15,574 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:15,574 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:15,577 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:27:15,578 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:27:15,578 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:27:15,578 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7439 bytes
2024-11-16 17:27:15,578 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:15,578 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:15,578 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:15,579 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8745 bytes
2024-11-16 17:27:15,579 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:27:15,579 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:15,582 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=1) (stream_read_vectored_incoming_ranges=2) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_operations=1) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=2) (stream_read_seek_forward_operations=0) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=1) (stream_read_close_operations=1) (stream_read_seek_bytes_discarded=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_vectored_read_bytes_discarded=10) (action_file_opened=1) (stream_read_unbuffered=0) (stream_read_seek_operations=0) (stream_read_fully_operations=0) (stream_read_exceptions=0) (stream_aborted=0) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (stream_read_vectored_operations=1) (stream_read_version_mismatches=0) (stream_read_closed=1) (stream_read_opened=1) (stream_read_total_bytes=65686) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=350) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=1) (action_http_get_request.min=8) (action_file_opened.failures.min=-1) (action_file_opened.min=4) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=4) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=8) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=16, mean=8.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:15,582 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:15,583 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,583 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,583 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [201] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=201&ts=1731778035582
2024-11-16 17:27:15,587 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,587 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,587 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [201] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=201&ts=1731778035582
2024-11-16 17:27:15,594 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:15,594 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:15,595 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:15,595 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:15,596 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:15,596 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:15,597 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:15,597 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:15,597 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:15,598 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:15,598 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:15,598 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:15,603 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:15,604 [s3a-transfer-fso-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:15,604 [s3a-transfer-fso-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,605 [s3a-transfer-fso-bucket-unbounded-pool2-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [202] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=202&ts=1731778035582
2024-11-16 17:27:15,614 [s3a-transfer-fso-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:27:15,614 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:27:15,615 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:15,615 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:15,615 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:15,615 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778035554; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:15,615 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:15,615 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:15,616 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:15,617 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:15,617 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:15,617 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:15,618 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:15,618 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:15,618 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,618 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,618 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:15,618 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,618 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=87&ts=1731778035582
2024-11-16 17:27:15,628 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:27:15,628 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:27:15,628 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:27:15,628 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:15,628 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:15,628 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,628 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,628 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:15,628 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,628 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000148&t0=201&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=87&ts=1731778035582
2024-11-16 17:27:15,639 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:27:15,639 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:27:15,639 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:27:15,640 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:27:15,640 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:27:15,640 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.043s
2024-11-16 17:27:15,640 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:15,640 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:15,641 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:15,656 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 36, active threads = 0, queued tasks = 0, completed tasks = 36], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_aborted=0) (op_abort=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_combined_ranges=25) (object_list_request=120) (op_xattr_get_named.failures=0) (stream_write_block_uploads_aborted=0) (committer_bytes_committed=0) (op_rename.failures=0) (op_hflush=0) (stream_read_close_operations=23) (committer_commits.failures=0) (delegation_tokens_issued=0) (op_glob_status=0) (op_list_files=0) (committer_commits_created=0) (committer_magic_files_created=0) (op_xattr_get_map=0) (stream_read_opened=4) (op_delete=30) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_backwards_on_seek=0) (op_create_non_recursive=0) (committer_commit_job.failures=0) (multipart_instantiated=0) (stream_read_seek_backward_operations=0) (object_metadata_request=83) (op_access=0) (fake_directories_deleted=30) (multipart_upload_started=0) (op_create=30) (multipart_upload_abort_under_path_invoked=0) (committer_commits_aborted=0) (action_file_opened.failures=0) (op_create.failures=0) (stream_write_queue_duration=0) (op_xattr_list.failures=0) (op_mkdirs=30) (op_xattr_get_named=0) (committer_materialize_file.failures=0) (store_io_request=350) (object_delete_request=0) (action_http_get_request.failures=1) (committer_commit_job=0) (store_exists_probe.failures=0) (stream_read_operations_incomplete=0) (op_list_status.failures=0) (object_delete_objects=60) (op_copy_from_local_file=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_discarded=0) (object_multipart_aborted.failures=0) (object_delete_request.failures=0) (directories_created=30) (store_io_retry=0) (object_multipart_aborted=0) (op_get_file_checksum=0) (stream_read_bytes_discarded_in_close=261344) (object_put_request.failures=0) (committer_commits_completed=0) (stream_read_vectored_incoming_ranges=58) (multipart_upload_part_put_bytes=0) (audit_span_creation=115) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (stream_write_bytes=1966080) (multipart_upload_aborted=0) (op_is_file.failures=0) (committer_tasks_failed=0) (object_put_bytes=1966080) (stream_read_total_bytes=268657) (store_io_throttled=0) (op_exists=0) (op_is_directory.failures=0) (multipart_upload_list.failures=0) (audit_access_check_failure=0) (stream_read_closed=4) (op_get_file_checksum.failures=0) (object_multipart_initiated=0) (object_continue_list_request.failures=0) (action_http_get_request=28) (stream_write_block_uploads=30) (op_list_located_status=0) (stream_read_operations=4) (committer_bytes_uploaded=0) (stream_read_seek_policy_changed=25) (committer_stage_file_upload=0) (stream_read_vectored_operations=20) (op_open=23) (op_is_directory=0) (op_is_file=0) (multipart_upload_part_put=0) (op_abort.failures=0) (op_list_status=0) (stream_write_block_uploads_committed=0) (op_xattr_list=0) (files_created=30) (audit_request_execution=350) (op_mkdirs.failures=0) (audit_failure=0) (stream_read_fully_operations=1) (multipart_upload_completed=0) (op_xattr_get_named_map.failures=0) (stream_read_unbuffered=2) (files_copied_bytes=0) (store_exists_probe=0) (object_bulk_delete_request=60) (op_createfile.failures=0) (object_continue_list_request=0) (stream_read_remote_stream_aborted.failures=0) (committer_jobs_completed=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_write_total_time=0) (committer_load_single_pending_file.failures=0) (op_xattr_get_map.failures=0) (action_http_head_request=83) (committer_commits_reverted=0) (files_deleted=30) (op_get_content_summary=0) (op_openfile=0) (multipart_upload_list=0) (stream_read_remote_stream_drain=4) (op_get_content_summary.failures=0) (object_put_request=60) (op_list_files.failures=0) (committer_stage_file_upload.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_data=3932160) (object_select_requests=0) (committer_tasks_completed=0) (op_get_file_status.failures=0) (directories_deleted=0) (op_delete.failures=0) (op_exists.failures=0) (files_copied=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=24553) (stream_read_seek_bytes_skipped=0) (committer_magic_marker_put.failures=0) (object_list_request.failures=0) (op_access.failures=0) (committer_materialize_file=0) (op_hsync=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (op_get_delegation_token.failures=0) (committer_load_single_pending_file=0) (op_createfile=0) (action_executor_acquired.failures=0) (op_xattr_get_named_map=0) (ignored_errors=0) (stream_write_exceptions=0) (delegation_tokens_issued.failures=0) (op_get_file_status=1) (fake_directories_created=0) (stream_read_bytes=7313) (action_http_head_request.failures=0) (object_copy_requests=0) (op_copy_from_local_file.failures=0) (op_glob_status.failures=0) (committer_jobs_failed=0) (op_get_delegation_token=0) (op_rename=0) (object_put_request_completed=60) (action_file_opened=23) (files_delete_rejected=0) (committer_magic_marker_put=0) (stream_write_queue_duration.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=30) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0));
minimums=((multipart_upload_list.failures.min=-1) (op_abort.min=-1) (multipart_upload_list.min=-1) (committer_load_single_pending_file.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.min=-1) (object_list_request.failures.min=-1) (op_xattr_get_map.min=-1) (action_http_get_request.failures.min=0) (store_exists_probe.min=-1) (op_xattr_list.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.min=13) (op_delete.failures.min=-1) (op_list_status.min=-1) (op_glob_status.failures.min=-1) (object_delete_request.min=-1) (op_rename.failures.min=-1) (action_file_opened.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_is_file.min=-1) (op_abort.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_list.failures.min=-1) (op_is_file.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.failures.min=-1) (action_http_get_request.min=8) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_remote_stream_aborted.min=-1) (stream_write_queue_duration.min=-1) (op_create.min=5) (action_executor_acquired.failures.min=-1) (committer_commit_job.min=-1) (op_get_file_checksum.min=-1) (op_is_directory.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_materialize_file.min=-1) (committer_magic_marker_put.min=-1) (op_copy_from_local_file.min=-1) (object_put_request.min=15) (op_get_delegation_token.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_files.min=-1) (op_exists.failures.min=-1) (op_createfile.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.min=-1) (action_file_opened.min=4) (delegation_tokens_issued.failures.min=-1) (op_delete.min=18) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.min=4) (op_is_directory.min=-1) (op_mkdirs.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.min=5) (op_copy_from_local_file.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_exists.min=-1) (delegation_tokens_issued.min=-1) (committer_commit_job.failures.min=-1) (store_exists_probe.failures.min=-1) (op_create.failures.min=-1) (object_list_request.min=4) (object_continue_list_request.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_files.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.failures.min=-1) (op_list_status.failures.min=-1) (op_createfile.failures.min=-1) (op_access.min=-1) (action_http_head_request.min=2));
maximums=((op_get_file_checksum.failures.max=-1) (op_access.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.max=-1) (op_create.max=59) (op_get_delegation_token.failures.max=-1) (op_rename.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.max=3) (delegation_tokens_issued.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (op_mkdirs.max=322) (object_delete_request.max=-1) (op_create.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_glob_status.max=-1) (op_exists.max=-1) (action_http_get_request.failures.max=0) (committer_stage_file_upload.failures.max=-1) (op_list_files.max=-1) (op_list_status.max=-1) (action_executor_acquired.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_file_status.max=5) (op_rename.failures.max=-1) (object_list_request.max=220) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_directory.failures.max=-1) (op_glob_status.failures.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_is_directory.max=-1) (committer_stage_file_upload.max=-1) (op_delete.max=81) (action_http_head_request.max=18) (op_exists.failures.max=-1) (action_http_get_request.max=35) (action_file_opened.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_createfile.max=-1) (object_multipart_aborted.max=-1) (store_exists_probe.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_commit_job.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.max=-1) (store_exists_probe.failures.max=-1) (object_put_request.max=63) (op_xattr_list.max=-1) (multipart_upload_list.failures.max=-1) (op_is_file.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_content_summary.max=-1) (op_is_file.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (op_list_files.failures.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.max=-1) (op_get_delegation_token.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_file_opened.max=8) (object_bulk_delete_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (op_list_status.failures.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.max=16) (op_xattr_get_map.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.failures.max=-1) (op_delete.failures.max=-1) (object_list_request.failures.max=-1) (stream_write_queue_duration.max=-1));
means=((op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=60, sum=817, mean=13.6167)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=120, sum=1088, mean=9.0667)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=96, mean=4.1739)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=30, sum=867, mean=28.9000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=60, sum=421, mean=7.0167)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=6, mean=1.5000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_delete.mean=(samples=30, sum=985, mean=32.8333)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=30, sum=313, mean=10.4333)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=27, sum=310, mean=11.4815)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=83, sum=320, mean=3.8554)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:15,656 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:15,656 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,657 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,657 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,657 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,657 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [203] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000149 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000149/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000149&t0=203&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=203&ts=1731778035656
2024-11-16 17:27:15,663 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:15,663 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,663 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,664 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,664 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,665 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [203] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000149 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000149/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000149&t0=203&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=203&ts=1731778035656
2024-11-16 17:27:15,668 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,669 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:15,669 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:15,670 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:15,670 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [203] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000149 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000149/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000149&t0=203&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=203&ts=1731778035656
2024-11-16 17:27:15,675 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:15,675 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:15,676 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.007s
2024-11-16 17:27:15,676 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:15,677 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,677 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,678 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,678 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,679 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [203] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000150 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000150/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000150&t0=203&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=203&ts=1731778035677
2024-11-16 17:27:15,684 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:15,684 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,685 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:15,686 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5367069031561883637.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:15,687 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5367069031561883637.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (object_put_request=0) (op_hsync=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (stream_write_bytes=65536) (op_hflush=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (object_put_request.failures=0) (action_executor_acquired=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5367069031561883637.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,688 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,688 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:15,689 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5367069031561883637.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:15,691 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:15,691 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:15,692 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:15,692 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:15,692 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000150 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000150/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000150&t0=203&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=89&ts=1731778035677
2024-11-16 17:27:15,709 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:15,709 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:15,709 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.018s
2024-11-16 17:27:15,710 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5367069031561883637.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:15,710 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5367069031561883637.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,710 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5367069031561883637.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,710 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:15,710 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,711 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put.failures=0) (action_executor_acquired=0) (op_abort=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (op_hflush=0) (committer_magic_marker_put=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (object_put_request=1) (stream_write_total_time=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_put_request.min=17) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1));
maximums=((action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=17) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:15,712 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:15,713 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,713 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,714 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:15,718 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [205] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000151 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000151/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000151&t0=205&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=205&ts=1731778035713
2024-11-16 17:27:15,727 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:15,727 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:15,728 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,728 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:27:15,729 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_combined_ranges=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=1) (stream_read_vectored_operations=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (action_executor_acquired=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_operations=0) (action_http_get_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_forward_operations=0) (action_http_get_request=0) (stream_read_prefetch_operations=0) (stream_read_seek_policy_changed=1) (stream_aborted=0) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_incoming_ranges=0) (stream_read_closed=0) (stream_read_fully_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_total_bytes=0) (stream_read_operations_incomplete=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=14) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=14) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=14, mean=14.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:15,739 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:15,740 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,740 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,740 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [203] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152&t0=203&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=203&ts=1731778035739
2024-11-16 17:27:15,745 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,745 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,745 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [203] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152&t0=203&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=203&ts=1731778035739
2024-11-16 17:27:15,763 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:27:15,763 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:15,763 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:15,764 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:15,764 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:15,764 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:15,764 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:15,764 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:15,765 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:15,765 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:15,765 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:15,765 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:15,774 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:15,775 [s3a-transfer-fso-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:15,775 [s3a-transfer-fso-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,775 [s3a-transfer-fso-bucket-unbounded-pool2-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152&t0=203&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=206&ts=1731778035739
2024-11-16 17:27:15,782 [s3a-transfer-fso-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:15,782 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:27:15,783 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:15,783 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:15,783 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:15,783 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778035706; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:15,783 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:15,784 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:15,784 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:15,784 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:15,790 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:15,790 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:15,790 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:15,791 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:15,791 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,791 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,791 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:15,791 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,791 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152&t0=203&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=90&ts=1731778035739
2024-11-16 17:27:15,804 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:27:15,804 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:27:15,804 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:27:15,804 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:15,804 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:15,804 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:15,804 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:15,804 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:15,804 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:15,804 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000152&t0=203&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=90&ts=1731778035739
2024-11-16 17:27:15,825 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:27:15,826 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.022s
2024-11-16 17:27:15,826 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.022s
2024-11-16 17:27:15,826 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.036s
2024-11-16 17:27:15,826 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.036s
2024-11-16 17:27:15,826 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.061s
2024-11-16 17:27:15,826 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:15,826 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:15,838 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:15,870 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 38, active threads = 0, queued tasks = 0, completed tasks = 38], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commits_created=0) (op_list_located_status=0) (op_glob_status.failures=0) (op_delete=31) (committer_commits_completed=0) (committer_tasks_completed=0) (op_exists.failures=0) (stream_read_bytes=7313) (object_continue_list_request.failures=0) (object_list_request=124) (directories_deleted=0) (stream_read_remote_stream_aborted=0) (object_bulk_delete_request=62) (multipart_upload_started=0) (action_http_head_request=86) (op_list_files=0) (stream_write_queue_duration=0) (op_openfile=0) (op_get_file_status.failures=0) (op_list_status=0) (op_rename.failures=0) (committer_commits_aborted=0) (object_metadata_request=86) (multipart_instantiated=0) (op_xattr_get_named=0) (op_get_delegation_token.failures=0) (store_exists_probe=0) (op_mkdirs.failures=0) (op_is_file.failures=0) (action_executor_acquired=0) (stream_read_exceptions=0) (op_copy_from_local_file=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_remote_stream_drain.failures=0) (store_io_retry=0) (op_xattr_get_map.failures=0) (audit_access_check_failure=0) (object_put_request.failures=0) (op_xattr_get_named_map=0) (op_get_file_checksum=0) (stream_read_vectored_read_bytes_discarded=24553) (object_bulk_delete_request.failures=0) (op_exists=0) (committer_magic_files_created=0) (object_multipart_initiated.failures=0) (stream_read_vectored_operations=20) (op_create_non_recursive=0) (op_delete.failures=0) (files_created=31) (delegation_tokens_issued=0) (op_is_directory.failures=0) (object_delete_objects=62) (stream_read_bytes_backwards_on_seek=0) (store_io_throttled=0) (op_list_status.failures=0) (stream_read_bytes_discarded_in_close=261344) (audit_span_creation=119) (object_continue_list_request=0) (stream_read_closed=4) (op_mkdirs=31) (stream_read_seek_backward_operations=0) (op_get_content_summary=0) (object_list_request.failures=0) (op_xattr_list=0) (stream_read_fully_operations=1) (fake_directories_deleted=31) (stream_read_total_bytes=268657) (stream_write_block_uploads_committed=0) (stream_write_block_uploads_aborted=0) (store_io_request=361) (audit_request_execution=361) (committer_jobs_failed=0) (stream_write_queue_duration.failures=0) (stream_read_close_operations=24) (committer_materialize_file.failures=0) (object_select_requests=0) (op_get_delegation_token=0) (committer_stage_file_upload=0) (op_xattr_list.failures=0) (object_put_bytes=2031616) (op_glob_status=0) (committer_magic_marker_put=0) (stream_write_bytes=2031616) (op_create.failures=0) (committer_load_single_pending_file.failures=0) (op_get_content_summary.failures=0) (op_create=31) (op_hsync=0) (fake_directories_created=0) (committer_load_single_pending_file=0) (object_delete_request.failures=0) (op_is_file=0) (object_copy_requests=0) (stream_read_operations=4) (stream_read_bytes_discarded_in_abort=0) (object_multipart_initiated=0) (multipart_upload_aborted=0) (files_delete_rejected=0) (op_createfile=0) (stream_read_seek_bytes_skipped=0) (action_http_get_request.failures=1) (committer_jobs_completed=0) (multipart_upload_completed=0) (files_copied=0) (stream_read_seek_operations=0) (action_http_get_request=28) (op_createfile.failures=0) (files_deleted=31) (committer_commit_job=0) (committer_bytes_uploaded=0) (object_multipart_aborted=0) (files_copied_bytes=0) (committer_materialize_file=0) (op_access.failures=0) (committer_commit_job.failures=0) (stream_read_vectored_combined_ranges=25) (action_http_head_request.failures=0) (action_file_opened=24) (stream_write_total_time=0) (stream_write_exceptions=0) (action_file_opened.failures=0) (op_rename=0) (op_abort=0) (stream_read_seek_forward_operations=0) (op_abort.failures=0) (committer_bytes_committed=0) (committer_magic_marker_put.failures=0) (stream_read_remote_stream_drain=4) (op_access=0) (committer_commits_reverted=0) (stream_read_seek_policy_changed=26) (audit_failure=0) (op_xattr_get_map=0) (op_open=24) (op_list_files.failures=0) (stream_aborted=0) (object_delete_request=0) (committer_tasks_failed=0) (stream_read_unbuffered=2) (op_xattr_get_named_map.failures=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired.failures=0) (stream_read_version_mismatches=0) (directories_created=31) (stream_read_vectored_incoming_ranges=58) (stream_write_total_data=4063232) (op_xattr_get_named.failures=0) (stream_read_seek_bytes_discarded=0) (op_get_file_checksum.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=62) (multipart_upload_list.failures=0) (stream_read_operations_incomplete=0) (stream_write_block_uploads=31) (op_is_directory=0) (multipart_upload_list=0) (ignored_errors=0) (committer_stage_file_upload.failures=0) (op_get_file_status=1) (op_hflush=0) (op_copy_from_local_file.failures=0) (delegation_tokens_issued.failures=0) (store_exists_probe.failures=0) (object_put_request_completed=62) (committer_commits.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_opened=4));
gauges=((stream_write_block_uploads_pending=31) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0));
minimums=((object_delete_request.failures.min=-1) (op_delete.min=18) (op_xattr_get_named.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_put_request.min=17) (object_bulk_delete_request.min=4) (object_multipart_aborted.min=-1) (committer_commit_job.min=-1) (op_is_file.failures.min=-1) (stream_write_queue_duration.min=-1) (op_delete.failures.min=-1) (op_is_directory.min=-1) (op_get_content_summary.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (op_list_files.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (store_exists_probe.min=-1) (action_executor_acquired.failures.min=-1) (op_glob_status.min=-1) (op_list_status.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=0) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_delegation_token.min=-1) (op_rename.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named.min=-1) (action_http_get_request.min=8) (op_get_file_status.failures.min=-1) (op_exists.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_file_opened.failures.min=-1) (object_continue_list_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_list_request.min=4) (op_list_files.min=-1) (op_create.failures.min=-1) (object_list_request.failures.min=-1) (op_xattr_list.min=-1) (op_mkdirs.failures.min=-1) (op_createfile.min=-1) (committer_materialize_file.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_map.min=-1) (object_multipart_aborted.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_status.min=5) (op_rename.min=-1) (op_exists.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_list.failures.min=-1) (op_mkdirs.min=13) (op_abort.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.min=-1) (op_abort.min=-1) (op_is_directory.failures.min=-1) (action_http_head_request.min=2) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_create.min=5) (op_access.min=-1) (op_list_status.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_load_single_pending_file.min=-1) (object_delete_request.min=-1) (action_http_head_request.failures.min=-1) (op_createfile.failures.min=-1) (action_file_opened.min=14));
maximums=((op_xattr_get_named.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_materialize_file.failures.max=-1) (action_executor_acquired.max=-1) (op_is_directory.max=-1) (op_get_content_summary.failures.max=-1) (op_abort.max=-1) (object_list_request.max=220) (op_createfile.failures.max=-1) (op_delete.max=81) (committer_commit_job.failures.max=-1) (op_is_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.max=3) (object_list_request.failures.max=-1) (action_http_head_request.max=18) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_list.max=-1) (op_mkdirs.max=322) (op_create.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_glob_status.max=-1) (op_rename.failures.max=-1) (object_bulk_delete_request.max=21) (stream_read_remote_stream_drain.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_content_summary.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.max=5) (op_access.failures.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.failures.max=-1) (action_http_get_request.failures.max=0) (op_is_file.failures.max=-1) (object_put_request.failures.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_file_opened.failures.max=-1) (op_access.max=-1) (op_create.max=59) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.max=-1) (op_get_file_status.failures.max=-1) (object_multipart_initiated.max=-1) (op_exists.max=-1) (op_list_status.failures.max=-1) (committer_stage_file_upload.max=-1) (object_put_request.max=63) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_delete_request.max=-1) (action_http_get_request.max=35) (action_http_head_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_list.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_rename.max=-1) (op_get_file_checksum.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named.failures.max=-1) (store_exists_probe.max=-1) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.max=-1) (op_exists.failures.max=-1) (object_delete_request.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_get_map.max=-1) (action_file_opened.max=14) (op_list_status.max=-1) (op_list_files.failures.max=-1) (op_get_delegation_token.max=-1));
means=((op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (object_put_request.mean=(samples=62, sum=839, mean=13.5323)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=31, sum=1047, mean=33.7742)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=31, sum=888, mean=28.6452)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=31, sum=322, mean=10.3871)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=62, sum=455, mean=7.3387)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=27, sum=310, mean=11.4815)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=124, sum=1123, mean=9.0565)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=86, sum=341, mean=3.9651)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=24, sum=110, mean=4.5833)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=6, mean=1.5000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:15,871 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:15,871 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,871 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,871 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,871 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,872 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000153 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000153/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000153&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=208&ts=1731778035871
2024-11-16 17:27:15,890 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:27:15,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:15,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:15,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:15,891 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000153 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000153/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000153&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=208&ts=1731778035871
2024-11-16 17:27:15,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:15,900 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:15,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:15,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:15,900 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000153 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000153/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000153&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=208&ts=1731778035871
2024-11-16 17:27:15,906 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:15,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:15,907 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.007s
2024-11-16 17:27:15,907 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:15,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,908 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,908 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:15,908 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:15,908 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000154 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000154/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000154&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=208&ts=1731778035907
2024-11-16 17:27:15,916 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:15,916 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,917 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:15,917 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2690395848378514479.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:15,918 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2690395848378514479.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated=0) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (object_put_request=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (object_put_request.failures=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (op_abort=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1));
maximums=((object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2690395848378514479.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,919 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,919 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:15,919 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2690395848378514479.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:15,919 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:15,919 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:15,920 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:15,920 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:15,920 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000154 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000154/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000154&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=92&ts=1731778035907
2024-11-16 17:27:15,954 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:15,954 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:15,954 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.035s
2024-11-16 17:27:15,955 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2690395848378514479.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:15,955 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2690395848378514479.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,955 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2690395848378514479.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:15,955 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:15,955 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:15,956 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_time=0) (op_abort=0) (object_put_request.failures=0) (stream_write_bytes=65536) (object_put_request=1) (multipart_upload_completed=0) (stream_write_block_uploads=1) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_put_request.min=34) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=34) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=34, mean=34.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:15,956 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:15,957 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:15,957 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:15,957 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:15,957 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000155 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000155/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000155&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=208&ts=1731778035957
2024-11-16 17:27:15,969 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:15,969 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:15,969 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,970 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:27:15,970 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:15,970 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:27:15,970 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:27:15,970 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:15,970 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:15,970 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:15,970 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000155 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000155/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-999&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000155&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=94&ts=1731778035957
2024-11-16 17:27:15,998 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.028s
2024-11-16 17:27:15,999 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,003 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_prefetch_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened=1) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (action_executor_acquired=0) (stream_read_fully_operations=0) (action_http_get_request.failures=0) (stream_read_bytes=1000) (stream_read_block_acquire_read=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=10) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_operations=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_combined_ranges=1) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_opened=0) (stream_read_total_bytes=1000) (action_executor_acquired.failures=0) (stream_aborted=0) (stream_read_closed=0) (stream_read_vectored_operations=1) (stream_read_block_read=0) (action_http_get_request=1));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=12) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=28) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=28) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=12) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=28, mean=28.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=12, mean=12.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:16,004 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:16,007 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,007 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,008 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=208&ts=1731778036004
2024-11-16 17:27:16,019 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,020 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,020 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=208&ts=1731778036004
2024-11-16 17:27:16,044 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.024s
2024-11-16 17:27:16,044 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:16,044 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:16,044 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:16,044 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:16,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:16,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:16,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:16,044 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:16,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:16,044 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:16,044 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:16,049 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:16,050 [s3a-transfer-fso-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:16,050 [s3a-transfer-fso-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,050 [s3a-transfer-fso-bucket-unbounded-pool2-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=212&ts=1731778036004
2024-11-16 17:27:16,068 [s3a-transfer-fso-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:27:16,068 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.019s
2024-11-16 17:27:16,069 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:16,069 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:16,069 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:16,069 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778035950; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:16,069 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:16,069 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:16,069 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:16,069 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:16,071 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:16,071 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:16,071 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:16,071 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:16,071 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,071 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,071 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:16,071 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,071 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=96&ts=1731778036004
2024-11-16 17:27:16,085 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:27:16,085 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:27:16,085 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:27:16,085 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:16,085 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:16,085 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,085 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,085 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:16,087 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,087 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000156&t0=208&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=96&ts=1731778036004
2024-11-16 17:27:16,098 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:27:16,098 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:27:16,098 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:27:16,098 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.027s
2024-11-16 17:27:16,098 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.027s
2024-11-16 17:27:16,099 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.054s
2024-11-16 17:27:16,099 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:16,099 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:16,101 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:16,113 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 39, active threads = 0, queued tasks = 0, completed tasks = 39], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_part_put_bytes=0) (committer_stage_file_upload=0) (files_copied_bytes=0) (stream_read_remote_stream_drain=4) (op_get_file_status.failures=0) (stream_read_total_bytes=269657) (files_delete_rejected=0) (stream_read_seek_forward_operations=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (action_http_get_request=29) (directories_created=32) (object_continue_list_request.failures=0) (op_get_file_status=1) (object_put_request=64) (stream_write_exceptions=0) (committer_jobs_failed=0) (op_is_file.failures=0) (files_copied=0) (object_bulk_delete_request=64) (committer_load_single_pending_file.failures=0) (op_glob_status.failures=0) (stream_write_block_uploads_aborted=0) (fake_directories_created=0) (op_xattr_get_map.failures=0) (op_create_non_recursive=0) (multipart_upload_part_put=0) (op_copy_from_local_file=0) (object_multipart_aborted=0) (op_createfile=0) (op_mkdirs=32) (op_open=25) (op_list_files.failures=0) (committer_commits_created=0) (store_io_request=373) (committer_bytes_uploaded=0) (committer_stage_file_upload.failures=0) (fake_directories_deleted=32) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=26) (committer_commit_job.failures=0) (op_exists.failures=0) (stream_write_total_time=0) (committer_jobs_completed=0) (audit_request_execution=373) (multipart_upload_aborted=0) (stream_write_block_uploads_committed=0) (op_exists=0) (store_exists_probe.failures=0) (stream_read_exceptions=0) (op_create=32) (stream_read_close_operations=25) (store_io_retry=0) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=24553) (action_file_opened.failures=0) (op_xattr_get_named=0) (object_put_request_completed=64) (files_created=32) (op_get_file_checksum.failures=0) (object_bulk_delete_request.failures=0) (stream_read_seek_bytes_skipped=0) (op_is_file=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=21) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes=8313) (object_list_request.failures=0) (op_xattr_get_named.failures=0) (object_continue_list_request=0) (multipart_upload_started=0) (delegation_tokens_issued=0) (object_list_request=128) (op_is_directory.failures=0) (op_delete=32) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations=4) (stream_aborted=0) (action_http_head_request.failures=0) (action_executor_acquired=0) (ignored_errors=0) (stream_read_vectored_incoming_ranges=68) (object_delete_objects=64) (stream_read_unbuffered=2) (op_xattr_get_map=0) (op_xattr_list=0) (action_executor_acquired.failures=0) (committer_tasks_failed=0) (action_http_get_request.failures=1) (committer_magic_marker_put=0) (op_glob_status=0) (stream_read_closed=4) (op_mkdirs.failures=0) (stream_read_seek_bytes_discarded=0) (op_create.failures=0) (op_is_directory=0) (stream_read_seek_backward_operations=0) (committer_commits_reverted=0) (stream_read_operations_incomplete=0) (op_openfile=0) (committer_commits.failures=0) (stream_read_seek_policy_changed=27) (stream_read_opened=4) (multipart_upload_list=0) (committer_commits_completed=0) (op_list_located_status=0) (stream_write_queue_duration.failures=0) (stream_read_bytes_discarded_in_close=261344) (stream_read_seek_operations=0) (committer_bytes_committed=0) (op_rename.failures=0) (committer_magic_files_created=0) (object_put_bytes=2097152) (op_xattr_get_named_map=0) (op_hsync=0) (committer_load_single_pending_file=0) (object_delete_request=0) (object_multipart_initiated.failures=0) (store_exists_probe=0) (op_abort=0) (committer_tasks_completed=0) (object_copy_requests=0) (directories_deleted=0) (stream_write_block_uploads=32) (op_get_delegation_token.failures=0) (audit_failure=0) (files_deleted=32) (committer_materialize_file.failures=0) (op_get_file_checksum=0) (stream_read_fully_operations=1) (object_metadata_request=89) (op_get_delegation_token=0) (stream_read_remote_stream_drain.failures=0) (op_rename=0) (object_select_requests=0) (audit_span_creation=123) (stream_write_exceptions_completing_upload=0) (action_http_head_request=89) (multipart_instantiated=0) (object_put_request.failures=0) (op_delete.failures=0) (committer_magic_marker_put.failures=0) (op_xattr_get_named_map.failures=0) (action_file_opened=25) (stream_read_remote_stream_aborted.failures=0) (committer_materialize_file=0) (op_xattr_list.failures=0) (op_list_status.failures=0) (op_abort.failures=0) (stream_write_total_data=4194304) (store_io_throttled=0) (op_createfile.failures=0) (op_get_content_summary=0) (committer_commits_aborted=0) (stream_write_queue_duration=0) (op_hflush=0) (delegation_tokens_issued.failures=0) (object_delete_request.failures=0) (op_access=0) (audit_access_check_failure=0) (multipart_upload_list.failures=0) (op_access.failures=0) (op_list_files=0) (committer_commit_job=0) (stream_write_bytes=2097152) (op_get_content_summary.failures=0) (object_multipart_initiated=0) (op_copy_from_local_file.failures=0) (op_list_status=0));
gauges=((stream_write_block_uploads_pending=32) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0));
minimums=((op_mkdirs.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_access.min=-1) (object_list_request.min=4) (action_http_get_request.failures.min=0) (committer_commit_job.failures.min=-1) (op_delete.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named.min=-1) (action_file_opened.failures.min=-1) (op_xattr_list.min=-1) (object_multipart_initiated.failures.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (op_is_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_rename.min=-1) (object_put_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_create.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.min=18) (op_list_status.min=-1) (action_http_head_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_status.min=5) (op_is_file.min=-1) (store_exists_probe.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_map.min=-1) (action_http_get_request.min=28) (op_createfile.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (object_list_request.failures.min=-1) (action_http_head_request.min=2) (committer_magic_marker_put.min=-1) (object_put_request.min=34) (op_get_delegation_token.failures.min=-1) (multipart_upload_list.min=-1) (op_is_directory.min=-1) (committer_commit_job.min=-1) (object_multipart_initiated.min=-1) (object_bulk_delete_request.min=4) (op_rename.failures.min=-1) (op_get_file_status.failures.min=-1) (op_exists.failures.min=-1) (op_list_files.min=-1) (op_create.min=5) (stream_write_queue_duration.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_is_directory.failures.min=-1) (op_glob_status.min=-1) (action_file_opened.min=12) (stream_read_remote_stream_drain.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_stage_file_upload.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_drain.min=1) (stream_write_queue_duration.failures.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.min=-1) (delegation_tokens_issued.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.min=-1) (store_exists_probe.min=-1) (op_get_file_checksum.min=-1) (op_mkdirs.min=13) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_exists.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((op_rename.failures.max=-1) (committer_stage_file_upload.max=-1) (object_bulk_delete_request.max=21) (store_exists_probe.failures.max=-1) (op_xattr_get_map.max=-1) (op_access.max=-1) (op_rename.max=-1) (op_delete.max=81) (object_list_request.max=220) (delegation_tokens_issued.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_commit_job.max=-1) (action_file_opened.max=14) (object_put_request.max=63) (object_multipart_initiated.failures.max=-1) (op_is_directory.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_mkdirs.max=322) (action_http_head_request.failures.max=-1) (op_access.failures.max=-1) (op_abort.failures.max=-1) (op_get_content_summary.max=-1) (object_put_request.failures.max=-1) (op_get_file_status.max=5) (op_exists.max=-1) (op_copy_from_local_file.failures.max=-1) (op_create.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_is_directory.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_list.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_checksum.max=-1) (committer_stage_file_upload.failures.max=-1) (op_list_status.max=-1) (op_glob_status.max=-1) (action_http_head_request.max=18) (stream_read_remote_stream_drain.max=3) (op_exists.failures.max=-1) (committer_commit_job.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_files.failures.max=-1) (action_http_get_request.failures.max=0) (op_is_file.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.max=-1) (committer_materialize_file.max=-1) (store_exists_probe.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.max=-1) (action_file_opened.failures.max=-1) (op_abort.max=-1) (op_list_files.max=-1) (object_multipart_aborted.max=-1) (op_create.max=59) (op_createfile.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_map.failures.max=-1) (action_http_get_request.max=35) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_list_request.failures.max=-1));
means=((op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=25, sum=122, mean=4.8800)) (action_http_get_request.mean=(samples=28, sum=338, mean=12.0714)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=32, sum=1102, mean=34.4375)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=128, sum=1191, mean=9.3047)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=6, mean=1.5000)) (object_put_request.mean=(samples=64, sum=879, mean=13.7344)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=32, sum=332, mean=10.3750)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=64, sum=480, mean=7.5000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=32, sum=924, mean=28.8750)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=89, sum=374, mean=4.2022)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:16,114 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:16,114 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,115 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,115 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,115 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,116 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000157 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000157/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000157&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=213&ts=1731778036114
2024-11-16 17:27:16,121 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:16,121 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,122 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,122 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,122 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,123 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000157 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000157/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000157&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=213&ts=1731778036114
2024-11-16 17:27:16,125 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,125 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:16,125 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:16,125 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:16,125 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000157 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000157/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000157&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=213&ts=1731778036114
2024-11-16 17:27:16,130 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:16,131 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:16,131 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:16,131 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:16,131 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,131 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,131 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,131 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,131 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000158 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000158/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000158&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=213&ts=1731778036131
2024-11-16 17:27:16,139 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:16,139 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,140 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:16,140 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11199893916363814638.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:16,141 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11199893916363814638.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (object_put_request.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (object_put_request=0) (committer_magic_marker_put=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (op_abort.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11199893916363814638.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,141 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,141 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:16,141 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11199893916363814638.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:16,141 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:16,141 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:16,141 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:16,141 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:16,142 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000158 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000158/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000158&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=97&ts=1731778036131
2024-11-16 17:27:16,164 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:16,165 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:16,165 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.024s
2024-11-16 17:27:16,165 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11199893916363814638.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:16,165 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11199893916363814638.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,165 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11199893916363814638.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,165 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:16,165 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,166 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_bytes=65536) (op_hsync=0) (op_abort=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=65536) (stream_write_queue_duration=0) (object_put_request.failures=0) (stream_write_total_time=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (stream_write_block_uploads=1) (op_abort.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (op_hflush=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (object_put_request=1) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=22) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=22) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=22, mean=22.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:16,166 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:16,167 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,167 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,167 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:16,167 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000159 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000159/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000159&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=213&ts=1731778036167
2024-11-16 17:27:16,170 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:16,170 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778036000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:16,171 [s3a-transfer-fso-bucket-unbounded-pool2-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:16,171 [s3a-transfer-fso-bucket-unbounded-pool2-t40] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,171 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:16,172 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:16,172 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:27:16,172 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:16,172 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,172 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,172 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,172 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000160 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000160/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=40960-41983&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000160&t0=214&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=102&ts=1731778036171
2024-11-16 17:27:16,172 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,173 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,173 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,173 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000160 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000160/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=8192-14435&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000160&t0=214&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=100&ts=1731778036171
2024-11-16 17:27:16,172 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,174 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,174 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,174 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000160 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000160/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=1947-2046&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000160&t0=214&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=98&ts=1731778036171
2024-11-16 17:27:16,180 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:27:16,181 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,186 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:27:16,187 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:27:16,187 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:27:16,187 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:27:16,187 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,187 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,188 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_read_bytes_discarded=5944) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (stream_read_opened=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations=0) (stream_read_vectored_operations=1) (stream_read_seek_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_combined_ranges=3) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_incoming_ranges=5) (stream_read_block_read=0) (stream_read_exceptions=0) (action_file_opened=1) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (stream_read_operations_incomplete=0) (stream_read_bytes=1424) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (stream_read_close_operations=1) (action_file_opened.failures=0) (stream_read_version_mismatches=0) (stream_read_total_bytes=1424) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations=0) (action_http_get_request=3) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=8) (action_file_opened.min=0) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=13));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=34, mean=11.3333)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:16,190 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:16,190 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,190 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,190 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=213&ts=1731778036190
2024-11-16 17:27:16,194 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,194 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,194 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=213&ts=1731778036190
2024-11-16 17:27:16,201 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:16,201 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:16,201 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:16,201 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:16,201 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:16,202 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:16,202 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:16,202 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:16,202 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:16,202 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:16,202 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:16,202 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:16,203 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:16,203 [s3a-transfer-fso-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:16,203 [s3a-transfer-fso-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,204 [s3a-transfer-fso-bucket-unbounded-pool2-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [215] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=215&ts=1731778036190
2024-11-16 17:27:16,209 [s3a-transfer-fso-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:16,210 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:27:16,210 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:16,210 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:16,210 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:16,210 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778036162; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:16,210 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:16,210 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:16,210 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:16,210 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:16,210 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:16,211 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:16,211 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:16,211 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:16,211 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,211 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,211 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:16,211 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,211 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=105&ts=1731778036190
2024-11-16 17:27:16,216 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:16,216 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:16,216 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:16,216 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:16,216 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:16,216 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,216 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,217 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:16,217 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,217 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000161&t0=213&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=105&ts=1731778036190
2024-11-16 17:27:16,226 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:27:16,226 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:27:16,226 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:27:16,226 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:27:16,226 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.016s
2024-11-16 17:27:16,226 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:27:16,226 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:16,226 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:16,227 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:16,239 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 41, active threads = 0, queued tasks = 0, completed tasks = 41], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_remote_stream_drain=4) (object_select_requests=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads_aborted=0) (op_create_non_recursive=0) (multipart_instantiated=0) (op_xattr_get_named_map.failures=0) (stream_write_queue_duration=0) (op_get_content_summary.failures=0) (stream_read_seek_operations=0) (store_exists_probe=0) (files_copied=0) (op_get_file_status.failures=0) (files_copied_bytes=0) (object_put_request_completed=66) (op_glob_status.failures=0) (committer_materialize_file=0) (op_open=26) (op_mkdirs=33) (op_copy_from_local_file.failures=0) (object_delete_request.failures=0) (op_list_status=0) (object_put_request=66) (object_bulk_delete_request.failures=0) (op_get_file_status=2) (op_delete.failures=0) (directories_created=33) (action_http_get_request.failures=1) (stream_read_bytes=9737) (delegation_tokens_issued.failures=0) (op_createfile=0) (multipart_upload_part_put=0) (op_access=0) (stream_write_bytes=2162688) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_named=0) (multipart_upload_list=0) (stream_read_fully_operations=1) (object_continue_list_request.failures=0) (action_http_get_request=32) (stream_read_vectored_operations=22) (committer_commits_completed=0) (op_is_file=0) (committer_commits_reverted=0) (action_http_head_request.failures=0) (committer_stage_file_upload.failures=0) (files_delete_rejected=0) (object_copy_requests=0) (store_exists_probe.failures=0) (op_is_directory=0) (action_file_opened.failures=0) (object_multipart_initiated.failures=0) (stream_read_closed=4) (stream_read_operations=4) (committer_jobs_failed=0) (object_list_request.failures=0) (op_create.failures=0) (ignored_errors=0) (stream_read_exceptions=0) (stream_read_opened=4) (store_io_request=387) (committer_tasks_completed=0) (stream_read_remote_stream_drain.failures=0) (op_list_status.failures=0) (op_get_content_summary=0) (store_io_retry=0) (multipart_upload_list.failures=0) (committer_bytes_committed=0) (delegation_tokens_issued=0) (op_is_file.failures=0) (op_xattr_list=0) (stream_read_seek_backward_operations=0) (committer_commits_created=0) (stream_write_total_data=4325376) (op_xattr_get_map=0) (stream_write_block_uploads=33) (object_continue_list_request=0) (stream_read_total_bytes=271081) (object_bulk_delete_request=66) (stream_read_vectored_incoming_ranges=73) (object_delete_request=0) (op_rename=0) (files_deleted=33) (op_xattr_get_named.failures=0) (multipart_upload_aborted=0) (multipart_upload_part_put_bytes=0) (op_copy_from_local_file=0) (committer_commits_aborted=0) (stream_read_seek_policy_changed=28) (op_xattr_list.failures=0) (stream_read_bytes_discarded_in_close=261344) (stream_read_vectored_read_bytes_discarded=30497) (committer_commit_job.failures=0) (stream_read_close_operations=26) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_completed=0) (op_list_files=0) (object_multipart_initiated=0) (multipart_upload_started=0) (audit_access_check_failure=0) (store_io_throttled=0) (op_xattr_get_named_map=0) (fake_directories_deleted=33) (multipart_upload_abort_under_path_invoked=0) (op_list_files.failures=0) (object_multipart_aborted=0) (op_list_located_status=0) (op_createfile.failures=0) (op_openfile=0) (stream_write_exceptions=0) (stream_aborted=0) (directories_deleted=0) (object_delete_objects=66) (op_get_delegation_token.failures=0) (audit_request_execution=387) (object_metadata_request=92) (stream_read_operations_incomplete=0) (committer_tasks_failed=0) (stream_read_vectored_combined_ranges=29) (object_list_request=132) (stream_read_seek_bytes_discarded=0) (stream_read_seek_bytes_skipped=0) (op_hflush=0) (committer_commits.failures=0) (stream_write_total_time=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (op_access.failures=0) (committer_stage_file_upload=0) (committer_jobs_completed=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (action_http_head_request=92) (committer_load_single_pending_file=0) (action_executor_acquired.failures=0) (op_exists.failures=0) (fake_directories_created=0) (committer_magic_marker_put.failures=0) (op_abort=0) (op_create=33) (committer_materialize_file.failures=0) (object_put_request.failures=0) (committer_commit_job=0) (op_glob_status=0) (committer_load_single_pending_file.failures=0) (action_file_opened=26) (stream_write_queue_duration.failures=0) (op_get_delegation_token=0) (op_exists=0) (op_abort.failures=0) (object_put_bytes=2162688) (op_get_file_checksum.failures=0) (op_is_directory.failures=0) (op_xattr_get_map.failures=0) (op_delete=33) (op_get_file_checksum=0) (op_rename.failures=0) (audit_failure=0) (stream_write_block_uploads_committed=0) (object_multipart_aborted.failures=0) (stream_read_remote_stream_aborted.failures=0) (audit_span_creation=128) (committer_magic_marker_put=0) (stream_read_unbuffered=2) (op_mkdirs.failures=0) (op_hsync=0) (committer_magic_files_created=0) (files_created=33) (committer_bytes_uploaded=0));
gauges=((stream_write_block_uploads_pending=33) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0));
minimums=((op_exists.min=-1) (op_glob_status.failures.min=-1) (op_createfile.failures.min=-1) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.failures.min=-1) (op_delete.min=18) (object_continue_list_request.min=-1) (op_xattr_get_map.failures.min=-1) (committer_materialize_file.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.failures.min=-1) (op_create.min=5) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_is_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.failures.min=-1) (op_get_delegation_token.failures.min=-1) (store_exists_probe.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_list_status.failures.min=-1) (op_get_file_status.min=3) (op_list_files.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_drain.min=1) (delegation_tokens_issued.min=-1) (action_http_get_request.failures.min=0) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=8) (delegation_tokens_issued.failures.min=-1) (object_put_request.min=22) (multipart_upload_list.min=-1) (action_file_opened.min=0) (op_list_files.failures.min=-1) (op_mkdirs.min=13) (stream_read_remote_stream_drain.failures.min=-1) (action_http_head_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_status.min=-1) (object_list_request.min=4) (op_get_content_summary.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_get_named_map.min=-1) (committer_materialize_file.failures.min=-1) (op_is_directory.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.failures.min=-1) (op_is_file.min=-1) (action_executor_acquired.min=-1) (op_is_directory.failures.min=-1) (op_rename.min=-1) (op_create.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_createfile.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.failures.min=-1) (committer_commit_job.min=-1) (object_multipart_initiated.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_delegation_token.min=-1) (object_list_request.failures.min=-1) (object_put_request.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_list.min=-1) (action_executor_acquired.failures.min=-1) (op_access.min=-1) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.min=4) (committer_load_single_pending_file.failures.min=-1) (action_http_head_request.min=2) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_delete.failures.min=-1) (store_exists_probe.min=-1) (op_glob_status.min=-1) (op_abort.min=-1) (object_delete_request.min=-1) (op_get_file_checksum.failures.min=-1) (committer_stage_file_upload.min=-1));
maximums=((stream_read_remote_stream_drain.max=3) (store_exists_probe.failures.max=-1) (op_rename.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_files.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_list.max=-1) (op_get_file_status.max=5) (op_createfile.max=-1) (op_get_file_checksum.max=-1) (op_is_file.max=-1) (object_put_request.failures.max=-1) (op_xattr_list.failures.max=-1) (action_executor_acquired.max=-1) (op_delete.max=81) (op_create.failures.max=-1) (object_list_request.max=220) (action_http_head_request.max=18) (op_abort.max=-1) (op_exists.max=-1) (op_glob_status.max=-1) (object_delete_request.failures.max=-1) (object_continue_list_request.max=-1) (op_mkdirs.max=322) (op_is_directory.failures.max=-1) (op_list_files.max=-1) (op_abort.failures.max=-1) (op_exists.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named.max=-1) (op_access.failures.max=-1) (op_is_directory.max=-1) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.max=-1) (action_file_opened.max=14) (op_get_delegation_token.max=-1) (committer_commit_job.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_get_map.max=-1) (op_glob_status.failures.max=-1) (action_http_get_request.max=35) (object_bulk_delete_request.max=21) (op_access.max=-1) (committer_materialize_file.failures.max=-1) (op_list_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_stage_file_upload.failures.max=-1) (object_list_request.failures.max=-1) (object_put_request.max=63) (stream_read_remote_stream_drain.failures.max=-1) (committer_commit_job.failures.max=-1) (op_rename.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_file.failures.max=-1) (action_file_opened.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_createfile.failures.max=-1) (op_create.max=59) (object_multipart_aborted.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_content_summary.max=-1) (committer_magic_marker_put.max=-1) (object_delete_request.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.max=-1) (op_mkdirs.failures.max=-1) (store_exists_probe.max=-1) (action_http_get_request.failures.max=0) (op_get_file_checksum.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_multipart_initiated.max=-1) (stream_write_queue_duration.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_status.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=92, sum=384, mean=4.1739)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=33, sum=341, mean=10.3333)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=33, sum=941, mean=28.5152)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=66, sum=494, mean=7.4848)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=26, sum=122, mean=4.6923)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=6, mean=1.5000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=33, sum=1126, mean=34.1212)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=132, sum=1217, mean=9.2197)) (object_put_request.mean=(samples=66, sum=906, mean=13.7273)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=31, sum=372, mean=12.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:16,240 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:16,240 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,240 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,240 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,241 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,241 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000162 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000162/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000162&t0=216&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=216&ts=1731778036239
2024-11-16 17:27:16,246 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,246 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,246 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,246 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,246 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,247 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000162 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000162/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000162&t0=216&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=216&ts=1731778036239
2024-11-16 17:27:16,250 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,250 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:16,251 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:16,251 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:16,251 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000162 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000162/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000162&t0=216&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=216&ts=1731778036239
2024-11-16 17:27:16,255 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:16,256 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:16,256 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:16,256 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:16,257 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,257 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,258 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,258 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,258 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000163 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000163/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000163&t0=216&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=216&ts=1731778036257
2024-11-16 17:27:16,262 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:16,263 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,263 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:16,264 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6797123382002661085.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:16,265 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6797123382002661085.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=0) (stream_write_queue_duration=0) (op_abort=0) (op_abort.failures=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (op_hflush=0) (object_put_request=0) (action_executor_acquired.failures=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1));
maximums=((op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6797123382002661085.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,265 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,266 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:16,266 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6797123382002661085.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:16,266 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:16,266 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:16,267 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:16,267 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:16,267 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000163 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000163/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000163&t0=216&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=107&ts=1731778036257
2024-11-16 17:27:16,291 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:16,291 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:16,291 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.025s
2024-11-16 17:27:16,292 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6797123382002661085.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:16,292 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6797123382002661085.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,292 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6797123382002661085.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,292 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:16,293 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,294 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (op_hsync=0) (committer_magic_marker_put=0) (op_abort.failures=0) (stream_write_block_uploads=1) (op_abort=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (op_hflush=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (stream_write_total_data=65536) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=24) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=24) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=24, mean=24.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:16,294 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:16,295 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,295 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,295 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:16,295 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [217] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000164 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000164/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000164&t0=217&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=217&ts=1731778036295
2024-11-16 17:27:16,298 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:16,298 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:16,298 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,298 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:27:16,298 [JUnit-testEOFRanges[Buffer type : array]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,299 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_close_operations=1) (stream_read_bytes=0) (stream_read_prefetch_operations=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted=0) (stream_read_exceptions=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_incoming_ranges=0) (action_executor_acquired.failures=0) (stream_read_operations=0) (stream_read_unbuffered=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_operations=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened=1) (stream_read_seek_bytes_skipped=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_opened=0) (action_executor_acquired=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (stream_read_operations_incomplete=0) (stream_read_fully_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_total_bytes=0) (action_http_get_request=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_closed=0) (stream_read_version_mismatches=0) (action_file_opened.failures=0) (action_http_get_request.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=3) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1));
maximums=((action_file_opened.max=3) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:16,300 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:16,300 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,300 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,300 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165&t0=216&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=216&ts=1731778036299
2024-11-16 17:27:16,302 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,302 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,302 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165&t0=216&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=216&ts=1731778036299
2024-11-16 17:27:16,310 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:16,311 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:16,311 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:16,311 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:16,311 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:16,311 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:16,311 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:16,312 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:16,312 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:16,312 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:16,312 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:16,312 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:16,312 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:16,313 [s3a-transfer-fso-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:16,313 [s3a-transfer-fso-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,313 [s3a-transfer-fso-bucket-unbounded-pool2-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165&t0=216&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=218&ts=1731778036299
2024-11-16 17:27:16,320 [s3a-transfer-fso-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:16,320 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:27:16,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:16,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:16,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:16,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778036286; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:16,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:16,320 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:16,320 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:16,321 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:16,321 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:16,321 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:16,321 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:16,321 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:16,321 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,321 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,321 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:16,321 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,322 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165&t0=216&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=108&ts=1731778036299
2024-11-16 17:27:16,331 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:27:16,331 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:27:16,331 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:27:16,331 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:16,331 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:16,331 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,331 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,331 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:16,331 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,332 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000165&t0=216&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=108&ts=1731778036299
2024-11-16 17:27:16,337 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:16,337 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:16,337 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:27:16,337 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.016s
2024-11-16 17:27:16,339 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:27:16,339 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.027s
2024-11-16 17:27:16,339 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:16,339 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:16,340 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:16,356 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 43, active threads = 0, queued tasks = 0, completed tasks = 43], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_file_status=2) (committer_magic_files_created=0) (stream_read_seek_bytes_skipped=0) (op_get_delegation_token=0) (object_continue_list_request=0) (files_copied=0) (stream_read_vectored_combined_ranges=29) (committer_bytes_uploaded=0) (action_executor_acquired=0) (op_abort.failures=0) (op_create.failures=0) (multipart_upload_list.failures=0) (op_is_directory.failures=0) (committer_magic_marker_put.failures=0) (stream_read_operations_incomplete=0) (committer_materialize_file.failures=0) (op_xattr_list=0) (op_mkdirs.failures=0) (op_list_located_status=0) (audit_request_execution=398) (object_bulk_delete_request.failures=0) (action_http_head_request.failures=0) (op_xattr_get_map.failures=0) (stream_read_vectored_incoming_ranges=73) (op_get_file_checksum=0) (op_xattr_get_named_map.failures=0) (op_xattr_get_named_map=0) (stream_write_total_time=0) (stream_read_close_operations=27) (op_is_directory=0) (op_exists=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=4) (audit_access_check_failure=0) (op_rename.failures=0) (stream_read_opened=4) (files_copied_bytes=0) (committer_tasks_completed=0) (delegation_tokens_issued=0) (stream_read_bytes_discarded_in_close=261344) (committer_load_single_pending_file.failures=0) (committer_commits_created=0) (committer_commits_aborted=0) (stream_read_version_mismatches=0) (multipart_upload_part_put=0) (action_http_get_request.failures=1) (directories_deleted=0) (op_exists.failures=0) (action_executor_acquired.failures=0) (directories_created=34) (op_is_file=0) (committer_stage_file_upload.failures=0) (stream_read_fully_operations=1) (stream_read_vectored_read_bytes_discarded=30497) (op_rename=0) (object_multipart_aborted=0) (action_file_opened=27) (committer_commit_job=0) (op_xattr_get_named=0) (object_list_request.failures=0) (stream_read_exceptions=0) (multipart_upload_aborted=0) (ignored_errors=0) (op_delete=34) (action_http_get_request=32) (stream_read_remote_stream_drain=4) (stream_read_unbuffered=2) (action_http_head_request=95) (op_is_file.failures=0) (committer_commit_job.failures=0) (store_io_retry=0) (fake_directories_deleted=34) (stream_write_exceptions_completing_upload=0) (op_get_file_status.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_hflush=0) (stream_write_bytes=2228224) (op_get_delegation_token.failures=0) (committer_load_single_pending_file=0) (op_get_content_summary.failures=0) (files_created=34) (stream_write_queue_duration=0) (multipart_upload_part_put_bytes=0) (object_delete_request=0) (store_io_throttled=0) (stream_read_seek_policy_changed=29) (object_put_request=68) (multipart_upload_completed=0) (multipart_upload_list=0) (op_open=27) (op_glob_status.failures=0) (op_createfile.failures=0) (object_copy_requests=0) (object_delete_request.failures=0) (committer_tasks_failed=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (fake_directories_created=0) (op_copy_from_local_file=0) (stream_read_remote_stream_aborted=0) (op_get_file_checksum.failures=0) (stream_write_block_uploads_committed=0) (op_xattr_get_map=0) (files_deleted=34) (stream_read_total_bytes=271081) (committer_stage_file_upload=0) (stream_read_operations=4) (object_put_request.failures=0) (op_list_status=0) (object_put_bytes=2228224) (op_create=34) (delegation_tokens_issued.failures=0) (op_list_files=0) (op_list_files.failures=0) (op_mkdirs=34) (audit_failure=0) (stream_write_exceptions=0) (object_delete_objects=68) (op_copy_from_local_file.failures=0) (object_multipart_initiated=0) (op_list_status.failures=0) (op_openfile=0) (store_exists_probe=0) (op_access=0) (committer_materialize_file=0) (store_exists_probe.failures=0) (object_bulk_delete_request=68) (committer_commits_reverted=0) (audit_span_creation=132) (op_glob_status=0) (stream_write_block_uploads=34) (stream_read_seek_backward_operations=0) (stream_read_vectored_operations=22) (object_select_requests=0) (action_file_opened.failures=0) (op_createfile=0) (stream_read_bytes=9737) (files_delete_rejected=0) (multipart_upload_started=0) (stream_write_queue_duration.failures=0) (object_put_request_completed=68) (stream_read_remote_stream_drain.failures=0) (store_io_request=398) (committer_commits.failures=0) (stream_read_seek_operations=0) (stream_write_block_uploads_aborted=0) (op_delete.failures=0) (op_access.failures=0) (object_metadata_request=95) (op_get_content_summary=0) (committer_bytes_committed=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits_completed=0) (multipart_instantiated=0) (stream_aborted=0) (op_xattr_list.failures=0) (stream_read_seek_bytes_discarded=0) (stream_write_total_data=4456448) (committer_jobs_failed=0) (committer_jobs_completed=0) (object_continue_list_request.failures=0) (committer_magic_marker_put=0) (op_hsync=0) (op_create_non_recursive=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_named.failures=0) (op_abort=0) (object_list_request=136));
gauges=((stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_pending=34) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0));
minimums=((multipart_upload_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_abort.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_directory.min=-1) (object_bulk_delete_request.min=4) (object_delete_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.failures.min=-1) (op_rename.failures.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.failures.min=-1) (op_create.failures.min=-1) (op_get_file_status.min=3) (object_multipart_initiated.min=-1) (op_xattr_get_map.min=-1) (op_exists.min=-1) (committer_commit_job.min=-1) (op_mkdirs.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_get_request.failures.min=0) (op_is_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_files.min=-1) (op_list_status.min=-1) (committer_commit_job.failures.min=-1) (op_abort.failures.min=-1) (op_is_directory.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_get_request.min=8) (op_rename.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_exists.failures.min=-1) (object_continue_list_request.failures.min=-1) (store_exists_probe.min=-1) (op_xattr_get_named.min=-1) (op_create.min=5) (committer_load_single_pending_file.min=-1) (action_file_opened.failures.min=-1) (op_access.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_glob_status.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_list.min=-1) (op_get_file_checksum.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_file.failures.min=-1) (op_list_files.failures.min=-1) (committer_stage_file_upload.min=-1) (action_executor_acquired.failures.min=-1) (object_list_request.failures.min=-1) (op_delete.failures.min=-1) (multipart_upload_list.min=-1) (action_file_opened.min=3) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.min=2) (committer_materialize_file.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_list_request.min=4) (object_multipart_aborted.failures.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.min=24) (action_executor_acquired.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.min=-1) (op_delete.min=18) (op_createfile.min=-1) (object_continue_list_request.min=-1) (op_createfile.failures.min=-1) (op_get_delegation_token.min=-1) (action_http_head_request.failures.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_get_named_map.failures.min=-1) (op_access.min=-1) (object_delete_request.min=-1) (op_mkdirs.min=13));
maximums=((op_get_content_summary.failures.max=-1) (op_rename.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=3) (op_is_file.max=-1) (op_create.failures.max=-1) (object_list_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_delete.failures.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_commit_job.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_files.max=-1) (op_rename.max=-1) (object_multipart_initiated.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.max=5) (object_multipart_aborted.max=-1) (action_file_opened.max=14) (op_get_delegation_token.max=-1) (object_continue_list_request.max=-1) (op_delete.max=81) (committer_stage_file_upload.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_executor_acquired.failures.max=-1) (op_is_directory.max=-1) (op_get_file_checksum.failures.max=-1) (op_access.max=-1) (op_exists.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.max=-1) (committer_materialize_file.max=-1) (object_put_request.max=63) (delegation_tokens_issued.failures.max=-1) (op_glob_status.failures.max=-1) (store_exists_probe.failures.max=-1) (op_create.max=59) (committer_load_single_pending_file.failures.max=-1) (action_http_get_request.max=35) (committer_magic_marker_put.max=-1) (committer_stage_file_upload.max=-1) (op_abort.max=-1) (object_bulk_delete_request.max=21) (op_is_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.max=-1) (op_is_directory.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_access.failures.max=-1) (action_executor_acquired.max=-1) (op_get_file_status.failures.max=-1) (object_put_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_glob_status.max=-1) (object_multipart_aborted.failures.max=-1) (op_mkdirs.max=322) (op_abort.failures.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_files.failures.max=-1) (op_exists.failures.max=-1) (object_delete_request.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.failures.max=-1) (action_http_get_request.failures.max=0) (op_createfile.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_list_status.max=-1) (op_mkdirs.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_list_request.max=220) (op_get_content_summary.max=-1) (action_http_head_request.max=18) (committer_commit_job.max=-1) (store_exists_probe.max=-1) (op_createfile.max=-1) (op_list_status.failures.max=-1));
means=((op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=34, sum=348, mean=10.2353)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=136, sum=1241, mean=9.1250)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=34, sum=958, mean=28.1765)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=68, sum=934, mean=13.7353)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=31, sum=372, mean=12.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=95, sum=393, mean=4.1368)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=68, sum=508, mean=7.4706)) (stream_read_remote_stream_drain.mean=(samples=4, sum=6, mean=1.5000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=34, sum=1154, mean=33.9412)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=27, sum=125, mean=4.6296)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:16,356 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:16,357 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,357 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,357 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,357 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,357 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000166 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000166/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000166&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=219&ts=1731778036356
2024-11-16 17:27:16,363 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:16,363 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,363 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,363 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,363 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,363 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000166 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000166/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000166&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=219&ts=1731778036356
2024-11-16 17:27:16,366 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,366 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:16,367 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:16,367 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:16,367 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000166 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000166/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000166&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=219&ts=1731778036356
2024-11-16 17:27:16,372 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:16,372 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:16,372 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:16,372 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:16,373 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,373 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,373 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,373 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,373 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000167 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000167/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000167&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=219&ts=1731778036373
2024-11-16 17:27:16,387 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:27:16,387 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,387 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:16,388 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10727496061487358430.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:16,388 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10727496061487358430.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (object_multipart_aborted.failures=0) (object_put_request=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (op_hsync=0) (op_abort=0) (stream_write_block_uploads=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (stream_write_total_data=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10727496061487358430.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,389 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,389 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:16,389 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10727496061487358430.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:16,389 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:16,389 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:16,389 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:16,389 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:16,389 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000167 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000167/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000167&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=110&ts=1731778036373
2024-11-16 17:27:16,412 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:16,412 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:16,412 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.023s
2024-11-16 17:27:16,412 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10727496061487358430.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:16,412 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10727496061487358430.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,412 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10727496061487358430.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,412 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:16,413 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,413 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (stream_write_exceptions=0) (op_hflush=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (op_abort=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (op_abort.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (action_executor_acquired.failures=0) (object_put_request=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_put_request.min=23) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1));
maximums=((op_abort.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=23) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=23, mean=23.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:16,413 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:16,414 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,414 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,414 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:16,414 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000168 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000168/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000168&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=219&ts=1731778036414
2024-11-16 17:27:16,417 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:16,417 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:16,417 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,417 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:16,417 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:27:16,417 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,417 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000168 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000168/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-65535&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000168&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=219&ts=1731778036414
2024-11-16 17:27:16,424 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.007s
2024-11-16 17:27:16,424 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:16,424 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:16,424 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:16,424 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:16,424 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:16,424 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:16,424 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,424 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,424 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,424 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000168 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000168/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000168&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=112&ts=1731778036414
2024-11-16 17:27:16,430 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.006s
2024-11-16 17:27:16,431 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:16,431 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,431 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:27:16,431 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:27:16,431 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:27:16,431 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7442 bytes
2024-11-16 17:27:16,431 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:16,431 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:16,432 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:16,432 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8742 bytes
2024-11-16 17:27:16,432 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:27:16,432 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:16,432 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=65336) (action_http_get_request=2) (stream_read_closed=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes=350) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_policy_changed=1) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain=1) (stream_read_fully_operations=0) (stream_read_block_read.failures=0) (stream_read_operations=1) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_operations=1) (stream_read_close_operations=1) (stream_read_vectored_incoming_ranges=2) (stream_read_exceptions=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_operations_incomplete=0) (action_http_get_request.failures=0) (stream_read_total_bytes=65686) (stream_read_seek_bytes_skipped=0) (stream_read_block_acquire_read=0) (stream_read_seek_forward_operations=0) (stream_read_seek_operations=0) (stream_aborted=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=1) (stream_read_opened=1) (action_file_opened.failures=0) (stream_read_block_read=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=3) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=6));
maximums=((action_http_get_request.max=7) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_drain.max=1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=13, mean=6.5000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:16,433 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:16,433 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,433 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,434 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=219&ts=1731778036433
2024-11-16 17:27:16,437 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,437 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,438 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=219&ts=1731778036433
2024-11-16 17:27:16,443 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:16,444 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:16,444 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:16,444 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:16,444 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:16,444 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:16,444 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:16,444 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:16,444 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:16,444 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:16,444 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:16,445 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:16,445 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:16,445 [s3a-transfer-fso-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:16,445 [s3a-transfer-fso-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,445 [s3a-transfer-fso-bucket-unbounded-pool2-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [220] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=220&ts=1731778036433
2024-11-16 17:27:16,451 [s3a-transfer-fso-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:16,451 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:27:16,451 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:16,451 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:16,451 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:16,451 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778036409; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:16,451 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:16,451 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:16,452 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:16,452 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:16,452 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:16,452 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:16,452 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:16,452 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:16,452 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,452 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,452 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:16,452 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,452 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=113&ts=1731778036433
2024-11-16 17:27:16,458 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:16,458 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:16,458 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:27:16,458 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:16,458 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:16,458 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,458 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,458 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:16,458 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,458 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000169&t0=219&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=113&ts=1731778036433
2024-11-16 17:27:16,463 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:16,463 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:16,463 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:16,463 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.011s
2024-11-16 17:27:16,463 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.011s
2024-11-16 17:27:16,463 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.019s
2024-11-16 17:27:16,463 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:16,463 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:16,464 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:16,479 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 44, active threads = 0, queued tasks = 0, completed tasks = 44], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_list=0) (stream_read_total_bytes=336767) (op_openfile=0) (committer_load_single_pending_file=0) (op_copy_from_local_file.failures=0) (stream_read_bytes_backwards_on_seek=0) (object_copy_requests=0) (action_http_head_request=98) (stream_read_version_mismatches=0) (committer_bytes_committed=0) (op_is_directory=0) (audit_request_execution=411) (fake_directories_deleted=35) (files_copied=0) (delegation_tokens_issued.failures=0) (op_create=35) (op_get_content_summary=0) (stream_write_block_uploads_aborted=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_aborted=0) (op_createfile.failures=0) (committer_commits_completed=0) (op_rename=0) (action_executor_acquired=0) (stream_read_closed=5) (op_xattr_get_map=0) (op_get_delegation_token=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain=5) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (committer_load_single_pending_file.failures=0) (object_put_request.failures=0) (multipart_upload_started=0) (audit_failure=0) (action_file_opened=28) (stream_read_fully_operations=1) (op_createfile=0) (object_delete_objects=70) (op_list_status.failures=0) (audit_access_check_failure=0) (op_xattr_list.failures=0) (stream_read_seek_bytes_skipped=0) (op_access=0) (op_xattr_get_named_map=0) (action_http_get_request.failures=1) (op_get_file_checksum.failures=0) (object_multipart_initiated.failures=0) (stream_read_bytes=10087) (object_multipart_aborted=0) (op_list_located_status=0) (op_create.failures=0) (op_xattr_get_named.failures=0) (ignored_errors=0) (op_rename.failures=0) (op_hsync=0) (op_get_file_checksum=0) (op_list_files.failures=0) (op_get_file_status.failures=0) (committer_commits_reverted=0) (directories_deleted=0) (stream_read_vectored_read_bytes_discarded=30507) (op_get_content_summary.failures=0) (committer_commits_created=0) (stream_write_total_data=4587520) (files_created=35) (committer_magic_marker_put.failures=0) (stream_read_close_operations=28) (stream_read_seek_policy_changed=30) (object_metadata_request=98) (stream_write_queue_duration.failures=0) (committer_tasks_completed=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (op_get_delegation_token.failures=0) (audit_span_creation=136) (stream_read_vectored_incoming_ranges=75) (object_list_request.failures=0) (multipart_upload_part_put_bytes=0) (action_http_get_request=34) (stream_read_seek_backward_operations=0) (op_is_file=0) (object_put_bytes=2293760) (stream_read_seek_bytes_discarded=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (committer_magic_files_created=0) (op_access.failures=0) (stream_write_block_uploads=35) (action_executor_acquired.failures=0) (op_mkdirs.failures=0) (committer_jobs_failed=0) (op_copy_from_local_file=0) (multipart_upload_abort_under_path_invoked=0) (object_continue_list_request.failures=0) (stream_read_exceptions=0) (store_io_request=411) (stream_read_operations=5) (op_create_non_recursive=0) (stream_write_block_uploads_committed=0) (op_list_files=0) (stream_read_seek_forward_operations=0) (committer_commits.failures=0) (stream_read_remote_stream_aborted.failures=0) (committer_bytes_uploaded=0) (committer_stage_file_upload.failures=0) (op_glob_status=0) (object_multipart_initiated=0) (op_exists.failures=0) (store_io_throttled=0) (files_copied_bytes=0) (store_exists_probe=0) (object_bulk_delete_request=70) (committer_stage_file_upload=0) (files_deleted=35) (object_put_request=70) (op_hflush=0) (stream_read_remote_stream_aborted=0) (store_exists_probe.failures=0) (stream_read_unbuffered=2) (multipart_upload_list.failures=0) (stream_read_bytes_discarded_in_close=326680) (op_xattr_get_named=0) (stream_write_exceptions=0) (committer_commits_aborted=0) (object_bulk_delete_request.failures=0) (object_select_requests=0) (multipart_upload_part_put=0) (store_io_retry=0) (stream_write_queue_duration=0) (committer_materialize_file.failures=0) (stream_read_opened=5) (committer_jobs_completed=0) (committer_tasks_failed=0) (op_xattr_get_named_map.failures=0) (multipart_instantiated=0) (op_xattr_list=0) (action_http_head_request.failures=0) (stream_write_bytes=2293760) (stream_aborted=0) (stream_read_vectored_combined_ranges=30) (object_delete_request=0) (op_open=28) (fake_directories_created=0) (op_is_file.failures=0) (op_abort=0) (op_xattr_get_map.failures=0) (op_mkdirs=35) (delegation_tokens_issued=0) (op_delete.failures=0) (op_glob_status.failures=0) (committer_magic_marker_put=0) (op_abort.failures=0) (committer_materialize_file=0) (object_put_request_completed=70) (object_list_request=140) (committer_commit_job=0) (op_exists=0) (directories_created=35) (committer_commit_job.failures=0) (op_is_directory.failures=0) (object_continue_list_request=0) (op_list_status=0) (stream_read_vectored_operations=23) (op_get_file_status=2) (object_delete_request.failures=0) (op_delete=35) (files_delete_rejected=0) (stream_read_seek_operations=0));
gauges=((stream_write_block_uploads_active=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=35) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_xattr_list.failures.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.min=-1) (multipart_upload_list.failures.min=-1) (action_http_head_request.min=2) (op_mkdirs.min=13) (store_exists_probe.min=-1) (op_get_file_status.min=3) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_list_files.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=6) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.min=4) (stream_read_remote_stream_aborted.failures.min=-1) (op_access.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_delete_request.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_list.min=-1) (object_put_request.min=23) (op_get_delegation_token.failures.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.min=-1) (committer_commit_job.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.failures.min=-1) (op_is_directory.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_checksum.min=-1) (object_list_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.min=-1) (op_create.min=5) (object_delete_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_file_opened.min=3) (delegation_tokens_issued.min=-1) (op_list_files.failures.min=-1) (op_is_directory.failures.min=-1) (op_delete.min=18) (object_bulk_delete_request.failures.min=-1) (op_rename.failures.min=-1) (op_exists.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_content_summary.min=-1) (object_list_request.min=4) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_abort.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.min=-1) (op_list_status.min=-1) (op_glob_status.failures.min=-1) (op_create.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_list.min=-1) (op_exists.min=-1) (op_glob_status.min=-1) (op_access.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_copy_from_local_file.min=-1) (op_is_file.min=-1) (action_http_get_request.failures.min=0) (op_xattr_get_map.min=-1) (object_multipart_aborted.min=-1) (stream_write_queue_duration.min=-1) (object_put_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.min=-1) (committer_magic_marker_put.min=-1) (op_get_content_summary.failures.min=-1));
maximums=((store_exists_probe.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named.max=-1) (op_copy_from_local_file.failures.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_abort.max=-1) (op_copy_from_local_file.max=-1) (op_is_file.max=-1) (action_http_get_request.failures.max=0) (object_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named.failures.max=-1) (op_rename.max=-1) (op_list_status.max=-1) (op_xattr_list.max=-1) (multipart_upload_list.max=-1) (committer_stage_file_upload.failures.max=-1) (op_exists.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_is_file.failures.max=-1) (action_http_head_request.max=18) (op_is_directory.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.max=-1) (op_is_directory.failures.max=-1) (op_access.max=-1) (op_xattr_list.failures.max=-1) (committer_commit_job.max=-1) (op_createfile.max=-1) (op_get_content_summary.failures.max=-1) (op_glob_status.failures.max=-1) (op_access.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (op_create.max=59) (op_get_file_checksum.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_abort.failures.max=-1) (op_delete.max=81) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_map.failures.max=-1) (object_continue_list_request.max=-1) (op_get_content_summary.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.max=-1) (action_file_opened.failures.max=-1) (op_createfile.failures.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_list_files.failures.max=-1) (op_exists.max=-1) (object_list_request.max=220) (stream_read_remote_stream_drain.max=3) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_status.failures.max=-1) (op_delete.failures.max=-1) (op_list_status.failures.max=-1) (action_http_head_request.failures.max=-1) (op_mkdirs.max=322) (op_list_files.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (op_get_file_status.max=5) (object_bulk_delete_request.max=21) (op_get_delegation_token.max=-1) (action_file_opened.max=14) (object_put_request.max=63) (op_create.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (action_http_get_request.max=35) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=140, sum=1273, mean=9.0929)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=33, sum=385, mean=11.6667)) (op_delete.mean=(samples=35, sum=1173, mean=33.5143)) (op_create.mean=(samples=35, sum=363, mean=10.3714)) (action_http_head_request.mean=(samples=98, sum=403, mean=4.1122)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=35, sum=974, mean=27.8286)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=70, sum=962, mean=13.7429)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=28, sum=128, mean=4.5714)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=70, sum=519, mean=7.4143)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:16,480 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:16,480 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,480 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,480 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,480 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,480 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000170 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000170/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000170&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=221&ts=1731778036480
2024-11-16 17:27:16,485 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,485 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,485 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,485 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,485 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,485 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000170 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000170/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000170&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=221&ts=1731778036480
2024-11-16 17:27:16,487 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,487 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:16,487 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:16,487 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:16,487 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000170 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000170/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000170&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=221&ts=1731778036480
2024-11-16 17:27:16,491 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:16,491 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:16,491 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.004s
2024-11-16 17:27:16,491 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:16,492 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,492 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,492 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,492 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,492 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000171 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000171/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000171&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=221&ts=1731778036492
2024-11-16 17:27:16,496 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:16,496 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,496 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:16,496 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15127442185388259669.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:16,497 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15127442185388259669.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (action_executor_acquired=0) (op_abort=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (object_put_request=0) (stream_write_total_data=0) (committer_magic_marker_put=0) (op_abort.failures=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (op_hsync=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15127442185388259669.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,497 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,497 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:16,497 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15127442185388259669.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:16,497 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:16,498 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:16,498 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:16,498 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:16,498 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000171 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000171/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000171&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=114&ts=1731778036492
2024-11-16 17:27:16,513 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:16,513 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:16,513 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.015s
2024-11-16 17:27:16,513 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15127442185388259669.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:16,513 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15127442185388259669.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,514 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15127442185388259669.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,514 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:16,514 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,515 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (op_abort=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (object_put_request.failures=0) (op_hflush=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (op_hsync=0) (object_put_request=1) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=15) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=15) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=15, mean=15.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:16,515 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:16,515 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,516 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,516 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:16,516 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000172 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000172/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000172&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=221&ts=1731778036515
2024-11-16 17:27:16,518 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:16,518 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:16,519 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,519 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:27:16,519 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:16,519 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:27:16,519 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:27:16,521 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,521 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,521 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,521 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,522 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000172 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000172/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-4200&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000172&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=116&ts=1731778036515
2024-11-16 17:27:16,521 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,522 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,522 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000172 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000172/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=16101-16200&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000172&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=118&ts=1731778036515
2024-11-16 17:27:16,535 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:27:16,535 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:27:16,535 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,544 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:27:16,545 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,545 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations=0) (stream_read_vectored_read_bytes_discarded=4001) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_close_operations=1) (stream_read_seek_operations=0) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_vectored_operations=1) (action_executor_acquired=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_total_bytes=300) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (action_file_opened=1) (stream_read_vectored_combined_ranges=2) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_fully_operations=0) (action_file_opened.failures=0) (stream_read_block_acquire_read=0) (stream_read_bytes=300) (action_http_get_request=2) (stream_read_vectored_incoming_ranges=3));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (action_http_get_request.min=14) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=3) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=22) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=36, mean=18.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:16,547 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:16,547 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,547 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,547 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=221&ts=1731778036547
2024-11-16 17:27:16,552 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,552 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,552 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=221&ts=1731778036547
2024-11-16 17:27:16,566 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:27:16,567 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:16,567 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:16,567 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:16,567 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:16,567 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:16,567 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:16,567 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:16,567 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:16,567 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:16,567 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:16,567 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:16,569 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:16,569 [s3a-transfer-fso-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:16,570 [s3a-transfer-fso-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,570 [s3a-transfer-fso-bucket-unbounded-pool2-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [222] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=222&ts=1731778036547
2024-11-16 17:27:16,576 [s3a-transfer-fso-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:16,576 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:27:16,576 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:16,576 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:16,576 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:16,577 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778036510; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:16,577 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:16,577 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:16,577 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:16,577 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:16,577 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:16,577 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:16,577 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:16,578 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:16,578 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,578 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,578 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:16,578 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,578 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=120&ts=1731778036547
2024-11-16 17:27:16,584 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:16,584 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:16,584 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:27:16,584 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:16,584 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:16,584 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,584 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,584 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:16,584 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,584 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000173&t0=221&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=120&ts=1731778036547
2024-11-16 17:27:16,589 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:16,589 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:16,589 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:16,589 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.012s
2024-11-16 17:27:16,589 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.012s
2024-11-16 17:27:16,589 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.022s
2024-11-16 17:27:16,590 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:16,590 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:16,592 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:16,608 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 45, active threads = 0, queued tasks = 0, completed tasks = 45], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_exists_probe.failures=0) (stream_read_seek_bytes_skipped=0) (object_list_request=144) (op_rename.failures=0) (stream_write_queue_duration.failures=0) (op_xattr_list.failures=0) (stream_read_opened=5) (op_xattr_get_named=0) (op_get_file_status.failures=0) (committer_magic_marker_put=0) (op_access.failures=0) (committer_magic_files_created=0) (object_delete_objects=72) (stream_read_seek_policy_changed=31) (object_put_request=72) (op_xattr_get_map=0) (action_http_head_request.failures=0) (op_get_delegation_token.failures=0) (object_delete_request=0) (op_rename=0) (stream_read_closed=5) (stream_write_block_uploads_aborted=0) (committer_bytes_committed=0) (object_multipart_initiated.failures=0) (stream_write_bytes=2359296) (op_xattr_get_named_map.failures=0) (files_delete_rejected=0) (audit_failure=0) (stream_write_block_uploads=36) (stream_read_version_mismatches=0) (op_get_file_checksum=0) (op_get_delegation_token=0) (stream_read_vectored_read_bytes_discarded=34508) (op_hflush=0) (op_is_file=0) (multipart_upload_started=0) (committer_jobs_completed=0) (object_bulk_delete_request.failures=0) (op_open=29) (op_copy_from_local_file=0) (object_continue_list_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (multipart_instantiated=0) (op_glob_status.failures=0) (stream_read_close_operations=29) (committer_commits_reverted=0) (committer_stage_file_upload=0) (op_get_content_summary.failures=0) (op_abort=0) (stream_read_remote_stream_drain=5) (stream_read_bytes=10387) (committer_tasks_completed=0) (op_xattr_list=0) (committer_commit_job=0) (fake_directories_created=0) (op_delete=36) (object_put_request_completed=72) (multipart_upload_completed=0) (stream_read_vectored_operations=24) (op_is_file.failures=0) (stream_write_exceptions=0) (committer_stage_file_upload.failures=0) (delegation_tokens_issued=0) (object_bulk_delete_request=72) (action_http_head_request=101) (op_create_non_recursive=0) (op_abort.failures=0) (op_create=36) (op_createfile.failures=0) (stream_write_total_time=0) (op_hsync=0) (object_select_requests=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put_bytes=0) (committer_magic_marker_put.failures=0) (stream_read_unbuffered=2) (committer_materialize_file=0) (op_is_directory=0) (stream_read_exceptions=0) (store_exists_probe=0) (stream_read_seek_backward_operations=0) (multipart_upload_aborted=0) (op_openfile=0) (op_list_files.failures=0) (object_delete_request.failures=0) (object_put_bytes=2359296) (op_exists=0) (stream_read_vectored_incoming_ranges=78) (files_copied_bytes=0) (committer_commits_created=0) (stream_read_seek_bytes_discarded=0) (op_list_status.failures=0) (store_io_request=424) (committer_bytes_uploaded=0) (action_http_get_request.failures=1) (op_get_file_checksum.failures=0) (files_copied=0) (directories_created=36) (stream_read_operations=5) (op_glob_status=0) (action_executor_acquired=0) (committer_commit_job.failures=0) (stream_read_vectored_combined_ranges=32) (committer_commits_aborted=0) (op_is_directory.failures=0) (stream_write_total_data=4718592) (multipart_upload_abort_under_path_invoked=0) (ignored_errors=0) (stream_read_operations_incomplete=0) (multipart_upload_part_put=0) (stream_read_bytes_backwards_on_seek=0) (object_put_request.failures=0) (op_xattr_get_map.failures=0) (op_delete.failures=0) (object_copy_requests=0) (object_list_request.failures=0) (stream_write_block_uploads_committed=0) (action_file_opened.failures=0) (op_get_content_summary=0) (stream_write_exceptions_completing_upload=0) (store_io_throttled=0) (directories_deleted=0) (store_io_retry=0) (committer_materialize_file.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_list_files=0) (action_http_get_request=36) (delegation_tokens_issued.failures=0) (committer_jobs_failed=0) (op_xattr_get_named.failures=0) (files_created=36) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (op_mkdirs.failures=0) (stream_read_total_bytes=337067) (audit_span_creation=140) (stream_read_seek_operations=0) (audit_request_execution=424) (multipart_upload_list=0) (committer_load_single_pending_file.failures=0) (stream_read_remote_stream_aborted=0) (object_continue_list_request=0) (op_access=0) (object_metadata_request=101) (committer_tasks_failed=0) (audit_access_check_failure=0) (op_create.failures=0) (committer_commits_completed=0) (action_file_opened=29) (stream_aborted=0) (op_createfile=0) (stream_read_seek_forward_operations=0) (files_deleted=36) (stream_write_queue_duration=0) (op_list_status=0) (fake_directories_deleted=36) (stream_read_fully_operations=1) (object_multipart_aborted=0) (stream_read_remote_stream_drain.failures=0) (op_list_located_status=0) (op_get_file_status=2) (op_copy_from_local_file.failures=0) (op_mkdirs=36) (op_xattr_get_named_map=0) (multipart_upload_list.failures=0) (op_exists.failures=0) (stream_read_bytes_discarded_in_close=326680) (committer_load_single_pending_file=0) (committer_commits.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=36) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0));
minimums=((delegation_tokens_issued.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_delete_request.min=-1) (action_executor_acquired.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_list_files.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_glob_status.min=-1) (op_xattr_get_map.min=-1) (op_is_file.min=-1) (multipart_upload_list.min=-1) (object_continue_list_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_createfile.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_abort.min=-1) (op_list_status.min=-1) (op_createfile.failures.min=-1) (op_get_delegation_token.min=-1) (op_mkdirs.min=12) (delegation_tokens_issued.min=-1) (op_exists.min=-1) (op_exists.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_head_request.min=2) (committer_commit_job.min=-1) (action_http_get_request.min=14) (object_multipart_aborted.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_create.min=5) (stream_read_remote_stream_aborted.min=-1) (object_list_request.min=4) (object_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (object_list_request.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_get_named_map.failures.min=-1) (op_abort.failures.min=-1) (op_copy_from_local_file.min=-1) (op_access.min=-1) (op_get_file_checksum.min=-1) (object_multipart_initiated.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.failures.min=-1) (op_delete.min=18) (action_executor_acquired.failures.min=-1) (op_list_files.min=-1) (op_rename.min=-1) (action_file_opened.min=3) (op_xattr_list.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.min=-1) (op_list_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_status.min=3) (action_file_opened.failures.min=-1) (committer_materialize_file.min=-1) (op_is_directory.min=-1) (committer_stage_file_upload.min=-1) (committer_commit_job.failures.min=-1) (op_rename.failures.min=-1) (action_http_get_request.failures.min=0) (stream_write_queue_duration.min=-1) (op_get_content_summary.failures.min=-1) (op_delete.failures.min=-1) (op_is_file.failures.min=-1) (store_exists_probe.failures.min=-1) (object_continue_list_request.min=-1) (op_access.failures.min=-1) (object_bulk_delete_request.min=4) (op_glob_status.failures.min=-1) (object_put_request.min=15) (op_get_content_summary.min=-1) (op_get_file_status.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_head_request.failures.min=-1) (multipart_upload_list.failures.min=-1));
maximums=((action_http_head_request.failures.max=-1) (op_list_status.max=-1) (object_delete_request.max=-1) (op_get_content_summary.max=-1) (op_is_file.failures.max=-1) (object_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_rename.max=-1) (action_file_opened.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.failures.max=-1) (op_createfile.failures.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_drain.max=3) (op_is_file.max=-1) (committer_stage_file_upload.max=-1) (op_createfile.max=-1) (action_http_get_request.failures.max=0) (op_access.failures.max=-1) (op_delete.failures.max=-1) (store_exists_probe.failures.max=-1) (op_access.max=-1) (op_is_directory.max=-1) (action_file_opened.max=14) (op_xattr_get_named_map.failures.max=-1) (op_get_delegation_token.max=-1) (op_rename.failures.max=-1) (op_create.max=59) (op_copy_from_local_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_abort.max=-1) (stream_write_queue_duration.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_exists.max=-1) (multipart_upload_list.max=-1) (op_exists.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_put_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named.max=-1) (object_delete_request.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_list.max=-1) (stream_read_remote_stream_aborted.max=-1) (multipart_upload_list.failures.max=-1) (op_is_directory.failures.max=-1) (op_abort.failures.max=-1) (op_delete.max=81) (action_executor_acquired.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_executor_acquired.max=-1) (store_exists_probe.max=-1) (op_create.failures.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_files.max=-1) (action_http_get_request.max=35) (action_http_head_request.max=18) (op_mkdirs.max=322) (delegation_tokens_issued.max=-1) (op_list_files.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_map.max=-1) (delegation_tokens_issued.failures.max=-1) (op_copy_from_local_file.max=-1) (op_glob_status.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=63) (object_list_request.max=220) (object_multipart_aborted.max=-1) (committer_commit_job.max=-1) (op_mkdirs.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.max=21) (committer_materialize_file.max=-1) (op_get_file_status.max=5));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=101, sum=412, mean=4.0792)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=29, sum=131, mean=4.5172)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=72, sum=530, mean=7.3611)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=36, sum=368, mean=10.2222)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=72, sum=981, mean=13.6250)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=35, sum=421, mean=12.0286)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=36, sum=1196, mean=33.2222)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=144, sum=1302, mean=9.0417)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=36, sum=986, mean=27.3889)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:16,609 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:16,609 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,609 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,609 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,609 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,609 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000174 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000174/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000174&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=223&ts=1731778036609
2024-11-16 17:27:16,619 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:27:16,619 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,619 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,619 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,619 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,619 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000174 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000174/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000174&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=223&ts=1731778036609
2024-11-16 17:27:16,622 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,622 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:16,622 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:16,622 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:16,622 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000174 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000174/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000174&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=223&ts=1731778036609
2024-11-16 17:27:16,627 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:16,627 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:16,627 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:16,627 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:16,627 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,628 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,628 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,628 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,628 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000175 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000175/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000175&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=223&ts=1731778036627
2024-11-16 17:27:16,633 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,633 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:16,633 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1353476394195235235.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:16,634 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1353476394195235235.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions=0) (action_executor_acquired=0) (object_put_request=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (op_abort.failures=0) (op_abort=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (object_multipart_aborted=0) (stream_write_total_data=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (op_hflush=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1353476394195235235.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,634 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,634 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:16,635 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1353476394195235235.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:16,635 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:16,635 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:16,635 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:16,635 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000175 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000175/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000175&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=122&ts=1731778036627
2024-11-16 17:27:16,636 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:16,652 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:16,652 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:16,652 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:27:16,652 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1353476394195235235.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:16,652 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1353476394195235235.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,652 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1353476394195235235.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,652 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:16,653 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,658 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted=0) (stream_write_bytes=65536) (op_abort.failures=0) (action_executor_acquired=0) (object_put_request.failures=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (op_hsync=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (object_put_request=1) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (op_hflush=0) (stream_write_total_time=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=17) (object_multipart_aborted.min=-1));
maximums=((object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=17) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:16,658 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:16,659 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,659 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,659 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:16,659 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000176 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000176/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000176&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=223&ts=1731778036659
2024-11-16 17:27:16,664 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:16,664 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:16,664 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,665 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_total_bytes=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_backward_operations=0) (stream_read_closed=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_aborted=0) (stream_read_operations_incomplete=0) (stream_read_opened=0) (stream_aborted=0) (stream_read_block_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=0) (stream_read_fully_operations=0) (stream_read_vectored_operations=0) (action_file_opened=1) (stream_read_exceptions=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=5) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=5) (stream_read_prefetch_operations.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:16,666 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:16,666 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,666 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,666 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=223&ts=1731778036666
2024-11-16 17:27:16,668 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,669 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,669 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=223&ts=1731778036666
2024-11-16 17:27:16,674 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,674 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:16,674 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:16,674 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:16,674 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:16,674 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:16,674 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:16,674 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:16,674 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:16,675 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:16,675 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:16,675 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:16,675 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:16,675 [s3a-transfer-fso-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:16,675 [s3a-transfer-fso-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,675 [s3a-transfer-fso-bucket-unbounded-pool2-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=224&ts=1731778036666
2024-11-16 17:27:16,680 [s3a-transfer-fso-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,680 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:27:16,680 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:16,681 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:16,681 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:16,681 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778036650; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:16,681 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:16,681 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:16,681 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:16,681 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:16,682 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:16,682 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:16,682 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:16,682 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,682 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,682 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:16,682 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,682 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=123&ts=1731778036666
2024-11-16 17:27:16,683 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:16,688 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:16,688 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:16,689 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:27:16,689 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:16,689 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:16,689 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,689 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,689 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:16,689 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,689 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000177&t0=223&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=123&ts=1731778036666
2024-11-16 17:27:16,694 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:16,694 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:16,694 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:16,694 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.012s
2024-11-16 17:27:16,695 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.011s
2024-11-16 17:27:16,695 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.021s
2024-11-16 17:27:16,695 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:16,695 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:16,697 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:16,709 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 46, active threads = 0, queued tasks = 0, completed tasks = 46], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_version_mismatches=0) (object_bulk_delete_request=74) (action_http_get_request=36) (stream_read_bytes_discarded_in_close=326680) (action_http_get_request.failures=1) (multipart_instantiated=0) (object_delete_objects=74) (fake_directories_deleted=37) (object_metadata_request=104) (op_is_directory=0) (op_get_content_summary=0) (audit_span_creation=144) (op_is_file.failures=0) (stream_read_operations_incomplete=0) (op_list_files.failures=0) (object_bulk_delete_request.failures=0) (committer_commits_completed=0) (committer_tasks_failed=0) (action_file_opened.failures=0) (op_access=0) (op_xattr_list=0) (op_get_file_status=2) (op_exists.failures=0) (op_rename.failures=0) (stream_read_fully_operations=1) (op_get_delegation_token.failures=0) (stream_read_vectored_read_bytes_discarded=34508) (stream_write_total_time=0) (stream_read_vectored_incoming_ranges=78) (object_multipart_aborted.failures=0) (op_access.failures=0) (delegation_tokens_issued.failures=0) (op_mkdirs.failures=0) (action_http_head_request=104) (store_exists_probe.failures=0) (op_list_status.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_abort=0) (committer_bytes_uploaded=0) (stream_read_seek_policy_changed=32) (op_list_files=0) (op_delete=37) (stream_read_seek_backward_operations=0) (stream_read_opened=5) (op_xattr_get_named=0) (committer_load_single_pending_file.failures=0) (stream_write_block_uploads_committed=0) (object_continue_list_request.failures=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named_map.failures=0) (op_is_file=0) (action_file_opened=30) (op_mkdirs=37) (stream_read_seek_operations=0) (committer_commits_created=0) (stream_read_remote_stream_drain.failures=0) (audit_failure=0) (object_select_requests=0) (committer_magic_marker_put.failures=0) (op_xattr_get_map.failures=0) (stream_write_exceptions=0) (store_io_throttled=0) (object_put_request_completed=74) (op_create.failures=0) (committer_commits_aborted=0) (committer_stage_file_upload=0) (stream_write_block_uploads_aborted=0) (multipart_upload_part_put=0) (op_get_file_checksum=0) (files_copied=0) (store_io_retry=0) (committer_jobs_completed=0) (object_put_request=74) (op_get_content_summary.failures=0) (op_xattr_list.failures=0) (committer_tasks_completed=0) (ignored_errors=0) (committer_materialize_file=0) (files_created=37) (committer_bytes_committed=0) (committer_commit_job=0) (op_delete.failures=0) (op_xattr_get_named.failures=0) (op_hflush=0) (audit_request_execution=435) (object_delete_request=0) (committer_load_single_pending_file=0) (op_get_delegation_token=0) (object_multipart_initiated=0) (op_createfile.failures=0) (object_multipart_aborted=0) (multipart_upload_list.failures=0) (committer_commits.failures=0) (stream_write_queue_duration.failures=0) (multipart_upload_aborted=0) (stream_read_vectored_operations=24) (stream_read_close_operations=30) (directories_deleted=0) (action_executor_acquired.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_total_data=4849664) (stream_read_exceptions=0) (action_executor_acquired=0) (files_copied_bytes=0) (committer_magic_files_created=0) (op_rename=0) (op_list_located_status=0) (stream_read_remote_stream_drain=5) (op_abort.failures=0) (op_glob_status=0) (object_multipart_initiated.failures=0) (op_createfile=0) (stream_write_bytes=2424832) (object_continue_list_request=0) (op_glob_status.failures=0) (object_list_request.failures=0) (stream_read_bytes=10387) (delegation_tokens_issued=0) (committer_materialize_file.failures=0) (op_openfile=0) (stream_aborted=0) (committer_magic_marker_put=0) (op_create_non_recursive=0) (files_delete_rejected=0) (op_get_file_status.failures=0) (object_put_bytes=2424832) (multipart_upload_list=0) (multipart_upload_started=0) (multipart_upload_completed=0) (committer_commit_job.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_block_uploads=37) (stream_read_closed=5) (stream_read_seek_bytes_skipped=0) (op_xattr_get_map=0) (op_create=37) (stream_read_seek_forward_operations=0) (committer_jobs_failed=0) (op_get_file_checksum.failures=0) (object_list_request=148) (store_exists_probe=0) (action_http_head_request.failures=0) (stream_read_operations=5) (stream_read_vectored_combined_ranges=32) (op_open=30) (store_io_request=435) (op_exists=0) (fake_directories_created=0) (stream_read_remote_stream_aborted=0) (stream_read_total_bytes=337067) (stream_read_bytes_discarded_in_abort=0) (op_list_status=0) (op_copy_from_local_file.failures=0) (stream_write_queue_duration=0) (object_copy_requests=0) (audit_access_check_failure=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=2) (op_copy_from_local_file=0) (object_delete_request.failures=0) (committer_commits_reverted=0) (op_xattr_get_named_map=0) (object_put_request.failures=0) (directories_created=37) (committer_stage_file_upload.failures=0) (op_is_directory.failures=0) (files_deleted=37));
gauges=((stream_write_block_uploads_pending=37) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0));
minimums=((op_xattr_get_map.failures.min=-1) (object_delete_request.failures.min=-1) (object_delete_request.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.min=-1) (multipart_upload_list.failures.min=-1) (op_is_file.min=-1) (op_is_directory.min=-1) (op_get_delegation_token.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_list.min=-1) (op_mkdirs.min=12) (op_list_files.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=5) (op_glob_status.min=-1) (store_exists_probe.failures.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.failures.min=-1) (action_http_head_request.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_head_request.min=2) (object_multipart_initiated.failures.min=-1) (op_exists.failures.min=-1) (op_get_content_summary.min=-1) (op_is_directory.failures.min=-1) (op_glob_status.failures.min=-1) (op_abort.failures.min=-1) (op_access.min=-1) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_materialize_file.min=-1) (committer_commit_job.min=-1) (committer_commit_job.failures.min=-1) (op_abort.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_http_get_request.min=14) (op_list_status.failures.min=-1) (action_file_opened.failures.min=-1) (op_delete.failures.min=-1) (op_get_file_status.min=3) (op_access.failures.min=-1) (op_list_files.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=0) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=17) (stream_read_remote_stream_drain.min=1) (object_list_request.min=4) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (op_get_file_status.failures.min=-1) (op_createfile.failures.min=-1) (op_createfile.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_status.min=-1) (op_xattr_get_named.min=-1) (stream_write_queue_duration.min=-1) (op_delete.min=18) (op_xattr_get_named.failures.min=-1) (op_xattr_get_map.min=-1) (committer_stage_file_upload.failures.min=-1) (object_put_request.failures.min=-1) (store_exists_probe.min=-1) (object_continue_list_request.min=-1) (op_create.failures.min=-1) (object_list_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.min=4) (op_create.min=5) (op_exists.min=-1));
maximums=((op_mkdirs.max=322) (op_is_file.max=-1) (action_file_opened.failures.max=-1) (op_createfile.failures.max=-1) (action_http_head_request.max=18) (object_delete_request.max=-1) (op_mkdirs.failures.max=-1) (committer_materialize_file.max=-1) (op_rename.max=-1) (committer_load_single_pending_file.max=-1) (op_access.max=-1) (op_xattr_list.max=-1) (object_list_request.max=220) (op_copy_from_local_file.max=-1) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_files.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (delegation_tokens_issued.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_directory.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_create.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_head_request.failures.max=-1) (op_get_delegation_token.max=-1) (op_list_status.max=-1) (action_file_opened.max=14) (object_bulk_delete_request.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_http_get_request.max=35) (op_glob_status.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_magic_marker_put.max=-1) (op_glob_status.max=-1) (object_multipart_aborted.failures.max=-1) (action_http_get_request.failures.max=0) (op_createfile.max=-1) (op_create.max=59) (op_xattr_get_named.max=-1) (op_abort.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_status.max=5) (stream_read_remote_stream_drain.failures.max=-1) (object_delete_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_files.max=-1) (op_list_status.failures.max=-1) (object_bulk_delete_request.max=21) (multipart_upload_list.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_content_summary.max=-1) (object_list_request.failures.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_drain.max=3) (stream_write_queue_duration.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.max=-1) (store_exists_probe.max=-1) (op_xattr_get_map.max=-1) (object_put_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_is_file.failures.max=-1) (object_continue_list_request.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_commit_job.max=-1) (object_put_request.max=63) (op_exists.max=-1) (op_delete.max=81) (op_rename.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=74, sum=541, mean=7.3108)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=37, sum=1217, mean=32.8919)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=148, sum=1327, mean=8.9662)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=74, sum=1003, mean=13.5541)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=104, sum=422, mean=4.0577)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=30, sum=136, mean=4.5333)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=37, sum=1004, mean=27.1351)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=35, sum=421, mean=12.0286)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=37, sum=375, mean=10.1351)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:16,710 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:16,710 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,710 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,710 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,710 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,710 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000178 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000178/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000178&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=225&ts=1731778036710
2024-11-16 17:27:16,715 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,715 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,716 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,716 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,716 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,716 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000178 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000178/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000178&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=225&ts=1731778036710
2024-11-16 17:27:16,718 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,718 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:16,718 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:16,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:16,719 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000178 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000178/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000178&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=225&ts=1731778036710
2024-11-16 17:27:16,723 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:16,723 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:16,724 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:27:16,724 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:16,724 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,724 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,724 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,724 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,724 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000179 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000179/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000179&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=225&ts=1731778036724
2024-11-16 17:27:16,729 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,729 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,730 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:16,730 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2332305920750615557.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:16,731 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2332305920750615557.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (object_put_request=0) (op_abort=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (stream_write_total_data=0) (committer_magic_marker_put=0) (op_abort.failures=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2332305920750615557.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,731 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,731 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:16,731 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2332305920750615557.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:16,731 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:16,732 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:16,732 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:16,732 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:16,732 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000179 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000179/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000179&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=125&ts=1731778036724
2024-11-16 17:27:16,746 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:16,746 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:16,746 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.015s
2024-11-16 17:27:16,746 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2332305920750615557.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:16,746 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2332305920750615557.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,746 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2332305920750615557.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,746 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:16,747 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,748 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (op_hflush=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (object_put_request.failures=0) (op_abort.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (op_hsync=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=14) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_put_request.max=14) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=14, mean=14.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:16,748 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:16,748 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,748 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,749 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:16,749 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000180 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000180/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000180&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=225&ts=1731778036748
2024-11-16 17:27:16,751 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:16,751 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:16,751 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,751 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:27:16,751 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:16,751 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:27:16,752 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:27:16,752 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,752 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,752 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,752 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000180 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000180/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=10-1199&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000180&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=127&ts=1731778036748
2024-11-16 17:27:16,757 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.005s
2024-11-16 17:27:16,758 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:27:16,758 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:27:16,758 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:27:16,758 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,759 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired.failures=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_incoming_ranges=4) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=315) (stream_read_closed=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (stream_aborted=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0) (action_http_get_request=1) (stream_read_vectored_operations=1) (stream_read_block_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=875) (action_http_get_request.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_combined_ranges=1) (stream_read_operations_incomplete=0) (stream_read_bytes=315) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=5) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (action_http_get_request.max=5) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=3) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:16,760 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:16,760 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,760 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,760 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=225&ts=1731778036760
2024-11-16 17:27:16,763 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,763 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,763 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=225&ts=1731778036760
2024-11-16 17:27:16,768 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,768 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:16,768 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:16,768 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:16,768 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:16,768 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:16,768 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:16,768 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:16,768 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:16,768 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:16,768 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:16,768 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:16,769 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:16,769 [s3a-transfer-fso-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:16,769 [s3a-transfer-fso-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,769 [s3a-transfer-fso-bucket-unbounded-pool2-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=226&ts=1731778036760
2024-11-16 17:27:16,773 [s3a-transfer-fso-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:16,773 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.004s
2024-11-16 17:27:16,773 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:16,773 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:16,773 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:16,774 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778036744; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:16,774 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:16,774 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:16,774 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:16,774 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:16,774 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:16,774 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:16,774 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:16,774 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:16,774 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,774 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,774 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:16,775 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,775 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=128&ts=1731778036760
2024-11-16 17:27:16,779 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:16,779 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:16,779 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:16,779 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:16,779 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:16,779 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,779 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,779 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:16,779 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,779 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000181&t0=225&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=128&ts=1731778036760
2024-11-16 17:27:16,783 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:16,784 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:16,784 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:16,784 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.010s
2024-11-16 17:27:16,784 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.010s
2024-11-16 17:27:16,784 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.016s
2024-11-16 17:27:16,784 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:16,784 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:16,785 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:16,797 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 47, active threads = 0, queued tasks = 0, completed tasks = 47], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_bytes=10702) (multipart_upload_list.failures=0) (committer_commits_aborted=0) (stream_write_total_data=4980736) (action_http_head_request.failures=0) (committer_magic_files_created=0) (op_is_directory=0) (committer_commits_completed=0) (multipart_upload_part_put=0) (files_delete_rejected=0) (committer_stage_file_upload.failures=0) (action_http_get_request.failures=1) (action_http_get_request=37) (committer_commit_job=0) (delegation_tokens_issued=0) (op_get_file_status=2) (action_executor_acquired=0) (stream_read_total_bytes=337382) (stream_read_version_mismatches=0) (object_put_request=76) (op_xattr_get_named.failures=0) (committer_materialize_file=0) (op_rename=0) (multipart_upload_part_put_bytes=0) (fake_directories_deleted=38) (stream_read_unbuffered=2) (op_list_located_status=0) (fake_directories_created=0) (stream_read_bytes_discarded_in_close=326680) (op_create_non_recursive=0) (op_xattr_get_map.failures=0) (committer_bytes_uploaded=0) (multipart_upload_list=0) (audit_access_check_failure=0) (object_list_request=152) (stream_read_close_operations=31) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (object_select_requests=0) (stream_read_exceptions=0) (op_open=31) (stream_write_block_uploads_aborted=0) (store_exists_probe.failures=0) (op_xattr_get_named=0) (op_delete.failures=0) (op_xattr_get_named_map=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (op_is_directory.failures=0) (op_list_files.failures=0) (multipart_upload_completed=0) (op_createfile=0) (committer_stage_file_upload=0) (object_delete_objects=76) (op_xattr_get_map=0) (op_create.failures=0) (stream_read_remote_stream_aborted.failures=0) (files_copied=0) (committer_tasks_failed=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=31) (committer_commit_job.failures=0) (committer_tasks_completed=0) (stream_write_bytes=2490368) (op_list_files=0) (op_mkdirs.failures=0) (stream_read_opened=5) (ignored_errors=0) (object_multipart_aborted.failures=0) (object_metadata_request=107) (op_hsync=0) (op_xattr_get_named_map.failures=0) (object_copy_requests=0) (op_list_status=0) (stream_write_total_time=0) (op_copy_from_local_file=0) (store_io_throttled=0) (object_list_request.failures=0) (stream_write_exceptions=0) (op_list_status.failures=0) (stream_write_block_uploads_committed=0) (stream_read_closed=5) (object_put_bytes=2490368) (op_hflush=0) (audit_request_execution=447) (op_copy_from_local_file.failures=0) (op_xattr_list=0) (op_get_content_summary=0) (op_is_file.failures=0) (committer_jobs_completed=0) (committer_jobs_failed=0) (multipart_upload_abort_under_path_invoked=0) (op_get_content_summary.failures=0) (stream_write_block_uploads=38) (object_delete_request.failures=0) (op_get_delegation_token.failures=0) (op_rename.failures=0) (stream_read_vectored_operations=25) (stream_read_seek_policy_changed=33) (object_multipart_aborted=0) (op_exists.failures=0) (multipart_upload_started=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (directories_deleted=0) (stream_read_seek_forward_operations=0) (op_abort=0) (object_put_request.failures=0) (object_put_request_completed=76) (committer_magic_marker_put=0) (action_http_head_request=107) (files_created=38) (action_executor_acquired.failures=0) (op_glob_status.failures=0) (committer_load_single_pending_file=0) (committer_commits.failures=0) (op_get_delegation_token=0) (stream_read_operations=5) (stream_aborted=0) (store_io_request=447) (op_create=38) (multipart_upload_aborted=0) (op_access.failures=0) (op_delete=38) (store_io_retry=0) (committer_load_single_pending_file.failures=0) (op_access=0) (object_bulk_delete_request=76) (stream_read_fully_operations=1) (op_mkdirs=38) (delegation_tokens_issued.failures=0) (stream_read_remote_stream_drain.failures=0) (files_deleted=38) (committer_commits_reverted=0) (stream_write_queue_duration.failures=0) (object_bulk_delete_request.failures=0) (op_is_file=0) (committer_materialize_file.failures=0) (action_file_opened.failures=0) (op_exists=0) (object_delete_request=0) (stream_read_vectored_read_bytes_discarded=35383) (op_openfile=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (audit_failure=0) (committer_bytes_committed=0) (stream_read_vectored_combined_ranges=33) (stream_read_bytes_discarded_in_abort=0) (op_xattr_list.failures=0) (object_continue_list_request.failures=0) (op_get_file_status.failures=0) (object_multipart_initiated.failures=0) (audit_span_creation=148) (directories_created=38) (committer_commits_created=0) (op_get_file_checksum=0) (store_exists_probe=0) (op_abort.failures=0) (stream_read_remote_stream_drain=5) (op_createfile.failures=0) (object_continue_list_request=0) (op_get_file_checksum.failures=0) (files_copied_bytes=0) (stream_read_vectored_incoming_ranges=82) (op_glob_status=0) (stream_read_seek_bytes_skipped=0) (multipart_instantiated=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_write_block_uploads_pending=38) (stream_read_active_memory_in_use=0));
minimums=((object_list_request.min=4) (committer_magic_marker_put.min=-1) (op_list_files.min=-1) (op_get_content_summary.min=-1) (object_put_request.failures.min=-1) (op_createfile.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_copy_from_local_file.min=-1) (op_is_file.failures.min=-1) (op_access.min=-1) (action_file_opened.min=3) (object_multipart_aborted.failures.min=-1) (op_createfile.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_status.failures.min=-1) (object_multipart_initiated.failures.min=-1) (delegation_tokens_issued.min=-1) (op_glob_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_delete.min=16) (op_get_file_checksum.failures.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_glob_status.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_is_directory.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (op_create.min=5) (action_executor_acquired.failures.min=-1) (multipart_upload_list.min=-1) (action_http_head_request.min=2) (object_continue_list_request.min=-1) (object_delete_request.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_list.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_list.min=-1) (op_rename.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_file_status.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_stage_file_upload.min=-1) (op_abort.failures.min=-1) (action_http_get_request.failures.min=0) (op_copy_from_local_file.failures.min=-1) (op_get_delegation_token.min=-1) (op_exists.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_put_request.min=14) (object_bulk_delete_request.min=4) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named.min=-1) (committer_materialize_file.min=-1) (op_get_content_summary.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_commit_job.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.min=12) (op_list_status.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_abort.min=-1) (op_access.failures.min=-1) (op_rename.min=-1) (store_exists_probe.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_delegation_token.failures.min=-1) (action_file_opened.failures.min=-1) (store_exists_probe.min=-1) (action_http_get_request.min=5) (object_delete_request.failures.min=-1) (op_get_file_status.min=3) (op_mkdirs.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_file.min=-1) (op_xattr_get_named_map.min=-1));
maximums=((op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (op_get_content_summary.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.max=-1) (op_create.failures.max=-1) (op_list_files.max=-1) (object_put_request.max=63) (object_continue_list_request.max=-1) (op_abort.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_file.max=-1) (action_http_head_request.max=18) (op_xattr_get_map.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_exists.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_access.max=-1) (object_list_request.max=220) (multipart_upload_list.max=-1) (object_put_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_get_request.max=35) (op_xattr_get_map.max=-1) (committer_materialize_file.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.max=3) (delegation_tokens_issued.max=-1) (store_exists_probe.failures.max=-1) (action_executor_acquired.max=-1) (op_createfile.max=-1) (object_multipart_aborted.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_delete.max=81) (op_get_file_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.max=-1) (op_list_status.max=-1) (op_list_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.max=5) (op_get_delegation_token.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_delete.failures.max=-1) (op_rename.max=-1) (committer_commit_job.max=-1) (committer_materialize_file.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_http_get_request.failures.max=0) (action_file_opened.max=14) (op_createfile.failures.max=-1) (op_glob_status.max=-1) (multipart_upload_list.failures.max=-1) (op_create.max=59) (op_list_files.failures.max=-1) (object_bulk_delete_request.max=21) (object_delete_request.failures.max=-1) (op_abort.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.failures.max=-1) (action_file_opened.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.max=322) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_directory.max=-1) (op_xattr_get_named.max=-1) (op_exists.max=-1) (committer_stage_file_upload.max=-1) (op_access.failures.max=-1) (object_multipart_aborted.max=-1) (object_continue_list_request.failures.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_directory.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=76, sum=1021, mean=13.4342)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=38, sum=381, mean=10.0263)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=38, sum=1233, mean=32.4474)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=31, sum=139, mean=4.4839)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=76, sum=549, mean=7.2237)) (action_http_get_request.mean=(samples=36, sum=426, mean=11.8333)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=107, sum=428, mean=4.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=152, sum=1346, mean=8.8553)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=38, sum=1018, mean=26.7895)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:16,797 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:16,797 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,798 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,798 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,798 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,798 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000182 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000182/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000182&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=227&ts=1731778036797
2024-11-16 17:27:16,802 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:16,802 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,802 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,802 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,802 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,802 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000182 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000182/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000182&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=227&ts=1731778036797
2024-11-16 17:27:16,805 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,805 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:16,805 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:16,805 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:16,805 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000182 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000182/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000182&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=227&ts=1731778036797
2024-11-16 17:27:16,809 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:16,810 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:16,810 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:16,810 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:16,811 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,811 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,812 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,812 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,812 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000183 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000183/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000183&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=227&ts=1731778036811
2024-11-16 17:27:16,817 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,817 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,818 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:16,818 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5044228354575593383.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:16,819 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5044228354575593383.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (action_executor_acquired=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (op_hflush=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (op_abort=0) (object_multipart_initiated.failures=0) (op_hsync=0) (object_put_request=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5044228354575593383.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,819 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,819 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:16,819 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5044228354575593383.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:16,819 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:16,819 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:16,820 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:16,820 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000183 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000183/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000183&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=130&ts=1731778036811
2024-11-16 17:27:16,821 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:16,840 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:16,840 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:16,840 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.021s
2024-11-16 17:27:16,840 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5044228354575593383.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:16,840 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5044228354575593383.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,840 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5044228354575593383.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,840 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:16,841 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,841 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (op_hflush=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (op_abort=0) (op_hsync=0) (op_abort.failures=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (object_put_request=1) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (stream_write_total_time=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.min=20) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=20) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=20, mean=20.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:16,841 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:16,842 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,842 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,842 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:16,842 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000184 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000184/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000184&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=227&ts=1731778036842
2024-11-16 17:27:16,845 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:16,845 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:16,845 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,845 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:27:16,845 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:16,846 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:27:16,846 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,846 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,846 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,846 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000184 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000184/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-7998&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000184&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=132&ts=1731778036842
2024-11-16 17:27:16,847 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:27:16,853 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.007s
2024-11-16 17:27:16,853 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:27:16,853 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:27:16,854 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,855 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=3) (action_file_opened=1) (stream_read_operations_incomplete=0) (stream_read_close_operations=1) (action_http_get_request=1) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (action_executor_acquired.failures=0) (stream_read_seek_forward_operations=0) (stream_read_total_bytes=300) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=7699) (stream_read_version_mismatches=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_operations=1) (stream_read_seek_bytes_skipped=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired=0) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_aborted=0) (stream_read_unbuffered=0) (stream_read_bytes=300) (stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_closed=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_fully_operations=0) (stream_read_block_read=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=7) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=3) (stream_read_block_acquire_read.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=7) (action_file_opened.max=3) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:16,855 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:16,855 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,855 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,856 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=227&ts=1731778036855
2024-11-16 17:27:16,859 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,859 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,859 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=227&ts=1731778036855
2024-11-16 17:27:16,865 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:16,865 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:16,865 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:16,865 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:16,865 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:16,865 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:16,865 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:16,865 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:16,866 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:16,866 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:16,866 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:16,866 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:16,871 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:16,871 [s3a-transfer-fso-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:16,871 [s3a-transfer-fso-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,871 [s3a-transfer-fso-bucket-unbounded-pool2-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=228&ts=1731778036855
2024-11-16 17:27:16,876 [s3a-transfer-fso-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,877 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:27:16,877 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:16,877 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:16,877 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:16,877 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778036838; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:16,877 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:16,877 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:16,878 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:16,878 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:16,878 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:16,878 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:16,878 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:16,878 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,878 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,878 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:16,878 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,879 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=133&ts=1731778036855
2024-11-16 17:27:16,880 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:16,884 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:16,884 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:16,884 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:27:16,884 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:16,884 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:16,884 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,884 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,884 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:16,884 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,884 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000185&t0=227&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=133&ts=1731778036855
2024-11-16 17:27:16,888 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:16,888 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.004s
2024-11-16 17:27:16,888 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.004s
2024-11-16 17:27:16,889 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.011s
2024-11-16 17:27:16,889 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.009s
2024-11-16 17:27:16,889 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.023s
2024-11-16 17:27:16,889 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:16,889 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:16,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:16,901 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 48, active threads = 0, queued tasks = 0, completed tasks = 48], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_total_time=0) (action_executor_acquired=0) (op_abort.failures=0) (op_open=32) (stream_read_vectored_incoming_ranges=85) (store_io_retry=0) (stream_write_queue_duration.failures=0) (stream_read_unbuffered=2) (stream_read_seek_operations=0) (op_is_file.failures=0) (stream_read_vectored_read_bytes_discarded=43082) (object_bulk_delete_request=78) (committer_commits_completed=0) (committer_stage_file_upload=0) (op_exists=0) (directories_deleted=0) (files_copied_bytes=0) (store_io_throttled=0) (op_xattr_get_named_map=0) (audit_access_check_failure=0) (multipart_upload_part_put=0) (object_put_bytes=2555904) (audit_span_creation=152) (stream_read_bytes=11002) (stream_read_remote_stream_aborted=0) (committer_magic_files_created=0) (object_continue_list_request.failures=0) (committer_materialize_file=0) (committer_commits_reverted=0) (op_xattr_get_map=0) (files_created=39) (object_delete_objects=78) (multipart_upload_aborted=0) (stream_read_vectored_combined_ranges=34) (committer_commits_created=0) (op_is_directory.failures=0) (files_copied=0) (stream_read_fully_operations=1) (object_bulk_delete_request.failures=0) (committer_jobs_completed=0) (op_access=0) (stream_write_bytes=2555904) (committer_tasks_failed=0) (op_mkdirs.failures=0) (op_is_directory=0) (op_rename=0) (op_delete=39) (audit_request_execution=459) (object_delete_request.failures=0) (object_put_request_completed=78) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (op_create.failures=0) (stream_write_block_uploads_committed=0) (stream_read_seek_policy_changed=34) (stream_write_queue_duration=0) (object_delete_request=0) (op_glob_status=0) (object_multipart_aborted=0) (op_createfile.failures=0) (stream_read_remote_stream_aborted.failures=0) (multipart_instantiated=0) (op_xattr_list.failures=0) (stream_read_vectored_operations=26) (op_copy_from_local_file=0) (op_xattr_get_named_map.failures=0) (audit_failure=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0) (op_get_file_checksum.failures=0) (op_abort=0) (object_multipart_initiated=0) (op_exists.failures=0) (delegation_tokens_issued=0) (op_createfile=0) (committer_bytes_uploaded=0) (fake_directories_deleted=39) (action_http_head_request=110) (object_select_requests=0) (files_deleted=39) (action_file_opened=32) (op_create=39) (store_io_request=459) (directories_created=39) (committer_commits_aborted=0) (object_multipart_initiated.failures=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named=0) (committer_materialize_file.failures=0) (object_copy_requests=0) (action_file_opened.failures=0) (stream_write_exceptions_completing_upload=0) (object_list_request=156) (op_get_delegation_token=0) (op_mkdirs=39) (files_delete_rejected=0) (object_put_request=78) (op_get_file_status=2) (op_list_files=0) (stream_read_close_operations=32) (store_exists_probe.failures=0) (stream_read_opened=5) (stream_read_remote_stream_drain=5) (multipart_upload_list=0) (committer_commit_job=0) (op_hsync=0) (op_xattr_get_named.failures=0) (op_list_located_status=0) (delegation_tokens_issued.failures=0) (stream_read_bytes_discarded_in_close=326680) (op_hflush=0) (stream_read_total_bytes=337682) (committer_magic_marker_put=0) (committer_load_single_pending_file.failures=0) (committer_commit_job.failures=0) (op_xattr_get_map.failures=0) (op_copy_from_local_file.failures=0) (committer_load_single_pending_file=0) (multipart_upload_abort_under_path_invoked=0) (op_is_file=0) (stream_read_exceptions=0) (stream_write_exceptions=0) (multipart_upload_started=0) (op_get_content_summary.failures=0) (stream_read_seek_bytes_skipped=0) (store_exists_probe=0) (object_continue_list_request=0) (op_create_non_recursive=0) (op_get_file_status.failures=0) (stream_read_seek_backward_operations=0) (object_list_request.failures=0) (stream_read_closed=5) (op_list_files.failures=0) (stream_write_total_data=5111808) (object_multipart_aborted.failures=0) (object_metadata_request=110) (committer_bytes_committed=0) (op_list_status.failures=0) (committer_magic_marker_put.failures=0) (committer_jobs_failed=0) (multipart_upload_completed=0) (action_http_get_request.failures=1) (committer_commits.failures=0) (action_http_get_request=38) (op_list_status=0) (op_openfile=0) (op_glob_status.failures=0) (fake_directories_created=0) (op_delete.failures=0) (ignored_errors=0) (multipart_upload_part_put_bytes=0) (stream_write_block_uploads_aborted=0) (stream_read_version_mismatches=0) (op_get_content_summary=0) (op_access.failures=0) (multipart_upload_list.failures=0) (committer_stage_file_upload.failures=0) (stream_read_operations_incomplete=0) (action_executor_acquired.failures=0) (op_get_delegation_token.failures=0) (op_get_file_checksum=0) (op_rename.failures=0) (op_xattr_list=0) (stream_write_block_uploads=39) (object_put_request.failures=0) (committer_tasks_completed=0) (stream_read_operations=5) (action_http_head_request.failures=0) (stream_aborted=0));
gauges=((client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=39) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0));
minimums=((op_get_file_status.failures.min=-1) (op_is_file.min=-1) (object_list_request.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.min=4) (committer_materialize_file.min=-1) (op_mkdirs.failures.min=-1) (op_get_content_summary.min=-1) (object_multipart_initiated.failures.min=-1) (op_create.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.min=3) (op_create.min=5) (op_createfile.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_glob_status.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.failures.min=-1) (object_delete_request.min=-1) (action_file_opened.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.min=-1) (action_file_opened.min=3) (op_rename.min=-1) (delegation_tokens_issued.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_map.min=-1) (op_delete.failures.min=-1) (action_http_get_request.failures.min=0) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.failures.min=-1) (op_get_file_checksum.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_list.min=-1) (object_multipart_aborted.min=-1) (op_list_status.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.min=12) (op_xattr_list.min=-1) (op_xattr_list.failures.min=-1) (object_put_request.min=20) (op_xattr_get_named_map.min=-1) (op_list_files.min=-1) (committer_commit_job.min=-1) (object_list_request.min=4) (action_http_head_request.min=2) (op_copy_from_local_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_get_request.min=7) (op_rename.failures.min=-1) (object_put_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_access.min=-1) (op_access.failures.min=-1) (op_exists.min=-1) (action_http_head_request.failures.min=-1) (op_abort.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.failures.min=-1) (op_delete.min=16) (store_exists_probe.failures.min=-1) (op_glob_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.failures.min=-1) (op_list_status.min=-1) (op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.min=-1));
maximums=((op_list_files.failures.max=-1) (op_copy_from_local_file.max=-1) (op_delete.max=81) (object_multipart_aborted.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_commit_job.failures.max=-1) (op_is_directory.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_executor_acquired.max=-1) (op_list_status.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_status.failures.max=-1) (op_exists.max=-1) (op_copy_from_local_file.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_list.max=-1) (op_list_files.max=-1) (object_put_request.failures.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_aborted.max=-1) (store_exists_probe.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_drain.max=3) (multipart_upload_list.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_checksum.max=-1) (action_file_opened.failures.max=-1) (op_create.failures.max=-1) (action_http_get_request.failures.max=0) (committer_magic_marker_put.failures.max=-1) (op_createfile.failures.max=-1) (object_continue_list_request.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.max=21) (action_file_opened.max=14) (object_multipart_initiated.max=-1) (committer_commit_job.max=-1) (object_delete_request.failures.max=-1) (op_mkdirs.max=322) (op_is_file.failures.max=-1) (op_rename.max=-1) (op_createfile.max=-1) (action_http_head_request.max=18) (object_list_request.max=220) (stream_read_remote_stream_aborted.max=-1) (op_get_file_status.max=5) (op_xattr_get_map.max=-1) (op_xattr_get_named.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.max=-1) (op_access.max=-1) (committer_stage_file_upload.max=-1) (multipart_upload_list.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.max=-1) (op_get_delegation_token.max=-1) (op_rename.failures.max=-1) (op_create.max=59) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_list_request.failures.max=-1) (object_put_request.max=63) (op_mkdirs.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_directory.max=-1) (object_bulk_delete_request.failures.max=-1) (op_abort.max=-1) (op_access.failures.max=-1) (op_abort.failures.max=-1) (action_http_get_request.max=35) (op_xattr_get_named_map.max=-1) (op_xattr_get_map.failures.max=-1) (op_exists.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_status.failures.max=-1) (op_get_file_checksum.failures.max=-1));
means=((committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=110, sum=438, mean=3.9818)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=78, sum=1045, mean=13.3974)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=156, sum=1366, mean=8.7564)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=39, sum=388, mean=9.9487)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=37, sum=433, mean=11.7027)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=78, sum=558, mean=7.1538)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=32, sum=142, mean=4.4375)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=39, sum=1032, mean=26.4615)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=39, sum=1257, mean=32.2308)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:16,901 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:16,902 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,902 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,902 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,902 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,902 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000186 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000186/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000186&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=229&ts=1731778036901
2024-11-16 17:27:16,907 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:16,908 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,908 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,908 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000186 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000186/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000186&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=229&ts=1731778036901
2024-11-16 17:27:16,910 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:16,910 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:16,910 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:16,911 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:16,911 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000186 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000186/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000186&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=229&ts=1731778036901
2024-11-16 17:27:16,915 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:16,915 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:16,915 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:16,915 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:16,916 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,916 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,916 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,916 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,916 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000187 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000187/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000187&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=229&ts=1731778036916
2024-11-16 17:27:16,921 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:16,921 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,921 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:16,922 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5401488980474609448.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:16,922 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5401488980474609448.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (stream_write_total_data=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (op_abort=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (object_put_request=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (stream_write_total_time=0) (object_put_request.failures=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5401488980474609448.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,923 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,923 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:16,923 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5401488980474609448.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:16,923 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:16,923 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:16,923 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:16,923 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000187 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000187/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000187&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=135&ts=1731778036916
2024-11-16 17:27:16,924 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:16,939 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:16,939 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:16,939 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.016s
2024-11-16 17:27:16,940 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5401488980474609448.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:16,940 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5401488980474609448.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,940 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5401488980474609448.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:16,940 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:16,940 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:16,941 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request.failures=0) (committer_magic_marker_put=0) (op_abort=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (multipart_upload_part_put.failures=0) (object_put_request=1) (object_multipart_initiated.failures=0) (op_hsync=0) (stream_write_exceptions=0) (stream_write_total_data=65536) (op_hflush=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=16) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (object_put_request.max=16) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=16, mean=16.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:16,942 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:16,943 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:16,943 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:16,943 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:16,943 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=229&ts=1731778036942
2024-11-16 17:27:16,946 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:16,947 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:16,947 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,947 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:16,947 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:16,947 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:27:16,948 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,948 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,948 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,948 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=1947-2046&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=134&ts=1731778036942
2024-11-16 17:27:16,948 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:27:16,948 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,949 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,949 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,948 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,949 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:16,949 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:16,949 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=8192-14435&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=142&ts=1731778036942
2024-11-16 17:27:16,949 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=40960-41983&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000188&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=144&ts=1731778036942
2024-11-16 17:27:16,968 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:27:16,969 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,969 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.021s
2024-11-16 17:27:16,970 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.021s
2024-11-16 17:27:16,970 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:27:16,971 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,971 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:27:16,971 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:16,971 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_fully_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_exceptions=0) (stream_read_seek_policy_changed=1) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_aborted=0) (stream_read_version_mismatches=0) (action_http_get_request=3) (action_file_opened=1) (stream_read_closed=0) (stream_read_bytes=1424) (stream_read_vectored_incoming_ranges=5) (stream_read_vectored_operations=1) (stream_read_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=3) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=1424) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_vectored_read_bytes_discarded=5944) (action_file_opened.failures=0) (stream_read_block_read=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_skipped=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (stream_read_operations_incomplete=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=5) (action_file_opened.failures.min=-1) (action_http_get_request.min=19) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((action_http_get_request.failures.max=-1) (action_file_opened.max=5) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=21) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=61, mean=20.3333)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:16,973 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:16,973 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:16,973 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:16,973 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=229&ts=1731778036973
2024-11-16 17:27:16,977 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:16,977 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,977 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=229&ts=1731778036973
2024-11-16 17:27:16,983 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:16,983 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:16,983 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:16,983 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:16,983 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:16,983 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:16,983 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:16,983 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:16,983 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:16,983 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:16,983 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:16,983 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:16,984 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:16,984 [s3a-transfer-fso-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:16,984 [s3a-transfer-fso-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:16,984 [s3a-transfer-fso-bucket-unbounded-pool2-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [235] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=235&ts=1731778036973
2024-11-16 17:27:16,990 [s3a-transfer-fso-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:16,996 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:27:16,997 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:16,997 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:16,997 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:16,997 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778036936; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:16,997 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:16,997 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:16,997 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:16,997 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:16,997 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:16,997 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:16,997 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:16,997 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:16,997 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:16,998 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:16,998 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:16,998 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:16,998 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=145&ts=1731778036973
2024-11-16 17:27:17,005 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:27:17,005 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:27:17,005 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:27:17,005 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:17,005 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:17,005 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,005 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,005 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:17,006 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,006 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000189&t0=229&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=145&ts=1731778036973
2024-11-16 17:27:17,011 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:17,011 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:17,011 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:27:17,012 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:27:17,012 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:27:17,012 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.029s
2024-11-16 17:27:17,012 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:17,012 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:17,014 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:17,025 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 49, active threads = 0, queued tasks = 0, completed tasks = 49], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_closed=5) (stream_read_vectored_combined_ranges=37) (committer_tasks_failed=0) (op_copy_from_local_file.failures=0) (stream_read_total_bytes=339106) (op_xattr_get_named=0) (stream_read_remote_stream_aborted.failures=0) (object_put_request=80) (op_xattr_list=0) (committer_tasks_completed=0) (stream_write_block_uploads_aborted=0) (stream_read_bytes=12426) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (action_http_get_request.failures=1) (directories_created=40) (committer_commits_aborted=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (multipart_upload_aborted=0) (op_is_directory=0) (stream_read_seek_operations=0) (action_executor_acquired.failures=0) (committer_materialize_file.failures=0) (object_bulk_delete_request.failures=0) (stream_write_total_data=5242880) (stream_read_exceptions=0) (op_list_status=0) (stream_read_vectored_read_bytes_discarded=49026) (fake_directories_created=0) (stream_write_queue_duration.failures=0) (op_exists.failures=0) (op_open=33) (ignored_errors=0) (store_exists_probe.failures=0) (op_createfile.failures=0) (op_glob_status=0) (stream_read_opened=5) (audit_request_execution=473) (stream_read_seek_bytes_discarded=0) (committer_magic_marker_put=0) (multipart_upload_abort_under_path_invoked=0) (committer_jobs_completed=0) (stream_write_total_time=0) (store_io_request=473) (op_is_file=0) (directories_deleted=0) (object_continue_list_request.failures=0) (op_get_file_status=2) (committer_magic_files_created=0) (committer_stage_file_upload=0) (op_list_files.failures=0) (op_get_content_summary=0) (op_get_file_checksum.failures=0) (op_delete.failures=0) (stream_read_version_mismatches=0) (op_mkdirs.failures=0) (committer_load_single_pending_file=0) (op_delete=40) (stream_aborted=0) (object_delete_request=0) (op_xattr_get_map=0) (object_multipart_initiated.failures=0) (action_http_head_request=113) (stream_write_queue_duration=0) (op_xattr_get_named_map.failures=0) (stream_read_seek_forward_operations=0) (multipart_instantiated=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations=5) (op_createfile=0) (committer_commit_job.failures=0) (op_is_directory.failures=0) (object_put_request_completed=80) (object_multipart_initiated=0) (object_delete_request.failures=0) (audit_span_creation=156) (audit_access_check_failure=0) (object_put_request.failures=0) (stream_read_close_operations=33) (stream_write_block_uploads_committed=0) (op_create=40) (object_select_requests=0) (op_xattr_get_named.failures=0) (multipart_upload_started=0) (op_rename.failures=0) (committer_commits_completed=0) (stream_read_seek_backward_operations=0) (action_file_opened=33) (op_get_file_status.failures=0) (files_copied_bytes=0) (multipart_upload_list.failures=0) (stream_read_remote_stream_drain=5) (op_list_located_status=0) (op_access.failures=0) (delegation_tokens_issued.failures=0) (multipart_upload_completed=0) (object_list_request=160) (op_copy_from_local_file=0) (action_http_get_request=41) (op_abort=0) (fake_directories_deleted=40) (multipart_upload_list=0) (stream_read_bytes_backwards_on_seek=0) (action_http_head_request.failures=0) (stream_read_fully_operations=1) (files_delete_rejected=0) (files_deleted=40) (op_mkdirs=40) (op_rename=0) (committer_commit_job=0) (op_hsync=0) (op_abort.failures=0) (object_continue_list_request=0) (op_hflush=0) (stream_read_seek_policy_changed=35) (op_exists=0) (op_glob_status.failures=0) (op_openfile=0) (op_xattr_get_named_map=0) (op_get_delegation_token.failures=0) (store_io_retry=0) (object_multipart_aborted=0) (op_xattr_get_map.failures=0) (committer_commits_created=0) (committer_bytes_uploaded=0) (stream_read_vectored_incoming_ranges=90) (op_is_file.failures=0) (object_put_bytes=2621440) (op_get_file_checksum=0) (op_list_files=0) (committer_commits_reverted=0) (store_io_throttled=0) (object_metadata_request=113) (op_create_non_recursive=0) (audit_failure=0) (committer_magic_marker_put.failures=0) (op_get_delegation_token=0) (files_copied=0) (op_list_status.failures=0) (delegation_tokens_issued=0) (object_list_request.failures=0) (op_access=0) (stream_read_vectored_operations=27) (committer_commits.failures=0) (files_created=40) (op_xattr_list.failures=0) (committer_load_single_pending_file.failures=0) (committer_bytes_committed=0) (stream_write_block_uploads=40) (stream_read_unbuffered=2) (object_bulk_delete_request=80) (stream_write_exceptions=0) (stream_read_remote_stream_drain.failures=0) (op_create.failures=0) (multipart_upload_part_put_bytes=0) (committer_jobs_failed=0) (committer_materialize_file=0) (stream_write_bytes=2621440) (object_copy_requests=0) (store_exists_probe=0) (committer_stage_file_upload.failures=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_close=326680) (object_delete_objects=80) (stream_read_bytes_discarded_in_abort=0) (op_get_content_summary.failures=0) (multipart_upload_part_put=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=40) (object_put_request_active=0));
minimums=((op_list_files.failures.min=-1) (op_xattr_get_map.min=-1) (op_exists.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_content_summary.failures.min=-1) (action_file_opened.min=5) (committer_commit_job.min=-1) (committer_commit_job.failures.min=-1) (object_delete_request.failures.min=-1) (op_list_status.failures.min=-1) (op_abort.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.failures.min=-1) (op_mkdirs.failures.min=-1) (op_delete.min=16) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_file_status.min=3) (delegation_tokens_issued.min=-1) (op_access.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_abort.failures.min=-1) (object_bulk_delete_request.min=4) (object_multipart_aborted.min=-1) (multipart_upload_list.min=-1) (op_is_directory.min=-1) (store_exists_probe.failures.min=-1) (store_exists_probe.min=-1) (object_put_request.min=16) (op_get_file_checksum.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_list.min=-1) (op_list_files.min=-1) (stream_write_queue_duration.min=-1) (committer_magic_marker_put.min=-1) (object_continue_list_request.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_get_map.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_rename.failures.min=-1) (action_file_opened.failures.min=-1) (object_put_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_http_head_request.min=2) (committer_stage_file_upload.failures.min=-1) (action_http_head_request.failures.min=-1) (op_mkdirs.min=12) (op_get_file_checksum.min=-1) (action_executor_acquired.min=-1) (op_create.failures.min=-1) (object_delete_request.min=-1) (op_createfile.min=-1) (op_exists.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.min=-1) (op_glob_status.failures.min=-1) (op_is_file.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_get_request.failures.min=0) (op_xattr_get_named_map.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_create.min=5) (op_createfile.failures.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=19) (op_xattr_get_named.min=-1) (op_xattr_list.failures.min=-1) (op_get_content_summary.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_materialize_file.failures.min=-1) (op_glob_status.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_status.min=-1) (object_list_request.min=4) (op_rename.min=-1) (op_get_delegation_token.min=-1) (object_multipart_initiated.min=-1));
maximums=((op_get_content_summary.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_mkdirs.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_list.max=-1) (object_put_request.max=63) (op_list_files.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named.max=-1) (object_multipart_initiated.max=-1) (op_get_file_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named_map.max=-1) (op_rename.max=-1) (committer_materialize_file.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.max=18) (committer_commit_job.failures.max=-1) (object_list_request.max=220) (op_exists.max=-1) (committer_commit_job.max=-1) (op_is_file.failures.max=-1) (op_create.max=59) (committer_load_single_pending_file.failures.max=-1) (op_delete.max=81) (store_exists_probe.max=-1) (object_bulk_delete_request.max=21) (committer_materialize_file.max=-1) (op_createfile.max=-1) (object_multipart_initiated.failures.max=-1) (op_glob_status.failures.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_aborted.failures.max=-1) (committer_stage_file_upload.max=-1) (op_mkdirs.max=322) (stream_read_remote_stream_drain.max=3) (action_http_get_request.failures.max=0) (stream_read_remote_stream_drain.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_delegation_token.max=-1) (op_list_status.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_file.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.max=5) (op_delete.failures.max=-1) (op_is_directory.max=-1) (op_get_delegation_token.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (action_file_opened.max=14) (op_abort.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_status.max=-1) (op_xattr_list.failures.max=-1) (op_rename.failures.max=-1) (committer_magic_marker_put.max=-1) (object_delete_request.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_aborted.max=-1) (op_exists.failures.max=-1) (op_access.failures.max=-1) (object_put_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_directory.failures.max=-1) (object_list_request.failures.max=-1) (op_create.failures.max=-1) (object_continue_list_request.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_files.max=-1) (op_xattr_get_map.max=-1) (action_http_get_request.max=35) (committer_magic_marker_put.failures.max=-1) (op_access.max=-1) (op_get_content_summary.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=40, sum=494, mean=12.3500)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=80, sum=570, mean=7.1250)) (op_delete.mean=(samples=40, sum=1286, mean=32.1500)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=40, sum=394, mean=9.8500)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=40, sum=1047, mean=26.1750)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=160, sum=1388, mean=8.6750)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=80, sum=1065, mean=13.3125)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=7, mean=1.4000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=113, sum=447, mean=3.9558)) (action_file_opened.mean=(samples=33, sum=147, mean=4.4545)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:17,025 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:17,025 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,025 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,025 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,025 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,025 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000190 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000190/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000190&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=236&ts=1731778037025
2024-11-16 17:27:17,030 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:17,030 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,031 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,031 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,031 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,031 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000190 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000190/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000190&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=236&ts=1731778037025
2024-11-16 17:27:17,033 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,034 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:17,034 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:17,034 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:17,034 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000190 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000190/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000190&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=236&ts=1731778037025
2024-11-16 17:27:17,042 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:17,042 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:17,042 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:27:17,043 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:17,044 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,044 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,044 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,044 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,045 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000191 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000191/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000191&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=236&ts=1731778037044
2024-11-16 17:27:17,051 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:17,051 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,052 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:17,052 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-179570357397748781.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:17,054 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-179570357397748781.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (op_abort=0) (object_multipart_aborted.failures=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (object_put_request=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-179570357397748781.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,054 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,054 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:17,054 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-179570357397748781.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:17,055 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:17,055 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:17,055 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:17,055 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:17,055 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000191 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000191/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000191&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=147&ts=1731778037044
2024-11-16 17:27:17,070 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:17,070 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:17,071 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.016s
2024-11-16 17:27:17,071 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-179570357397748781.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:17,071 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-179570357397748781.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,071 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-179570357397748781.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,071 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:17,071 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,072 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (object_multipart_aborted.failures=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (action_executor_acquired=0) (object_put_request=1) (stream_write_total_data=65536) (op_abort=0) (op_hsync=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.failures.min=-1) (object_put_request.min=15) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=15) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=15, mean=15.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:17,072 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:17,073 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,073 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,074 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:17,074 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000192 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000192/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000192&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=236&ts=1731778037073
2024-11-16 17:27:17,076 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:17,076 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:17,077 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,077 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:27:17,077 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:27:17,077 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:27:17,077 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:27:17,077 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:17,077 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:27:17,077 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,077 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,077 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:27:17,078 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000192 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000192/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=100-199&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000192&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=149&ts=1731778037073
2024-11-16 17:27:17,078 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000192 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000192/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=100-65535&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000192&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=236&ts=1731778037073
2024-11-16 17:27:17,090 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.013s
2024-11-16 17:27:17,090 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.013s
2024-11-16 17:27:17,090 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:27:17,090 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:27:17,090 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:27:17,090 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:27:17,090 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:27:17,090 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7536 bytes
2024-11-16 17:27:17,090 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:17,090 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:17,091 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:27:17,091 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8648 bytes
2024-11-16 17:27:17,091 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:27:17,091 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:27:17,090 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:17,091 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_fully_operations=1) (stream_read_version_mismatches=0) (stream_read_close_operations=1) (stream_read_operations=1) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain=1) (stream_read_prefetch_operations.failures=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=1) (stream_read_opened=1) (stream_aborted=0) (stream_read_closed=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_acquire_read=0) (action_file_opened.failures=0) (action_executor_acquired.failures=0) (stream_read_bytes=200) (stream_read_vectored_operations=1) (stream_read_block_read.failures=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_incoming_ranges=1) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=2) (action_file_opened=1) (stream_read_block_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_total_bytes=65536) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=1) (action_http_get_request.min=13) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=3) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_drain.max=1) (action_http_get_request.max=13) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=26, mean=13.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:17,092 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:17,092 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,092 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,092 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=236&ts=1731778037092
2024-11-16 17:27:17,095 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,095 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,096 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=236&ts=1731778037092
2024-11-16 17:27:17,102 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:27:17,102 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:17,102 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:17,102 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:17,102 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:17,102 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:17,102 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:17,103 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:17,103 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:17,103 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:17,103 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:17,103 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:17,106 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:17,106 [s3a-transfer-fso-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:17,107 [s3a-transfer-fso-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,108 [s3a-transfer-fso-bucket-unbounded-pool2-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [237] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=237&ts=1731778037092
2024-11-16 17:27:17,115 [s3a-transfer-fso-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:17,116 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:27:17,116 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:17,117 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:17,117 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:17,117 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778037068; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:17,117 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:17,117 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:17,117 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:17,118 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:17,118 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:17,118 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:17,118 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:17,118 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:17,118 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,118 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,118 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:17,118 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,118 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=152&ts=1731778037092
2024-11-16 17:27:17,126 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:27:17,126 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:27:17,127 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:27:17,127 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:17,127 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:17,127 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,127 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,127 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:17,127 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,127 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000193&t0=236&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=152&ts=1731778037092
2024-11-16 17:27:17,133 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:27:17,133 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:27:17,133 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:27:17,133 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:27:17,134 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.016s
2024-11-16 17:27:17,134 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.031s
2024-11-16 17:27:17,134 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:17,134 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:17,135 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:17,145 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 50, active threads = 0, queued tasks = 0, completed tasks = 50], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_aborted=0) (object_put_request=82) (stream_write_total_time=0) (committer_tasks_completed=0) (committer_commit_job.failures=0) (store_exists_probe=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration.failures=0) (op_list_located_status=0) (store_io_throttled=0) (object_list_request=164) (committer_magic_marker_put=0) (committer_load_single_pending_file=0) (store_exists_probe.failures=0) (directories_created=41) (stream_read_total_bytes=404642) (stream_read_bytes_discarded_in_close=392016) (stream_read_vectored_read_bytes_discarded=49026) (committer_commits_reverted=0) (multipart_upload_completed=0) (object_put_request.failures=0) (stream_read_opened=6) (op_get_delegation_token.failures=0) (op_create.failures=0) (audit_access_check_failure=0) (committer_stage_file_upload=0) (action_executor_acquired.failures=0) (stream_aborted=0) (stream_read_close_operations=34) (op_list_files=0) (op_mkdirs=41) (stream_read_seek_operations=0) (stream_write_block_uploads_committed=0) (stream_read_operations=6) (multipart_upload_list.failures=0) (stream_read_remote_stream_aborted=0) (committer_bytes_uploaded=0) (op_get_file_checksum=0) (op_xattr_list.failures=0) (op_access=0) (stream_read_remote_stream_drain=6) (delegation_tokens_issued.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_get_content_summary=0) (op_get_file_checksum.failures=0) (stream_write_exceptions=0) (stream_read_bytes_discarded_in_abort=0) (op_createfile.failures=0) (committer_materialize_file=0) (stream_read_vectored_operations=28) (stream_read_remote_stream_aborted.failures=0) (files_deleted=41) (op_access.failures=0) (store_io_request=486) (object_bulk_delete_request=82) (object_multipart_aborted.failures=0) (multipart_upload_aborted=0) (op_rename.failures=0) (object_copy_requests=0) (op_exists.failures=0) (op_list_files.failures=0) (object_bulk_delete_request.failures=0) (op_xattr_get_named_map.failures=0) (committer_commits_completed=0) (action_file_opened=34) (stream_read_exceptions=0) (committer_commits.failures=0) (object_put_bytes=2686976) (op_abort=0) (fake_directories_deleted=41) (stream_read_bytes=12626) (multipart_upload_part_put_bytes=0) (object_multipart_initiated=0) (files_copied_bytes=0) (fake_directories_created=0) (multipart_upload_started=0) (multipart_instantiated=0) (stream_read_vectored_incoming_ranges=91) (delegation_tokens_issued=0) (stream_read_seek_policy_changed=36) (op_rename=0) (multipart_upload_abort_under_path_invoked=0) (op_list_status=0) (stream_write_exceptions_completing_upload=0) (op_copy_from_local_file.failures=0) (stream_read_fully_operations=2) (audit_request_execution=486) (op_xattr_get_named=0) (committer_commits_aborted=0) (op_createfile=0) (stream_read_unbuffered=2) (committer_stage_file_upload.failures=0) (audit_failure=0) (files_copied=0) (op_mkdirs.failures=0) (committer_jobs_completed=0) (stream_read_seek_bytes_discarded=0) (op_copy_from_local_file=0) (op_is_directory.failures=0) (stream_read_seek_forward_operations=0) (committer_magic_files_created=0) (object_delete_objects=82) (action_file_opened.failures=0) (ignored_errors=0) (store_io_retry=0) (op_glob_status.failures=0) (multipart_upload_part_put=0) (object_select_requests=0) (stream_write_queue_duration=0) (op_xattr_get_map.failures=0) (stream_read_vectored_combined_ranges=38) (op_hsync=0) (object_continue_list_request=0) (object_delete_request.failures=0) (action_executor_acquired=0) (object_delete_request=0) (committer_materialize_file.failures=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (op_hflush=0) (op_xattr_get_named_map=0) (stream_write_total_data=5373952) (op_list_status.failures=0) (op_create_non_recursive=0) (committer_bytes_committed=0) (action_http_get_request.failures=1) (action_http_head_request.failures=0) (action_http_head_request=116) (op_get_file_status=2) (op_is_directory=0) (committer_load_single_pending_file.failures=0) (audit_span_creation=160) (op_get_content_summary.failures=0) (op_open=34) (op_get_file_status.failures=0) (files_delete_rejected=0) (stream_write_block_uploads=41) (op_openfile=0) (stream_read_seek_bytes_skipped=0) (files_created=41) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain.failures=0) (op_create=41) (multipart_upload_list=0) (op_exists=0) (object_continue_list_request.failures=0) (object_list_request.failures=0) (object_metadata_request=116) (op_xattr_list=0) (op_xattr_get_named.failures=0) (op_xattr_get_map=0) (stream_write_block_uploads_aborted=0) (object_put_request_completed=82) (directories_deleted=0) (stream_read_seek_backward_operations=0) (op_is_file=0) (committer_commits_created=0) (committer_jobs_failed=0) (committer_commit_job=0) (op_delete.failures=0) (op_is_file.failures=0) (op_glob_status=0) (action_http_get_request=43) (stream_read_closed=6) (op_get_delegation_token=0) (stream_write_bytes=2686976) (committer_tasks_failed=0) (op_delete=41));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=41) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_request_active=0));
minimums=((object_bulk_delete_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_rename.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_get_request.failures.min=0) (op_rename.failures.min=-1) (object_list_request.failures.min=-1) (op_glob_status.min=-1) (op_create.min=5) (op_list_files.failures.min=-1) (op_delete.failures.min=-1) (op_get_content_summary.min=-1) (op_mkdirs.failures.min=-1) (op_delete.min=16) (op_xattr_list.min=-1) (committer_materialize_file.min=-1) (stream_write_queue_duration.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.failures.min=-1) (object_bulk_delete_request.min=4) (object_list_request.min=4) (op_is_directory.min=-1) (op_list_status.min=-1) (op_get_file_status.min=3) (op_get_file_checksum.failures.min=-1) (op_createfile.min=-1) (action_executor_acquired.failures.min=-1) (store_exists_probe.min=-1) (action_file_opened.failures.min=-1) (op_access.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_get_request.min=13) (object_continue_list_request.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.min=-1) (op_is_file.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_file_opened.min=3) (op_exists.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_load_single_pending_file.min=-1) (op_exists.min=-1) (committer_stage_file_upload.failures.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (op_is_file.failures.min=-1) (op_createfile.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (object_put_request.min=15) (op_xattr_get_named.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_head_request.min=2) (op_xattr_list.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.min=-1) (op_get_delegation_token.min=-1) (op_abort.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_is_directory.failures.min=-1) (object_delete_request.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_mkdirs.min=12) (op_xattr_get_named.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_commit_job.min=-1) (committer_stage_file_upload.min=-1) (op_copy_from_local_file.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.failures.min=-1));
maximums=((op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_list.failures.max=-1) (op_access.max=-1) (object_delete_request.failures.max=-1) (op_createfile.max=-1) (delegation_tokens_issued.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_create.failures.max=-1) (op_exists.max=-1) (object_bulk_delete_request.max=21) (object_put_request.failures.max=-1) (op_xattr_list.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_continue_list_request.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.max=14) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named.max=-1) (multipart_upload_list.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_head_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_list_files.failures.max=-1) (op_get_file_status.max=5) (op_rename.max=-1) (op_is_file.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_status.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=3) (committer_stage_file_upload.max=-1) (committer_stage_file_upload.failures.max=-1) (op_abort.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_map.max=-1) (object_list_request.failures.max=-1) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.max=-1) (action_http_head_request.max=18) (object_delete_request.max=-1) (store_exists_probe.failures.max=-1) (op_is_file.max=-1) (object_list_request.max=220) (object_multipart_initiated.failures.max=-1) (action_file_opened.failures.max=-1) (op_exists.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_multipart_aborted.max=-1) (op_access.failures.max=-1) (op_create.max=59) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=0) (action_http_get_request.max=35) (object_continue_list_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_initiated.max=-1) (op_mkdirs.max=322) (op_abort.failures.max=-1) (op_delete.max=81) (action_executor_acquired.failures.max=-1) (object_put_request.max=63) (op_get_content_summary.max=-1) (op_get_file_checksum.max=-1) (op_createfile.failures.max=-1) (op_rename.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.failures.max=-1) (op_get_delegation_token.max=-1) (committer_load_single_pending_file.max=-1) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.max=-1) (op_list_files.max=-1) (op_glob_status.failures.max=-1) (op_list_status.failures.max=-1) (op_glob_status.max=-1));
means=((stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=41, sum=1318, mean=32.1463)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=41, sum=1065, mean=25.9756)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=82, sum=584, mean=7.1220)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=116, sum=454, mean=3.9138)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=42, sum=520, mean=12.3810)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=164, sum=1412, mean=8.6098)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=34, sum=150, mean=4.4118)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=41, sum=402, mean=9.8049)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=82, sum=1088, mean=13.2683)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:17,146 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:17,146 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,146 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,146 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,146 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,146 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000194 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000194/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000194&t0=238&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=238&ts=1731778037145
2024-11-16 17:27:17,150 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:17,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,151 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000194 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000194/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000194&t0=238&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=238&ts=1731778037145
2024-11-16 17:27:17,153 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,153 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:17,153 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:17,153 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:17,153 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000194 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000194/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000194&t0=238&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=238&ts=1731778037145
2024-11-16 17:27:17,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:17,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:17,157 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.004s
2024-11-16 17:27:17,157 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:17,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,158 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,158 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000195 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000195/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000195&t0=238&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=238&ts=1731778037157
2024-11-16 17:27:17,170 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:27:17,170 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,170 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:17,170 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12014695778006743640.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:17,171 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12014695778006743640.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (op_hflush=0) (op_abort=0) (multipart_upload_completed=0) (stream_write_total_time=0) (stream_write_exceptions=0) (object_put_request=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12014695778006743640.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,171 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,171 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:17,171 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12014695778006743640.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:17,172 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:17,172 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:17,172 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:17,172 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:17,172 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000195 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000195/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000195&t0=238&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=154&ts=1731778037157
2024-11-16 17:27:17,184 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:17,185 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:17,185 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.013s
2024-11-16 17:27:17,185 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12014695778006743640.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:17,185 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12014695778006743640.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,185 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12014695778006743640.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,185 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:17,185 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,186 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (action_executor_acquired=0) (stream_write_bytes=65536) (object_put_request.failures=0) (multipart_upload_completed=0) (object_put_request=1) (object_multipart_aborted=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (op_abort=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=12) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=12));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=12, mean=12.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:17,186 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:17,187 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,187 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,187 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:17,187 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [239] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000196 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000196/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000196&t0=239&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=239&ts=1731778037187
2024-11-16 17:27:17,190 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:17,190 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:17,190 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,191 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:27:17,192 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_unbuffered=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_vectored_operations=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_bytes=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (stream_read_vectored_incoming_ranges=0) (stream_read_fully_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_close_operations=1) (action_http_get_request=0) (stream_read_block_read=0) (stream_read_total_bytes=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_read_closed=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_operations=0) (stream_read_vectored_read_bytes_discarded=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=3) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:17,192 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:17,192 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,193 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,193 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197&t0=238&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=238&ts=1731778037192
2024-11-16 17:27:17,195 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,195 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,195 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197&t0=238&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=238&ts=1731778037192
2024-11-16 17:27:17,200 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:17,200 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:17,200 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:17,200 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:17,200 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:17,200 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:17,200 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:17,200 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:17,200 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:17,200 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:17,200 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:17,200 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:17,200 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:17,201 [s3a-transfer-fso-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:17,201 [s3a-transfer-fso-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,201 [s3a-transfer-fso-bucket-unbounded-pool2-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [240] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197&t0=238&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=240&ts=1731778037192
2024-11-16 17:27:17,206 [s3a-transfer-fso-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:17,206 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:27:17,206 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:17,206 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:17,206 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:17,206 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778037182; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:17,206 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:17,206 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:17,206 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:17,207 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:17,207 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:17,207 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:17,207 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:17,207 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,207 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,207 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:17,207 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,207 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197&t0=238&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=157&ts=1731778037192
2024-11-16 17:27:17,208 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:17,212 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:17,212 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:17,212 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:17,212 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:17,212 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:17,212 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,212 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,212 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:17,212 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,212 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000197&t0=238&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=157&ts=1731778037192
2024-11-16 17:27:17,216 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:17,216 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.004s
2024-11-16 17:27:17,216 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.004s
2024-11-16 17:27:17,216 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.009s
2024-11-16 17:27:17,216 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.008s
2024-11-16 17:27:17,216 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.016s
2024-11-16 17:27:17,216 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:17,217 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:17,218 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:17,233 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 52, active threads = 0, queued tasks = 0, completed tasks = 52], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_bytes_backwards_on_seek=0) (op_copy_from_local_file=0) (multipart_upload_started=0) (op_list_files=0) (multipart_upload_aborted=0) (op_create.failures=0) (op_get_file_checksum=0) (committer_commits_aborted=0) (op_list_status.failures=0) (op_glob_status=0) (op_xattr_list=0) (stream_read_bytes_discarded_in_close=392016) (op_get_delegation_token=0) (stream_read_bytes_discarded_in_abort=0) (object_delete_request.failures=0) (op_is_file=0) (stream_read_seek_forward_operations=0) (object_list_request=168) (committer_bytes_uploaded=0) (stream_read_total_bytes=404642) (op_abort=0) (op_is_directory.failures=0) (object_delete_request=0) (op_is_file.failures=0) (op_xattr_get_map.failures=0) (stream_write_queue_duration.failures=0) (op_rename.failures=0) (op_exists=0) (op_glob_status.failures=0) (op_copy_from_local_file.failures=0) (action_http_get_request=43) (object_bulk_delete_request.failures=0) (op_is_directory=0) (stream_write_total_time=0) (action_http_get_request.failures=1) (committer_commits.failures=0) (stream_write_block_uploads_committed=0) (committer_commits_created=0) (committer_tasks_completed=0) (object_put_bytes=2752512) (committer_tasks_failed=0) (stream_read_exceptions=0) (ignored_errors=0) (op_create_non_recursive=0) (op_mkdirs=42) (delegation_tokens_issued=0) (object_multipart_initiated=0) (committer_jobs_failed=0) (audit_failure=0) (object_multipart_aborted=0) (stream_read_fully_operations=2) (op_list_located_status=0) (committer_stage_file_upload.failures=0) (op_xattr_list.failures=0) (object_bulk_delete_request=84) (op_delete=42) (store_io_request=497) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (stream_write_total_data=5505024) (op_hflush=0) (committer_materialize_file=0) (multipart_instantiated=0) (op_list_status=0) (stream_read_unbuffered=2) (stream_read_vectored_read_bytes_discarded=49026) (object_list_request.failures=0) (stream_read_bytes=12626) (multipart_upload_list=0) (store_io_throttled=0) (op_xattr_get_named_map=0) (stream_read_version_mismatches=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (object_select_requests=0) (committer_commits_reverted=0) (op_get_file_checksum.failures=0) (committer_magic_files_created=0) (multipart_upload_part_put_bytes=0) (files_deleted=42) (stream_read_opened=6) (op_access.failures=0) (stream_read_operations_incomplete=0) (fake_directories_deleted=42) (object_put_request=84) (op_mkdirs.failures=0) (object_metadata_request=119) (stream_read_vectored_incoming_ranges=91) (stream_read_remote_stream_aborted=0) (committer_commits_completed=0) (multipart_upload_part_put=0) (op_list_files.failures=0) (object_copy_requests=0) (op_get_content_summary.failures=0) (files_created=42) (directories_created=42) (op_createfile.failures=0) (stream_read_remote_stream_drain.failures=0) (op_open=35) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (op_rename=0) (stream_read_closed=6) (action_file_opened.failures=0) (stream_read_vectored_combined_ranges=38) (op_xattr_get_named=0) (fake_directories_created=0) (stream_read_remote_stream_aborted.failures=0) (committer_load_single_pending_file=0) (stream_read_seek_operations=0) (object_continue_list_request=0) (stream_read_close_operations=35) (committer_stage_file_upload=0) (audit_request_execution=497) (directories_deleted=0) (op_get_content_summary=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named_map.failures=0) (op_access=0) (files_copied_bytes=0) (store_exists_probe=0) (committer_bytes_committed=0) (object_delete_objects=84) (committer_commit_job=0) (committer_commit_job.failures=0) (op_createfile=0) (object_multipart_initiated.failures=0) (stream_read_operations=6) (object_continue_list_request.failures=0) (committer_load_single_pending_file.failures=0) (op_get_file_status=2) (multipart_upload_abort_under_path_invoked=0) (op_get_delegation_token.failures=0) (object_put_request_completed=84) (audit_access_check_failure=0) (action_http_head_request.failures=0) (committer_magic_marker_put=0) (action_file_opened=35) (committer_jobs_completed=0) (committer_magic_marker_put.failures=0) (op_get_file_status.failures=0) (op_xattr_get_map=0) (action_http_head_request=119) (object_put_request.failures=0) (files_copied=0) (stream_read_seek_backward_operations=0) (audit_span_creation=164) (op_delete.failures=0) (files_delete_rejected=0) (stream_read_vectored_operations=28) (store_io_retry=0) (stream_read_remote_stream_drain=6) (op_create=42) (multipart_upload_list.failures=0) (op_exists.failures=0) (op_xattr_get_named.failures=0) (stream_aborted=0) (op_hsync=0) (stream_read_seek_policy_changed=37) (op_openfile=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (stream_write_block_uploads=42) (stream_read_seek_bytes_skipped=0) (committer_materialize_file.failures=0) (delegation_tokens_issued.failures=0) (stream_write_bytes=2752512) (op_abort.failures=0) (store_exists_probe.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=42) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0));
minimums=((op_rename.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_continue_list_request.failures.min=-1) (store_exists_probe.min=-1) (multipart_upload_list.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_exists.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_map.min=-1) (object_delete_request.failures.min=-1) (op_list_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.min=-1) (op_is_file.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_content_summary.min=-1) (action_http_head_request.min=2) (op_mkdirs.min=11) (op_rename.min=-1) (committer_materialize_file.min=-1) (action_http_get_request.failures.min=0) (action_http_get_request.min=13) (stream_read_remote_stream_drain.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.min=-1) (action_executor_acquired.min=-1) (op_get_file_status.failures.min=-1) (op_is_directory.failures.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.failures.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_access.min=-1) (op_delete.failures.min=-1) (object_continue_list_request.min=-1) (op_createfile.failures.min=-1) (action_file_opened.min=3) (op_copy_from_local_file.min=-1) (op_delete.min=16) (committer_magic_marker_put.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.min=-1) (op_glob_status.min=-1) (op_createfile.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_list_request.min=4) (committer_commit_job.min=-1) (op_get_delegation_token.failures.min=-1) (op_abort.min=-1) (op_mkdirs.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.min=-1) (op_list_status.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_drain.min=1) (object_delete_request.min=-1) (op_exists.min=-1) (action_http_head_request.failures.min=-1) (object_put_request.min=12) (stream_write_queue_duration.failures.min=-1) (committer_commit_job.failures.min=-1) (op_create.min=5) (op_create.failures.min=-1) (op_access.failures.min=-1) (op_glob_status.failures.min=-1) (op_abort.failures.min=-1) (object_bulk_delete_request.min=4) (op_xattr_get_named.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_checksum.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_stage_file_upload.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_list.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_status.min=3) (op_is_file.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((op_xattr_get_named_map.failures.max=-1) (committer_commit_job.failures.max=-1) (op_list_status.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_load_single_pending_file.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_list.failures.max=-1) (object_put_request.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.max=-1) (op_is_file.failures.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (op_is_directory.max=-1) (op_access.max=-1) (object_delete_request.max=-1) (object_list_request.max=220) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.failures.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.max=-1) (op_access.failures.max=-1) (action_file_opened.max=14) (object_multipart_aborted.failures.max=-1) (op_copy_from_local_file.max=-1) (op_exists.failures.max=-1) (object_list_request.failures.max=-1) (action_http_head_request.max=18) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (store_exists_probe.max=-1) (op_get_file_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_rename.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_bulk_delete_request.max=21) (object_multipart_aborted.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named.max=-1) (action_file_opened.failures.max=-1) (op_list_files.max=-1) (op_get_file_status.max=5) (op_xattr_get_named.failures.max=-1) (op_delete.max=81) (op_list_files.failures.max=-1) (op_createfile.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=59) (op_mkdirs.failures.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_drain.max=3) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=0) (committer_load_single_pending_file.failures.max=-1) (op_is_directory.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_createfile.max=-1) (op_rename.max=-1) (object_put_request.max=63) (op_mkdirs.max=322) (action_http_get_request.max=35) (delegation_tokens_issued.failures.max=-1) (op_delete.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.max=-1) (op_is_file.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_list_status.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_delegation_token.max=-1) (op_exists.max=-1));
means=((op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=168, sum=1438, mean=8.5595)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=84, sum=1104, mean=13.1429)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=119, sum=461, mean=3.8739)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=42, sum=415, mean=9.8810)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=84, sum=593, mean=7.0595)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=42, sum=520, mean=12.3810)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=35, sum=153, mean=4.3714)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=42, sum=1335, mean=31.7857)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=42, sum=1076, mean=25.6190)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:17,234 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:17,234 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,234 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,234 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,235 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,235 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000198 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000198/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000198&t0=241&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=241&ts=1731778037234
2024-11-16 17:27:17,239 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:17,239 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,240 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,240 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,240 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,240 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000198 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000198/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000198&t0=241&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=241&ts=1731778037234
2024-11-16 17:27:17,242 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,242 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:17,242 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:17,242 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:17,242 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000198 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000198/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000198&t0=241&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=241&ts=1731778037234
2024-11-16 17:27:17,247 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:17,247 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:17,247 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:17,247 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:17,247 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,247 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,247 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,247 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,248 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000199 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000199/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000199&t0=241&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=241&ts=1731778037247
2024-11-16 17:27:17,252 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:17,252 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,252 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:17,252 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4742683219906728953.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:17,253 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4742683219906728953.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_bytes=65536) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (object_multipart_initiated=0) (op_hsync=0) (op_abort.failures=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (op_abort=0) (committer_magic_marker_put=0) (op_hflush=0) (action_executor_acquired.failures=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (stream_write_block_uploads=0) (stream_write_exceptions=0) (stream_write_total_time=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1));
maximums=((action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4742683219906728953.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,253 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,253 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:17,253 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4742683219906728953.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:17,254 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:17,254 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:17,254 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:17,254 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:17,254 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000199 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000199/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000199&t0=241&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=159&ts=1731778037247
2024-11-16 17:27:17,269 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:17,269 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:17,269 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.015s
2024-11-16 17:27:17,269 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4742683219906728953.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:17,269 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4742683219906728953.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,269 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4742683219906728953.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,269 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:17,269 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,270 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (op_abort.failures=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_total_data=65536) (multipart_upload_completed.failures=0) (op_hsync=0) (action_executor_acquired.failures=0) (op_abort=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (action_executor_acquired=0) (object_put_request=1) (object_multipart_aborted=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=15) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=15));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=15, mean=15.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:17,271 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:17,272 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,272 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,272 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:17,272 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000200 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000200/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000200&t0=242&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=242&ts=1731778037272
2024-11-16 17:27:17,275 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:17,275 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:17,275 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,275 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:27:17,276 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_combined_ranges=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_incoming_ranges=0) (action_file_opened=1) (stream_read_operations_incomplete=0) (stream_read_version_mismatches=0) (action_http_get_request=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_operations=0) (stream_read_seek_backward_operations=0) (stream_read_closed=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_total_bytes=0) (stream_aborted=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_drain=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations=0) (stream_read_opened=0) (stream_read_close_operations=1) (stream_read_exceptions=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=3) (action_http_get_request.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=3) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1));
means=((action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:17,277 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:17,277 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,277 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,277 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201&t0=241&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=241&ts=1731778037277
2024-11-16 17:27:17,280 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,280 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,280 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201&t0=241&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=241&ts=1731778037277
2024-11-16 17:27:17,285 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:17,286 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:17,286 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:17,286 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:17,286 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:17,286 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:17,286 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:17,286 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:17,286 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:17,286 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:17,286 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:17,287 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:17,287 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:17,287 [s3a-transfer-fso-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:17,287 [s3a-transfer-fso-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,287 [s3a-transfer-fso-bucket-unbounded-pool2-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201&t0=241&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=243&ts=1731778037277
2024-11-16 17:27:17,295 [s3a-transfer-fso-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:27:17,295 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:27:17,295 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:17,295 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:17,295 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:17,295 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778037267; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:17,295 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:17,295 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:17,296 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:17,296 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:17,296 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:17,296 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:17,296 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:17,296 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:17,296 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,296 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,296 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:17,296 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,296 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [161] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201&t0=241&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=161&ts=1731778037277
2024-11-16 17:27:17,304 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:27:17,304 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:27:17,304 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:27:17,304 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:17,304 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:17,304 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,304 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,304 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:17,304 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,304 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [161] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000201&t0=241&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=161&ts=1731778037277
2024-11-16 17:27:17,308 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:17,309 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:17,309 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:17,309 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.013s
2024-11-16 17:27:17,309 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.013s
2024-11-16 17:27:17,309 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.023s
2024-11-16 17:27:17,309 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:17,309 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:17,310 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:17,322 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 54, active threads = 0, queued tasks = 0, completed tasks = 54], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_is_directory.failures=0) (stream_write_exceptions=0) (op_mkdirs.failures=0) (object_multipart_initiated.failures=0) (committer_bytes_uploaded=0) (op_access.failures=0) (stream_read_vectored_read_bytes_discarded=49026) (stream_read_seek_backward_operations=0) (op_abort.failures=0) (audit_request_execution=508) (object_list_request=172) (store_exists_probe.failures=0) (stream_read_operations=6) (delegation_tokens_issued=0) (op_list_status.failures=0) (stream_write_block_uploads_aborted=0) (committer_magic_files_created=0) (op_get_file_checksum.failures=0) (directories_deleted=0) (op_copy_from_local_file.failures=0) (delegation_tokens_issued.failures=0) (stream_read_total_bytes=404642) (op_xattr_get_named_map=0) (op_xattr_get_named_map.failures=0) (stream_read_bytes=12626) (action_executor_acquired.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (object_select_requests=0) (ignored_errors=0) (committer_commits.failures=0) (stream_read_opened=6) (multipart_instantiated=0) (op_get_content_summary=0) (stream_aborted=0) (store_io_retry=0) (store_exists_probe=0) (object_multipart_initiated=0) (op_access=0) (op_list_located_status=0) (object_put_bytes=2818048) (stream_read_exceptions=0) (op_create.failures=0) (object_put_request=86) (object_metadata_request=122) (multipart_upload_part_put_bytes=0) (files_created=43) (op_get_file_status.failures=0) (fake_directories_created=0) (stream_write_total_time=0) (op_createfile=0) (op_open=36) (op_create=43) (action_executor_acquired=0) (store_io_request=508) (stream_read_seek_operations=0) (op_xattr_get_named.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_copy_from_local_file=0) (stream_write_block_uploads_committed=0) (op_openfile=0) (object_delete_request.failures=0) (stream_write_queue_duration=0) (op_exists.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_delete_request=0) (audit_failure=0) (op_get_content_summary.failures=0) (stream_read_bytes_discarded_in_close=392016) (object_multipart_aborted=0) (op_createfile.failures=0) (op_get_delegation_token=0) (committer_commits_aborted=0) (committer_materialize_file.failures=0) (op_mkdirs=43) (op_xattr_list.failures=0) (committer_load_single_pending_file=0) (multipart_upload_list=0) (committer_bytes_committed=0) (committer_commit_job.failures=0) (stream_read_vectored_incoming_ranges=91) (committer_stage_file_upload=0) (stream_write_total_data=5636096) (committer_magic_marker_put=0) (stream_write_block_uploads=43) (audit_access_check_failure=0) (op_get_delegation_token.failures=0) (committer_load_single_pending_file.failures=0) (committer_stage_file_upload.failures=0) (op_abort=0) (op_get_file_status=2) (op_glob_status.failures=0) (directories_created=43) (stream_read_fully_operations=2) (object_bulk_delete_request=86) (op_is_file.failures=0) (op_xattr_get_map=0) (audit_span_creation=168) (op_list_status=0) (object_multipart_aborted.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=38) (op_delete=43) (fake_directories_deleted=43) (object_copy_requests=0) (op_xattr_list=0) (committer_tasks_failed=0) (committer_jobs_failed=0) (stream_read_remote_stream_aborted=0) (object_delete_objects=86) (object_put_request_completed=86) (op_create_non_recursive=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (op_delete.failures=0) (files_copied=0) (object_bulk_delete_request.failures=0) (files_delete_rejected=0) (object_put_request.failures=0) (stream_read_vectored_operations=28) (op_glob_status=0) (action_file_opened.failures=0) (action_http_head_request=122) (action_http_get_request.failures=1) (files_copied_bytes=0) (stream_read_closed=6) (op_hflush=0) (stream_read_close_operations=36) (stream_read_unbuffered=2) (stream_write_bytes=2818048) (committer_magic_marker_put.failures=0) (object_continue_list_request.failures=0) (op_rename.failures=0) (object_continue_list_request=0) (op_is_directory=0) (committer_commits_created=0) (op_get_file_checksum=0) (op_xattr_get_map.failures=0) (action_http_get_request=43) (store_io_throttled=0) (stream_read_vectored_combined_ranges=38) (multipart_upload_completed=0) (committer_commit_job=0) (multipart_upload_aborted=0) (files_deleted=43) (stream_read_remote_stream_drain=6) (op_hsync=0) (committer_commits_completed=0) (stream_write_queue_duration.failures=0) (multipart_upload_started=0) (stream_read_seek_bytes_skipped=0) (committer_commits_reverted=0) (op_is_file=0) (action_http_head_request.failures=0) (op_rename=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=36) (op_xattr_get_named=0) (committer_jobs_completed=0) (op_exists=0) (multipart_upload_list.failures=0) (committer_materialize_file=0) (object_list_request.failures=0) (stream_read_operations_incomplete=0) (committer_tasks_completed=0) (op_list_files=0) (op_list_files.failures=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=43) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((op_xattr_get_named.failures.min=-1) (op_rename.min=-1) (action_http_get_request.failures.min=0) (op_list_files.min=-1) (op_rename.failures.min=-1) (object_bulk_delete_request.min=4) (op_xattr_get_named_map.min=-1) (op_is_file.min=-1) (op_get_file_checksum.failures.min=-1) (op_access.min=-1) (op_exists.min=-1) (op_get_file_status.failures.min=-1) (op_create.failures.min=-1) (op_xattr_list.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_is_file.failures.min=-1) (op_createfile.min=-1) (op_copy_from_local_file.failures.min=-1) (op_mkdirs.min=11) (op_create.min=5) (op_get_content_summary.min=-1) (delegation_tokens_issued.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_initiated.min=-1) (op_copy_from_local_file.min=-1) (op_list_files.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_is_directory.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_commit_job.min=-1) (op_mkdirs.failures.min=-1) (op_is_directory.min=-1) (op_access.failures.min=-1) (action_http_head_request.min=2) (multipart_upload_list.min=-1) (op_delete.min=16) (action_file_opened.min=3) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_stage_file_upload.min=-1) (op_delete.failures.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_list.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (store_exists_probe.min=-1) (stream_write_queue_duration.min=-1) (object_continue_list_request.min=-1) (committer_materialize_file.min=-1) (object_list_request.min=4) (op_glob_status.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=13) (op_abort.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_checksum.min=-1) (object_put_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_put_request.min=15) (op_glob_status.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_delete_request.min=-1) (op_exists.failures.min=-1) (op_get_file_status.min=3) (action_http_head_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_list_status.failures.min=-1) (committer_commit_job.failures.min=-1) (op_createfile.failures.min=-1) (action_executor_acquired.min=-1) (object_list_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_delegation_token.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named.min=-1));
maximums=((op_list_files.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_list.max=-1) (op_list_files.failures.max=-1) (op_glob_status.max=-1) (op_delete.failures.max=-1) (action_http_head_request.failures.max=-1) (op_exists.max=-1) (stream_write_queue_duration.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_file_status.max=5) (action_file_opened.max=14) (object_list_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_create.max=59) (op_access.max=-1) (op_mkdirs.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_put_request.max=63) (op_is_file.max=-1) (op_mkdirs.max=322) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (op_list_status.max=-1) (op_get_delegation_token.max=-1) (object_continue_list_request.max=-1) (op_copy_from_local_file.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_stage_file_upload.max=-1) (action_file_opened.failures.max=-1) (op_exists.failures.max=-1) (op_createfile.failures.max=-1) (op_abort.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_content_summary.max=-1) (committer_commit_job.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_drain.max=3) (committer_materialize_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named.max=-1) (op_rename.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.failures.max=-1) (op_get_file_checksum.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_bulk_delete_request.max=21) (op_create.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_access.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_put_request.failures.max=-1) (action_http_get_request.max=35) (committer_load_single_pending_file.max=-1) (object_list_request.max=220) (object_continue_list_request.failures.max=-1) (object_multipart_aborted.max=-1) (action_http_head_request.max=18) (action_http_get_request.failures.max=0) (stream_write_queue_duration.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_list.failures.max=-1) (op_is_directory.max=-1) (committer_materialize_file.max=-1) (op_is_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (multipart_upload_list.max=-1) (op_delete.max=81));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=43, sum=1089, mean=25.3256)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=122, sum=468, mean=3.8361)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=86, sum=1124, mean=13.0698)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=86, sum=605, mean=7.0349)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_create.mean=(samples=43, sum=421, mean=9.7907)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=172, sum=1459, mean=8.4826)) (op_delete.mean=(samples=43, sum=1358, mean=31.5814)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=36, sum=156, mean=4.3333)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=42, sum=520, mean=12.3810)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:17,323 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:17,323 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,323 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,323 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,323 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,323 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000202 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000202/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000202&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=244&ts=1731778037322
2024-11-16 17:27:17,327 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:17,327 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,327 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,328 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,328 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,328 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000202 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000202/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000202&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=244&ts=1731778037322
2024-11-16 17:27:17,329 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,329 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:17,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:17,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:17,330 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000202 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000202/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000202&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=244&ts=1731778037322
2024-11-16 17:27:17,334 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:17,334 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:17,334 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.005s
2024-11-16 17:27:17,334 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:17,334 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,334 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,335 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,335 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,335 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000203 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000203/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000203&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=244&ts=1731778037334
2024-11-16 17:27:17,339 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:17,339 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,339 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:17,340 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7674592526458640322.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:17,341 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7674592526458640322.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (stream_write_total_time=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (op_abort.failures=0) (object_put_request=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (op_hsync=0) (stream_write_total_data=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (op_abort=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7674592526458640322.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,341 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,341 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:17,341 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7674592526458640322.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:17,341 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:17,341 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:17,341 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:17,341 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:17,341 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000203 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000203/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000203&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=160&ts=1731778037334
2024-11-16 17:27:17,358 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:17,358 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:17,358 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.017s
2024-11-16 17:27:17,359 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7674592526458640322.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:17,359 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7674592526458640322.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,359 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7674592526458640322.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,359 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:17,359 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,359 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (op_hsync=0) (stream_write_total_time=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (op_abort=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (op_hflush=0) (object_put_request=1) (action_executor_acquired=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=17) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=17) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=17, mean=17.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:17,360 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:17,360 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,360 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,360 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:17,360 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000204 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000204/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000204&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=244&ts=1731778037360
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:27:17,363 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:27:17,363 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:17,364 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,364 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:17,364 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000204 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000204/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000204&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=163&ts=1731778037360
2024-11-16 17:27:17,363 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:17,365 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,365 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:17,365 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000204 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000204/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=0-159&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000204&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=165&ts=1731778037360
2024-11-16 17:27:17,377 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:27:17,377 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:17,377 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:17,378 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:27:17,379 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:27:17,379 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:17,379 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read=0) (stream_read_seek_policy_changed=1) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (stream_read_block_acquire_read=0) (stream_read_seek_forward_operations=0) (action_http_get_request=2) (stream_read_closed=0) (stream_read_vectored_operations=2) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=20) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (stream_read_bytes=300) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_operations=0) (stream_read_fully_operations=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_vectored_combined_ranges=2) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_incoming_ranges=4) (stream_read_bytes_backwards_on_seek=0) (action_file_opened.failures=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (stream_read_total_bytes=300));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=12) (action_file_opened.min=3) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=14) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((action_http_get_request.mean=(samples=2, sum=26, mean=13.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:17,381 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:17,381 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,381 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,381 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=244&ts=1731778037380
2024-11-16 17:27:17,384 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,384 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,384 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=244&ts=1731778037380
2024-11-16 17:27:17,390 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:17,390 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:17,390 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:17,390 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:17,390 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:17,391 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:17,391 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:17,391 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:17,391 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:17,391 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:17,391 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:17,391 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:17,394 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:17,394 [s3a-transfer-fso-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:17,394 [s3a-transfer-fso-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,394 [s3a-transfer-fso-bucket-unbounded-pool2-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=245&ts=1731778037380
2024-11-16 17:27:17,399 [s3a-transfer-fso-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:17,399 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:27:17,399 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:17,399 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:17,399 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:17,399 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778037354; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:17,399 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:17,399 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:17,399 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:17,400 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:17,400 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:17,400 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:17,400 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:17,400 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:17,400 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,400 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,400 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:17,400 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,400 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=168&ts=1731778037380
2024-11-16 17:27:17,405 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:17,405 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:17,405 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:17,405 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:17,405 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:17,405 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,405 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,405 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:17,405 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,405 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000205&t0=244&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=168&ts=1731778037380
2024-11-16 17:27:17,410 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:17,410 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:17,410 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.005s
2024-11-16 17:27:17,410 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.010s
2024-11-16 17:27:17,410 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.010s
2024-11-16 17:27:17,410 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.019s
2024-11-16 17:27:17,410 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:17,410 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:17,412 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:17,422 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 55, active threads = 0, queued tasks = 0, completed tasks = 55], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commit_job.failures=0) (object_multipart_initiated=0) (audit_request_execution=521) (op_xattr_list.failures=0) (committer_stage_file_upload.failures=0) (object_metadata_request=125) (stream_read_remote_stream_aborted.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_operations_incomplete=0) (op_open=37) (stream_read_opened=6) (op_access=0) (op_copy_from_local_file.failures=0) (object_continue_list_request=0) (committer_commits_reverted=0) (op_mkdirs.failures=0) (object_put_request_completed=88) (committer_bytes_uploaded=0) (op_glob_status.failures=0) (multipart_instantiated=0) (op_hflush=0) (op_rename.failures=0) (op_exists=0) (object_put_request=88) (object_delete_request=0) (object_multipart_aborted.failures=0) (op_xattr_get_map.failures=0) (op_is_file.failures=0) (stream_read_exceptions=0) (stream_read_seek_bytes_skipped=0) (committer_magic_files_created=0) (stream_write_bytes=2883584) (op_create=44) (store_exists_probe=0) (op_copy_from_local_file=0) (fake_directories_created=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (committer_stage_file_upload=0) (op_createfile=0) (op_is_file=0) (store_exists_probe.failures=0) (action_http_get_request.failures=1) (delegation_tokens_issued=0) (op_get_delegation_token=0) (object_delete_request.failures=0) (committer_load_single_pending_file.failures=0) (op_list_status=0) (op_get_file_status=2) (committer_jobs_completed=0) (files_copied_bytes=0) (stream_read_seek_operations=0) (committer_jobs_failed=0) (committer_load_single_pending_file=0) (stream_read_close_operations=37) (fake_directories_deleted=44) (op_list_files.failures=0) (files_copied=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_forward_operations=0) (committer_tasks_failed=0) (op_delete.failures=0) (committer_commit_job=0) (stream_read_remote_stream_drain=6) (multipart_upload_aborted=0) (op_delete=44) (object_bulk_delete_request.failures=0) (object_select_requests=0) (audit_access_check_failure=0) (object_copy_requests=0) (files_delete_rejected=0) (committer_bytes_committed=0) (multipart_upload_started=0) (multipart_upload_part_put_bytes=0) (files_created=44) (ignored_errors=0) (action_http_head_request=125) (stream_read_version_mismatches=0) (audit_span_creation=172) (stream_read_vectored_combined_ranges=40) (stream_read_bytes=12926) (op_xattr_get_named_map=0) (action_http_get_request=45) (stream_write_block_uploads_committed=0) (committer_commits_completed=0) (op_get_content_summary.failures=0) (stream_write_total_data=5767168) (op_hsync=0) (multipart_upload_list=0) (op_createfile.failures=0) (op_exists.failures=0) (committer_commits_created=0) (op_list_located_status=0) (op_get_file_checksum.failures=0) (committer_commits.failures=0) (object_list_request.failures=0) (stream_aborted=0) (stream_read_total_bytes=404942) (op_get_content_summary=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (object_put_request.failures=0) (op_access.failures=0) (stream_read_remote_stream_drain.failures=0) (op_get_delegation_token.failures=0) (stream_read_operations=6) (stream_read_bytes_backwards_on_seek=0) (action_file_opened.failures=0) (stream_read_seek_bytes_discarded=0) (op_list_files=0) (stream_read_vectored_incoming_ranges=95) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_list.failures=0) (op_is_directory=0) (stream_read_vectored_operations=30) (committer_magic_marker_put=0) (committer_materialize_file=0) (store_io_throttled=0) (op_xattr_get_named.failures=0) (stream_read_fully_operations=2) (op_xattr_get_named_map.failures=0) (op_list_status.failures=0) (op_create.failures=0) (committer_materialize_file.failures=0) (op_is_directory.failures=0) (op_abort=0) (committer_magic_marker_put.failures=0) (committer_commits_aborted=0) (op_rename=0) (object_continue_list_request.failures=0) (op_create_non_recursive=0) (object_delete_objects=88) (stream_read_vectored_read_bytes_discarded=49046) (stream_read_unbuffered=2) (op_mkdirs=44) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_read_seek_backward_operations=0) (delegation_tokens_issued.failures=0) (stream_read_bytes_discarded_in_close=392016) (store_io_retry=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_total_time=0) (files_deleted=44) (object_bulk_delete_request=88) (directories_created=44) (op_get_file_checksum=0) (committer_tasks_completed=0) (action_http_head_request.failures=0) (audit_failure=0) (object_multipart_aborted=0) (op_xattr_get_map=0) (op_glob_status=0) (store_io_request=521) (op_xattr_list=0) (action_file_opened=37) (op_openfile=0) (op_xattr_get_named=0) (action_executor_acquired.failures=0) (stream_read_seek_policy_changed=39) (stream_write_block_uploads=44) (stream_read_closed=6) (directories_deleted=0) (object_put_bytes=2883584) (op_get_file_status.failures=0) (op_abort.failures=0) (stream_read_remote_stream_aborted=0) (object_list_request=176) (stream_write_queue_duration.failures=0));
gauges=((object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=44));
minimums=((object_put_request.min=17) (op_list_files.failures.min=-1) (committer_materialize_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=1) (action_http_get_request.min=12) (op_xattr_get_map.min=-1) (op_list_files.min=-1) (stream_write_queue_duration.min=-1) (object_bulk_delete_request.failures.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.failures.min=-1) (object_put_request.failures.min=-1) (op_delete.min=16) (op_xattr_get_named_map.min=-1) (op_is_file.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_createfile.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_status.min=3) (op_exists.min=-1) (op_glob_status.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_aborted.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_delete_request.min=-1) (op_is_file.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (action_file_opened.min=3) (op_mkdirs.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_content_summary.min=-1) (op_glob_status.failures.min=-1) (op_abort.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_list_status.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_named.min=-1) (op_get_delegation_token.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_createfile.failures.min=-1) (op_is_directory.min=-1) (op_is_directory.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.min=4) (op_xattr_list.min=-1) (committer_materialize_file.failures.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.min=-1) (object_list_request.min=4) (store_exists_probe.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_status.failures.min=-1) (action_http_head_request.failures.min=-1) (action_executor_acquired.min=-1) (op_access.min=-1) (op_abort.min=-1) (action_http_get_request.failures.min=0) (committer_magic_marker_put.failures.min=-1) (object_delete_request.failures.min=-1) (object_continue_list_request.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (committer_commit_job.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_checksum.failures.min=-1) (op_access.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_drain.min=1) (op_create.min=5) (stream_read_remote_stream_drain.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_initiated.min=-1) (op_rename.failures.min=-1) (op_rename.min=-1) (object_multipart_initiated.failures.min=-1) (op_mkdirs.min=11) (multipart_upload_list.failures.min=-1));
maximums=((op_get_file_checksum.max=-1) (action_http_head_request.max=18) (op_exists.max=-1) (action_http_get_request.failures.max=0) (op_list_files.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.failures.max=-1) (op_rename.failures.max=-1) (op_abort.max=-1) (op_access.failures.max=-1) (op_create.max=59) (object_put_request.max=63) (committer_stage_file_upload.max=-1) (op_mkdirs.failures.max=-1) (stream_write_queue_duration.max=-1) (object_continue_list_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_status.max=5) (committer_materialize_file.failures.max=-1) (op_is_directory.max=-1) (action_http_get_request.max=35) (object_multipart_aborted.failures.max=-1) (action_file_opened.max=14) (object_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=3) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (op_delete.max=81) (committer_materialize_file.max=-1) (op_createfile.max=-1) (object_multipart_initiated.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.max=21) (op_rename.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.failures.max=-1) (op_access.max=-1) (multipart_upload_list.failures.max=-1) (op_list_status.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_get_named.max=-1) (op_create.failures.max=-1) (op_createfile.failures.max=-1) (op_is_file.failures.max=-1) (op_mkdirs.max=322) (op_get_delegation_token.max=-1) (op_glob_status.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_files.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_list_status.failures.max=-1) (object_put_request.failures.max=-1) (op_exists.failures.max=-1) (object_list_request.max=220) (object_list_request.failures.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_list.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_glob_status.max=-1) (op_is_file.max=-1) (delegation_tokens_issued.max=-1) (op_is_directory.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_get_map.max=-1));
means=((committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=44, sum=546, mean=12.4091)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=176, sum=1478, mean=8.3977)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=44, sum=1378, mean=31.3182)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=125, sum=475, mean=3.8000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=88, sum=1145, mean=13.0114)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=88, sum=615, mean=6.9886)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=37, sum=159, mean=4.2973)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=44, sum=1100, mean=25.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=44, sum=427, mean=9.7045)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:17,423 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:17,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,423 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,423 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000206 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000206/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000206&t0=246&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=246&ts=1731778037423
2024-11-16 17:27:17,427 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:17,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,428 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000206 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000206/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000206&t0=246&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=246&ts=1731778037423
2024-11-16 17:27:17,430 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,430 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:17,430 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:17,430 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:17,430 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000206 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000206/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000206&t0=246&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=246&ts=1731778037423
2024-11-16 17:27:17,434 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:17,434 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:17,434 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.004s
2024-11-16 17:27:17,435 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:17,435 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,435 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,435 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,435 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,435 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000207 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000207/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000207&t0=246&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=246&ts=1731778037435
2024-11-16 17:27:17,439 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:17,439 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,439 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:17,440 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5934674262447947012.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:17,440 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5934674262447947012.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (object_put_request=0) (stream_write_queue_duration=0) (op_hsync=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (op_hflush=0) (op_abort.failures=0) (object_put_request.failures=0) (multipart_upload_completed=0) (op_abort=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5934674262447947012.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,440 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,440 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:17,440 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5934674262447947012.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:17,441 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:17,441 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:17,441 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:17,441 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:17,441 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000207 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000207/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000207&t0=246&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=31&ts=1731778037435
2024-11-16 17:27:17,454 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:17,454 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:17,454 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.013s
2024-11-16 17:27:17,454 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5934674262447947012.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:17,454 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5934674262447947012.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,454 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5934674262447947012.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,454 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:17,454 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,455 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_time=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (object_put_request.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (op_hsync=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (op_abort=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (object_put_request=1) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (stream_write_exceptions=0) (stream_write_total_data=65536) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_put_request.min=13) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=13) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=13, mean=13.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:17,455 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:17,457 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,457 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,457 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:17,457 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [247] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000208 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000208/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000208&t0=247&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=247&ts=1731778037456
2024-11-16 17:27:17,459 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:17,459 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:17,459 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,460 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:27:17,460 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_block_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_version_mismatches=0) (stream_read_vectored_operations=0) (action_executor_acquired=0) (stream_read_bytes=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (action_http_get_request.failures=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_opened=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=1) (action_http_get_request=0) (stream_read_unbuffered=0) (stream_read_total_bytes=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened=1) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=-1) (action_file_opened.min=2) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=2) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=2, mean=2.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:17,461 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:17,462 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,462 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,462 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209&t0=246&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=246&ts=1731778037461
2024-11-16 17:27:17,464 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,464 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,464 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209&t0=246&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=246&ts=1731778037461
2024-11-16 17:27:17,469 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:17,469 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:17,469 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:17,469 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:17,469 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:17,469 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:17,470 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:17,470 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:17,470 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:17,470 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:17,470 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:17,470 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:17,470 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:17,470 [s3a-transfer-fso-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:17,471 [s3a-transfer-fso-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,471 [s3a-transfer-fso-bucket-unbounded-pool2-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [248] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209&t0=246&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=248&ts=1731778037461
2024-11-16 17:27:17,475 [s3a-transfer-fso-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:27:17,476 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:27:17,476 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:17,476 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:17,476 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:17,476 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778037452; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:17,477 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:17,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:17,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:17,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:17,477 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:17,478 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:17,478 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:17,478 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,478 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,478 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:17,477 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:17,478 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,478 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209&t0=246&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=36&ts=1731778037461
2024-11-16 17:27:17,483 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.005s
2024-11-16 17:27:17,483 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:17,483 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:17,483 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:17,483 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:17,483 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,483 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,483 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:17,483 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,483 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000209&t0=246&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=36&ts=1731778037461
2024-11-16 17:27:17,491 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:27:17,492 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:27:17,492 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:27:17,492 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:27:17,492 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:27:17,492 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.022s
2024-11-16 17:27:17,492 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:17,492 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:17,493 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:27:17,504 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@d40fec5, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7e97a6d8-7327-4498-b810-970ff58cc2e3', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@62d2da4d[Running, pool size = 57, active threads = 0, queued tasks = 0, completed tasks = 57], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_select_requests=0) (op_is_file=0) (op_rename=0) (multipart_upload_aborted=0) (action_http_get_request.failures=1) (stream_read_seek_bytes_discarded=0) (op_delete.failures=0) (stream_write_total_data=5898240) (op_copy_from_local_file.failures=0) (object_bulk_delete_request.failures=0) (object_multipart_aborted=0) (stream_read_opened=6) (multipart_upload_part_put_bytes=0) (files_deleted=45) (committer_materialize_file.failures=0) (op_get_file_status=2) (object_delete_request.failures=0) (committer_jobs_failed=0) (committer_stage_file_upload=0) (stream_read_closed=6) (op_hsync=0) (stream_read_remote_stream_drain=6) (committer_magic_marker_put=0) (op_get_delegation_token.failures=0) (stream_read_seek_policy_changed=40) (multipart_instantiated=0) (action_http_head_request.failures=0) (stream_write_block_uploads_aborted=0) (store_exists_probe=0) (store_io_request=532) (stream_read_vectored_combined_ranges=40) (stream_read_remote_stream_aborted.failures=0) (stream_write_block_uploads=45) (op_xattr_list=0) (op_delete=45) (committer_tasks_completed=0) (op_create=45) (action_file_opened.failures=0) (committer_materialize_file=0) (op_get_content_summary.failures=0) (op_copy_from_local_file=0) (committer_commit_job=0) (stream_read_exceptions=0) (action_file_opened=38) (op_is_file.failures=0) (committer_magic_files_created=0) (object_list_request=180) (op_xattr_get_named_map.failures=0) (stream_read_remote_stream_aborted=0) (op_list_located_status=0) (object_multipart_initiated.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (object_put_request.failures=0) (object_delete_objects=90) (directories_created=45) (object_delete_request=0) (op_abort=0) (committer_tasks_failed=0) (audit_failure=0) (op_abort.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_list_status.failures=0) (multipart_upload_list=0) (op_xattr_get_named=0) (stream_read_vectored_operations=30) (op_createfile.failures=0) (op_mkdirs=45) (committer_commits_created=0) (action_executor_acquired=0) (committer_commit_job.failures=0) (op_glob_status.failures=0) (object_multipart_aborted.failures=0) (files_copied=0) (op_glob_status=0) (committer_magic_marker_put.failures=0) (op_get_file_checksum.failures=0) (audit_request_execution=532) (store_io_retry=0) (object_multipart_initiated=0) (fake_directories_deleted=45) (committer_stage_file_upload.failures=0) (files_copied_bytes=0) (op_xattr_list.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_vectored_incoming_ranges=95) (multipart_upload_part_put=0) (op_access.failures=0) (stream_read_vectored_read_bytes_discarded=49046) (multipart_upload_list.failures=0) (object_bulk_delete_request=90) (op_get_file_status.failures=0) (delegation_tokens_issued.failures=0) (stream_aborted=0) (op_get_file_checksum=0) (stream_read_remote_stream_drain.failures=0) (op_hflush=0) (op_get_delegation_token=0) (stream_read_unbuffered=2) (stream_write_exceptions=0) (committer_commits_completed=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0) (committer_bytes_committed=0) (op_xattr_get_map=0) (op_xattr_get_named_map=0) (op_open=38) (op_xattr_get_named.failures=0) (action_http_get_request=45) (stream_read_bytes=12926) (object_continue_list_request=0) (action_http_head_request=128) (stream_write_queue_duration.failures=0) (op_list_files=0) (op_xattr_get_map.failures=0) (op_create.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_total_time=0) (committer_commits.failures=0) (files_delete_rejected=0) (object_copy_requests=0) (op_is_directory.failures=0) (stream_read_close_operations=38) (op_exists=0) (object_put_request_completed=90) (stream_write_queue_duration=0) (object_metadata_request=128) (op_openfile=0) (op_exists.failures=0) (object_put_bytes=2949120) (stream_read_seek_forward_operations=0) (stream_write_block_uploads_committed=0) (committer_load_single_pending_file=0) (op_rename.failures=0) (stream_read_operations=6) (object_put_request=90) (multipart_upload_completed=0) (committer_commits_reverted=0) (stream_read_operations_incomplete=0) (op_is_directory=0) (op_list_status=0) (op_list_files.failures=0) (op_createfile=0) (store_io_throttled=0) (committer_load_single_pending_file.failures=0) (audit_access_check_failure=0) (stream_read_total_bytes=404942) (op_get_content_summary=0) (op_mkdirs.failures=0) (committer_commits_aborted=0) (audit_span_creation=176) (object_continue_list_request.failures=0) (stream_read_seek_operations=0) (committer_jobs_completed=0) (object_list_request.failures=0) (delegation_tokens_issued=0) (store_exists_probe.failures=0) (fake_directories_created=0) (op_access=0) (committer_bytes_uploaded=0) (directories_deleted=0) (stream_read_bytes_discarded_in_close=392016) (multipart_upload_started=0) (op_create_non_recursive=0) (stream_write_bytes=2949120) (stream_read_fully_operations=2) (ignored_errors=0) (stream_read_version_mismatches=0) (files_created=45));
gauges=((stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=45) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (object_list_request.failures.min=-1) (op_delete.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_mkdirs.min=11) (op_access.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_get_request.failures.min=0) (stream_write_queue_duration.min=-1) (multipart_upload_list.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.min=4) (op_copy_from_local_file.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.min=-1) (op_get_file_checksum.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (op_rename.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.min=2) (op_xattr_get_map.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.min=-1) (op_get_content_summary.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.failures.min=-1) (committer_materialize_file.min=-1) (object_list_request.min=4) (op_create.min=5) (op_get_file_status.min=3) (committer_materialize_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_rename.min=-1) (multipart_upload_list.min=-1) (op_list_files.min=-1) (op_get_content_summary.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (delegation_tokens_issued.min=-1) (op_delete.min=16) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.min=-1) (op_xattr_list.failures.min=-1) (op_is_file.min=-1) (object_put_request.min=13) (op_get_file_status.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_commit_job.min=-1) (action_http_get_request.min=12) (object_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (op_glob_status.failures.min=-1) (op_is_directory.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_head_request.failures.min=-1) (op_access.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_continue_list_request.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.failures.min=-1) (store_exists_probe.failures.min=-1) (action_http_head_request.min=1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_file.failures.min=-1) (op_list_status.failures.min=-1) (op_list_status.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.min=-1) (op_create.failures.min=-1) (store_exists_probe.min=-1));
maximums=((op_access.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_status.max=5) (op_xattr_get_named.max=-1) (op_xattr_get_map.failures.max=-1) (stream_write_queue_duration.max=-1) (op_copy_from_local_file.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.failures.max=-1) (object_list_request.max=220) (op_is_directory.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_get_request.max=35) (op_access.failures.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_initiated.max=-1) (op_delete.max=81) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_get_request.failures.max=0) (object_bulk_delete_request.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_list.max=-1) (action_file_opened.max=14) (object_multipart_initiated.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.failures.max=-1) (op_is_directory.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.max=3) (op_rename.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_exists.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.max=21) (op_createfile.max=-1) (op_rename.max=-1) (action_executor_acquired.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.max=322) (op_create.max=59) (committer_load_single_pending_file.max=-1) (op_list_status.max=-1) (op_abort.max=-1) (op_list_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_content_summary.max=-1) (committer_magic_marker_put.max=-1) (op_delete.failures.max=-1) (op_list_files.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_create.failures.max=-1) (op_list_files.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_list.max=-1) (op_glob_status.max=-1) (object_put_request.failures.max=-1) (op_xattr_list.failures.max=-1) (object_continue_list_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_map.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.failures.max=-1) (committer_materialize_file.max=-1) (op_exists.failures.max=-1) (op_is_file.failures.max=-1) (object_put_request.max=63) (action_http_head_request.max=18) (store_exists_probe.max=-1) (object_delete_request.failures.max=-1) (op_is_file.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_delete_request.max=-1));
means=((object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=90, sum=628, mean=6.9778)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=180, sum=1495, mean=8.3056)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=45, sum=1112, mean=24.7111)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=45, sum=432, mean=9.6000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=45, sum=1401, mean=31.1333)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=38, sum=161, mean=4.2368)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=128, sum=481, mean=3.7578)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=44, sum=546, mean=12.4091)) (object_put_request.mean=(samples=90, sum=1162, mean=12.9111)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:27:17,505 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:27:17,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,505 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,505 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000210 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000210/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000210&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=249&ts=1731778037504
2024-11-16 17:27:17,510 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:17,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:27:17,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,510 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000210 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000210/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000210&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=249&ts=1731778037504
2024-11-16 17:27:17,513 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:27:17,513 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:27:17,513 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:27:17,513 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:27:17,513 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000210 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000210/?op=op_mkdirs&p1=test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000210&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=249&ts=1731778037504
2024-11-16 17:27:17,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:27:17,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:27:17,517 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.004s
2024-11-16 17:27:17,518 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:27:17,518 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,518 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,518 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,518 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,518 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000211 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000211/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000211&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=249&ts=1731778037518
2024-11-16 17:27:17,523 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:17,523 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,523 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:27:17,523 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11005204499192178466.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:27:17,524 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11005204499192178466.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_exceptions=0) (op_hsync=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (op_abort.failures=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (object_multipart_aborted=0) (op_hflush=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11005204499192178466.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,524 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,524 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:27:17,524 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11005204499192178466.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:27:17,524 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:27:17,525 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:27:17,525 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:27:17,525 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:27:17,525 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000211 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000211/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000211&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=38&ts=1731778037518
2024-11-16 17:27:17,544 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:27:17,544 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:27:17,544 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.019s
2024-11-16 17:27:17,544 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11005204499192178466.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:27:17,544 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11005204499192178466.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,544 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11005204499192178466.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:27:17,544 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:27:17,545 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:27:17,546 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort.failures=0) (op_hsync=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (object_put_request=1) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (op_hflush=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (op_abort=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=19) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1));
maximums=((op_abort.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=19) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=19, mean=19.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:27:17,546 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:27:17,547 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:27:17,547 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:27:17,547 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:27:17,547 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000212 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000212/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000212&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=249&ts=1731778037546
2024-11-16 17:27:17,549 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:27:17,550 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:27:17,550 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,550 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:27:17,550 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:27:17,550 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:27:17,550 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:27:17,550 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:17,550 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:27:17,550 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:27:17,550 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000212 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000212/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&rg=500-899&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000212&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=41&ts=1731778037546
2024-11-16 17:27:17,559 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.009s
2024-11-16 17:27:17,559 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:27:17,562 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired.failures=0) (stream_read_unbuffered=0) (stream_read_total_bytes=400) (stream_aborted=0) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_version_mismatches=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_close_operations=1) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (stream_read_prefetch_operations=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=1) (stream_read_bytes=400) (stream_read_operations_incomplete=0) (stream_read_closed=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_operations=1) (action_http_get_request=1) (stream_read_opened=0) (stream_read_vectored_incoming_ranges=3) (stream_read_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_block_acquire_read=0) (action_file_opened=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=9));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=9) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=3) (action_file_opened.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=9, mean=9.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:27:17,563 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:27:17,563 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:27:17,563 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:27:17,563 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=249&ts=1731778037563
2024-11-16 17:27:17,567 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:27:17,567 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,567 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=249&ts=1731778037563
2024-11-16 17:27:17,573 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:27:17,573 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:27:17,573 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:27:17,573 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:27:17,573 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:27:17,573 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:27:17,573 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:27:17,573 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:27:17,573 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:27:17,573 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:27:17,573 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:27:17,573 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:27:17,574 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:27:17,574 [s3a-transfer-fso-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:27:17,574 [s3a-transfer-fso-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:27:17,574 [s3a-transfer-fso-bucket-unbounded-pool2-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=250&ts=1731778037563
2024-11-16 17:27:17,579 [s3a-transfer-fso-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:27:17,579 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:27:17,579 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:27:17,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:27:17,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:27:17,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778037542; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:27:17,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:27:17,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:27:17,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:27:17,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:27:17,580 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:27:17,580 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:27:17,580 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:27:17,580 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:27:17,580 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,581 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,581 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:27:17,581 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,581 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=43&ts=1731778037563
2024-11-16 17:27:17,585 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:17,585 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.005s
2024-11-16 17:27:17,585 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.005s
2024-11-16 17:27:17,585 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:27:17,585 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:27:17,585 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:27:17,585 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:27:17,585 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:27:17,585 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:27:17,585 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] 7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=15303681-db1e-4fd6-a42e-5922d56c03fa&ks=1&id=7e97a6d8-7327-4498-b810-970ff58cc2e3-00000213&t0=249&fs=7e97a6d8-7327-4498-b810-970ff58cc2e3&t1=43&ts=1731778037563
2024-11-16 17:27:17,589 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.004s
2024-11-16 17:27:17,589 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.004s
2024-11-16 17:27:17,589 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.004s
2024-11-16 17:27:17,589 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.009s
2024-11-16 17:27:17,589 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.009s
2024-11-16 17:27:17,589 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.016s
2024-11-16 17:27:17,589 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:27:17,589 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:27:17,616 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:27:17,624 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:27:17,626 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:17,626 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@62d2da4d[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 58]. Waiting max 30 SECONDS
2024-11-16 17:27:17,626 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:27:17,626 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics1-fso-bucket
2024-11-16 17:27:17,627 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(733)) - Shutting down metrics publisher
2024-11-16 17:27:17,627 [shutdown-hook-0] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:27:17,629 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:17,629 [shutdown-hook-0] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6e054ba4] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:27:17,630 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_xattr_get_named_map=0) (op_rename=0) (action_file_opened=39) (committer_commits.failures=0) (op_copy_from_local_file.failures=0) (op_mkdirs.failures=0) (op_xattr_list=0) (op_list_status.failures=0) (stream_read_seek_backward_operations=0) (object_bulk_delete_request.failures=0) (stream_read_seek_operations=0) (stream_read_bytes=13326) (op_xattr_list.failures=0) (action_file_opened.failures=0) (committer_commits_created=0) (fake_directories_created=0) (object_bulk_delete_request=92) (op_is_file=0) (committer_jobs_completed=0) (stream_read_total_bytes=405342) (op_open=39) (object_put_request.failures=0) (op_create.failures=0) (audit_failure=0) (committer_commit_job.failures=0) (stream_read_remote_stream_drain=6) (stream_read_vectored_operations=31) (op_list_located_status=0) (files_delete_rejected=0) (op_get_file_checksum=0) (op_is_directory=0) (store_exists_probe.failures=0) (op_copy_from_local_file=0) (action_http_get_request=46) (object_multipart_aborted.failures=0) (committer_materialize_file.failures=0) (op_access=0) (stream_write_block_uploads_aborted=0) (multipart_upload_aborted=0) (audit_span_creation=180) (op_abort.failures=0) (store_io_retry=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_exceptions=0) (files_deleted=46) (multipart_upload_list=0) (op_abort=0) (stream_read_remote_stream_aborted=0) (committer_bytes_uploaded=0) (action_executor_acquired.failures=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=392016) (action_http_head_request=131) (object_metadata_request=131) (files_copied_bytes=0) (committer_magic_files_created=0) (op_xattr_get_named=0) (stream_write_exceptions_completing_upload=0) (op_list_files.failures=0) (store_exists_probe=0) (op_rename.failures=0) (multipart_upload_part_put=0) (committer_commits_completed=0) (committer_load_single_pending_file=0) (multipart_upload_list.failures=0) (delegation_tokens_issued=0) (stream_write_queue_duration=0) (object_delete_request=0) (op_delete=46) (committer_load_single_pending_file.failures=0) (object_list_request.failures=0) (committer_tasks_failed=0) (stream_write_block_uploads=46) (committer_stage_file_upload=0) (committer_magic_marker_put=0) (stream_read_seek_bytes_discarded=0) (op_get_file_status.failures=0) (action_http_head_request.failures=0) (stream_read_seek_forward_operations=0) (files_copied=0) (stream_aborted=0) (multipart_upload_part_put_bytes=0) (committer_commit_job=0) (stream_read_remote_stream_aborted.failures=0) (stream_write_bytes=3014656) (audit_access_check_failure=0) (object_delete_objects=92) (stream_read_version_mismatches=0) (committer_materialize_file=0) (op_hsync=0) (object_select_requests=0) (stream_read_closed=6) (committer_stage_file_upload.failures=0) (stream_read_opened=6) (committer_tasks_completed=0) (object_put_request_completed=92) (op_get_delegation_token=0) (stream_read_operations=6) (op_access.failures=0) (stream_read_vectored_combined_ranges=41) (stream_read_close_operations=39) (op_exists=0) (op_is_directory.failures=0) (stream_read_bytes_discarded_in_abort=0) (files_created=46) (store_io_request=544) (op_hflush=0) (op_get_content_summary=0) (stream_read_bytes_backwards_on_seek=0) (op_createfile=0) (directories_created=46) (op_openfile=0) (ignored_errors=0) (object_multipart_initiated.failures=0) (op_exists.failures=0) (object_continue_list_request=0) (committer_commits_reverted=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads_committed=0) (audit_request_execution=544) (op_get_file_checksum.failures=0) (multipart_upload_completed=0) (object_list_request=184) (op_mkdirs=46) (object_delete_request.failures=0) (object_copy_requests=0) (stream_write_queue_duration.failures=0) (op_create_non_recursive=0) (stream_read_seek_bytes_skipped=0) (op_createfile.failures=0) (stream_read_vectored_read_bytes_discarded=49046) (op_get_file_status=2) (stream_read_seek_policy_changed=41) (committer_bytes_committed=0) (object_multipart_initiated=0) (action_executor_acquired=0) (committer_commits_aborted=0) (op_list_files=0) (op_xattr_get_named.failures=0) (op_xattr_get_map.failures=0) (action_http_get_request.failures=1) (stream_read_unbuffered=2) (op_is_file.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (op_glob_status.failures=0) (op_create=46) (stream_read_fully_operations=2) (multipart_instantiated=0) (stream_write_total_data=6029312) (object_put_request=92) (object_continue_list_request.failures=0) (stream_read_vectored_incoming_ranges=98) (op_xattr_get_named_map.failures=0) (op_get_content_summary.failures=0) (op_list_status=0) (object_put_bytes=3014656) (op_delete.failures=0) (op_get_delegation_token.failures=0) (delegation_tokens_issued.failures=0) (store_io_throttled=0) (op_glob_status=0) (fake_directories_deleted=46) (committer_jobs_failed=0) (multipart_upload_started=0) (stream_write_total_time=0) (directories_deleted=0) (op_xattr_get_map=0) (object_multipart_aborted=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=46) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0));
minimums=((object_delete_request.min=-1) (action_file_opened.min=3) (store_exists_probe.failures.min=-1) (object_bulk_delete_request.min=4) (committer_materialize_file.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_abort.min=-1) (op_rename.min=-1) (action_http_get_request.failures.min=0) (stream_read_remote_stream_aborted.min=-1) (multipart_upload_list.failures.min=-1) (committer_commit_job.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_stage_file_upload.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_checksum.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_file.failures.min=-1) (op_get_file_status.min=3) (op_is_file.min=-1) (op_copy_from_local_file.min=-1) (object_put_request.min=19) (op_is_directory.min=-1) (stream_write_queue_duration.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_content_summary.min=-1) (op_createfile.failures.min=-1) (op_access.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_exists.failures.min=-1) (object_put_request.failures.min=-1) (action_http_get_request.min=9) (object_delete_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_map.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.min=-1) (op_get_file_status.failures.min=-1) (op_delete.min=16) (committer_magic_marker_put.min=-1) (op_glob_status.failures.min=-1) (op_is_directory.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (op_mkdirs.min=11) (op_list_files.min=-1) (store_exists_probe.min=-1) (object_continue_list_request.failures.min=-1) (op_list_status.min=-1) (op_xattr_list.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.min=-1) (op_create.min=5) (action_executor_acquired.min=-1) (op_delete.failures.min=-1) (action_http_head_request.min=1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.min=-1) (op_create.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_abort.failures.min=-1) (op_access.min=-1) (object_list_request.min=4) (op_copy_from_local_file.failures.min=-1) (op_exists.min=-1));
maximums=((op_xattr_list.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named.max=-1) (op_create.max=59) (op_xattr_get_named_map.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_get_request.failures.max=0) (op_xattr_get_named.failures.max=-1) (op_is_directory.max=-1) (op_abort.max=-1) (multipart_upload_list.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named_map.max=-1) (object_delete_request.failures.max=-1) (op_abort.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_status.max=-1) (object_list_request.failures.max=-1) (object_list_request.max=220) (op_rename.failures.max=-1) (action_http_head_request.failures.max=-1) (action_file_opened.max=14) (object_bulk_delete_request.max=21) (object_put_request.failures.max=-1) (op_exists.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.max=-1) (op_get_file_status.max=5) (delegation_tokens_issued.failures.max=-1) (object_delete_request.max=-1) (op_createfile.failures.max=-1) (op_exists.max=-1) (op_mkdirs.failures.max=-1) (op_list_files.max=-1) (op_mkdirs.max=322) (object_put_request.max=63) (object_multipart_aborted.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.max=-1) (op_delete.failures.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=35) (stream_write_queue_duration.failures.max=-1) (multipart_upload_list.max=-1) (op_glob_status.failures.max=-1) (op_delete.max=81) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (op_create.failures.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.failures.max=-1) (store_exists_probe.max=-1) (committer_materialize_file.max=-1) (op_get_delegation_token.max=-1) (committer_stage_file_upload.failures.max=-1) (op_glob_status.max=-1) (op_createfile.max=-1) (op_copy_from_local_file.max=-1) (object_continue_list_request.max=-1) (op_access.max=-1) (op_get_content_summary.max=-1) (committer_magic_marker_put.failures.max=-1) (action_file_opened.failures.max=-1) (op_access.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_file.failures.max=-1) (stream_read_remote_stream_drain.max=3) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.max=18) (action_executor_acquired.max=-1) (stream_write_queue_duration.max=-1) (op_copy_from_local_file.failures.max=-1) (object_continue_list_request.failures.max=-1));
means=((op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=39, sum=164, mean=4.2051)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=131, sum=490, mean=3.7405)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=1, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=8, mean=4.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=46, sum=1125, mean=24.4565)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=46, sum=437, mean=9.5000)) (object_put_request.mean=(samples=92, sum=1185, mean=12.8804)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=92, sum=636, mean=6.9130)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=8, mean=1.3333)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=184, sum=1516, mean=8.2391)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=46, sum=1417, mean=30.8043)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=45, sum=555, mean=12.3333)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

